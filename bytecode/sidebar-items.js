initSidebarItems({"fn":[["print_targets_for_test","Print function targets for testing and debugging."]],"mod":[["annotations",""],["borrow_analysis","Data flow analysis computing borrow information for preparation of memory_instrumentation."],["clean_and_optimize",""],["compositional_analysis",""],["dataflow_analysis","Adapted from AbstractInterpreter for Bytecode, this module defines the data-flow analysis framework for stackless bytecode."],["debug_instrumentation","Transformation which injects trace instructions which are used to visualize execution."],["eliminate_imm_refs",""],["eliminate_mut_refs",""],["function_data_builder","Provides a builder for `FunctionData`, including building expressions and rewriting bytecode."],["function_target",""],["function_target_pipeline",""],["graph",""],["livevar_analysis",""],["memory_instrumentation",""],["options",""],["packed_types_analysis",""],["reaching_def_analysis",""],["spec_instrumentation",""],["stackless_bytecode",""],["stackless_bytecode_generator",""],["stackless_control_flow_graph","Adapted from control_flow_graph for Bytecode, this module defines the control-flow graph on Stackless Bytecode used in analysis as part of Move prover."],["usage_analysis",""]]});