(function() {var implementors = {};
implementors["consensus_types"] = [{"text":"impl CryptoHasher for BlockDataHasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for TimeoutHasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for VoteDataHasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for VoteProposalHasher","synthetic":false,"types":[]}];
implementors["diem_crypto"] = [];
implementors["diem_types"] = [{"text":"impl CryptoHasher for AccountStateBlobHasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for ContractEventHasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for ContractEventV0Hasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for LedgerInfoHasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for SparseMerkleLeafNodeHasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for AuthenticationKeyHasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for RawTransactionHasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for TransactionInfoHasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for TransactionHasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for Ledger2WaypointConverterHasher","synthetic":false,"types":[]}];
implementors["move_core_types"] = [{"text":"impl CryptoHasher for AccountAddressHasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for StructTagHasher","synthetic":false,"types":[]},{"text":"impl CryptoHasher for ModuleIdHasher","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()