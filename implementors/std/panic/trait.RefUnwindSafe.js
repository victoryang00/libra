(function() {var implementors = {};
implementors["abigen"] = [{"text":"impl RefUnwindSafe for AbigenOptions","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for Abigen&lt;'env&gt;","synthetic":true,"types":[]}];
implementors["accumulator"] = [{"text":"impl&lt;R, H&gt; RefUnwindSafe for MerkleAccumulator&lt;R, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["backup_cli"] = [{"text":"impl RefUnwindSafe for EpochEndingBackupOpt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EpochEndingBackupController","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpochEndingChunk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpochEndingBackup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpochEndingRestoreOpt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EpochEndingRestoreController","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PreheatedEpochEndingRestore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpochHistory","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EpochHistoryRestoreController","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateSnapshotBackupOpt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StateSnapshotBackupController","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateSnapshotChunk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateSnapshotBackup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateSnapshotRestoreOpt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StateSnapshotRestoreController","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionBackupOpt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TransactionBackupController","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionChunk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionBackup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionRestoreOpt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TransactionRestoreController","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PreheatedTransactionRestore","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TransactionRestoreBatchController","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BackupCoordinatorOpt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BackupCoordinator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RestoreCoordinatorOpt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RestoreCoordinator","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VerifyCoordinator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpochEndingBackupMeta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateSnapshotBackupMeta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionBackupMeta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetadataCacheOpt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetadataView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BackupStorageState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShellSafeName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextLine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StorageOpt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandAdapterOpt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandAdapter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LocalFsOpt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LocalFs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobalBackupOpt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RocksdbOpt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobalRestoreOpt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GlobalRestoreOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TrustedWaypointOpt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RestoreRunMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BackupServiceClientOpt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BackupServiceClient","synthetic":true,"types":[]}];
implementors["boogie_backend"] = [{"text":"impl&lt;'env&gt; !RefUnwindSafe for BoogieTranslator&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for ModuleTranslator&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoogieOptions","synthetic":true,"types":[]}];
implementors["borrow_graph"] = [{"text":"impl&lt;Loc, Lbl&gt; RefUnwindSafe for BorrowGraph&lt;Loc, Lbl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Lbl: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Loc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RefID","synthetic":true,"types":[]}];
implementors["bounded_executor"] = [{"text":"impl !RefUnwindSafe for BoundedExecutor","synthetic":true,"types":[]}];
implementors["bytecode"] = [{"text":"impl !RefUnwindSafe for Annotations","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorrowInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorrowInfoAtCodeOffset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorrowAnnotation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorrowAnalysisProcessor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CleanAndOptimizeProcessor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SummaryCache&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Elem&gt; RefUnwindSafe for SetDomain&lt;Elem&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elem: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for MapDomain&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;State&gt; RefUnwindSafe for BlockState&lt;State&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;State: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JoinResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugInstrumenter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EliminateImmRefsProcessor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for EliminateImmRefs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EliminateMutRefsProcessor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for EliminateMutRefs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for FunctionDataBuilder&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for FunctionTarget&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FunctionData","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for FunctionDataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FunctionTargetsHolder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FunctionTargetPipeline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionVariant","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Reducible&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Graph&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LiveVarInfoAtCodeOffset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LiveVarAnnotation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LiveVarAnalysisProcessor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryInstrumentationProcessor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProverOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PackedTypesProcessor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReachingDefAnnotation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReachingDefProcessor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Def","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecInstrumenter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Label","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttrId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecBlockId","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for BytecodeDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for OperationDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for BorrowNodeDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AssignKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Operation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorrowNode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PropKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bytecode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for StacklessBytecodeGenerator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StacklessControlFlowGraph","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UsageProcessor","synthetic":true,"types":[]}];
implementors["bytecode_source_map"] = [{"text":"impl&lt;Location&gt; RefUnwindSafe for SourceMapping&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionMarking","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructMarking","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MarkedSourceMapping","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; RefUnwindSafe for StructSourceMap&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; RefUnwindSafe for FunctionSourceMap&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; RefUnwindSafe for SourceMap&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OwnedLoc","synthetic":true,"types":[]}];
implementors["bytecode_verifier"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for DuplicationChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CodeUnitVerifier&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VMControlFlowGraph","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DependencyChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CyclicModuleDependencyChecker","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for InstantiationLoopChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for InstructionConsistency&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ResourceTransitiveChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SignatureChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RecursiveStructDefChecker&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["channel"] = [{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, M&gt; RefUnwindSafe for Sender&lt;K, M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, M&gt; RefUnwindSafe for Receiver&lt;K, M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; RefUnwindSafe for ElementStatus&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueStyle","synthetic":true,"types":[]}];
implementors["cli"] = [{"text":"impl RefUnwindSafe for AccountData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddressAndIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexAndSequence","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ClientProxy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountEntry","synthetic":true,"types":[]}];
implementors["cluster_test"] = [{"text":"impl RefUnwindSafe for AtomicHistogramAccumulator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtomicHistogramSnapshot","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Cluster","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClusterBuilderParams","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ClusterBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ClusterSwarmKube","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KubeNode","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for NetworkDelay","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PacketLoss","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StopValidator","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompatibilityTest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompatiblityTestParams","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTestParams","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PacketLossRandomValidators","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PacketLossRandomValidatorsParams","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PerformanceBenchmark","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceBenchmarkParams","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PerformanceBenchmarkThreeRegionSimulation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceBenchmarkThreeRegionSimulationParams","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RebootCluster","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RebootClusterParams","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RebootRandomValidators","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RebootRandomValidatorsParams","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Reconfiguration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReconfigurationParams","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RecoveryTime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecoveryTimeParams","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TwinValidators","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TwinValidatorsParams","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ValidatorVersioning","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorVersioningParams","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CpuFlamegraph","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CpuFlamegraphParams","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Context&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenesisHelper","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommitInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GitCommitInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Author","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GitHub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommitHistoryHealthCheck","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DebugPortLogWorker","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FullNodeHealthCheck","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LivenessHealthCheck","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LogTail","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraceTail","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Commit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorEvent","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for HealthCheckRunner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HealthCheckContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HealthCheckError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintFailures","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VaultConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LSRConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FullnodeConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Prometheus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixResponse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeSeries","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SuiteReport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReportedMetric","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SlackClient","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for PrometheusRangeView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExperimentSuite","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TxEmitter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EmitJob","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TxStats","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TxStatsRate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmitThreadParams","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EmitJobRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidTxType","synthetic":true,"types":[]}];
implementors["compiled_stdlib"] = [{"text":"impl RefUnwindSafe for StdLibOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompiledBytes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StdlibScript","synthetic":true,"types":[]}];
implementors["compiler"] = [{"text":"impl RefUnwindSafe for Compiler","synthetic":true,"types":[]}];
implementors["consensus"] = [{"text":"impl RefUnwindSafe for ConsensusNetworkSender","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConsensusMsg","synthetic":true,"types":[]}];
implementors["consensus_types"] = [{"text":"impl RefUnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockDataHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockRetrievalRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockRetrievalResponse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockRetrievalStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpochRetrievalRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExecutedBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProposalMsg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuorumCert","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SafetyData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SyncInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timeout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeoutHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeoutCertificate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Vote","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VoteData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VoteDataHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VoteMsg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VoteProposal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VoteProposalHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaybeSignedVoteProposal","synthetic":true,"types":[]}];
implementors["crash_handler"] = [{"text":"impl RefUnwindSafe for CrashInfo","synthetic":true,"types":[]}];
implementors["datatest_stable"] = [{"text":"impl RefUnwindSafe for Requirements","synthetic":true,"types":[]}];
implementors["debug_interface"] = [{"text":"impl !RefUnwindSafe for NodeDebugClient","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AsyncNodeDebugClient","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for NodeDebugService","synthetic":true,"types":[]}];
implementors["diem_bitvec"] = [{"text":"impl RefUnwindSafe for BitVec","synthetic":true,"types":[]}];
implementors["diem_config"] = [{"text":"impl RefUnwindSafe for ConsensusConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LeaderReputationConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugInterfaceConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiemTraceConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExecutionConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RemoteExecutionService","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyManagerConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoggerConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetricsConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MempoolConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetworkConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdentityFromConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdentityFromStorage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RateLimitConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JsonRpcConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GitHubConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VaultConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OnDiskStorageConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TokenFromConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TokenFromDisk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateSyncConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RocksdbConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StorageConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SafetyRulesConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RemoteService","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SafetyRulesTestConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UpstreamConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PeerNetworkId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TestConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseRoleError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RootPath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConsensusProposerType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExecutionCorrectnessService","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiscoveryMethod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Identity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SecureBackend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Token","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SafetyRulesService","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaypointConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RoleType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorSwarm","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ConfigKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetworkContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeNetworkId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetworkId","synthetic":true,"types":[]}];
implementors["diem_crypto"] = [{"text":"impl RefUnwindSafe for Sha3_256","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ed25519PrivateKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ed25519PublicKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ed25519Signature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HashValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for HashValueBitIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionAccumulatorHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventAccumulatorHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMerkleInternalHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VoteProposalHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TestOnlyHasher","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; RefUnwindSafe for Hkdf&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HkdfError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MultiEd25519PrivateKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MultiEd25519PublicKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MultiEd25519Signature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoiseConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitiatorHandshakeState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResponderHandshakeState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoiseSession","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoiseError","synthetic":true,"types":[]},{"text":"impl&lt;S, P&gt; RefUnwindSafe for KeyPair&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TestDiemCrypto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TestDiemCryptoHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CryptoMaterialError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrivateKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PublicKey","synthetic":true,"types":[]}];
implementors["diem_events_fetcher"] = [{"text":"impl !RefUnwindSafe for DiemEventsFetcher","synthetic":true,"types":[]}];
implementors["diem_faucet"] = [{"text":"impl RefUnwindSafe for MintParams","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Service","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Response","synthetic":true,"types":[]}];
implementors["diem_fuzzer"] = [{"text":"impl !RefUnwindSafe for FuzzTarget","synthetic":true,"types":[]}];
implementors["diem_genesis_tool"] = [{"text":"impl RefUnwindSafe for Command","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetLayout","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ValidatorBuilder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FullnodeBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FullnodeType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwarmConfig","synthetic":true,"types":[]}];
implementors["diem_github_client"] = [{"text":"impl RefUnwindSafe for Client","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]}];
implementors["diem_infallible"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for RwLock&lt;T&gt;","synthetic":true,"types":[]}];
implementors["diem_jellyfish_merkle"] = [{"text":"impl RefUnwindSafe for MissingRootError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeStats","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StaleNodeIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeUpdateBatch","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; RefUnwindSafe for JellyfishMerkleTree&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for JellyfishMerkleIterator&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Child","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InternalNode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LeafNode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Node","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeDecodeError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for JellyfishMerkleRestore","synthetic":true,"types":[]}];
implementors["diem_json_rpc_client"] = [{"text":"impl !RefUnwindSafe for JsonRpcClient","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for JsonRpcAsyncClient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JsonRpcBatch","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for JsonRpcAsyncClientError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JsonRpcResponse","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !RefUnwindSafe for Client&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BroadcastHttpClient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Response&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SimpleHttpClient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Retry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateManager","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnexpectedError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WaitForTransactionError","synthetic":true,"types":[]}];
implementors["diem_json_rpc_types"] = [{"text":"impl RefUnwindSafe for JsonRpcError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ServerCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidRequestCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JsonRpcResponse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmountView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventWithProofView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetadataView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BytesView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoveAbortExplanationView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionsWithProofsView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionsProofsView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScriptView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CurrencyInfoView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateProofView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountStateWithProofView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountStateProofView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountRoleView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventDataView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VMStatusView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionDataView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Amount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Account","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountRole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Metadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Transaction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoveAbortExplaination","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VmStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CurrencyInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateProof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountStateWithProof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountStateProof","synthetic":true,"types":[]}];
implementors["diem_key_manager"] = [{"text":"impl&lt;LI, S&gt; RefUnwindSafe for KeyManager&lt;LI, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;LI: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Action","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JsonRpcDiemInterface","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for LogSchema&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogEvent","synthetic":true,"types":[]}];
implementors["diem_logger"] = [{"text":"impl !RefUnwindSafe for DiemLogger","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DiemLoggerBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Metadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl&lt;'v&gt; !RefUnwindSafe for KeyValue&lt;'v&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LevelFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl&lt;'v&gt; !RefUnwindSafe for Value&lt;'v&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SecurityEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileWriter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JsonLogEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sampling","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SampleRate","synthetic":true,"types":[]}];
implementors["diem_management"] = [{"text":"impl RefUnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConfigPath","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SecureBackend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorBackend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SharedBackend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StorageWrapper","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InsertWaypoint","synthetic":true,"types":[]}];
implementors["diem_mempool"] = [{"text":"impl !RefUnwindSafe for CommitNotification","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommitResponse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommittedTransaction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionExclusion","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConsensusRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConsensusResponse","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MockSharedMempool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MempoolNetworkSender","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MempoolSyncMsg","synthetic":true,"types":[]}];
implementors["diem_metrics"] = [{"text":"impl RefUnwindSafe for DurationHistogram","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OpMetrics","synthetic":true,"types":[]}];
implementors["diem_network_address"] = [{"text":"impl RefUnwindSafe for NetworkAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DnsName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmptyError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Protocol","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EncNetworkAddress","synthetic":true,"types":[]}];
implementors["diem_network_address_encryption"] = [{"text":"impl RefUnwindSafe for Encryptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorKeys","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]}];
implementors["diem_nibble"] = [{"text":"impl RefUnwindSafe for Nibble","synthetic":true,"types":[]}];
implementors["diem_node"] = [{"text":"impl !RefUnwindSafe for DiemHandle","synthetic":true,"types":[]}];
implementors["diem_operational_tool"] = [{"text":"impl RefUnwindSafe for TransactionContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Command","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandName","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ResultWrapper&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JsonRpcClientWrapper","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OperationalTool","synthetic":true,"types":[]}];
implementors["diem_proptest_helpers"] = [{"text":"impl&lt;Ix, T&gt; RefUnwindSafe for GrowingSubset&lt;Ix, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for RepeatVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ValueGenerator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Index","synthetic":true,"types":[]}];
implementors["diem_rate_limiter"] = [{"text":"impl&lt;T&gt; !RefUnwindSafe for AsyncRateLimiter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Key&gt; !RefUnwindSafe for TokenBucketRateLimiter&lt;Key&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Bucket","synthetic":true,"types":[]}];
implementors["diem_retrier"] = [{"text":"impl RefUnwindSafe for FixedDelay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExponentWithLimitDelay","synthetic":true,"types":[]}];
implementors["diem_secure_json_rpc"] = [{"text":"impl RefUnwindSafe for JsonRpcClient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoveAbortExplanationView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bytes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VMStatusView","synthetic":true,"types":[]}];
implementors["diem_secure_net"] = [{"text":"impl RefUnwindSafe for NetworkClient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetworkServer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]}];
implementors["diem_secure_push_metrics"] = [{"text":"impl !RefUnwindSafe for MetricsPusher","synthetic":true,"types":[]}];
implementors["diem_secure_storage"] = [{"text":"impl RefUnwindSafe for PublicKeyResponse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GitHubStorage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InMemoryStorage","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for GetResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NamespacedStorage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OnDiskStorage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Permission","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Policy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VaultStorage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Identity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Storage","synthetic":true,"types":[]}];
implementors["diem_state_view"] = [{"text":"impl RefUnwindSafe for StateViewId","synthetic":true,"types":[]}];
implementors["diem_swarm"] = [{"text":"impl RefUnwindSafe for InteractiveClient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Process","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DiemNode","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DiemSwarm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HealthStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiemSwarmDir","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SwarmLaunchFailure","synthetic":true,"types":[]}];
implementors["diem_temppath"] = [{"text":"impl RefUnwindSafe for TempPath","synthetic":true,"types":[]}];
implementors["diem_time_service"] = [{"text":"impl RefUnwindSafe for TimeService","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Sleep","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Interval","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MockTimeService","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MockSleep","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RealTimeService","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Elapsed","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !RefUnwindSafe for Timeout&lt;F&gt;","synthetic":true,"types":[]}];
implementors["diem_trace"] = [{"text":"impl !RefUnwindSafe for DiemTraceClient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraceBlockGuard","synthetic":true,"types":[]}];
implementors["diem_transaction_replay"] = [{"text":"impl !RefUnwindSafe for DiemDebugger","synthetic":true,"types":[]}];
implementors["diem_types"] = [{"text":"impl RefUnwindSafe for AccessPath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdminTransactionEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseUrlRotationEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BurnEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CancelBurnEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComplianceKeyRotationEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateAccountEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToXDXExchangeRateUpdateEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MintEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NewBlockEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NewEpochEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreburnEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReceivedMintEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReceivedPaymentEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SentPaymentEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BalanceResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChainIdResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CurrencyInfoResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DesignatedDealer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Credential","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Limit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FreezingBit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyRotationCapabilityResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreburnResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountRole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RoleId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParentVASP","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChildVASP","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WithdrawCapabilityResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountStateBlob","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountStateBlobHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountStateWithProof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockMetadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiemBlockResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NewBlockEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChainId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NamedChain","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContractEventHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContractEventV0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContractEventV0Hasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventWithProof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContractEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiemTimestampResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiemTimestamp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpochChangeProof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpochState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LedgerInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LedgerInfoHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LedgerInfoWithV0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LedgerInfoWithSignatures","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MempoolStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MempoolStatusCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiemVersion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegisteredCurrencies","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VMConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VMPublishingOption","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConfigID","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OnChainConfigPayload","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConfigurationResource","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; RefUnwindSafe for MerkleTreeInternalNode&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMerkleLeafNode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMerkleLeafNodeHasher","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; RefUnwindSafe for InMemoryAccumulator&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; RefUnwindSafe for AccumulatorProof&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for SparseMerkleProof&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccumulatorConsistencyProof","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; RefUnwindSafe for AccumulatorRangeProof&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMerkleRangeProof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionInfoWithProof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountStateProof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventProof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionListProof","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; RefUnwindSafe for AccumulatorExtensionProof&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AncestorSiblingIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AncestorIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrozenSubTreeIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrozenSubtreeSiblingIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeDirection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountInfoUniverse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawTransactionGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignatureCheckedTransactionGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContractEventGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountResourceGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BalanceResourceGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountStateBlobGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionToCommitGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockInfoGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LedgerInfoGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LedgerInfoWithSignaturesGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChangeSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArgumentABI","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScriptABI","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeArgumentABI","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawTransaction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawTransactionHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignedTransaction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignatureCheckedTransaction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionWithProof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VMValidatorResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionOutput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionInfoHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionToCommit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionListWithProof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionPayload","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteSetPayload","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GovernanceRole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Transaction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AuthenticationKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AuthenticationKeyHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AuthenticationKeyPreimage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scheme","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionAuthenticator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeneralMetadataV0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TravelRuleMetadataV0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnstructuredBytesMetadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Metadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeneralMetadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TravelRuleMetadata","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TrustedState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for TrustedStateChange&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorConfigResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorOperatorConfigResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorSigner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorConsensusInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatorVerifier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VerifyError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Waypoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ledger2WaypointConverterHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteSetMut","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteOp","synthetic":true,"types":[]}];
implementors["diem_validator_interface"] = [{"text":"impl !RefUnwindSafe for DBDebuggerInterface","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for JsonRpcDebuggerInterface","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for DebuggerStateView&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["diem_vault_client"] = [{"text":"impl RefUnwindSafe for Client","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyBackup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyBackupPolicy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyBackupInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BackupInfo","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ReadResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Policy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PolicyPaths","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathPolicy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VaultRunner","synthetic":true,"types":[]}];
implementors["diem_vm"] = [{"text":"impl&lt;'a&gt; !RefUnwindSafe for StateViewCache&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; RefUnwindSafe for RemoteStorage&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionMetadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiemVM","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiemVMValidator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdapterLogSchema","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogEntry","synthetic":true,"types":[]}];
implementors["diem_wallet"] = [{"text":"impl RefUnwindSafe for Mnemonic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WalletLibrary","synthetic":true,"types":[]}];
implementors["diem_writeset_generator"] = [{"text":"impl&lt;'r, 'l, R&gt; !RefUnwindSafe for GenesisSession&lt;'r, 'l, R&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReleaseArtifact","synthetic":true,"types":[]}];
implementors["diemdb"] = [{"text":"impl !RefUnwindSafe for DiemDB","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Diemsum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BackupHandler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DbState","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RestoreHandler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiemDbError","synthetic":true,"types":[]}];
implementors["disassembler"] = [{"text":"impl RefUnwindSafe for DisassemblerOptions","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; RefUnwindSafe for Disassembler&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["docgen"] = [{"text":"impl RefUnwindSafe for DocgenOptions","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for Docgen&lt;'env&gt;","synthetic":true,"types":[]}];
implementors["errmapgen"] = [{"text":"impl RefUnwindSafe for ErrmapOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorDescription","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorMapping","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for ErrmapGen&lt;'env&gt;","synthetic":true,"types":[]}];
implementors["execution_correctness"] = [{"text":"impl !RefUnwindSafe for ExecutionCorrectnessManager","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Process","synthetic":true,"types":[]}];
implementors["executor"] = [{"text":"impl&lt;V&gt; !RefUnwindSafe for Executor&lt;V&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FakeVM","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FakeDb","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; !RefUnwindSafe for GenesisCommitter&lt;V&gt;","synthetic":true,"types":[]}];
implementors["executor_types"] = [{"text":"impl RefUnwindSafe for StateComputeResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExecutedTrees","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProofReader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]}];
implementors["functional_tests"] = [{"text":"impl RefUnwindSafe for Directive","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatchResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatchError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatchStatus","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Sp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for LineSp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScriptOrModule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Proposer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Balance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Role","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Argument","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Transaction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EvaluationLog","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Command&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Status","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutputType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EvaluationOutput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawTransactionInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawCommand","synthetic":true,"types":[]}];
implementors["generate_format"] = [{"text":"impl RefUnwindSafe for Corpus","synthetic":true,"types":[]}];
implementors["invalid_mutations"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for ApplyCodeUnitBoundsContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CodeUnitBoundsMutation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutOfBoundsMutation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyOutOfBoundsContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PointerKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SignatureRefMutation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FieldRefMutation&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["ir_to_bytecode"] = [{"text":"impl RefUnwindSafe for InternalCompilerError","synthetic":true,"types":[]}];
implementors["ir_to_bytecode_syntax"] = [{"text":"impl&lt;L, E&gt; RefUnwindSafe for ParseError&lt;L, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["language_benchmarks"] = [{"text":"impl&lt;S&gt; RefUnwindSafe for TransactionBencher&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["language_e2e_tests"] = [{"text":"impl RefUnwindSafe for Account","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Balance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountRole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventHandleGenerator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WithdrawCapability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyRotationCapability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FreezingBit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountRoleSpecifier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SequenceNumberMismatchGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InsufficientBalanceGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidAuthkeyGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateAccountGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateExistingAccountGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for P2PTransferGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RotateKeyGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountUniverseGen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountUniverse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountPairGen","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccountPair&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountCurrent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountPickStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FakeDataStore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BasicStrategy","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BasicExecutor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PartitionedGuidedStrategy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnPartitionedGuidedStrategy","synthetic":true,"types":[]},{"text":"impl&lt;Strategy&gt; !RefUnwindSafe for GuidedExecutor&lt;Strategy&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnnotatedTransaction","synthetic":true,"types":[]},{"text":"impl&lt;TxnType, E&gt; !RefUnwindSafe for MultiExecutor&lt;TxnType, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for MultiResult&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomizedStrategy","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RandomExecutor","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FakeExecutor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyGen","synthetic":true,"types":[]}];
implementors["memsocket"] = [{"text":"impl !RefUnwindSafe for MemoryListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MemorySocket","synthetic":true,"types":[]}];
implementors["module_generation"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for ModuleGenerator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleGeneratorOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pad","synthetic":true,"types":[]}];
implementors["move_cli"] = [{"text":"impl RefUnwindSafe for OnDiskStateView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mode","synthetic":true,"types":[]}];
implementors["move_core_types"] = [{"text":"impl RefUnwindSafe for AccountAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountAddressHasher","synthetic":true,"types":[]},{"text":"impl&lt;GasCarrier&gt; RefUnwindSafe for AbstractMemorySize&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;GasCarrier&gt; RefUnwindSafe for GasUnits&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;GasCarrier&gt; RefUnwindSafe for GasPrice&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GasConstants","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CostTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GasCost","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Identifier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdentStr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructTag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructTagHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleIdHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeTag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionArgument","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoveStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoveStructLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoveValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoveTypeLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoveKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoveKindInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VMStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeptVMStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AbortLocation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatusType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatusCode","synthetic":true,"types":[]}];
implementors["move_coverage"] = [{"text":"impl RefUnwindSafe for CoverageMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleCoverageMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExecCoverageMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExecCoverageMapWithModules","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraceEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraceMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionSourceCoverage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SourceCoverageBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SourceCoverage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AbstractSegment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringSegment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionInfo","synthetic":true,"types":[]}];
implementors["move_ir_types"] = [{"text":"impl RefUnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QualifiedModuleIdent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleDependency","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Var_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeVar_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QualifiedStructIdent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Field_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructDefinition_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructDependency","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConstantName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionDependency","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Function_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IfElse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for While","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Loop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Block_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockLabel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NopLabel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScriptOrModule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleIdent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructDefinitionFields","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionVisibility","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionBody","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builtin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionCall_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LValue_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cmd_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Statement","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyableVal_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnaryOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BinOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bytecode_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Loc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Spanned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Invariant_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SyntheticDefinition_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldOrIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StorageLocation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecExp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Condition_","synthetic":true,"types":[]}];
implementors["move_lang"] = [{"text":"impl RefUnwindSafe for Pass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PassResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionBody_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VarInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompiledUnit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecBlock_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PragmaProperty_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructFields","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionBody_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecBlockMember_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PragmaValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleAccess_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LValue_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExpDotted_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SequenceItem_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Label","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleCall","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructFields","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionBody_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeName_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseType_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SingleType_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Statement_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Command_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LValue_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuiltinFunction_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnannotatedExp_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExpListItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TParamID","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TVar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructFields","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionBody_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuiltinTypeName_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeName_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LValue_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExpDotted_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuiltinFunction_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SequenceItem_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleIdent_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleIdent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConstantName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecBlock_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PragmaProperty_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecApplyPattern_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Var","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Definition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Use","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleMember","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructFields","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionVisibility","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionBody_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecBlockTarget_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PragmaValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecApplyFragment_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecBlockMember_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecConditionKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvariantKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleAccess_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bind_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnaryOp_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BinOp_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantKind_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SequenceItem_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Address","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Counter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AstWriter","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for RememberingUniqueMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for UniqueMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleCall","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionBody_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LValue_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuiltinFunction_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnannotatedExp_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SequenceItem_","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExpListItem","synthetic":true,"types":[]}];
implementors["move_lang_test_utils"] = [{"text":"impl RefUnwindSafe for StringError","synthetic":true,"types":[]}];
implementors["move_model"] = [{"text":"impl RefUnwindSafe for SpecVarDecl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecFunDecl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Condition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Spec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecBlockInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobalInvariant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LocalVarDecl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ModuleNameDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QualifiedSymbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for QualifiedSymbolDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ExpDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for OperationDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConditionKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PropertyValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecBlockTarget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Operation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CodeWriter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CodeWriterLabel","synthetic":true,"types":[]},{"text":"impl&lt;'env, 'rewriter&gt; !RefUnwindSafe for ExpRewriter&lt;'env, 'rewriter&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Loc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NamedConstantId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SchemaId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecFunId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecVarId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobalId","synthetic":true,"types":[]},{"text":"impl&lt;Id&gt; RefUnwindSafe for QualifiedId&lt;Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GlobalEnv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConditionInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for ModuleEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for StructEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for FieldEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NamedConstantData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for NamedConstantEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeParameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Parameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for FunctionEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for LocDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VerificationScope","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConditionTag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeConstraint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SymbolDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SymbolPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Substitution","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for TypeDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrimitiveType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for TypeDisplayContext&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["move_prover"] = [{"text":"impl RefUnwindSafe for Options","synthetic":true,"types":[]}];
implementors["move_vm_runtime"] = [{"text":"impl !RefUnwindSafe for AccountDataCache","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TransactionEffects","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoContextLog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoveVM","synthetic":true,"types":[]},{"text":"impl&lt;'r, 'l, R&gt; !RefUnwindSafe for Session&lt;'r, 'l, R&gt;","synthetic":true,"types":[]}];
implementors["move_vm_test_utils"] = [{"text":"impl RefUnwindSafe for AccountChangeSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChangeSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlankStorage","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; RefUnwindSafe for DeltaStorage&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InMemoryStorage","synthetic":true,"types":[]}];
implementors["move_vm_types"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for CostStrategy&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NativeCostIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for NativeResult","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SignerRef","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VectorRef","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Vector","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StructRef","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Reference","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Locals","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GlobalValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntegerValue","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for GlobalValueEffect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["netcore"] = [{"text":"impl RefUnwindSafe for ConnectionOrigin","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; RefUnwindSafe for AndThen&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for AndThenStream&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; RefUnwindSafe for AndThenFuture&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;O, E&gt; !RefUnwindSafe for BoxedTransport&lt;O, E&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryTransport","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Listener","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpTransport","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TcpListenerStream","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TcpOutbound","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TcpSocket","synthetic":true,"types":[]}];
implementors["network"] = [{"text":"impl&lt;TTicker, TBackoff&gt; !RefUnwindSafe for ConnectivityManager&lt;TTicker, TBackoff&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiscoverySource","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConnectivityRequest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConnectivityManagerBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetworkError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetworkErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for NetworkSchema&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for NoiseHandshakeError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AntiReplayTimestamps","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoiseUpgrader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HandshakeAuthMode","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; RefUnwindSafe for NoiseStream&lt;TSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSocket: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; !RefUnwindSafe for Peer&lt;TSocket&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PeerRequest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PeerNotification","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisconnectReason","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PeerManagerRequestSender","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectionRequestSender","synthetic":true,"types":[]},{"text":"impl&lt;TTransport, TSocket&gt; !RefUnwindSafe for PeerManager&lt;TTransport, TSocket&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PeerManagerError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PeerManagerRequest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PeerManagerNotification","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConnectionRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectionNotification","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; RefUnwindSafe for TransportNotification&lt;TSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSocket: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PeerManagerBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AuthenticationMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl&lt;TMessage&gt; !RefUnwindSafe for NetworkEvents&lt;TMessage&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TMessage&gt; RefUnwindSafe for NetworkSender&lt;TMessage&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TMessage: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TMessage&gt; !RefUnwindSafe for Event&lt;TMessage&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for InboundRpcRequest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OutboundRpcRequest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for InboundRpcs","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OutboundRpcs","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RpcError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HealthCheckerNetworkSender","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ping","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pong","synthetic":true,"types":[]},{"text":"impl&lt;TTicker&gt; !RefUnwindSafe for HealthChecker&lt;TTicker&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HealthCheckerMsg","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for HealthCheckerBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SupportedProtocols","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HandshakeMsg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtocolId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessagingProtocolVersion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HandshakeError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParsingErrorType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RpcRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RpcResponse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DirectSendMsg","synthetic":true,"types":[]},{"text":"impl&lt;TReadSocket&gt; !RefUnwindSafe for NetworkMessageStream&lt;TReadSocket&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TWriteSocket&gt; !RefUnwindSafe for NetworkMessageSink&lt;TWriteSocket&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetworkMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NotSupportedType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReadError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WriteError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectionId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectionMetadata","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; RefUnwindSafe for Connection&lt;TSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSocket: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TTransport&gt; RefUnwindSafe for DiemNetTransport&lt;TTransport&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TTransport: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TrustLevel","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ReadOnlyTestSocket&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadOnlyTestSocketVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ReadWriteTestSocket&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["network_builder"] = [{"text":"impl !RefUnwindSafe for NetworkBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DummyMsg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DummyNetworkSender","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DummyNetwork","synthetic":true,"types":[]}];
implementors["network_simple_onchain_discovery"] = [{"text":"impl !RefUnwindSafe for ConfigurationChangeListener","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConfigurationChangeListenerBuilder","synthetic":true,"types":[]}];
implementors["proxy"] = [{"text":"impl RefUnwindSafe for Proxy","synthetic":true,"types":[]}];
implementors["resource_viewer"] = [{"text":"impl RefUnwindSafe for AnnotatedAccountStateBlob","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnnotatedMoveStruct","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for MoveValueAnnotator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NullStateView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnnotatedMoveValue","synthetic":true,"types":[]}];
implementors["safety_rules"] = [{"text":"impl RefUnwindSafe for ConsensusState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PersistentSafetyStorage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Process","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SafetyRules","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SafetyRulesManager","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]}];
implementors["schemadb"] = [{"text":"impl RefUnwindSafe for SchemaBatch","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; RefUnwindSafe for SchemaIterator&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DB","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScanDirection","synthetic":true,"types":[]}];
implementors["scratchpad"] = [{"text":"impl&lt;V&gt; RefUnwindSafe for SparseMerkleTree&lt;V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for AccountStatus&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["short_hex_str"] = [{"text":"impl RefUnwindSafe for ShortHexStr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputTooShortError","synthetic":true,"types":[]}];
implementors["socket_bench_server"] = [{"text":"impl RefUnwindSafe for Args","synthetic":true,"types":[]}];
implementors["state_sync"] = [{"text":"impl !RefUnwindSafe for StateSyncBootstrapper","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetChunkRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TargetType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetChunkResponse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResponseLedgerInfo","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SyncRequest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CommitNotification","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StateSyncClient","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CoordinatorMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SyncState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateSyncSender","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateSyncMessage","synthetic":true,"types":[]}];
implementors["storage_client"] = [{"text":"impl RefUnwindSafe for StorageClient","synthetic":true,"types":[]}];
implementors["storage_interface"] = [{"text":"impl RefUnwindSafe for StartupInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeState","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DbReaderWriter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetAccountStateWithProofByVersionRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SaveTransactionsRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Order","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StorageRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MockDbReader","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for VerifiedStateView&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["storage_service"] = [{"text":"impl !RefUnwindSafe for StorageService","synthetic":true,"types":[]}];
implementors["subscription_service"] = [{"text":"impl&lt;T, U&gt; RefUnwindSafe for SubscriptionService&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubscriptionBundle","synthetic":true,"types":[]}];
implementors["swiss_knife"] = [{"text":"impl RefUnwindSafe for Response","synthetic":true,"types":[]}];
implementors["test_generation"] = [{"text":"impl RefUnwindSafe for Status","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AbstractValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CallGraph","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstantiableModule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AbstractState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorrowState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mutability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorrowGraph","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EdgeType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionGenerationContext","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BytecodeGenerator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Args","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BasicBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CFG","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VMError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Summary","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Effects","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Subst","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackBinOpResult","synthetic":true,"types":[]}];
implementors["transaction_builder_generated"] = [{"text":"impl RefUnwindSafe for ScriptCall","synthetic":true,"types":[]}];
implementors["transaction_builder_generator"] = [{"text":"impl RefUnwindSafe for Installer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Installer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Installer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Installer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Installer","synthetic":true,"types":[]}];
implementors["vm"] = [{"text":"impl RefUnwindSafe for IndexKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignatureTokenKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BoundsChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Compatibility","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VMError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PartialVMError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Location","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleHandleIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructHandleIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionHandleIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldHandleIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructDefInstantiationIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionInstantiationIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldInstantiationIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdentifierIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddressIdentifierIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConstantPoolIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignatureIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructDefinitionIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionDefinitionIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructDefInstantiation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionInstantiation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldInstantiation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeSignature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Signature","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SignatureTokenPreorderTraversalIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SignatureTokenPreorderTraversalIterWithDepth&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CodeUnit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompiledScript","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompiledScriptMut","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScriptConversionInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompiledModule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompiledModuleMut","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructFieldInformation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignatureToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bytecode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BinaryConstants","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TableType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SerializedType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SerializedNominalResourceFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SerializedKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SerializedNativeStructFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Opcodes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompiledModuleStrategyGen","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for ModuleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for ModuleHandleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for StructHandleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for FunctionHandleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for StructDefinitionView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for FieldDefinitionView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for LocalsSignatureView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for FunctionDefinitionView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for StructInstantiationView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for FieldHandleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for FunctionInstantiationView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for FieldInstantiationView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for TypeSignatureView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for SignatureView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for SignatureTokenView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["vm_genesis"] = [{"text":"impl RefUnwindSafe for Validator","synthetic":true,"types":[]}];
implementors["vm_validator"] = [{"text":"impl RefUnwindSafe for MockVMValidator","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VMValidator","synthetic":true,"types":[]}];
implementors["x_core"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for DebugIgnore&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g&gt; RefUnwindSafe for WorkspaceSubsets&lt;'g&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'g&gt; RefUnwindSafe for WorkspaceSubset&lt;'g&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCoreContext","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SystemError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WorkspaceStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCoreConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubsetConfig","synthetic":true,"types":[]}];
implementors["x_lint"] = [{"text":"impl&lt;'l, 'a&gt; RefUnwindSafe for LintFormatter&lt;'l, 'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LintMessage","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; RefUnwindSafe for LintSource&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; RefUnwindSafe for RunStatus&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; RefUnwindSafe for SkipReason&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LintLevel","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; RefUnwindSafe for LintKind&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; RefUnwindSafe for ContentContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; RefUnwindSafe for FilePathContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; RefUnwindSafe for PackageContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; RefUnwindSafe for ProjectContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; !RefUnwindSafe for LintEngineConfig&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; !RefUnwindSafe for LintEngine&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; RefUnwindSafe for LintResults&lt;'l&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()