(function() {var implementors = {};
implementors["abigen"] = [{"text":"impl UnwindSafe for AbigenOptions","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for Abigen&lt;'env&gt;","synthetic":true,"types":[]}];
implementors["accumulator"] = [{"text":"impl&lt;R, H&gt; UnwindSafe for MerkleAccumulator&lt;R, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["backup_cli"] = [{"text":"impl UnwindSafe for EpochEndingBackupOpt","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EpochEndingBackupController","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpochEndingChunk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpochEndingBackup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpochEndingRestoreOpt","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EpochEndingRestoreController","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PreheatedEpochEndingRestore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpochHistory","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EpochHistoryRestoreController","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateSnapshotBackupOpt","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StateSnapshotBackupController","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateSnapshotChunk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateSnapshotBackup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateSnapshotRestoreOpt","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StateSnapshotRestoreController","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionBackupOpt","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TransactionBackupController","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionChunk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionBackup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionRestoreOpt","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TransactionRestoreController","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PreheatedTransactionRestore","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TransactionRestoreBatchController","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BackupCoordinatorOpt","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BackupCoordinator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RestoreCoordinatorOpt","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RestoreCoordinator","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VerifyCoordinator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpochEndingBackupMeta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateSnapshotBackupMeta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionBackupMeta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetadataCacheOpt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetadataView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BackupStorageState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShellSafeName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextLine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageOpt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandAdapterOpt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandAdapter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalFsOpt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalFs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalBackupOpt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RocksdbOpt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalRestoreOpt","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for GlobalRestoreOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TrustedWaypointOpt","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RestoreRunMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BackupServiceClientOpt","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BackupServiceClient","synthetic":true,"types":[]}];
implementors["boogie_backend"] = [{"text":"impl&lt;'env&gt; !UnwindSafe for BoogieTranslator&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for ModuleTranslator&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BoogieOptions","synthetic":true,"types":[]}];
implementors["borrow_graph"] = [{"text":"impl&lt;Loc, Lbl&gt; UnwindSafe for BorrowGraph&lt;Loc, Lbl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Lbl: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Loc: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RefID","synthetic":true,"types":[]}];
implementors["bounded_executor"] = [{"text":"impl !UnwindSafe for BoundedExecutor","synthetic":true,"types":[]}];
implementors["bytecode"] = [{"text":"impl !UnwindSafe for Annotations","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorrowInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorrowInfoAtCodeOffset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorrowAnnotation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorrowAnalysisProcessor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CleanAndOptimizeProcessor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SummaryCache&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Elem&gt; UnwindSafe for SetDomain&lt;Elem&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elem: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for MapDomain&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;State&gt; UnwindSafe for BlockState&lt;State&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;State: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JoinResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugInstrumenter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EliminateImmRefsProcessor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for EliminateImmRefs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EliminateMutRefsProcessor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for EliminateMutRefs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for FunctionDataBuilder&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for FunctionTarget&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FunctionData","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for FunctionDataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FunctionTargetsHolder","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FunctionTargetPipeline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionVariant","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Reducible&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Graph&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LiveVarInfoAtCodeOffset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LiveVarAnnotation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LiveVarAnalysisProcessor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryInstrumentationProcessor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProverOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PackedTypesProcessor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReachingDefAnnotation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReachingDefProcessor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Def","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecInstrumenter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Label","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttrId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecBlockId","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for BytecodeDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for OperationDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for BorrowNodeDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AssignKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Operation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorrowNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PropKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bytecode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for StacklessBytecodeGenerator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StacklessControlFlowGraph","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UsageProcessor","synthetic":true,"types":[]}];
implementors["bytecode_source_map"] = [{"text":"impl&lt;Location&gt; UnwindSafe for SourceMapping&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionMarking","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructMarking","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MarkedSourceMapping","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; UnwindSafe for StructSourceMap&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; UnwindSafe for FunctionSourceMap&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; UnwindSafe for SourceMap&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OwnedLoc","synthetic":true,"types":[]}];
implementors["bytecode_verifier"] = [{"text":"impl&lt;'a&gt; UnwindSafe for DuplicationChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CodeUnitVerifier&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMControlFlowGraph","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DependencyChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CyclicModuleDependencyChecker","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for InstantiationLoopChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for InstructionConsistency&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ResourceTransitiveChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SignatureChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RecursiveStructDefChecker&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["channel"] = [{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, M&gt; UnwindSafe for Sender&lt;K, M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, M&gt; UnwindSafe for Receiver&lt;K, M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; UnwindSafe for ElementStatus&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueStyle","synthetic":true,"types":[]}];
implementors["cli"] = [{"text":"impl UnwindSafe for AccountData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddressAndIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexAndSequence","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ClientProxy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountEntry","synthetic":true,"types":[]}];
implementors["cluster_test"] = [{"text":"impl UnwindSafe for AtomicHistogramAccumulator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtomicHistogramSnapshot","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Cluster","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClusterBuilderParams","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ClusterBuilder","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ClusterSwarmKube","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KubeNode","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for NetworkDelay","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PacketLoss","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StopValidator","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompatibilityTest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompatiblityTestParams","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LoadTestParams","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PacketLossRandomValidators","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PacketLossRandomValidatorsParams","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PerformanceBenchmark","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceBenchmarkParams","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PerformanceBenchmarkThreeRegionSimulation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceBenchmarkThreeRegionSimulationParams","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RebootCluster","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RebootClusterParams","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RebootRandomValidators","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RebootRandomValidatorsParams","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Reconfiguration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReconfigurationParams","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RecoveryTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecoveryTimeParams","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TwinValidators","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TwinValidatorsParams","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ValidatorVersioning","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorVersioningParams","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CpuFlamegraph","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CpuFlamegraphParams","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Context&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenesisHelper","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommitInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GitCommitInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Author","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for GitHub","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommitHistoryHealthCheck","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DebugPortLogWorker","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FullNodeHealthCheck","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LivenessHealthCheck","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LogTail","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceTail","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Commit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorEvent","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for HealthCheckRunner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HealthCheckContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HealthCheckError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintFailures","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VaultConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LSRConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FullnodeConfig","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationConfig","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Prometheus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MatrixResponse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeSeries","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SuiteReport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReportedMetric","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SlackClient","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for PrometheusRangeView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExperimentSuite","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TxEmitter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EmitJob","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TxStats","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TxStatsRate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmitThreadParams","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EmitJobRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidTxType","synthetic":true,"types":[]}];
implementors["compiled_stdlib"] = [{"text":"impl UnwindSafe for StdLibOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompiledBytes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StdlibScript","synthetic":true,"types":[]}];
implementors["compiler"] = [{"text":"impl UnwindSafe for Compiler","synthetic":true,"types":[]}];
implementors["consensus"] = [{"text":"impl UnwindSafe for ConsensusNetworkSender","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConsensusMsg","synthetic":true,"types":[]}];
implementors["consensus_types"] = [{"text":"impl UnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockDataHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockRetrievalRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockRetrievalResponse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockRetrievalStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpochRetrievalRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecutedBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProposalMsg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QuorumCert","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SafetyData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SyncInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Timeout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeoutHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeoutCertificate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Vote","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VoteData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VoteDataHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VoteMsg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VoteProposal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VoteProposalHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaybeSignedVoteProposal","synthetic":true,"types":[]}];
implementors["crash_handler"] = [{"text":"impl UnwindSafe for CrashInfo","synthetic":true,"types":[]}];
implementors["datatest_stable"] = [{"text":"impl UnwindSafe for Requirements","synthetic":true,"types":[]}];
implementors["debug_interface"] = [{"text":"impl !UnwindSafe for NodeDebugClient","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AsyncNodeDebugClient","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for NodeDebugService","synthetic":true,"types":[]}];
implementors["diem_bitvec"] = [{"text":"impl UnwindSafe for BitVec","synthetic":true,"types":[]}];
implementors["diem_config"] = [{"text":"impl UnwindSafe for ConsensusConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LeaderReputationConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugInterfaceConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiemTraceConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecutionConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RemoteExecutionService","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyManagerConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LoggerConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetricsConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MempoolConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetworkConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IdentityFromConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IdentityFromStorage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RateLimitConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JsonRpcConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GitHubConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VaultConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OnDiskStorageConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TokenFromConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TokenFromDisk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateSyncConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RocksdbConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SafetyRulesConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RemoteService","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SafetyRulesTestConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UpstreamConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PeerNetworkId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TestConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseRoleError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RootPath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConsensusProposerType","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecutionCorrectnessService","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiscoveryMethod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Identity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SecureBackend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Token","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SafetyRulesService","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaypointConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RoleType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorSwarm","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ConfigKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetworkContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeNetworkId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetworkId","synthetic":true,"types":[]}];
implementors["diem_crypto"] = [{"text":"impl UnwindSafe for Sha3_256","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ed25519PrivateKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ed25519PublicKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ed25519Signature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HashValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for HashValueBitIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionAccumulatorHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventAccumulatorHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseMerkleInternalHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VoteProposalHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TestOnlyHasher","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; UnwindSafe for Hkdf&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HkdfError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MultiEd25519PrivateKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MultiEd25519PublicKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MultiEd25519Signature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoiseConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitiatorHandshakeState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResponderHandshakeState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoiseSession","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoiseError","synthetic":true,"types":[]},{"text":"impl&lt;S, P&gt; UnwindSafe for KeyPair&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TestDiemCrypto","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TestDiemCryptoHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CryptoMaterialError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrivateKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PublicKey","synthetic":true,"types":[]}];
implementors["diem_events_fetcher"] = [{"text":"impl !UnwindSafe for DiemEventsFetcher","synthetic":true,"types":[]}];
implementors["diem_faucet"] = [{"text":"impl UnwindSafe for MintParams","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Service","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Response","synthetic":true,"types":[]}];
implementors["diem_fuzzer"] = [{"text":"impl !UnwindSafe for FuzzTarget","synthetic":true,"types":[]}];
implementors["diem_genesis_tool"] = [{"text":"impl UnwindSafe for Command","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetLayout","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ValidatorBuilder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FullnodeBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FullnodeType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwarmConfig","synthetic":true,"types":[]}];
implementors["diem_github_client"] = [{"text":"impl UnwindSafe for Client","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]}];
implementors["diem_infallible"] = [{"text":"impl&lt;T&gt; UnwindSafe for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for RwLock&lt;T&gt;","synthetic":true,"types":[]}];
implementors["diem_jellyfish_merkle"] = [{"text":"impl UnwindSafe for MissingRootError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeStats","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StaleNodeIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeUpdateBatch","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; UnwindSafe for JellyfishMerkleTree&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for JellyfishMerkleIterator&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Child","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InternalNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LeafNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Node","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeDecodeError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for JellyfishMerkleRestore","synthetic":true,"types":[]}];
implementors["diem_json_rpc_client"] = [{"text":"impl !UnwindSafe for JsonRpcClient","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for JsonRpcAsyncClient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JsonRpcBatch","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for JsonRpcAsyncClientError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JsonRpcResponse","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !UnwindSafe for Client&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BroadcastHttpClient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Response&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SimpleHttpClient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Retry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateManager","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnexpectedError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WaitForTransactionError","synthetic":true,"types":[]}];
implementors["diem_json_rpc_types"] = [{"text":"impl UnwindSafe for JsonRpcError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ServerCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidRequestCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JsonRpcResponse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmountView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventWithProofView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetadataView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BytesView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveAbortExplanationView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionsWithProofsView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionsProofsView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScriptView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CurrencyInfoView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateProofView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountStateWithProofView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountStateProofView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountRoleView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventDataView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMStatusView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionDataView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Amount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Account","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountRole","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Metadata","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Transaction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveAbortExplaination","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VmStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CurrencyInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateProof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountStateWithProof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountStateProof","synthetic":true,"types":[]}];
implementors["diem_key_manager"] = [{"text":"impl&lt;LI, S&gt; UnwindSafe for KeyManager&lt;LI, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;LI: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Action","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JsonRpcDiemInterface","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for LogSchema&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogEvent","synthetic":true,"types":[]}];
implementors["diem_logger"] = [{"text":"impl !UnwindSafe for DiemLogger","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DiemLoggerBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Metadata","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl&lt;'v&gt; !UnwindSafe for KeyValue&lt;'v&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LevelFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl&lt;'v&gt; !UnwindSafe for Value&lt;'v&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SecurityEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileWriter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JsonLogEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sampling","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SampleRate","synthetic":true,"types":[]}];
implementors["diem_management"] = [{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConfigPath","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SecureBackend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorBackend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SharedBackend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageWrapper","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InsertWaypoint","synthetic":true,"types":[]}];
implementors["diem_mempool"] = [{"text":"impl !UnwindSafe for CommitNotification","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommitResponse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommittedTransaction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionExclusion","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ConsensusRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConsensusResponse","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for MockSharedMempool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MempoolNetworkSender","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MempoolSyncMsg","synthetic":true,"types":[]}];
implementors["diem_metrics"] = [{"text":"impl UnwindSafe for DurationHistogram","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for OpMetrics","synthetic":true,"types":[]}];
implementors["diem_network_address"] = [{"text":"impl UnwindSafe for NetworkAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DnsName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmptyError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Protocol","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EncNetworkAddress","synthetic":true,"types":[]}];
implementors["diem_network_address_encryption"] = [{"text":"impl UnwindSafe for Encryptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorKeys","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]}];
implementors["diem_nibble"] = [{"text":"impl UnwindSafe for Nibble","synthetic":true,"types":[]}];
implementors["diem_node"] = [{"text":"impl !UnwindSafe for DiemHandle","synthetic":true,"types":[]}];
implementors["diem_operational_tool"] = [{"text":"impl UnwindSafe for TransactionContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Command","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandName","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ResultWrapper&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JsonRpcClientWrapper","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OperationalTool","synthetic":true,"types":[]}];
implementors["diem_proptest_helpers"] = [{"text":"impl&lt;Ix, T&gt; UnwindSafe for GrowingSubset&lt;Ix, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for RepeatVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ValueGenerator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Index","synthetic":true,"types":[]}];
implementors["diem_rate_limiter"] = [{"text":"impl&lt;T&gt; !UnwindSafe for AsyncRateLimiter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Key&gt; !UnwindSafe for TokenBucketRateLimiter&lt;Key&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Bucket","synthetic":true,"types":[]}];
implementors["diem_retrier"] = [{"text":"impl UnwindSafe for FixedDelay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExponentWithLimitDelay","synthetic":true,"types":[]}];
implementors["diem_secure_json_rpc"] = [{"text":"impl UnwindSafe for JsonRpcClient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveAbortExplanationView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bytes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMStatusView","synthetic":true,"types":[]}];
implementors["diem_secure_net"] = [{"text":"impl UnwindSafe for NetworkClient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetworkServer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]}];
implementors["diem_secure_push_metrics"] = [{"text":"impl !UnwindSafe for MetricsPusher","synthetic":true,"types":[]}];
implementors["diem_secure_storage"] = [{"text":"impl UnwindSafe for PublicKeyResponse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GitHubStorage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InMemoryStorage","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for GetResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NamespacedStorage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OnDiskStorage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Permission","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Policy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VaultStorage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Identity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Storage","synthetic":true,"types":[]}];
implementors["diem_state_view"] = [{"text":"impl UnwindSafe for StateViewId","synthetic":true,"types":[]}];
implementors["diem_swarm"] = [{"text":"impl UnwindSafe for InteractiveClient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Process","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DiemNode","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DiemSwarm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HealthStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiemSwarmDir","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SwarmLaunchFailure","synthetic":true,"types":[]}];
implementors["diem_temppath"] = [{"text":"impl UnwindSafe for TempPath","synthetic":true,"types":[]}];
implementors["diem_time_service"] = [{"text":"impl UnwindSafe for TimeService","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Sleep","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Interval","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MockTimeService","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MockSleep","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RealTimeService","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Elapsed","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !UnwindSafe for Timeout&lt;F&gt;","synthetic":true,"types":[]}];
implementors["diem_trace"] = [{"text":"impl !UnwindSafe for DiemTraceClient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceBlockGuard","synthetic":true,"types":[]}];
implementors["diem_transaction_replay"] = [{"text":"impl !UnwindSafe for DiemDebugger","synthetic":true,"types":[]}];
implementors["diem_types"] = [{"text":"impl UnwindSafe for AccessPath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AdminTransactionEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseUrlRotationEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BurnEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CancelBurnEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComplianceKeyRotationEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateAccountEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToXDXExchangeRateUpdateEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MintEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NewBlockEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NewEpochEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreburnEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReceivedMintEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReceivedPaymentEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SentPaymentEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BalanceResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChainIdResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CurrencyInfoResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DesignatedDealer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Credential","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Limit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FreezingBit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyRotationCapabilityResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreburnResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountRole","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RoleId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParentVASP","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChildVASP","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WithdrawCapabilityResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountStateBlob","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountStateBlobHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountStateWithProof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockMetadata","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiemBlockResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NewBlockEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChainId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NamedChain","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContractEventHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContractEventV0","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContractEventV0Hasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventWithProof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContractEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiemTimestampResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiemTimestamp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpochChangeProof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpochState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventHandle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LedgerInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LedgerInfoHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LedgerInfoWithV0","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LedgerInfoWithSignatures","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MempoolStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MempoolStatusCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiemVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegisteredCurrencies","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMPublishingOption","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConfigID","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OnChainConfigPayload","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConfigurationResource","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; UnwindSafe for MerkleTreeInternalNode&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseMerkleLeafNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseMerkleLeafNodeHasher","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; UnwindSafe for InMemoryAccumulator&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; UnwindSafe for AccumulatorProof&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; UnwindSafe for SparseMerkleProof&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccumulatorConsistencyProof","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; UnwindSafe for AccumulatorRangeProof&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseMerkleRangeProof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionInfoWithProof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountStateProof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventProof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionListProof","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; UnwindSafe for AccumulatorExtensionProof&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AncestorSiblingIterator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AncestorIterator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrozenSubTreeIterator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrozenSubtreeSiblingIterator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeDirection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountInfoUniverse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawTransactionGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignatureCheckedTransactionGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContractEventGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountResourceGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BalanceResourceGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountStateBlobGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionToCommitGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockInfoGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LedgerInfoGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LedgerInfoWithSignaturesGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChangeSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArgumentABI","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScriptABI","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeArgumentABI","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawTransaction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawTransactionHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignedTransaction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignatureCheckedTransaction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionWithProof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMValidatorResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionOutput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionInfoHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionToCommit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionListWithProof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionPayload","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteSetPayload","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GovernanceRole","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Transaction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AuthenticationKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AuthenticationKeyHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AuthenticationKeyPreimage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scheme","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionAuthenticator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeneralMetadataV0","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TravelRuleMetadataV0","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnstructuredBytesMetadata","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Metadata","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeneralMetadata","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TravelRuleMetadata","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TrustedState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for TrustedStateChange&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorConfigResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorOperatorConfigResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorSigner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorConsensusInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatorVerifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VerifyError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Waypoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ledger2WaypointConverterHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteSetMut","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteOp","synthetic":true,"types":[]}];
implementors["diem_validator_interface"] = [{"text":"impl !UnwindSafe for DBDebuggerInterface","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for JsonRpcDebuggerInterface","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for DebuggerStateView&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["diem_vault_client"] = [{"text":"impl UnwindSafe for Client","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyBackup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyBackupPolicy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyBackupInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BackupInfo","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ReadResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Policy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PolicyPaths","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PathPolicy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VaultRunner","synthetic":true,"types":[]}];
implementors["diem_vm"] = [{"text":"impl&lt;'a&gt; !UnwindSafe for StateViewCache&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; UnwindSafe for RemoteStorage&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionMetadata","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiemVM","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiemVMValidator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AdapterLogSchema","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogEntry","synthetic":true,"types":[]}];
implementors["diem_wallet"] = [{"text":"impl UnwindSafe for Mnemonic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WalletLibrary","synthetic":true,"types":[]}];
implementors["diem_writeset_generator"] = [{"text":"impl&lt;'r, 'l, R&gt; !UnwindSafe for GenesisSession&lt;'r, 'l, R&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReleaseArtifact","synthetic":true,"types":[]}];
implementors["diemdb"] = [{"text":"impl !UnwindSafe for DiemDB","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Diemsum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BackupHandler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DbState","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RestoreHandler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiemDbError","synthetic":true,"types":[]}];
implementors["disassembler"] = [{"text":"impl UnwindSafe for DisassemblerOptions","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; UnwindSafe for Disassembler&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["docgen"] = [{"text":"impl UnwindSafe for DocgenOptions","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for Docgen&lt;'env&gt;","synthetic":true,"types":[]}];
implementors["errmapgen"] = [{"text":"impl UnwindSafe for ErrmapOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorDescription","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorMapping","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for ErrmapGen&lt;'env&gt;","synthetic":true,"types":[]}];
implementors["execution_correctness"] = [{"text":"impl !UnwindSafe for ExecutionCorrectnessManager","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Process","synthetic":true,"types":[]}];
implementors["executor"] = [{"text":"impl&lt;V&gt; !UnwindSafe for Executor&lt;V&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FakeVM","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FakeDb","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; !UnwindSafe for GenesisCommitter&lt;V&gt;","synthetic":true,"types":[]}];
implementors["executor_types"] = [{"text":"impl UnwindSafe for StateComputeResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecutedTrees","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProofReader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]}];
implementors["functional_tests"] = [{"text":"impl UnwindSafe for Directive","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MatchResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MatchError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MatchStatus","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Sp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for LineSp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScriptOrModule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Proposer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Balance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Role","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Argument","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Transaction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EvaluationLog","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Command&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Status","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EvaluationOutput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawTransactionInput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawCommand","synthetic":true,"types":[]}];
implementors["generate_format"] = [{"text":"impl UnwindSafe for Corpus","synthetic":true,"types":[]}];
implementors["invalid_mutations"] = [{"text":"impl&lt;'a&gt; !UnwindSafe for ApplyCodeUnitBoundsContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CodeUnitBoundsMutation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutOfBoundsMutation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplyOutOfBoundsContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PointerKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SignatureRefMutation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for FieldRefMutation&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["ir_to_bytecode"] = [{"text":"impl UnwindSafe for InternalCompilerError","synthetic":true,"types":[]}];
implementors["ir_to_bytecode_syntax"] = [{"text":"impl&lt;L, E&gt; UnwindSafe for ParseError&lt;L, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["language_benchmarks"] = [{"text":"impl&lt;S&gt; UnwindSafe for TransactionBencher&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["language_e2e_tests"] = [{"text":"impl UnwindSafe for Account","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Balance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountRole","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventHandleGenerator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WithdrawCapability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyRotationCapability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FreezingBit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountRoleSpecifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SequenceNumberMismatchGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InsufficientBalanceGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidAuthkeyGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateAccountGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateExistingAccountGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for P2PTransferGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RotateKeyGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountUniverseGen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountUniverse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountPairGen","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for AccountPair&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountCurrent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountPickStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FakeDataStore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BasicStrategy","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BasicExecutor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PartitionedGuidedStrategy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnPartitionedGuidedStrategy","synthetic":true,"types":[]},{"text":"impl&lt;Strategy&gt; !UnwindSafe for GuidedExecutor&lt;Strategy&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AnnotatedTransaction","synthetic":true,"types":[]},{"text":"impl&lt;TxnType, E&gt; !UnwindSafe for MultiExecutor&lt;TxnType, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for MultiResult&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RandomizedStrategy","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RandomExecutor","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FakeExecutor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyGen","synthetic":true,"types":[]}];
implementors["memsocket"] = [{"text":"impl !UnwindSafe for MemoryListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for MemorySocket","synthetic":true,"types":[]}];
implementors["module_generation"] = [{"text":"impl&lt;'a&gt; !UnwindSafe for ModuleGenerator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleGeneratorOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pad","synthetic":true,"types":[]}];
implementors["move_cli"] = [{"text":"impl UnwindSafe for OnDiskStateView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mode","synthetic":true,"types":[]}];
implementors["move_core_types"] = [{"text":"impl UnwindSafe for AccountAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountAddressHasher","synthetic":true,"types":[]},{"text":"impl&lt;GasCarrier&gt; UnwindSafe for AbstractMemorySize&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;GasCarrier&gt; UnwindSafe for GasUnits&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;GasCarrier&gt; UnwindSafe for GasPrice&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GasConstants","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CostTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GasCost","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Identifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IdentStr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructTag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructTagHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResourceKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleIdHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeTag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionArgument","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveStructLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveTypeLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveKindInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeptVMStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AbortLocation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StatusType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StatusCode","synthetic":true,"types":[]}];
implementors["move_coverage"] = [{"text":"impl UnwindSafe for CoverageMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleCoverageMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecCoverageMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecCoverageMapWithModules","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionSourceCoverage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SourceCoverageBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SourceCoverage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AbstractSegment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StringSegment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleSummary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionSummary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionInfo","synthetic":true,"types":[]}];
implementors["move_ir_types"] = [{"text":"impl UnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QualifiedModuleIdent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleDependency","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Var_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeVar_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QualifiedStructIdent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Field_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructDefinition_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructDependency","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstantName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionDependency","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IfElse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for While","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Loop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Block_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockLabel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NopLabel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScriptOrModule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleIdent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructDefinitionFields","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionVisibility","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionBody","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builtin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionCall_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LValue_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cmd_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Statement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyableVal_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnaryOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BinOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exp_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bytecode_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Loc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Spanned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Invariant_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SyntheticDefinition_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldOrIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageLocation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecExp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Condition_","synthetic":true,"types":[]}];
implementors["move_lang"] = [{"text":"impl UnwindSafe for Pass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PassResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionBody_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VarInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompiledUnit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecBlock_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PragmaProperty_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructFields","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionBody_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecBlockMember_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PragmaValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleAccess_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LValue_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExpDotted_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Value_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exp_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SequenceItem_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Label","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleCall","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructFields","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionBody_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeName_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseType_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SingleType_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Statement_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Command_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LValue_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuiltinFunction_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnannotatedExp_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExpListItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TParamID","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TParam","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructFields","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionBody_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuiltinTypeName_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeName_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LValue_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExpDotted_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuiltinFunction_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exp_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SequenceItem_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleIdent_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleIdent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstantName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecBlock_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PragmaProperty_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecApplyPattern_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Var","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Definition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Use","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleMember","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructFields","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionVisibility","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionBody_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecBlockTarget_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PragmaValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecApplyFragment_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecBlockMember_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecConditionKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvariantKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleAccess_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bind_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Value_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnaryOp_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BinOp_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QuantKind_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exp_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SequenceItem_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Address","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Counter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AstWriter","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for RememberingUniqueMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for UniqueMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleCall","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionBody_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LValue_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuiltinFunction_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnannotatedExp_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SequenceItem_","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExpListItem","synthetic":true,"types":[]}];
implementors["move_lang_test_utils"] = [{"text":"impl UnwindSafe for StringError","synthetic":true,"types":[]}];
implementors["move_model"] = [{"text":"impl UnwindSafe for SpecVarDecl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecFunDecl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Condition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Spec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecBlockInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalInvariant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalVarDecl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ModuleNameDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QualifiedSymbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for QualifiedSymbolDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ExpDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for OperationDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConditionKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QuantKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PropertyValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecBlockTarget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Operation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CodeWriter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CodeWriterLabel","synthetic":true,"types":[]},{"text":"impl&lt;'env, 'rewriter&gt; !UnwindSafe for ExpRewriter&lt;'env, 'rewriter&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Loc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NamedConstantId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SchemaId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecFunId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecVarId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalId","synthetic":true,"types":[]},{"text":"impl&lt;Id&gt; UnwindSafe for QualifiedId&lt;Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for GlobalEnv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConditionInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for ModuleEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for StructEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for FieldEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NamedConstantData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for NamedConstantEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeParameter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Parameter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for FunctionEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for LocDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VerificationScope","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConditionTag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeConstraint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SymbolDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SymbolPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Substitution","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for TypeDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimitiveType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for TypeDisplayContext&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["move_prover"] = [{"text":"impl UnwindSafe for Options","synthetic":true,"types":[]}];
implementors["move_vm_runtime"] = [{"text":"impl !UnwindSafe for AccountDataCache","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TransactionEffects","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoContextLog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveVM","synthetic":true,"types":[]},{"text":"impl&lt;'r, 'l, R&gt; !UnwindSafe for Session&lt;'r, 'l, R&gt;","synthetic":true,"types":[]}];
implementors["move_vm_test_utils"] = [{"text":"impl UnwindSafe for AccountChangeSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChangeSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlankStorage","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; UnwindSafe for DeltaStorage&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InMemoryStorage","synthetic":true,"types":[]}];
implementors["move_vm_types"] = [{"text":"impl&lt;'a&gt; UnwindSafe for CostStrategy&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NativeCostIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for NativeResult","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SignerRef","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VectorRef","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Vector","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StructRef","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Reference","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Locals","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for GlobalValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntegerValue","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for GlobalValueEffect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["netcore"] = [{"text":"impl UnwindSafe for ConnectionOrigin","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; UnwindSafe for AndThen&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for AndThenStream&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; UnwindSafe for AndThenFuture&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;O, E&gt; !UnwindSafe for BoxedTransport&lt;O, E&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryTransport","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Listener","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpTransport","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TcpListenerStream","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TcpOutbound","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TcpSocket","synthetic":true,"types":[]}];
implementors["network"] = [{"text":"impl&lt;TTicker, TBackoff&gt; !UnwindSafe for ConnectivityManager&lt;TTicker, TBackoff&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiscoverySource","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ConnectivityRequest","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ConnectivityManagerBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetworkError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetworkErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for NetworkSchema&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for NoiseHandshakeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AntiReplayTimestamps","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoiseUpgrader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HandshakeAuthMode","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; UnwindSafe for NoiseStream&lt;TSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSocket: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; !UnwindSafe for Peer&lt;TSocket&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PeerRequest","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PeerNotification","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisconnectReason","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PeerManagerRequestSender","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnectionRequestSender","synthetic":true,"types":[]},{"text":"impl&lt;TTransport, TSocket&gt; !UnwindSafe for PeerManager&lt;TTransport, TSocket&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PeerManagerError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PeerManagerRequest","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PeerManagerNotification","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ConnectionRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnectionNotification","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; UnwindSafe for TransportNotification&lt;TSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSocket: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PeerManagerBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AuthenticationMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl&lt;TMessage&gt; !UnwindSafe for NetworkEvents&lt;TMessage&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TMessage&gt; UnwindSafe for NetworkSender&lt;TMessage&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TMessage: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TMessage&gt; !UnwindSafe for Event&lt;TMessage&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for InboundRpcRequest","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for OutboundRpcRequest","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for InboundRpcs","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for OutboundRpcs","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RpcError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HealthCheckerNetworkSender","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ping","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pong","synthetic":true,"types":[]},{"text":"impl&lt;TTicker&gt; !UnwindSafe for HealthChecker&lt;TTicker&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HealthCheckerMsg","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for HealthCheckerBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SupportedProtocols","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HandshakeMsg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProtocolId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessagingProtocolVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HandshakeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParsingErrorType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RpcRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RpcResponse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DirectSendMsg","synthetic":true,"types":[]},{"text":"impl&lt;TReadSocket&gt; !UnwindSafe for NetworkMessageStream&lt;TReadSocket&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TWriteSocket&gt; !UnwindSafe for NetworkMessageSink&lt;TWriteSocket&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetworkMessage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NotSupportedType","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ReadError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WriteError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnectionId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnectionMetadata","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; UnwindSafe for Connection&lt;TSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSocket: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TTransport&gt; UnwindSafe for DiemNetTransport&lt;TTransport&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TTransport: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TrustLevel","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ReadOnlyTestSocket&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadOnlyTestSocketVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ReadWriteTestSocket&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["network_builder"] = [{"text":"impl !UnwindSafe for NetworkBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DummyMsg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DummyNetworkSender","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DummyNetwork","synthetic":true,"types":[]}];
implementors["network_simple_onchain_discovery"] = [{"text":"impl !UnwindSafe for ConfigurationChangeListener","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ConfigurationChangeListenerBuilder","synthetic":true,"types":[]}];
implementors["proxy"] = [{"text":"impl UnwindSafe for Proxy","synthetic":true,"types":[]}];
implementors["resource_viewer"] = [{"text":"impl UnwindSafe for AnnotatedAccountStateBlob","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AnnotatedMoveStruct","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for MoveValueAnnotator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NullStateView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AnnotatedMoveValue","synthetic":true,"types":[]}];
implementors["safety_rules"] = [{"text":"impl UnwindSafe for ConsensusState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PersistentSafetyStorage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Process","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SafetyRules","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SafetyRulesManager","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]}];
implementors["schemadb"] = [{"text":"impl UnwindSafe for SchemaBatch","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; UnwindSafe for SchemaIterator&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DB","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScanDirection","synthetic":true,"types":[]}];
implementors["scratchpad"] = [{"text":"impl&lt;V&gt; UnwindSafe for SparseMerkleTree&lt;V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; UnwindSafe for AccountStatus&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["short_hex_str"] = [{"text":"impl UnwindSafe for ShortHexStr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputTooShortError","synthetic":true,"types":[]}];
implementors["socket_bench_server"] = [{"text":"impl UnwindSafe for Args","synthetic":true,"types":[]}];
implementors["state_sync"] = [{"text":"impl !UnwindSafe for StateSyncBootstrapper","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetChunkRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TargetType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetChunkResponse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResponseLedgerInfo","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SyncRequest","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CommitNotification","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StateSyncClient","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CoordinatorMessage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SyncState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateSyncSender","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateSyncMessage","synthetic":true,"types":[]}];
implementors["storage_client"] = [{"text":"impl UnwindSafe for StorageClient","synthetic":true,"types":[]}];
implementors["storage_interface"] = [{"text":"impl UnwindSafe for StartupInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeState","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DbReaderWriter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetAccountStateWithProofByVersionRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SaveTransactionsRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Order","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MockDbReader","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for VerifiedStateView&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["storage_service"] = [{"text":"impl !UnwindSafe for StorageService","synthetic":true,"types":[]}];
implementors["subscription_service"] = [{"text":"impl&lt;T, U&gt; UnwindSafe for SubscriptionService&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubscriptionBundle","synthetic":true,"types":[]}];
implementors["swiss_knife"] = [{"text":"impl UnwindSafe for Response","synthetic":true,"types":[]}];
implementors["test_generation"] = [{"text":"impl UnwindSafe for Status","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AbstractValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CallGraph","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstantiableModule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AbstractState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorrowState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mutability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorrowGraph","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EdgeType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionGenerationContext","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BytecodeGenerator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Args","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BasicBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFG","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Summary","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Effects","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Subst","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StackBinOpResult","synthetic":true,"types":[]}];
implementors["transaction_builder_generated"] = [{"text":"impl UnwindSafe for ScriptCall","synthetic":true,"types":[]}];
implementors["transaction_builder_generator"] = [{"text":"impl UnwindSafe for Installer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Installer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Installer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Installer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Installer","synthetic":true,"types":[]}];
implementors["vm"] = [{"text":"impl UnwindSafe for IndexKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignatureTokenKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BoundsChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Compatibility","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PartialVMError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Location","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleHandleIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructHandleIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionHandleIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldHandleIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructDefInstantiationIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionInstantiationIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldInstantiationIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IdentifierIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddressIdentifierIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstantPoolIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignatureIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructDefinitionIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionDefinitionIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleHandle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructHandle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionHandle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldHandle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructDefInstantiation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionInstantiation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldInstantiation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeSignature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Signature","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SignatureTokenPreorderTraversalIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SignatureTokenPreorderTraversalIterWithDepth&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CodeUnit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompiledScript","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompiledScriptMut","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScriptConversionInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompiledModule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompiledModuleMut","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructFieldInformation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignatureToken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bytecode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BinaryConstants","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TableType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SerializedType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SerializedNominalResourceFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SerializedKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SerializedNativeStructFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Opcodes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionSignature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompiledModuleStrategyGen","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for ModuleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for ModuleHandleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for StructHandleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for FunctionHandleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for StructDefinitionView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for FieldDefinitionView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for LocalsSignatureView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for FunctionDefinitionView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for StructInstantiationView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for FieldHandleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for FunctionInstantiationView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for FieldInstantiationView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for TypeSignatureView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for SignatureView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for SignatureTokenView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["vm_genesis"] = [{"text":"impl UnwindSafe for Validator","synthetic":true,"types":[]}];
implementors["vm_validator"] = [{"text":"impl UnwindSafe for MockVMValidator","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VMValidator","synthetic":true,"types":[]}];
implementors["x_core"] = [{"text":"impl&lt;T&gt; UnwindSafe for DebugIgnore&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g&gt; UnwindSafe for WorkspaceSubsets&lt;'g&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'g&gt; UnwindSafe for WorkspaceSubset&lt;'g&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCoreContext","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SystemError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WorkspaceStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCoreConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubsetConfig","synthetic":true,"types":[]}];
implementors["x_lint"] = [{"text":"impl&lt;'l, 'a&gt; !UnwindSafe for LintFormatter&lt;'l, 'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LintMessage","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; UnwindSafe for LintSource&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; UnwindSafe for RunStatus&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; UnwindSafe for SkipReason&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LintLevel","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; UnwindSafe for LintKind&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; UnwindSafe for ContentContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; UnwindSafe for FilePathContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; UnwindSafe for PackageContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; UnwindSafe for ProjectContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; !UnwindSafe for LintEngineConfig&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; !UnwindSafe for LintEngine&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; UnwindSafe for LintResults&lt;'l&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()