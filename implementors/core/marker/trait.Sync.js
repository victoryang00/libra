(function() {var implementors = {};
implementors["abigen"] = [{"text":"impl Sync for AbigenOptions","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for Abigen&lt;'env&gt;","synthetic":true,"types":[]}];
implementors["accumulator"] = [{"text":"impl&lt;R, H&gt; Sync for MerkleAccumulator&lt;R, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["backup_cli"] = [{"text":"impl Sync for EpochEndingBackupOpt","synthetic":true,"types":[]},{"text":"impl Sync for EpochEndingBackupController","synthetic":true,"types":[]},{"text":"impl Sync for EpochEndingChunk","synthetic":true,"types":[]},{"text":"impl Sync for EpochEndingBackup","synthetic":true,"types":[]},{"text":"impl Sync for EpochEndingRestoreOpt","synthetic":true,"types":[]},{"text":"impl Sync for EpochEndingRestoreController","synthetic":true,"types":[]},{"text":"impl Sync for PreheatedEpochEndingRestore","synthetic":true,"types":[]},{"text":"impl Sync for EpochHistory","synthetic":true,"types":[]},{"text":"impl Sync for EpochHistoryRestoreController","synthetic":true,"types":[]},{"text":"impl Sync for StateSnapshotBackupOpt","synthetic":true,"types":[]},{"text":"impl Sync for StateSnapshotBackupController","synthetic":true,"types":[]},{"text":"impl Sync for StateSnapshotChunk","synthetic":true,"types":[]},{"text":"impl Sync for StateSnapshotBackup","synthetic":true,"types":[]},{"text":"impl Sync for StateSnapshotRestoreOpt","synthetic":true,"types":[]},{"text":"impl Sync for StateSnapshotRestoreController","synthetic":true,"types":[]},{"text":"impl Sync for TransactionBackupOpt","synthetic":true,"types":[]},{"text":"impl Sync for TransactionBackupController","synthetic":true,"types":[]},{"text":"impl Sync for TransactionChunk","synthetic":true,"types":[]},{"text":"impl Sync for TransactionBackup","synthetic":true,"types":[]},{"text":"impl Sync for TransactionRestoreOpt","synthetic":true,"types":[]},{"text":"impl Sync for TransactionRestoreController","synthetic":true,"types":[]},{"text":"impl Sync for PreheatedTransactionRestore","synthetic":true,"types":[]},{"text":"impl Sync for TransactionRestoreBatchController","synthetic":true,"types":[]},{"text":"impl Sync for BackupCoordinatorOpt","synthetic":true,"types":[]},{"text":"impl Sync for BackupCoordinator","synthetic":true,"types":[]},{"text":"impl Sync for RestoreCoordinatorOpt","synthetic":true,"types":[]},{"text":"impl Sync for RestoreCoordinator","synthetic":true,"types":[]},{"text":"impl Sync for VerifyCoordinator","synthetic":true,"types":[]},{"text":"impl Sync for EpochEndingBackupMeta","synthetic":true,"types":[]},{"text":"impl Sync for StateSnapshotBackupMeta","synthetic":true,"types":[]},{"text":"impl Sync for TransactionBackupMeta","synthetic":true,"types":[]},{"text":"impl Sync for MetadataCacheOpt","synthetic":true,"types":[]},{"text":"impl Sync for MetadataView","synthetic":true,"types":[]},{"text":"impl Sync for BackupStorageState","synthetic":true,"types":[]},{"text":"impl Sync for ShellSafeName","synthetic":true,"types":[]},{"text":"impl Sync for TextLine","synthetic":true,"types":[]},{"text":"impl Sync for StorageOpt","synthetic":true,"types":[]},{"text":"impl Sync for CommandAdapterOpt","synthetic":true,"types":[]},{"text":"impl Sync for CommandAdapter","synthetic":true,"types":[]},{"text":"impl Sync for LocalFsOpt","synthetic":true,"types":[]},{"text":"impl Sync for LocalFs","synthetic":true,"types":[]},{"text":"impl Sync for GlobalBackupOpt","synthetic":true,"types":[]},{"text":"impl Sync for RocksdbOpt","synthetic":true,"types":[]},{"text":"impl Sync for GlobalRestoreOpt","synthetic":true,"types":[]},{"text":"impl Sync for GlobalRestoreOptions","synthetic":true,"types":[]},{"text":"impl Sync for TrustedWaypointOpt","synthetic":true,"types":[]},{"text":"impl Sync for RestoreRunMode","synthetic":true,"types":[]},{"text":"impl Sync for BackupServiceClientOpt","synthetic":true,"types":[]},{"text":"impl Sync for BackupServiceClient","synthetic":true,"types":[]}];
implementors["boogie_backend"] = [{"text":"impl&lt;'env&gt; !Sync for BoogieTranslator&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for ModuleTranslator&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BoogieOptions","synthetic":true,"types":[]}];
implementors["borrow_graph"] = [{"text":"impl&lt;Loc, Lbl&gt; Sync for BorrowGraph&lt;Loc, Lbl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Lbl: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Loc: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RefID","synthetic":true,"types":[]}];
implementors["bounded_executor"] = [{"text":"impl Sync for BoundedExecutor","synthetic":true,"types":[]}];
implementors["bytecode"] = [{"text":"impl !Sync for Annotations","synthetic":true,"types":[]},{"text":"impl Sync for BorrowInfo","synthetic":true,"types":[]},{"text":"impl Sync for BorrowInfoAtCodeOffset","synthetic":true,"types":[]},{"text":"impl Sync for BorrowAnnotation","synthetic":true,"types":[]},{"text":"impl Sync for BorrowAnalysisProcessor","synthetic":true,"types":[]},{"text":"impl Sync for CleanAndOptimizeProcessor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SummaryCache&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Elem&gt; Sync for SetDomain&lt;Elem&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elem: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for MapDomain&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;State&gt; Sync for BlockState&lt;State&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;State: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for JoinResult","synthetic":true,"types":[]},{"text":"impl Sync for DebugInstrumenter","synthetic":true,"types":[]},{"text":"impl Sync for EliminateImmRefsProcessor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for EliminateImmRefs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for EliminateMutRefsProcessor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for EliminateMutRefs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for FunctionDataBuilder&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for FunctionTarget&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for FunctionData","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FunctionDataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for FunctionTargetsHolder","synthetic":true,"types":[]},{"text":"impl !Sync for FunctionTargetPipeline","synthetic":true,"types":[]},{"text":"impl Sync for FunctionVariant","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Reducible&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Graph&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for LiveVarInfoAtCodeOffset","synthetic":true,"types":[]},{"text":"impl Sync for LiveVarAnnotation","synthetic":true,"types":[]},{"text":"impl Sync for LiveVarAnalysisProcessor","synthetic":true,"types":[]},{"text":"impl Sync for MemoryInstrumentationProcessor","synthetic":true,"types":[]},{"text":"impl Sync for ProverOptions","synthetic":true,"types":[]},{"text":"impl Sync for PackedTypesProcessor","synthetic":true,"types":[]},{"text":"impl Sync for ReachingDefAnnotation","synthetic":true,"types":[]},{"text":"impl Sync for ReachingDefProcessor","synthetic":true,"types":[]},{"text":"impl Sync for Def","synthetic":true,"types":[]},{"text":"impl Sync for SpecInstrumenter","synthetic":true,"types":[]},{"text":"impl Sync for Label","synthetic":true,"types":[]},{"text":"impl Sync for AttrId","synthetic":true,"types":[]},{"text":"impl Sync for SpecBlockId","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for BytecodeDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for OperationDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for BorrowNodeDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AssignKind","synthetic":true,"types":[]},{"text":"impl Sync for Constant","synthetic":true,"types":[]},{"text":"impl Sync for Operation","synthetic":true,"types":[]},{"text":"impl Sync for BorrowNode","synthetic":true,"types":[]},{"text":"impl Sync for PropKind","synthetic":true,"types":[]},{"text":"impl Sync for Bytecode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for StacklessBytecodeGenerator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for StacklessControlFlowGraph","synthetic":true,"types":[]},{"text":"impl Sync for UsageProcessor","synthetic":true,"types":[]}];
implementors["bytecode_source_map"] = [{"text":"impl&lt;Location&gt; Sync for SourceMapping&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for FunctionMarking","synthetic":true,"types":[]},{"text":"impl Sync for StructMarking","synthetic":true,"types":[]},{"text":"impl Sync for MarkedSourceMapping","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; Sync for StructSourceMap&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; Sync for FunctionSourceMap&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; Sync for SourceMap&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for OwnedLoc","synthetic":true,"types":[]}];
implementors["bytecode_verifier"] = [{"text":"impl&lt;'a&gt; Sync for DuplicationChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for CodeUnitVerifier&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for VMControlFlowGraph","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DependencyChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CyclicModuleDependencyChecker","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for InstantiationLoopChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for InstructionConsistency&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ResourceTransitiveChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SignatureChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RecursiveStructDefChecker&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["channel"] = [{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, M&gt; Sync for Sender&lt;K, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, M&gt; Sync for Receiver&lt;K, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Sync for ElementStatus&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for QueueStyle","synthetic":true,"types":[]}];
implementors["cli"] = [{"text":"impl Sync for AccountData","synthetic":true,"types":[]},{"text":"impl Sync for AccountStatus","synthetic":true,"types":[]},{"text":"impl Sync for AddressAndIndex","synthetic":true,"types":[]},{"text":"impl Sync for IndexAndSequence","synthetic":true,"types":[]},{"text":"impl Sync for ClientProxy","synthetic":true,"types":[]},{"text":"impl Sync for AccountEntry","synthetic":true,"types":[]}];
implementors["cluster_test"] = [{"text":"impl Sync for AtomicHistogramAccumulator","synthetic":true,"types":[]},{"text":"impl Sync for AtomicHistogramSnapshot","synthetic":true,"types":[]},{"text":"impl Sync for Cluster","synthetic":true,"types":[]},{"text":"impl Sync for ClusterBuilderParams","synthetic":true,"types":[]},{"text":"impl Sync for ClusterBuilder","synthetic":true,"types":[]},{"text":"impl Sync for ClusterSwarmKube","synthetic":true,"types":[]},{"text":"impl Sync for KubeNode","synthetic":true,"types":[]},{"text":"impl Sync for NetworkDelay","synthetic":true,"types":[]},{"text":"impl Sync for PacketLoss","synthetic":true,"types":[]},{"text":"impl Sync for StopValidator","synthetic":true,"types":[]},{"text":"impl Sync for CompatibilityTest","synthetic":true,"types":[]},{"text":"impl Sync for CompatiblityTestParams","synthetic":true,"types":[]},{"text":"impl Sync for LoadTestParams","synthetic":true,"types":[]},{"text":"impl Sync for PacketLossRandomValidators","synthetic":true,"types":[]},{"text":"impl Sync for PacketLossRandomValidatorsParams","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceBenchmark","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceBenchmarkParams","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceBenchmarkThreeRegionSimulation","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceBenchmarkThreeRegionSimulationParams","synthetic":true,"types":[]},{"text":"impl Sync for RebootCluster","synthetic":true,"types":[]},{"text":"impl Sync for RebootClusterParams","synthetic":true,"types":[]},{"text":"impl Sync for RebootRandomValidators","synthetic":true,"types":[]},{"text":"impl Sync for RebootRandomValidatorsParams","synthetic":true,"types":[]},{"text":"impl Sync for Reconfiguration","synthetic":true,"types":[]},{"text":"impl Sync for ReconfigurationParams","synthetic":true,"types":[]},{"text":"impl Sync for RecoveryTime","synthetic":true,"types":[]},{"text":"impl Sync for RecoveryTimeParams","synthetic":true,"types":[]},{"text":"impl Sync for TwinValidators","synthetic":true,"types":[]},{"text":"impl Sync for TwinValidatorsParams","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorVersioning","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorVersioningParams","synthetic":true,"types":[]},{"text":"impl Sync for CpuFlamegraph","synthetic":true,"types":[]},{"text":"impl Sync for CpuFlamegraphParams","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Context&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for GenesisHelper","synthetic":true,"types":[]},{"text":"impl Sync for CommitInfo","synthetic":true,"types":[]},{"text":"impl Sync for GitCommitInfo","synthetic":true,"types":[]},{"text":"impl Sync for Author","synthetic":true,"types":[]},{"text":"impl Sync for GitHub","synthetic":true,"types":[]},{"text":"impl Sync for CommitHistoryHealthCheck","synthetic":true,"types":[]},{"text":"impl !Sync for DebugPortLogWorker","synthetic":true,"types":[]},{"text":"impl Sync for FullNodeHealthCheck","synthetic":true,"types":[]},{"text":"impl Sync for LivenessHealthCheck","synthetic":true,"types":[]},{"text":"impl !Sync for LogTail","synthetic":true,"types":[]},{"text":"impl Sync for TraceTail","synthetic":true,"types":[]},{"text":"impl Sync for Commit","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorEvent","synthetic":true,"types":[]},{"text":"impl !Sync for HealthCheckRunner","synthetic":true,"types":[]},{"text":"impl Sync for HealthCheckContext","synthetic":true,"types":[]},{"text":"impl Sync for HealthCheckError","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for PrintFailures","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorGroup","synthetic":true,"types":[]},{"text":"impl Sync for InstanceConfig","synthetic":true,"types":[]},{"text":"impl Sync for VaultConfig","synthetic":true,"types":[]},{"text":"impl Sync for LSRConfig","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorConfig","synthetic":true,"types":[]},{"text":"impl Sync for FullnodeConfig","synthetic":true,"types":[]},{"text":"impl Sync for Instance","synthetic":true,"types":[]},{"text":"impl Sync for ApplicationConfig","synthetic":true,"types":[]},{"text":"impl Sync for Prometheus","synthetic":true,"types":[]},{"text":"impl Sync for MatrixResponse","synthetic":true,"types":[]},{"text":"impl Sync for TimeSeries","synthetic":true,"types":[]},{"text":"impl Sync for SuiteReport","synthetic":true,"types":[]},{"text":"impl Sync for ReportedMetric","synthetic":true,"types":[]},{"text":"impl Sync for SlackClient","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PrometheusRangeView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExperimentSuite","synthetic":true,"types":[]},{"text":"impl Sync for TxEmitter","synthetic":true,"types":[]},{"text":"impl Sync for EmitJob","synthetic":true,"types":[]},{"text":"impl Sync for TxStats","synthetic":true,"types":[]},{"text":"impl Sync for TxStatsRate","synthetic":true,"types":[]},{"text":"impl Sync for EmitThreadParams","synthetic":true,"types":[]},{"text":"impl Sync for EmitJobRequest","synthetic":true,"types":[]},{"text":"impl Sync for AccountData","synthetic":true,"types":[]},{"text":"impl Sync for InvalidTxType","synthetic":true,"types":[]}];
implementors["compiled_stdlib"] = [{"text":"impl Sync for StdLibOptions","synthetic":true,"types":[]},{"text":"impl Sync for CompiledBytes","synthetic":true,"types":[]},{"text":"impl Sync for StdlibScript","synthetic":true,"types":[]}];
implementors["compiler"] = [{"text":"impl Sync for Compiler","synthetic":true,"types":[]}];
implementors["consensus"] = [{"text":"impl Sync for ConsensusNetworkSender","synthetic":true,"types":[]},{"text":"impl Sync for ConsensusMsg","synthetic":true,"types":[]}];
implementors["consensus_types"] = [{"text":"impl Sync for Block","synthetic":true,"types":[]},{"text":"impl Sync for BlockData","synthetic":true,"types":[]},{"text":"impl Sync for BlockDataHasher","synthetic":true,"types":[]},{"text":"impl Sync for BlockType","synthetic":true,"types":[]},{"text":"impl Sync for BlockRetrievalRequest","synthetic":true,"types":[]},{"text":"impl Sync for BlockRetrievalResponse","synthetic":true,"types":[]},{"text":"impl Sync for BlockRetrievalStatus","synthetic":true,"types":[]},{"text":"impl Sync for EpochRetrievalRequest","synthetic":true,"types":[]},{"text":"impl Sync for ExecutedBlock","synthetic":true,"types":[]},{"text":"impl Sync for ProposalMsg","synthetic":true,"types":[]},{"text":"impl Sync for QuorumCert","synthetic":true,"types":[]},{"text":"impl Sync for SafetyData","synthetic":true,"types":[]},{"text":"impl Sync for SyncInfo","synthetic":true,"types":[]},{"text":"impl Sync for Timeout","synthetic":true,"types":[]},{"text":"impl Sync for TimeoutHasher","synthetic":true,"types":[]},{"text":"impl Sync for TimeoutCertificate","synthetic":true,"types":[]},{"text":"impl Sync for Vote","synthetic":true,"types":[]},{"text":"impl Sync for VoteData","synthetic":true,"types":[]},{"text":"impl Sync for VoteDataHasher","synthetic":true,"types":[]},{"text":"impl Sync for VoteMsg","synthetic":true,"types":[]},{"text":"impl Sync for VoteProposal","synthetic":true,"types":[]},{"text":"impl Sync for VoteProposalHasher","synthetic":true,"types":[]},{"text":"impl Sync for MaybeSignedVoteProposal","synthetic":true,"types":[]}];
implementors["crash_handler"] = [{"text":"impl Sync for CrashInfo","synthetic":true,"types":[]}];
implementors["datatest_stable"] = [{"text":"impl Sync for Requirements","synthetic":true,"types":[]}];
implementors["debug_interface"] = [{"text":"impl Sync for NodeDebugClient","synthetic":true,"types":[]},{"text":"impl Sync for AsyncNodeDebugClient","synthetic":true,"types":[]},{"text":"impl Sync for NodeDebugService","synthetic":true,"types":[]}];
implementors["diem_bitvec"] = [{"text":"impl Sync for BitVec","synthetic":true,"types":[]}];
implementors["diem_config"] = [{"text":"impl Sync for ConsensusConfig","synthetic":true,"types":[]},{"text":"impl Sync for LeaderReputationConfig","synthetic":true,"types":[]},{"text":"impl Sync for DebugInterfaceConfig","synthetic":true,"types":[]},{"text":"impl Sync for DiemTraceConfig","synthetic":true,"types":[]},{"text":"impl Sync for ExecutionConfig","synthetic":true,"types":[]},{"text":"impl Sync for RemoteExecutionService","synthetic":true,"types":[]},{"text":"impl Sync for KeyManagerConfig","synthetic":true,"types":[]},{"text":"impl Sync for LoggerConfig","synthetic":true,"types":[]},{"text":"impl Sync for MetricsConfig","synthetic":true,"types":[]},{"text":"impl Sync for MempoolConfig","synthetic":true,"types":[]},{"text":"impl Sync for NetworkConfig","synthetic":true,"types":[]},{"text":"impl Sync for IdentityFromConfig","synthetic":true,"types":[]},{"text":"impl Sync for IdentityFromStorage","synthetic":true,"types":[]},{"text":"impl Sync for RateLimitConfig","synthetic":true,"types":[]},{"text":"impl Sync for JsonRpcConfig","synthetic":true,"types":[]},{"text":"impl Sync for GitHubConfig","synthetic":true,"types":[]},{"text":"impl Sync for VaultConfig","synthetic":true,"types":[]},{"text":"impl Sync for OnDiskStorageConfig","synthetic":true,"types":[]},{"text":"impl Sync for TokenFromConfig","synthetic":true,"types":[]},{"text":"impl Sync for TokenFromDisk","synthetic":true,"types":[]},{"text":"impl Sync for StateSyncConfig","synthetic":true,"types":[]},{"text":"impl Sync for RocksdbConfig","synthetic":true,"types":[]},{"text":"impl Sync for StorageConfig","synthetic":true,"types":[]},{"text":"impl Sync for SafetyRulesConfig","synthetic":true,"types":[]},{"text":"impl Sync for RemoteService","synthetic":true,"types":[]},{"text":"impl Sync for SafetyRulesTestConfig","synthetic":true,"types":[]},{"text":"impl Sync for UpstreamConfig","synthetic":true,"types":[]},{"text":"impl Sync for PeerNetworkId","synthetic":true,"types":[]},{"text":"impl Sync for TestConfig","synthetic":true,"types":[]},{"text":"impl Sync for NodeConfig","synthetic":true,"types":[]},{"text":"impl Sync for BaseConfig","synthetic":true,"types":[]},{"text":"impl Sync for ParseRoleError","synthetic":true,"types":[]},{"text":"impl Sync for RootPath","synthetic":true,"types":[]},{"text":"impl Sync for ConsensusProposerType","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for ExecutionCorrectnessService","synthetic":true,"types":[]},{"text":"impl Sync for DiscoveryMethod","synthetic":true,"types":[]},{"text":"impl Sync for Identity","synthetic":true,"types":[]},{"text":"impl Sync for SecureBackend","synthetic":true,"types":[]},{"text":"impl Sync for Token","synthetic":true,"types":[]},{"text":"impl Sync for SafetyRulesService","synthetic":true,"types":[]},{"text":"impl Sync for WaypointConfig","synthetic":true,"types":[]},{"text":"impl Sync for RoleType","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorSwarm","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ConfigKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for NetworkContext","synthetic":true,"types":[]},{"text":"impl Sync for NodeNetworkId","synthetic":true,"types":[]},{"text":"impl Sync for NetworkId","synthetic":true,"types":[]}];
implementors["diem_crypto"] = [{"text":"impl Sync for Sha3_256","synthetic":true,"types":[]},{"text":"impl Sync for Ed25519PrivateKey","synthetic":true,"types":[]},{"text":"impl Sync for Ed25519PublicKey","synthetic":true,"types":[]},{"text":"impl Sync for Ed25519Signature","synthetic":true,"types":[]},{"text":"impl Sync for HashValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for HashValueBitIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for TransactionAccumulatorHasher","synthetic":true,"types":[]},{"text":"impl Sync for EventAccumulatorHasher","synthetic":true,"types":[]},{"text":"impl Sync for SparseMerkleInternalHasher","synthetic":true,"types":[]},{"text":"impl Sync for VoteProposalHasher","synthetic":true,"types":[]},{"text":"impl Sync for TestOnlyHasher","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Sync for Hkdf&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for HkdfError","synthetic":true,"types":[]},{"text":"impl Sync for MultiEd25519PrivateKey","synthetic":true,"types":[]},{"text":"impl Sync for MultiEd25519PublicKey","synthetic":true,"types":[]},{"text":"impl Sync for MultiEd25519Signature","synthetic":true,"types":[]},{"text":"impl Sync for NoiseConfig","synthetic":true,"types":[]},{"text":"impl Sync for InitiatorHandshakeState","synthetic":true,"types":[]},{"text":"impl Sync for ResponderHandshakeState","synthetic":true,"types":[]},{"text":"impl Sync for NoiseSession","synthetic":true,"types":[]},{"text":"impl Sync for NoiseError","synthetic":true,"types":[]},{"text":"impl&lt;S, P&gt; Sync for KeyPair&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for TestDiemCrypto","synthetic":true,"types":[]},{"text":"impl Sync for TestDiemCryptoHasher","synthetic":true,"types":[]},{"text":"impl Sync for CryptoMaterialError","synthetic":true,"types":[]},{"text":"impl Sync for PrivateKey","synthetic":true,"types":[]},{"text":"impl Sync for PublicKey","synthetic":true,"types":[]}];
implementors["diem_events_fetcher"] = [{"text":"impl Sync for DiemEventsFetcher","synthetic":true,"types":[]}];
implementors["diem_faucet"] = [{"text":"impl Sync for MintParams","synthetic":true,"types":[]},{"text":"impl Sync for Service","synthetic":true,"types":[]},{"text":"impl Sync for Response","synthetic":true,"types":[]}];
implementors["diem_fuzzer"] = [{"text":"impl Sync for FuzzTarget","synthetic":true,"types":[]}];
implementors["diem_genesis_tool"] = [{"text":"impl Sync for Command","synthetic":true,"types":[]},{"text":"impl Sync for CommandName","synthetic":true,"types":[]},{"text":"impl Sync for Layout","synthetic":true,"types":[]},{"text":"impl Sync for SetLayout","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ValidatorBuilder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for FullnodeBuilder","synthetic":true,"types":[]},{"text":"impl Sync for FullnodeType","synthetic":true,"types":[]},{"text":"impl Sync for SwarmConfig","synthetic":true,"types":[]}];
implementors["diem_github_client"] = [{"text":"impl Sync for Client","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]}];
implementors["diem_infallible"] = [{"text":"impl&lt;T&gt; Sync for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RwLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["diem_jellyfish_merkle"] = [{"text":"impl Sync for MissingRootError","synthetic":true,"types":[]},{"text":"impl Sync for NodeStats","synthetic":true,"types":[]},{"text":"impl Sync for StaleNodeIndex","synthetic":true,"types":[]},{"text":"impl Sync for TreeUpdateBatch","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Sync for JellyfishMerkleTree&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for JellyfishMerkleIterator&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for NodeKey","synthetic":true,"types":[]},{"text":"impl Sync for Child","synthetic":true,"types":[]},{"text":"impl Sync for InternalNode","synthetic":true,"types":[]},{"text":"impl Sync for LeafNode","synthetic":true,"types":[]},{"text":"impl Sync for Node","synthetic":true,"types":[]},{"text":"impl Sync for NodeDecodeError","synthetic":true,"types":[]},{"text":"impl !Sync for JellyfishMerkleRestore","synthetic":true,"types":[]}];
implementors["diem_json_rpc_client"] = [{"text":"impl Sync for JsonRpcClient","synthetic":true,"types":[]},{"text":"impl Sync for JsonRpcAsyncClient","synthetic":true,"types":[]},{"text":"impl Sync for JsonRpcBatch","synthetic":true,"types":[]},{"text":"impl Sync for JsonRpcAsyncClientError","synthetic":true,"types":[]},{"text":"impl Sync for JsonRpcResponse","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Client&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for BroadcastHttpClient","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Response&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SimpleHttpClient","synthetic":true,"types":[]},{"text":"impl Sync for Retry","synthetic":true,"types":[]},{"text":"impl Sync for State","synthetic":true,"types":[]},{"text":"impl Sync for StateManager","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for UnexpectedError","synthetic":true,"types":[]},{"text":"impl Sync for WaitForTransactionError","synthetic":true,"types":[]}];
implementors["diem_json_rpc_types"] = [{"text":"impl Sync for JsonRpcError","synthetic":true,"types":[]},{"text":"impl Sync for ServerCode","synthetic":true,"types":[]},{"text":"impl Sync for InvalidRequestCode","synthetic":true,"types":[]},{"text":"impl Sync for ErrorData","synthetic":true,"types":[]},{"text":"impl Sync for JsonRpcResponse","synthetic":true,"types":[]},{"text":"impl Sync for AmountView","synthetic":true,"types":[]},{"text":"impl Sync for AccountView","synthetic":true,"types":[]},{"text":"impl Sync for EventView","synthetic":true,"types":[]},{"text":"impl Sync for EventWithProofView","synthetic":true,"types":[]},{"text":"impl Sync for MetadataView","synthetic":true,"types":[]},{"text":"impl Sync for BytesView","synthetic":true,"types":[]},{"text":"impl Sync for MoveAbortExplanationView","synthetic":true,"types":[]},{"text":"impl Sync for TransactionView","synthetic":true,"types":[]},{"text":"impl Sync for TransactionsWithProofsView","synthetic":true,"types":[]},{"text":"impl Sync for TransactionsProofsView","synthetic":true,"types":[]},{"text":"impl Sync for ScriptView","synthetic":true,"types":[]},{"text":"impl Sync for CurrencyInfoView","synthetic":true,"types":[]},{"text":"impl Sync for StateProofView","synthetic":true,"types":[]},{"text":"impl Sync for AccountStateWithProofView","synthetic":true,"types":[]},{"text":"impl Sync for AccountStateProofView","synthetic":true,"types":[]},{"text":"impl Sync for AccountRoleView","synthetic":true,"types":[]},{"text":"impl Sync for EventDataView","synthetic":true,"types":[]},{"text":"impl Sync for VMStatusView","synthetic":true,"types":[]},{"text":"impl Sync for TransactionDataView","synthetic":true,"types":[]},{"text":"impl Sync for Amount","synthetic":true,"types":[]},{"text":"impl Sync for Account","synthetic":true,"types":[]},{"text":"impl Sync for AccountRole","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for EventData","synthetic":true,"types":[]},{"text":"impl Sync for Metadata","synthetic":true,"types":[]},{"text":"impl Sync for Transaction","synthetic":true,"types":[]},{"text":"impl Sync for MoveAbortExplaination","synthetic":true,"types":[]},{"text":"impl Sync for VmStatus","synthetic":true,"types":[]},{"text":"impl Sync for TransactionData","synthetic":true,"types":[]},{"text":"impl Sync for Script","synthetic":true,"types":[]},{"text":"impl Sync for CurrencyInfo","synthetic":true,"types":[]},{"text":"impl Sync for StateProof","synthetic":true,"types":[]},{"text":"impl Sync for AccountStateWithProof","synthetic":true,"types":[]},{"text":"impl Sync for AccountStateProof","synthetic":true,"types":[]}];
implementors["diem_key_manager"] = [{"text":"impl&lt;LI, S&gt; Sync for KeyManager&lt;LI, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;LI: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Action","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for JsonRpcDiemInterface","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for LogSchema&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for LogEntry","synthetic":true,"types":[]},{"text":"impl Sync for LogEvent","synthetic":true,"types":[]}];
implementors["diem_logger"] = [{"text":"impl Sync for DiemLogger","synthetic":true,"types":[]},{"text":"impl Sync for DiemLoggerBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Filter","synthetic":true,"types":[]},{"text":"impl Sync for Metadata","synthetic":true,"types":[]},{"text":"impl Sync for Key","synthetic":true,"types":[]},{"text":"impl&lt;'v&gt; !Sync for KeyValue&lt;'v&gt;","synthetic":true,"types":[]},{"text":"impl Sync for LevelFilter","synthetic":true,"types":[]},{"text":"impl Sync for Level","synthetic":true,"types":[]},{"text":"impl&lt;'v&gt; !Sync for Value&lt;'v&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SecurityEvent","synthetic":true,"types":[]},{"text":"impl Sync for FileWriter","synthetic":true,"types":[]},{"text":"impl Sync for JsonLogEntry","synthetic":true,"types":[]},{"text":"impl Sync for Sampling","synthetic":true,"types":[]},{"text":"impl Sync for SampleRate","synthetic":true,"types":[]}];
implementors["diem_management"] = [{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl Sync for ConfigPath","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for SecureBackend","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorBackend","synthetic":true,"types":[]},{"text":"impl Sync for SharedBackend","synthetic":true,"types":[]},{"text":"impl Sync for StorageWrapper","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorConfig","synthetic":true,"types":[]},{"text":"impl Sync for InsertWaypoint","synthetic":true,"types":[]}];
implementors["diem_mempool"] = [{"text":"impl Sync for CommitNotification","synthetic":true,"types":[]},{"text":"impl Sync for CommitResponse","synthetic":true,"types":[]},{"text":"impl Sync for CommittedTransaction","synthetic":true,"types":[]},{"text":"impl Sync for TransactionExclusion","synthetic":true,"types":[]},{"text":"impl Sync for ConsensusRequest","synthetic":true,"types":[]},{"text":"impl Sync for ConsensusResponse","synthetic":true,"types":[]},{"text":"impl Sync for MockSharedMempool","synthetic":true,"types":[]},{"text":"impl Sync for MempoolNetworkSender","synthetic":true,"types":[]},{"text":"impl Sync for MempoolSyncMsg","synthetic":true,"types":[]}];
implementors["diem_metrics"] = [{"text":"impl Sync for DurationHistogram","synthetic":true,"types":[]},{"text":"impl Sync for OpMetrics","synthetic":true,"types":[]}];
implementors["diem_network_address"] = [{"text":"impl Sync for NetworkAddress","synthetic":true,"types":[]},{"text":"impl Sync for DnsName","synthetic":true,"types":[]},{"text":"impl Sync for EmptyError","synthetic":true,"types":[]},{"text":"impl Sync for Protocol","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl Sync for IpFilter","synthetic":true,"types":[]},{"text":"impl Sync for EncNetworkAddress","synthetic":true,"types":[]}];
implementors["diem_network_address_encryption"] = [{"text":"impl Sync for Encryptor","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorKeys","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]}];
implementors["diem_nibble"] = [{"text":"impl Sync for Nibble","synthetic":true,"types":[]}];
implementors["diem_node"] = [{"text":"impl Sync for DiemHandle","synthetic":true,"types":[]}];
implementors["diem_operational_tool"] = [{"text":"impl Sync for TransactionContext","synthetic":true,"types":[]},{"text":"impl Sync for Command","synthetic":true,"types":[]},{"text":"impl Sync for CommandName","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ResultWrapper&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for JsonRpcClientWrapper","synthetic":true,"types":[]},{"text":"impl Sync for OperationalTool","synthetic":true,"types":[]}];
implementors["diem_proptest_helpers"] = [{"text":"impl&lt;Ix, T&gt; Sync for GrowingSubset&lt;Ix, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RepeatVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ValueGenerator","synthetic":true,"types":[]},{"text":"impl Sync for Index","synthetic":true,"types":[]}];
implementors["diem_rate_limiter"] = [{"text":"impl&lt;T&gt; Sync for AsyncRateLimiter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Key&gt; Sync for TokenBucketRateLimiter&lt;Key&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Key: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Bucket","synthetic":true,"types":[]}];
implementors["diem_retrier"] = [{"text":"impl Sync for FixedDelay","synthetic":true,"types":[]},{"text":"impl Sync for ExponentWithLimitDelay","synthetic":true,"types":[]}];
implementors["diem_secure_json_rpc"] = [{"text":"impl Sync for JsonRpcClient","synthetic":true,"types":[]},{"text":"impl Sync for TransactionView","synthetic":true,"types":[]},{"text":"impl Sync for MoveAbortExplanationView","synthetic":true,"types":[]},{"text":"impl Sync for Bytes","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for VMStatusView","synthetic":true,"types":[]}];
implementors["diem_secure_net"] = [{"text":"impl Sync for NetworkClient","synthetic":true,"types":[]},{"text":"impl Sync for NetworkServer","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]}];
implementors["diem_secure_push_metrics"] = [{"text":"impl !Sync for MetricsPusher","synthetic":true,"types":[]}];
implementors["diem_secure_storage"] = [{"text":"impl Sync for PublicKeyResponse","synthetic":true,"types":[]},{"text":"impl Sync for GitHubStorage","synthetic":true,"types":[]},{"text":"impl Sync for InMemoryStorage","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for GetResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for NamespacedStorage","synthetic":true,"types":[]},{"text":"impl Sync for OnDiskStorage","synthetic":true,"types":[]},{"text":"impl Sync for Permission","synthetic":true,"types":[]},{"text":"impl Sync for Policy","synthetic":true,"types":[]},{"text":"impl Sync for VaultStorage","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Capability","synthetic":true,"types":[]},{"text":"impl Sync for Identity","synthetic":true,"types":[]},{"text":"impl Sync for Storage","synthetic":true,"types":[]}];
implementors["diem_state_view"] = [{"text":"impl Sync for StateViewId","synthetic":true,"types":[]}];
implementors["diem_swarm"] = [{"text":"impl Sync for InteractiveClient","synthetic":true,"types":[]},{"text":"impl Sync for Process","synthetic":true,"types":[]},{"text":"impl Sync for DiemNode","synthetic":true,"types":[]},{"text":"impl Sync for DiemSwarm","synthetic":true,"types":[]},{"text":"impl Sync for HealthStatus","synthetic":true,"types":[]},{"text":"impl Sync for DiemSwarmDir","synthetic":true,"types":[]},{"text":"impl Sync for SwarmLaunchFailure","synthetic":true,"types":[]}];
implementors["diem_temppath"] = [{"text":"impl Sync for TempPath","synthetic":true,"types":[]}];
implementors["diem_time_service"] = [{"text":"impl Sync for TimeService","synthetic":true,"types":[]},{"text":"impl Sync for Sleep","synthetic":true,"types":[]},{"text":"impl Sync for Interval","synthetic":true,"types":[]},{"text":"impl Sync for MockTimeService","synthetic":true,"types":[]},{"text":"impl Sync for MockSleep","synthetic":true,"types":[]},{"text":"impl Sync for RealTimeService","synthetic":true,"types":[]},{"text":"impl Sync for Elapsed","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for Timeout&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["diem_trace"] = [{"text":"impl Sync for DiemTraceClient","synthetic":true,"types":[]},{"text":"impl Sync for TraceBlockGuard","synthetic":true,"types":[]}];
implementors["diem_transaction_replay"] = [{"text":"impl Sync for DiemDebugger","synthetic":true,"types":[]}];
implementors["diem_types"] = [{"text":"impl Sync for AccessPath","synthetic":true,"types":[]},{"text":"impl Sync for Path","synthetic":true,"types":[]},{"text":"impl Sync for AdminTransactionEvent","synthetic":true,"types":[]},{"text":"impl Sync for BaseUrlRotationEvent","synthetic":true,"types":[]},{"text":"impl Sync for BurnEvent","synthetic":true,"types":[]},{"text":"impl Sync for CancelBurnEvent","synthetic":true,"types":[]},{"text":"impl Sync for ComplianceKeyRotationEvent","synthetic":true,"types":[]},{"text":"impl Sync for CreateAccountEvent","synthetic":true,"types":[]},{"text":"impl Sync for ToXDXExchangeRateUpdateEvent","synthetic":true,"types":[]},{"text":"impl Sync for MintEvent","synthetic":true,"types":[]},{"text":"impl Sync for NewBlockEvent","synthetic":true,"types":[]},{"text":"impl Sync for NewEpochEvent","synthetic":true,"types":[]},{"text":"impl Sync for PreburnEvent","synthetic":true,"types":[]},{"text":"impl Sync for ReceivedMintEvent","synthetic":true,"types":[]},{"text":"impl Sync for ReceivedPaymentEvent","synthetic":true,"types":[]},{"text":"impl Sync for SentPaymentEvent","synthetic":true,"types":[]},{"text":"impl Sync for AccountResource","synthetic":true,"types":[]},{"text":"impl Sync for BalanceResource","synthetic":true,"types":[]},{"text":"impl Sync for ChainIdResource","synthetic":true,"types":[]},{"text":"impl Sync for CurrencyInfoResource","synthetic":true,"types":[]},{"text":"impl Sync for DesignatedDealer","synthetic":true,"types":[]},{"text":"impl Sync for Credential","synthetic":true,"types":[]},{"text":"impl Sync for Limit","synthetic":true,"types":[]},{"text":"impl Sync for FreezingBit","synthetic":true,"types":[]},{"text":"impl Sync for KeyRotationCapabilityResource","synthetic":true,"types":[]},{"text":"impl Sync for PreburnResource","synthetic":true,"types":[]},{"text":"impl Sync for AccountRole","synthetic":true,"types":[]},{"text":"impl Sync for RoleId","synthetic":true,"types":[]},{"text":"impl Sync for ParentVASP","synthetic":true,"types":[]},{"text":"impl Sync for ChildVASP","synthetic":true,"types":[]},{"text":"impl Sync for WithdrawCapabilityResource","synthetic":true,"types":[]},{"text":"impl Sync for AccountState","synthetic":true,"types":[]},{"text":"impl Sync for AccountStateBlob","synthetic":true,"types":[]},{"text":"impl Sync for AccountStateBlobHasher","synthetic":true,"types":[]},{"text":"impl Sync for AccountStateWithProof","synthetic":true,"types":[]},{"text":"impl Sync for BlockInfo","synthetic":true,"types":[]},{"text":"impl Sync for BlockMetadata","synthetic":true,"types":[]},{"text":"impl Sync for DiemBlockResource","synthetic":true,"types":[]},{"text":"impl Sync for NewBlockEvent","synthetic":true,"types":[]},{"text":"impl Sync for ChainId","synthetic":true,"types":[]},{"text":"impl Sync for NamedChain","synthetic":true,"types":[]},{"text":"impl Sync for ContractEventHasher","synthetic":true,"types":[]},{"text":"impl Sync for ContractEventV0","synthetic":true,"types":[]},{"text":"impl Sync for ContractEventV0Hasher","synthetic":true,"types":[]},{"text":"impl Sync for EventWithProof","synthetic":true,"types":[]},{"text":"impl Sync for ContractEvent","synthetic":true,"types":[]},{"text":"impl Sync for DiemTimestampResource","synthetic":true,"types":[]},{"text":"impl Sync for DiemTimestamp","synthetic":true,"types":[]},{"text":"impl Sync for EpochChangeProof","synthetic":true,"types":[]},{"text":"impl Sync for EpochState","synthetic":true,"types":[]},{"text":"impl Sync for EventKey","synthetic":true,"types":[]},{"text":"impl Sync for EventHandle","synthetic":true,"types":[]},{"text":"impl Sync for LedgerInfo","synthetic":true,"types":[]},{"text":"impl Sync for LedgerInfoHasher","synthetic":true,"types":[]},{"text":"impl Sync for LedgerInfoWithV0","synthetic":true,"types":[]},{"text":"impl Sync for LedgerInfoWithSignatures","synthetic":true,"types":[]},{"text":"impl Sync for MempoolStatus","synthetic":true,"types":[]},{"text":"impl Sync for MempoolStatusCode","synthetic":true,"types":[]},{"text":"impl Sync for DiemVersion","synthetic":true,"types":[]},{"text":"impl Sync for RegisteredCurrencies","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorSet","synthetic":true,"types":[]},{"text":"impl Sync for VMConfig","synthetic":true,"types":[]},{"text":"impl Sync for VMPublishingOption","synthetic":true,"types":[]},{"text":"impl Sync for ConfigID","synthetic":true,"types":[]},{"text":"impl Sync for OnChainConfigPayload","synthetic":true,"types":[]},{"text":"impl Sync for ConfigurationResource","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Sync for MerkleTreeInternalNode&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SparseMerkleLeafNode","synthetic":true,"types":[]},{"text":"impl Sync for SparseMerkleLeafNodeHasher","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Sync for InMemoryAccumulator&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Sync for AccumulatorProof&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Sync for SparseMerkleProof&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for AccumulatorConsistencyProof","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Sync for AccumulatorRangeProof&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SparseMerkleRangeProof","synthetic":true,"types":[]},{"text":"impl Sync for TransactionInfoWithProof","synthetic":true,"types":[]},{"text":"impl Sync for AccountStateProof","synthetic":true,"types":[]},{"text":"impl Sync for EventProof","synthetic":true,"types":[]},{"text":"impl Sync for TransactionListProof","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Sync for AccumulatorExtensionProof&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Position","synthetic":true,"types":[]},{"text":"impl Sync for AncestorSiblingIterator","synthetic":true,"types":[]},{"text":"impl Sync for AncestorIterator","synthetic":true,"types":[]},{"text":"impl Sync for FrozenSubTreeIterator","synthetic":true,"types":[]},{"text":"impl Sync for FrozenSubtreeSiblingIterator","synthetic":true,"types":[]},{"text":"impl Sync for NodeDirection","synthetic":true,"types":[]},{"text":"impl Sync for AccountInfoUniverse","synthetic":true,"types":[]},{"text":"impl Sync for RawTransactionGen","synthetic":true,"types":[]},{"text":"impl Sync for SignatureCheckedTransactionGen","synthetic":true,"types":[]},{"text":"impl Sync for ContractEventGen","synthetic":true,"types":[]},{"text":"impl Sync for AccountResourceGen","synthetic":true,"types":[]},{"text":"impl Sync for BalanceResourceGen","synthetic":true,"types":[]},{"text":"impl Sync for AccountStateBlobGen","synthetic":true,"types":[]},{"text":"impl Sync for TransactionToCommitGen","synthetic":true,"types":[]},{"text":"impl Sync for BlockInfoGen","synthetic":true,"types":[]},{"text":"impl Sync for LedgerInfoGen","synthetic":true,"types":[]},{"text":"impl Sync for LedgerInfoWithSignaturesGen","synthetic":true,"types":[]},{"text":"impl Sync for ChangeSet","synthetic":true,"types":[]},{"text":"impl Sync for Module","synthetic":true,"types":[]},{"text":"impl Sync for ArgumentABI","synthetic":true,"types":[]},{"text":"impl Sync for Script","synthetic":true,"types":[]},{"text":"impl Sync for ScriptABI","synthetic":true,"types":[]},{"text":"impl Sync for TypeArgumentABI","synthetic":true,"types":[]},{"text":"impl Sync for RawTransaction","synthetic":true,"types":[]},{"text":"impl Sync for RawTransactionHasher","synthetic":true,"types":[]},{"text":"impl Sync for SignedTransaction","synthetic":true,"types":[]},{"text":"impl Sync for SignatureCheckedTransaction","synthetic":true,"types":[]},{"text":"impl Sync for TransactionWithProof","synthetic":true,"types":[]},{"text":"impl Sync for VMValidatorResult","synthetic":true,"types":[]},{"text":"impl Sync for TransactionOutput","synthetic":true,"types":[]},{"text":"impl Sync for TransactionInfo","synthetic":true,"types":[]},{"text":"impl Sync for TransactionInfoHasher","synthetic":true,"types":[]},{"text":"impl Sync for TransactionToCommit","synthetic":true,"types":[]},{"text":"impl Sync for TransactionListWithProof","synthetic":true,"types":[]},{"text":"impl Sync for TransactionHasher","synthetic":true,"types":[]},{"text":"impl Sync for TransactionPayload","synthetic":true,"types":[]},{"text":"impl Sync for WriteSetPayload","synthetic":true,"types":[]},{"text":"impl Sync for TransactionStatus","synthetic":true,"types":[]},{"text":"impl Sync for GovernanceRole","synthetic":true,"types":[]},{"text":"impl Sync for Transaction","synthetic":true,"types":[]},{"text":"impl Sync for AuthenticationKey","synthetic":true,"types":[]},{"text":"impl Sync for AuthenticationKeyHasher","synthetic":true,"types":[]},{"text":"impl Sync for AuthenticationKeyPreimage","synthetic":true,"types":[]},{"text":"impl Sync for Scheme","synthetic":true,"types":[]},{"text":"impl Sync for TransactionAuthenticator","synthetic":true,"types":[]},{"text":"impl Sync for GeneralMetadataV0","synthetic":true,"types":[]},{"text":"impl Sync for TravelRuleMetadataV0","synthetic":true,"types":[]},{"text":"impl Sync for UnstructuredBytesMetadata","synthetic":true,"types":[]},{"text":"impl Sync for Metadata","synthetic":true,"types":[]},{"text":"impl Sync for GeneralMetadata","synthetic":true,"types":[]},{"text":"impl Sync for TravelRuleMetadata","synthetic":true,"types":[]},{"text":"impl Sync for TrustedState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for TrustedStateChange&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorConfigResource","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorOperatorConfigResource","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorConfig","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorInfo","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorSigner","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorConsensusInfo","synthetic":true,"types":[]},{"text":"impl Sync for ValidatorVerifier","synthetic":true,"types":[]},{"text":"impl Sync for VerifyError","synthetic":true,"types":[]},{"text":"impl Sync for Waypoint","synthetic":true,"types":[]},{"text":"impl Sync for Ledger2WaypointConverterHasher","synthetic":true,"types":[]},{"text":"impl Sync for WriteSet","synthetic":true,"types":[]},{"text":"impl Sync for WriteSetMut","synthetic":true,"types":[]},{"text":"impl Sync for WriteOp","synthetic":true,"types":[]}];
implementors["diem_validator_interface"] = [{"text":"impl Sync for DBDebuggerInterface","synthetic":true,"types":[]},{"text":"impl Sync for JsonRpcDebuggerInterface","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DebuggerStateView&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["diem_vault_client"] = [{"text":"impl Sync for Client","synthetic":true,"types":[]},{"text":"impl Sync for KeyBackup","synthetic":true,"types":[]},{"text":"impl Sync for KeyBackupPolicy","synthetic":true,"types":[]},{"text":"impl Sync for KeyBackupInfo","synthetic":true,"types":[]},{"text":"impl Sync for BackupInfo","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ReadResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ReadKey","synthetic":true,"types":[]},{"text":"impl Sync for Policy","synthetic":true,"types":[]},{"text":"impl Sync for PolicyPaths","synthetic":true,"types":[]},{"text":"impl Sync for PathPolicy","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Capability","synthetic":true,"types":[]},{"text":"impl Sync for VaultRunner","synthetic":true,"types":[]}];
implementors["diem_vm"] = [{"text":"impl&lt;'a&gt; Sync for StateViewCache&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Sync for RemoteStorage&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for TransactionMetadata","synthetic":true,"types":[]},{"text":"impl Sync for DiemVM","synthetic":true,"types":[]},{"text":"impl Sync for DiemVMValidator","synthetic":true,"types":[]},{"text":"impl Sync for AdapterLogSchema","synthetic":true,"types":[]},{"text":"impl Sync for LogEntry","synthetic":true,"types":[]}];
implementors["diem_wallet"] = [{"text":"impl Sync for Mnemonic","synthetic":true,"types":[]},{"text":"impl Sync for WalletLibrary","synthetic":true,"types":[]}];
implementors["diem_writeset_generator"] = [{"text":"impl&lt;'r, 'l, R&gt; !Sync for GenesisSession&lt;'r, 'l, R&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ReleaseArtifact","synthetic":true,"types":[]}];
implementors["diemdb"] = [{"text":"impl Sync for DiemDB","synthetic":true,"types":[]},{"text":"impl Sync for Diemsum","synthetic":true,"types":[]},{"text":"impl Sync for BackupHandler","synthetic":true,"types":[]},{"text":"impl Sync for DbState","synthetic":true,"types":[]},{"text":"impl Sync for RestoreHandler","synthetic":true,"types":[]},{"text":"impl Sync for DiemDbError","synthetic":true,"types":[]}];
implementors["disassembler"] = [{"text":"impl Sync for DisassemblerOptions","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; Sync for Disassembler&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["docgen"] = [{"text":"impl Sync for DocgenOptions","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for Docgen&lt;'env&gt;","synthetic":true,"types":[]}];
implementors["errmapgen"] = [{"text":"impl Sync for ErrmapOptions","synthetic":true,"types":[]},{"text":"impl Sync for ErrorDescription","synthetic":true,"types":[]},{"text":"impl Sync for ErrorContext","synthetic":true,"types":[]},{"text":"impl Sync for ErrorMapping","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for ErrmapGen&lt;'env&gt;","synthetic":true,"types":[]}];
implementors["execution_correctness"] = [{"text":"impl Sync for ExecutionCorrectnessManager","synthetic":true,"types":[]},{"text":"impl Sync for Process","synthetic":true,"types":[]}];
implementors["executor"] = [{"text":"impl&lt;V&gt; Sync for Executor&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for FakeVM","synthetic":true,"types":[]},{"text":"impl Sync for FakeDb","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Sync for GenesisCommitter&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["executor_types"] = [{"text":"impl Sync for StateComputeResult","synthetic":true,"types":[]},{"text":"impl Sync for ExecutedTrees","synthetic":true,"types":[]},{"text":"impl Sync for ProofReader","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]}];
implementors["functional_tests"] = [{"text":"impl Sync for Directive","synthetic":true,"types":[]},{"text":"impl Sync for Match","synthetic":true,"types":[]},{"text":"impl Sync for MatchResult","synthetic":true,"types":[]},{"text":"impl Sync for MatchError","synthetic":true,"types":[]},{"text":"impl Sync for MatchStatus","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Sp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for LineSp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ScriptOrModule","synthetic":true,"types":[]},{"text":"impl Sync for Proposer","synthetic":true,"types":[]},{"text":"impl Sync for Entry","synthetic":true,"types":[]},{"text":"impl Sync for Balance","synthetic":true,"types":[]},{"text":"impl Sync for AccountDefinition","synthetic":true,"types":[]},{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl Sync for Role","synthetic":true,"types":[]},{"text":"impl Sync for Entry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Argument","synthetic":true,"types":[]},{"text":"impl Sync for Entry","synthetic":true,"types":[]},{"text":"impl Sync for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Transaction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for EvaluationLog","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Command&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Stage","synthetic":true,"types":[]},{"text":"impl Sync for Status","synthetic":true,"types":[]},{"text":"impl Sync for OutputType","synthetic":true,"types":[]},{"text":"impl Sync for EvaluationOutput","synthetic":true,"types":[]},{"text":"impl Sync for RawTransactionInput","synthetic":true,"types":[]},{"text":"impl Sync for RawCommand","synthetic":true,"types":[]}];
implementors["generate_format"] = [{"text":"impl Sync for Corpus","synthetic":true,"types":[]}];
implementors["invalid_mutations"] = [{"text":"impl&lt;'a&gt; Sync for ApplyCodeUnitBoundsContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CodeUnitBoundsMutation","synthetic":true,"types":[]},{"text":"impl Sync for OutOfBoundsMutation","synthetic":true,"types":[]},{"text":"impl Sync for ApplyOutOfBoundsContext","synthetic":true,"types":[]},{"text":"impl Sync for PointerKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SignatureRefMutation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for FieldRefMutation&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["ir_to_bytecode"] = [{"text":"impl Sync for InternalCompilerError","synthetic":true,"types":[]}];
implementors["ir_to_bytecode_syntax"] = [{"text":"impl&lt;L, E&gt; Sync for ParseError&lt;L, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["language_benchmarks"] = [{"text":"impl&lt;S&gt; Sync for TransactionBencher&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["language_e2e_tests"] = [{"text":"impl Sync for Account","synthetic":true,"types":[]},{"text":"impl Sync for TransactionBuilder","synthetic":true,"types":[]},{"text":"impl Sync for Balance","synthetic":true,"types":[]},{"text":"impl Sync for AccountRole","synthetic":true,"types":[]},{"text":"impl Sync for EventHandleGenerator","synthetic":true,"types":[]},{"text":"impl Sync for AccountData","synthetic":true,"types":[]},{"text":"impl Sync for WithdrawCapability","synthetic":true,"types":[]},{"text":"impl Sync for KeyRotationCapability","synthetic":true,"types":[]},{"text":"impl Sync for FreezingBit","synthetic":true,"types":[]},{"text":"impl Sync for AccountRoleSpecifier","synthetic":true,"types":[]},{"text":"impl Sync for SequenceNumberMismatchGen","synthetic":true,"types":[]},{"text":"impl Sync for InsufficientBalanceGen","synthetic":true,"types":[]},{"text":"impl Sync for InvalidAuthkeyGen","synthetic":true,"types":[]},{"text":"impl Sync for CreateAccountGen","synthetic":true,"types":[]},{"text":"impl Sync for CreateExistingAccountGen","synthetic":true,"types":[]},{"text":"impl Sync for P2PTransferGen","synthetic":true,"types":[]},{"text":"impl Sync for RotateKeyGen","synthetic":true,"types":[]},{"text":"impl Sync for AccountUniverseGen","synthetic":true,"types":[]},{"text":"impl Sync for AccountUniverse","synthetic":true,"types":[]},{"text":"impl Sync for AccountPairGen","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for AccountPair&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AccountCurrent","synthetic":true,"types":[]},{"text":"impl Sync for AccountPickStyle","synthetic":true,"types":[]},{"text":"impl Sync for FakeDataStore","synthetic":true,"types":[]},{"text":"impl Sync for BasicStrategy","synthetic":true,"types":[]},{"text":"impl !Sync for BasicExecutor","synthetic":true,"types":[]},{"text":"impl Sync for PartitionedGuidedStrategy","synthetic":true,"types":[]},{"text":"impl Sync for UnPartitionedGuidedStrategy","synthetic":true,"types":[]},{"text":"impl&lt;Strategy&gt; !Sync for GuidedExecutor&lt;Strategy&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AnnotatedTransaction","synthetic":true,"types":[]},{"text":"impl&lt;TxnType, E&gt; !Sync for MultiExecutor&lt;TxnType, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for MultiResult&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RandomizedStrategy","synthetic":true,"types":[]},{"text":"impl !Sync for RandomExecutor","synthetic":true,"types":[]},{"text":"impl !Sync for FakeExecutor","synthetic":true,"types":[]},{"text":"impl Sync for KeyGen","synthetic":true,"types":[]}];
implementors["memsocket"] = [{"text":"impl Sync for MemoryListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for MemorySocket","synthetic":true,"types":[]}];
implementors["module_generation"] = [{"text":"impl&lt;'a&gt; Sync for ModuleGenerator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ModuleGeneratorOptions","synthetic":true,"types":[]},{"text":"impl Sync for Pad","synthetic":true,"types":[]}];
implementors["move_cli"] = [{"text":"impl Sync for OnDiskStateView","synthetic":true,"types":[]},{"text":"impl Sync for Mode","synthetic":true,"types":[]}];
implementors["move_core_types"] = [{"text":"impl Sync for AccountAddress","synthetic":true,"types":[]},{"text":"impl Sync for AccountAddressHasher","synthetic":true,"types":[]},{"text":"impl&lt;GasCarrier&gt; Sync for AbstractMemorySize&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;GasCarrier&gt; Sync for GasUnits&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;GasCarrier&gt; Sync for GasPrice&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for GasConstants","synthetic":true,"types":[]},{"text":"impl Sync for CostTable","synthetic":true,"types":[]},{"text":"impl Sync for GasCost","synthetic":true,"types":[]},{"text":"impl Sync for Identifier","synthetic":true,"types":[]},{"text":"impl Sync for IdentStr","synthetic":true,"types":[]},{"text":"impl Sync for StructTag","synthetic":true,"types":[]},{"text":"impl Sync for StructTagHasher","synthetic":true,"types":[]},{"text":"impl Sync for ResourceKey","synthetic":true,"types":[]},{"text":"impl Sync for ModuleId","synthetic":true,"types":[]},{"text":"impl Sync for ModuleIdHasher","synthetic":true,"types":[]},{"text":"impl Sync for TypeTag","synthetic":true,"types":[]},{"text":"impl Sync for TransactionArgument","synthetic":true,"types":[]},{"text":"impl Sync for MoveStruct","synthetic":true,"types":[]},{"text":"impl Sync for MoveStructLayout","synthetic":true,"types":[]},{"text":"impl Sync for MoveValue","synthetic":true,"types":[]},{"text":"impl Sync for MoveTypeLayout","synthetic":true,"types":[]},{"text":"impl Sync for MoveKind","synthetic":true,"types":[]},{"text":"impl Sync for MoveKindInfo","synthetic":true,"types":[]},{"text":"impl Sync for VMStatus","synthetic":true,"types":[]},{"text":"impl Sync for KeptVMStatus","synthetic":true,"types":[]},{"text":"impl Sync for AbortLocation","synthetic":true,"types":[]},{"text":"impl Sync for StatusType","synthetic":true,"types":[]},{"text":"impl Sync for StatusCode","synthetic":true,"types":[]}];
implementors["move_coverage"] = [{"text":"impl Sync for CoverageMap","synthetic":true,"types":[]},{"text":"impl Sync for ModuleCoverageMap","synthetic":true,"types":[]},{"text":"impl Sync for ExecCoverageMap","synthetic":true,"types":[]},{"text":"impl Sync for ExecCoverageMapWithModules","synthetic":true,"types":[]},{"text":"impl Sync for TraceEntry","synthetic":true,"types":[]},{"text":"impl Sync for TraceMap","synthetic":true,"types":[]},{"text":"impl Sync for FunctionSourceCoverage","synthetic":true,"types":[]},{"text":"impl Sync for SourceCoverageBuilder","synthetic":true,"types":[]},{"text":"impl Sync for SourceCoverage","synthetic":true,"types":[]},{"text":"impl Sync for AbstractSegment","synthetic":true,"types":[]},{"text":"impl Sync for StringSegment","synthetic":true,"types":[]},{"text":"impl Sync for ModuleSummary","synthetic":true,"types":[]},{"text":"impl Sync for FunctionSummary","synthetic":true,"types":[]},{"text":"impl Sync for FunctionInfo","synthetic":true,"types":[]}];
implementors["move_ir_types"] = [{"text":"impl Sync for Program","synthetic":true,"types":[]},{"text":"impl Sync for Script","synthetic":true,"types":[]},{"text":"impl Sync for ModuleName","synthetic":true,"types":[]},{"text":"impl Sync for QualifiedModuleIdent","synthetic":true,"types":[]},{"text":"impl Sync for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Sync for ModuleDependency","synthetic":true,"types":[]},{"text":"impl Sync for ImportDefinition","synthetic":true,"types":[]},{"text":"impl Sync for Var_","synthetic":true,"types":[]},{"text":"impl Sync for TypeVar_","synthetic":true,"types":[]},{"text":"impl Sync for QualifiedStructIdent","synthetic":true,"types":[]},{"text":"impl Sync for Field_","synthetic":true,"types":[]},{"text":"impl Sync for StructName","synthetic":true,"types":[]},{"text":"impl Sync for StructDefinition_","synthetic":true,"types":[]},{"text":"impl Sync for StructDependency","synthetic":true,"types":[]},{"text":"impl Sync for ConstantName","synthetic":true,"types":[]},{"text":"impl Sync for Constant","synthetic":true,"types":[]},{"text":"impl Sync for FunctionName","synthetic":true,"types":[]},{"text":"impl Sync for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Sync for FunctionDependency","synthetic":true,"types":[]},{"text":"impl Sync for Function_","synthetic":true,"types":[]},{"text":"impl Sync for IfElse","synthetic":true,"types":[]},{"text":"impl Sync for While","synthetic":true,"types":[]},{"text":"impl Sync for Loop","synthetic":true,"types":[]},{"text":"impl Sync for Block_","synthetic":true,"types":[]},{"text":"impl Sync for BlockLabel","synthetic":true,"types":[]},{"text":"impl Sync for NopLabel","synthetic":true,"types":[]},{"text":"impl Sync for ScriptOrModule","synthetic":true,"types":[]},{"text":"impl Sync for ModuleIdent","synthetic":true,"types":[]},{"text":"impl Sync for Kind","synthetic":true,"types":[]},{"text":"impl Sync for Type","synthetic":true,"types":[]},{"text":"impl Sync for StructDefinitionFields","synthetic":true,"types":[]},{"text":"impl Sync for FunctionVisibility","synthetic":true,"types":[]},{"text":"impl Sync for FunctionBody","synthetic":true,"types":[]},{"text":"impl Sync for Builtin","synthetic":true,"types":[]},{"text":"impl Sync for FunctionCall_","synthetic":true,"types":[]},{"text":"impl Sync for LValue_","synthetic":true,"types":[]},{"text":"impl Sync for Cmd_","synthetic":true,"types":[]},{"text":"impl Sync for Statement","synthetic":true,"types":[]},{"text":"impl Sync for CopyableVal_","synthetic":true,"types":[]},{"text":"impl Sync for UnaryOp","synthetic":true,"types":[]},{"text":"impl Sync for BinOp","synthetic":true,"types":[]},{"text":"impl Sync for Exp_","synthetic":true,"types":[]},{"text":"impl Sync for Bytecode_","synthetic":true,"types":[]},{"text":"impl Sync for Loc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Spanned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Invariant_","synthetic":true,"types":[]},{"text":"impl Sync for SyntheticDefinition_","synthetic":true,"types":[]},{"text":"impl Sync for FieldOrIndex","synthetic":true,"types":[]},{"text":"impl Sync for StorageLocation","synthetic":true,"types":[]},{"text":"impl Sync for SpecExp","synthetic":true,"types":[]},{"text":"impl Sync for Condition_","synthetic":true,"types":[]}];
implementors["move_lang"] = [{"text":"impl Sync for Pass","synthetic":true,"types":[]},{"text":"impl Sync for PassResult","synthetic":true,"types":[]},{"text":"impl Sync for Program","synthetic":true,"types":[]},{"text":"impl Sync for Script","synthetic":true,"types":[]},{"text":"impl Sync for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Sync for Constant","synthetic":true,"types":[]},{"text":"impl Sync for Function","synthetic":true,"types":[]},{"text":"impl Sync for FunctionBody_","synthetic":true,"types":[]},{"text":"impl Sync for VarInfo","synthetic":true,"types":[]},{"text":"impl Sync for SpecInfo","synthetic":true,"types":[]},{"text":"impl Sync for FunctionInfo","synthetic":true,"types":[]},{"text":"impl Sync for CompiledUnit","synthetic":true,"types":[]},{"text":"impl Sync for Program","synthetic":true,"types":[]},{"text":"impl Sync for Script","synthetic":true,"types":[]},{"text":"impl Sync for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Sync for StructDefinition","synthetic":true,"types":[]},{"text":"impl Sync for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Sync for SpecId","synthetic":true,"types":[]},{"text":"impl Sync for Function","synthetic":true,"types":[]},{"text":"impl Sync for Constant","synthetic":true,"types":[]},{"text":"impl Sync for SpecBlock_","synthetic":true,"types":[]},{"text":"impl Sync for PragmaProperty_","synthetic":true,"types":[]},{"text":"impl Sync for StructFields","synthetic":true,"types":[]},{"text":"impl Sync for FunctionBody_","synthetic":true,"types":[]},{"text":"impl Sync for SpecBlockMember_","synthetic":true,"types":[]},{"text":"impl Sync for PragmaValue","synthetic":true,"types":[]},{"text":"impl Sync for ModuleAccess_","synthetic":true,"types":[]},{"text":"impl Sync for Type_","synthetic":true,"types":[]},{"text":"impl Sync for LValue_","synthetic":true,"types":[]},{"text":"impl Sync for ExpDotted_","synthetic":true,"types":[]},{"text":"impl Sync for Value_","synthetic":true,"types":[]},{"text":"impl Sync for Exp_","synthetic":true,"types":[]},{"text":"impl Sync for SequenceItem_","synthetic":true,"types":[]},{"text":"impl Sync for Program","synthetic":true,"types":[]},{"text":"impl Sync for Script","synthetic":true,"types":[]},{"text":"impl Sync for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Sync for StructDefinition","synthetic":true,"types":[]},{"text":"impl Sync for Constant","synthetic":true,"types":[]},{"text":"impl Sync for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Sync for Function","synthetic":true,"types":[]},{"text":"impl Sync for Label","synthetic":true,"types":[]},{"text":"impl Sync for ModuleCall","synthetic":true,"types":[]},{"text":"impl Sync for Exp","synthetic":true,"types":[]},{"text":"impl Sync for StructFields","synthetic":true,"types":[]},{"text":"impl Sync for FunctionBody_","synthetic":true,"types":[]},{"text":"impl Sync for TypeName_","synthetic":true,"types":[]},{"text":"impl Sync for BaseType_","synthetic":true,"types":[]},{"text":"impl Sync for SingleType_","synthetic":true,"types":[]},{"text":"impl Sync for Type_","synthetic":true,"types":[]},{"text":"impl Sync for Statement_","synthetic":true,"types":[]},{"text":"impl Sync for Command_","synthetic":true,"types":[]},{"text":"impl Sync for LValue_","synthetic":true,"types":[]},{"text":"impl Sync for BuiltinFunction_","synthetic":true,"types":[]},{"text":"impl Sync for UnannotatedExp_","synthetic":true,"types":[]},{"text":"impl Sync for ExpListItem","synthetic":true,"types":[]},{"text":"impl Sync for Program","synthetic":true,"types":[]},{"text":"impl Sync for Script","synthetic":true,"types":[]},{"text":"impl Sync for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Sync for StructDefinition","synthetic":true,"types":[]},{"text":"impl Sync for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Sync for Function","synthetic":true,"types":[]},{"text":"impl Sync for Constant","synthetic":true,"types":[]},{"text":"impl Sync for TParamID","synthetic":true,"types":[]},{"text":"impl Sync for TParam","synthetic":true,"types":[]},{"text":"impl Sync for TVar","synthetic":true,"types":[]},{"text":"impl Sync for StructFields","synthetic":true,"types":[]},{"text":"impl Sync for FunctionBody_","synthetic":true,"types":[]},{"text":"impl Sync for BuiltinTypeName_","synthetic":true,"types":[]},{"text":"impl Sync for TypeName_","synthetic":true,"types":[]},{"text":"impl Sync for Type_","synthetic":true,"types":[]},{"text":"impl Sync for LValue_","synthetic":true,"types":[]},{"text":"impl Sync for ExpDotted_","synthetic":true,"types":[]},{"text":"impl Sync for BuiltinFunction_","synthetic":true,"types":[]},{"text":"impl Sync for Exp_","synthetic":true,"types":[]},{"text":"impl Sync for SequenceItem_","synthetic":true,"types":[]},{"text":"impl Sync for Program","synthetic":true,"types":[]},{"text":"impl Sync for Script","synthetic":true,"types":[]},{"text":"impl Sync for ModuleName","synthetic":true,"types":[]},{"text":"impl Sync for ModuleIdent_","synthetic":true,"types":[]},{"text":"impl Sync for ModuleIdent","synthetic":true,"types":[]},{"text":"impl Sync for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Sync for Field","synthetic":true,"types":[]},{"text":"impl Sync for StructName","synthetic":true,"types":[]},{"text":"impl Sync for StructDefinition","synthetic":true,"types":[]},{"text":"impl Sync for FunctionName","synthetic":true,"types":[]},{"text":"impl Sync for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Sync for Function","synthetic":true,"types":[]},{"text":"impl Sync for ConstantName","synthetic":true,"types":[]},{"text":"impl Sync for Constant","synthetic":true,"types":[]},{"text":"impl Sync for SpecBlock_","synthetic":true,"types":[]},{"text":"impl Sync for PragmaProperty_","synthetic":true,"types":[]},{"text":"impl Sync for SpecApplyPattern_","synthetic":true,"types":[]},{"text":"impl Sync for Var","synthetic":true,"types":[]},{"text":"impl Sync for Definition","synthetic":true,"types":[]},{"text":"impl Sync for Use","synthetic":true,"types":[]},{"text":"impl Sync for ModuleMember","synthetic":true,"types":[]},{"text":"impl Sync for StructFields","synthetic":true,"types":[]},{"text":"impl Sync for FunctionVisibility","synthetic":true,"types":[]},{"text":"impl Sync for FunctionBody_","synthetic":true,"types":[]},{"text":"impl Sync for SpecBlockTarget_","synthetic":true,"types":[]},{"text":"impl Sync for PragmaValue","synthetic":true,"types":[]},{"text":"impl Sync for SpecApplyFragment_","synthetic":true,"types":[]},{"text":"impl Sync for SpecBlockMember_","synthetic":true,"types":[]},{"text":"impl Sync for SpecConditionKind","synthetic":true,"types":[]},{"text":"impl Sync for InvariantKind","synthetic":true,"types":[]},{"text":"impl Sync for ModuleAccess_","synthetic":true,"types":[]},{"text":"impl Sync for Kind_","synthetic":true,"types":[]},{"text":"impl Sync for Type_","synthetic":true,"types":[]},{"text":"impl Sync for Bind_","synthetic":true,"types":[]},{"text":"impl Sync for Value_","synthetic":true,"types":[]},{"text":"impl Sync for UnaryOp_","synthetic":true,"types":[]},{"text":"impl Sync for BinOp_","synthetic":true,"types":[]},{"text":"impl Sync for QuantKind_","synthetic":true,"types":[]},{"text":"impl Sync for Exp_","synthetic":true,"types":[]},{"text":"impl Sync for SequenceItem_","synthetic":true,"types":[]},{"text":"impl Sync for Address","synthetic":true,"types":[]},{"text":"impl Sync for Counter","synthetic":true,"types":[]},{"text":"impl Sync for AstWriter","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for RememberingUniqueMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for UniqueMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Key: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as TName&gt;::Loc: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Program","synthetic":true,"types":[]},{"text":"impl Sync for Script","synthetic":true,"types":[]},{"text":"impl Sync for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Sync for Function","synthetic":true,"types":[]},{"text":"impl Sync for Constant","synthetic":true,"types":[]},{"text":"impl Sync for ModuleCall","synthetic":true,"types":[]},{"text":"impl Sync for Exp","synthetic":true,"types":[]},{"text":"impl Sync for FunctionBody_","synthetic":true,"types":[]},{"text":"impl Sync for LValue_","synthetic":true,"types":[]},{"text":"impl Sync for BuiltinFunction_","synthetic":true,"types":[]},{"text":"impl Sync for UnannotatedExp_","synthetic":true,"types":[]},{"text":"impl Sync for SequenceItem_","synthetic":true,"types":[]},{"text":"impl Sync for ExpListItem","synthetic":true,"types":[]}];
implementors["move_lang_test_utils"] = [{"text":"impl Sync for StringError","synthetic":true,"types":[]}];
implementors["move_model"] = [{"text":"impl Sync for SpecVarDecl","synthetic":true,"types":[]},{"text":"impl Sync for SpecFunDecl","synthetic":true,"types":[]},{"text":"impl Sync for Condition","synthetic":true,"types":[]},{"text":"impl Sync for Spec","synthetic":true,"types":[]},{"text":"impl Sync for SpecBlockInfo","synthetic":true,"types":[]},{"text":"impl Sync for GlobalInvariant","synthetic":true,"types":[]},{"text":"impl Sync for LocalVarDecl","synthetic":true,"types":[]},{"text":"impl Sync for ModuleName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ModuleNameDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for QualifiedSymbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for QualifiedSymbolDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExpDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for OperationDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ConditionKind","synthetic":true,"types":[]},{"text":"impl Sync for QuantKind","synthetic":true,"types":[]},{"text":"impl Sync for PropertyValue","synthetic":true,"types":[]},{"text":"impl Sync for SpecBlockTarget","synthetic":true,"types":[]},{"text":"impl Sync for Exp","synthetic":true,"types":[]},{"text":"impl Sync for Operation","synthetic":true,"types":[]},{"text":"impl Sync for Value","synthetic":true,"types":[]},{"text":"impl !Sync for CodeWriter","synthetic":true,"types":[]},{"text":"impl Sync for CodeWriterLabel","synthetic":true,"types":[]},{"text":"impl&lt;'env, 'rewriter&gt; !Sync for ExpRewriter&lt;'env, 'rewriter&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Loc","synthetic":true,"types":[]},{"text":"impl Sync for ModuleId","synthetic":true,"types":[]},{"text":"impl Sync for NamedConstantId","synthetic":true,"types":[]},{"text":"impl Sync for StructId","synthetic":true,"types":[]},{"text":"impl Sync for FieldId","synthetic":true,"types":[]},{"text":"impl Sync for FunId","synthetic":true,"types":[]},{"text":"impl Sync for SchemaId","synthetic":true,"types":[]},{"text":"impl Sync for SpecFunId","synthetic":true,"types":[]},{"text":"impl Sync for SpecVarId","synthetic":true,"types":[]},{"text":"impl Sync for NodeId","synthetic":true,"types":[]},{"text":"impl Sync for GlobalId","synthetic":true,"types":[]},{"text":"impl&lt;Id&gt; Sync for QualifiedId&lt;Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for GlobalEnv","synthetic":true,"types":[]},{"text":"impl Sync for ConditionInfo","synthetic":true,"types":[]},{"text":"impl Sync for ModuleData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for ModuleEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Sync for StructData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for StructEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Sync for FieldData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for FieldEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Sync for NamedConstantData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for NamedConstantEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Sync for TypeParameter","synthetic":true,"types":[]},{"text":"impl Sync for Parameter","synthetic":true,"types":[]},{"text":"impl Sync for FunctionData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for FunctionEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Sync for LocDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Sync for VerificationScope","synthetic":true,"types":[]},{"text":"impl Sync for ConditionTag","synthetic":true,"types":[]},{"text":"impl Sync for TypeConstraint","synthetic":true,"types":[]},{"text":"impl Sync for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SymbolDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SymbolPool","synthetic":true,"types":[]},{"text":"impl Sync for Substitution","synthetic":true,"types":[]},{"text":"impl Sync for TypeError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for TypeDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Type","synthetic":true,"types":[]},{"text":"impl Sync for PrimitiveType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for TypeDisplayContext&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["move_prover"] = [{"text":"impl Sync for Options","synthetic":true,"types":[]}];
implementors["move_vm_runtime"] = [{"text":"impl !Sync for AccountDataCache","synthetic":true,"types":[]},{"text":"impl !Sync for TransactionEffects","synthetic":true,"types":[]},{"text":"impl Sync for NoContextLog","synthetic":true,"types":[]},{"text":"impl Sync for MoveVM","synthetic":true,"types":[]},{"text":"impl&lt;'r, 'l, R&gt; !Sync for Session&lt;'r, 'l, R&gt;","synthetic":true,"types":[]}];
implementors["move_vm_test_utils"] = [{"text":"impl Sync for AccountChangeSet","synthetic":true,"types":[]},{"text":"impl Sync for ChangeSet","synthetic":true,"types":[]},{"text":"impl Sync for BlankStorage","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Sync for DeltaStorage&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for InMemoryStorage","synthetic":true,"types":[]}];
implementors["move_vm_types"] = [{"text":"impl&lt;'a&gt; Sync for CostStrategy&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for NativeCostIndex","synthetic":true,"types":[]},{"text":"impl Sync for StructType","synthetic":true,"types":[]},{"text":"impl Sync for Type","synthetic":true,"types":[]},{"text":"impl !Sync for NativeResult","synthetic":true,"types":[]},{"text":"impl !Sync for SignerRef","synthetic":true,"types":[]},{"text":"impl !Sync for VectorRef","synthetic":true,"types":[]},{"text":"impl !Sync for Vector","synthetic":true,"types":[]},{"text":"impl !Sync for StructRef","synthetic":true,"types":[]},{"text":"impl !Sync for Reference","synthetic":true,"types":[]},{"text":"impl !Sync for Value","synthetic":true,"types":[]},{"text":"impl !Sync for Locals","synthetic":true,"types":[]},{"text":"impl !Sync for Struct","synthetic":true,"types":[]},{"text":"impl !Sync for GlobalValue","synthetic":true,"types":[]},{"text":"impl Sync for IntegerValue","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for GlobalValueEffect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["netcore"] = [{"text":"impl Sync for ConnectionOrigin","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Sync for AndThen&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for AndThenStream&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Sync for AndThenFuture&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;O, E&gt; !Sync for BoxedTransport&lt;O, E&gt;","synthetic":true,"types":[]},{"text":"impl Sync for MemoryTransport","synthetic":true,"types":[]},{"text":"impl Sync for Listener","synthetic":true,"types":[]},{"text":"impl Sync for TcpTransport","synthetic":true,"types":[]},{"text":"impl Sync for TcpListenerStream","synthetic":true,"types":[]},{"text":"impl !Sync for TcpOutbound","synthetic":true,"types":[]},{"text":"impl Sync for TcpSocket","synthetic":true,"types":[]}];
implementors["network"] = [{"text":"impl&lt;TTicker, TBackoff&gt; Sync for ConnectivityManager&lt;TTicker, TBackoff&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBackoff: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;TTicker: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DiscoverySource","synthetic":true,"types":[]},{"text":"impl Sync for ConnectivityRequest","synthetic":true,"types":[]},{"text":"impl Sync for ConnectivityManagerBuilder","synthetic":true,"types":[]},{"text":"impl Sync for NetworkError","synthetic":true,"types":[]},{"text":"impl Sync for NetworkErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for NetworkSchema&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for NoiseHandshakeError","synthetic":true,"types":[]},{"text":"impl Sync for AntiReplayTimestamps","synthetic":true,"types":[]},{"text":"impl Sync for NoiseUpgrader","synthetic":true,"types":[]},{"text":"impl Sync for HandshakeAuthMode","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; Sync for NoiseStream&lt;TSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSocket: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; !Sync for Peer&lt;TSocket&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PeerRequest","synthetic":true,"types":[]},{"text":"impl Sync for PeerNotification","synthetic":true,"types":[]},{"text":"impl Sync for DisconnectReason","synthetic":true,"types":[]},{"text":"impl Sync for PeerManagerRequestSender","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionRequestSender","synthetic":true,"types":[]},{"text":"impl&lt;TTransport, TSocket&gt; Sync for PeerManager&lt;TTransport, TSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSocket: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;TTransport: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;TTransport as Transport&gt;::Listener: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for PeerManagerError","synthetic":true,"types":[]},{"text":"impl Sync for PeerManagerRequest","synthetic":true,"types":[]},{"text":"impl Sync for PeerManagerNotification","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionRequest","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionNotification","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; Sync for TransportNotification&lt;TSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSocket: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for PeerManagerBuilder","synthetic":true,"types":[]},{"text":"impl Sync for AuthenticationMode","synthetic":true,"types":[]},{"text":"impl Sync for Message","synthetic":true,"types":[]},{"text":"impl&lt;TMessage&gt; Sync for NetworkEvents&lt;TMessage&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TMessage: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TMessage&gt; Sync for NetworkSender&lt;TMessage&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TMessage: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TMessage&gt; Sync for Event&lt;TMessage&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TMessage: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for InboundRpcRequest","synthetic":true,"types":[]},{"text":"impl Sync for OutboundRpcRequest","synthetic":true,"types":[]},{"text":"impl !Sync for InboundRpcs","synthetic":true,"types":[]},{"text":"impl !Sync for OutboundRpcs","synthetic":true,"types":[]},{"text":"impl Sync for RpcError","synthetic":true,"types":[]},{"text":"impl Sync for HealthCheckerNetworkSender","synthetic":true,"types":[]},{"text":"impl Sync for Ping","synthetic":true,"types":[]},{"text":"impl Sync for Pong","synthetic":true,"types":[]},{"text":"impl&lt;TTicker&gt; Sync for HealthChecker&lt;TTicker&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TTicker: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for HealthCheckerMsg","synthetic":true,"types":[]},{"text":"impl Sync for HealthCheckerBuilder","synthetic":true,"types":[]},{"text":"impl Sync for SupportedProtocols","synthetic":true,"types":[]},{"text":"impl Sync for HandshakeMsg","synthetic":true,"types":[]},{"text":"impl Sync for ProtocolId","synthetic":true,"types":[]},{"text":"impl Sync for MessagingProtocolVersion","synthetic":true,"types":[]},{"text":"impl Sync for HandshakeError","synthetic":true,"types":[]},{"text":"impl Sync for ParsingErrorType","synthetic":true,"types":[]},{"text":"impl Sync for RpcRequest","synthetic":true,"types":[]},{"text":"impl Sync for RpcResponse","synthetic":true,"types":[]},{"text":"impl Sync for DirectSendMsg","synthetic":true,"types":[]},{"text":"impl&lt;TReadSocket&gt; Sync for NetworkMessageStream&lt;TReadSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TReadSocket: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TWriteSocket&gt; Sync for NetworkMessageSink&lt;TWriteSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TWriteSocket: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for NetworkMessage","synthetic":true,"types":[]},{"text":"impl Sync for ErrorCode","synthetic":true,"types":[]},{"text":"impl Sync for NotSupportedType","synthetic":true,"types":[]},{"text":"impl Sync for ReadError","synthetic":true,"types":[]},{"text":"impl Sync for WriteError","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionId","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionMetadata","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; Sync for Connection&lt;TSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSocket: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TTransport&gt; Sync for DiemNetTransport&lt;TTransport&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TTransport: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for TrustLevel","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ReadOnlyTestSocket&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ReadOnlyTestSocketVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ReadWriteTestSocket&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["network_builder"] = [{"text":"impl !Sync for NetworkBuilder","synthetic":true,"types":[]},{"text":"impl Sync for DummyMsg","synthetic":true,"types":[]},{"text":"impl Sync for DummyNetworkSender","synthetic":true,"types":[]},{"text":"impl Sync for DummyNetwork","synthetic":true,"types":[]}];
implementors["network_simple_onchain_discovery"] = [{"text":"impl Sync for ConfigurationChangeListener","synthetic":true,"types":[]},{"text":"impl Sync for ConfigurationChangeListenerBuilder","synthetic":true,"types":[]}];
implementors["proxy"] = [{"text":"impl Sync for Proxy","synthetic":true,"types":[]}];
implementors["resource_viewer"] = [{"text":"impl Sync for AnnotatedAccountStateBlob","synthetic":true,"types":[]},{"text":"impl Sync for AnnotatedMoveStruct","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MoveValueAnnotator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for NullStateView","synthetic":true,"types":[]},{"text":"impl Sync for AnnotatedMoveValue","synthetic":true,"types":[]}];
implementors["safety_rules"] = [{"text":"impl Sync for ConsensusState","synthetic":true,"types":[]},{"text":"impl Sync for PersistentSafetyStorage","synthetic":true,"types":[]},{"text":"impl Sync for Process","synthetic":true,"types":[]},{"text":"impl Sync for SafetyRules","synthetic":true,"types":[]},{"text":"impl Sync for SafetyRulesManager","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]}];
implementors["schemadb"] = [{"text":"impl Sync for SchemaBatch","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Sync for SchemaIterator&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DB","synthetic":true,"types":[]},{"text":"impl Sync for ScanDirection","synthetic":true,"types":[]}];
implementors["scratchpad"] = [{"text":"impl&lt;V&gt; Sync for SparseMerkleTree&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Sync for AccountStatus&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["short_hex_str"] = [{"text":"impl Sync for ShortHexStr","synthetic":true,"types":[]},{"text":"impl Sync for InputTooShortError","synthetic":true,"types":[]}];
implementors["socket_bench_server"] = [{"text":"impl Sync for Args","synthetic":true,"types":[]}];
implementors["state_sync"] = [{"text":"impl Sync for StateSyncBootstrapper","synthetic":true,"types":[]},{"text":"impl Sync for GetChunkRequest","synthetic":true,"types":[]},{"text":"impl Sync for TargetType","synthetic":true,"types":[]},{"text":"impl Sync for GetChunkResponse","synthetic":true,"types":[]},{"text":"impl Sync for ResponseLedgerInfo","synthetic":true,"types":[]},{"text":"impl Sync for SyncRequest","synthetic":true,"types":[]},{"text":"impl Sync for CommitNotification","synthetic":true,"types":[]},{"text":"impl Sync for StateSyncClient","synthetic":true,"types":[]},{"text":"impl Sync for CoordinatorMessage","synthetic":true,"types":[]},{"text":"impl Sync for SyncState","synthetic":true,"types":[]},{"text":"impl Sync for StateSyncSender","synthetic":true,"types":[]},{"text":"impl Sync for StateSyncMessage","synthetic":true,"types":[]}];
implementors["storage_client"] = [{"text":"impl Sync for StorageClient","synthetic":true,"types":[]}];
implementors["storage_interface"] = [{"text":"impl Sync for StartupInfo","synthetic":true,"types":[]},{"text":"impl Sync for TreeState","synthetic":true,"types":[]},{"text":"impl Sync for DbReaderWriter","synthetic":true,"types":[]},{"text":"impl Sync for GetAccountStateWithProofByVersionRequest","synthetic":true,"types":[]},{"text":"impl Sync for SaveTransactionsRequest","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Order","synthetic":true,"types":[]},{"text":"impl Sync for StorageRequest","synthetic":true,"types":[]},{"text":"impl Sync for MockDbReader","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VerifiedStateView&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["storage_service"] = [{"text":"impl Sync for StorageService","synthetic":true,"types":[]}];
implementors["subscription_service"] = [{"text":"impl&lt;T, U&gt; Sync for SubscriptionService&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SubscriptionBundle","synthetic":true,"types":[]}];
implementors["swiss_knife"] = [{"text":"impl Sync for Response","synthetic":true,"types":[]}];
implementors["test_generation"] = [{"text":"impl Sync for Status","synthetic":true,"types":[]},{"text":"impl Sync for AbstractValue","synthetic":true,"types":[]},{"text":"impl Sync for CallGraph","synthetic":true,"types":[]},{"text":"impl Sync for InstantiableModule","synthetic":true,"types":[]},{"text":"impl Sync for AbstractState","synthetic":true,"types":[]},{"text":"impl Sync for BorrowState","synthetic":true,"types":[]},{"text":"impl Sync for Mutability","synthetic":true,"types":[]},{"text":"impl Sync for BorrowGraph","synthetic":true,"types":[]},{"text":"impl Sync for EdgeType","synthetic":true,"types":[]},{"text":"impl Sync for FunctionGenerationContext","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BytecodeGenerator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Args","synthetic":true,"types":[]},{"text":"impl Sync for BasicBlock","synthetic":true,"types":[]},{"text":"impl Sync for CFG","synthetic":true,"types":[]},{"text":"impl Sync for VMError","synthetic":true,"types":[]},{"text":"impl !Sync for Summary","synthetic":true,"types":[]},{"text":"impl !Sync for Effects","synthetic":true,"types":[]},{"text":"impl Sync for Subst","synthetic":true,"types":[]},{"text":"impl Sync for StackBinOpResult","synthetic":true,"types":[]}];
implementors["transaction_builder_generated"] = [{"text":"impl Sync for ScriptCall","synthetic":true,"types":[]}];
implementors["transaction_builder_generator"] = [{"text":"impl Sync for Installer","synthetic":true,"types":[]},{"text":"impl Sync for Installer","synthetic":true,"types":[]},{"text":"impl Sync for Installer","synthetic":true,"types":[]},{"text":"impl Sync for Installer","synthetic":true,"types":[]},{"text":"impl Sync for Installer","synthetic":true,"types":[]}];
implementors["vm"] = [{"text":"impl Sync for IndexKind","synthetic":true,"types":[]},{"text":"impl Sync for SignatureTokenKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BoundsChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Compatibility","synthetic":true,"types":[]},{"text":"impl Sync for VMError","synthetic":true,"types":[]},{"text":"impl Sync for PartialVMError","synthetic":true,"types":[]},{"text":"impl Sync for Location","synthetic":true,"types":[]},{"text":"impl Sync for ModuleHandleIndex","synthetic":true,"types":[]},{"text":"impl Sync for StructHandleIndex","synthetic":true,"types":[]},{"text":"impl Sync for FunctionHandleIndex","synthetic":true,"types":[]},{"text":"impl Sync for FieldHandleIndex","synthetic":true,"types":[]},{"text":"impl Sync for StructDefInstantiationIndex","synthetic":true,"types":[]},{"text":"impl Sync for FunctionInstantiationIndex","synthetic":true,"types":[]},{"text":"impl Sync for FieldInstantiationIndex","synthetic":true,"types":[]},{"text":"impl Sync for IdentifierIndex","synthetic":true,"types":[]},{"text":"impl Sync for AddressIdentifierIndex","synthetic":true,"types":[]},{"text":"impl Sync for ConstantPoolIndex","synthetic":true,"types":[]},{"text":"impl Sync for SignatureIndex","synthetic":true,"types":[]},{"text":"impl Sync for StructDefinitionIndex","synthetic":true,"types":[]},{"text":"impl Sync for FunctionDefinitionIndex","synthetic":true,"types":[]},{"text":"impl Sync for ModuleHandle","synthetic":true,"types":[]},{"text":"impl Sync for StructHandle","synthetic":true,"types":[]},{"text":"impl Sync for FunctionHandle","synthetic":true,"types":[]},{"text":"impl Sync for FieldHandle","synthetic":true,"types":[]},{"text":"impl Sync for StructDefInstantiation","synthetic":true,"types":[]},{"text":"impl Sync for FunctionInstantiation","synthetic":true,"types":[]},{"text":"impl Sync for FieldInstantiation","synthetic":true,"types":[]},{"text":"impl Sync for StructDefinition","synthetic":true,"types":[]},{"text":"impl Sync for FieldDefinition","synthetic":true,"types":[]},{"text":"impl Sync for FunctionDefinition","synthetic":true,"types":[]},{"text":"impl Sync for TypeSignature","synthetic":true,"types":[]},{"text":"impl Sync for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Sync for Signature","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SignatureTokenPreorderTraversalIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SignatureTokenPreorderTraversalIterWithDepth&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Constant","synthetic":true,"types":[]},{"text":"impl Sync for CodeUnit","synthetic":true,"types":[]},{"text":"impl Sync for CompiledScript","synthetic":true,"types":[]},{"text":"impl Sync for CompiledScriptMut","synthetic":true,"types":[]},{"text":"impl Sync for ScriptConversionInfo","synthetic":true,"types":[]},{"text":"impl Sync for CompiledModule","synthetic":true,"types":[]},{"text":"impl Sync for CompiledModuleMut","synthetic":true,"types":[]},{"text":"impl Sync for StructFieldInformation","synthetic":true,"types":[]},{"text":"impl Sync for Kind","synthetic":true,"types":[]},{"text":"impl Sync for SignatureToken","synthetic":true,"types":[]},{"text":"impl Sync for Bytecode","synthetic":true,"types":[]},{"text":"impl Sync for BinaryConstants","synthetic":true,"types":[]},{"text":"impl Sync for TableType","synthetic":true,"types":[]},{"text":"impl Sync for SerializedType","synthetic":true,"types":[]},{"text":"impl Sync for SerializedNominalResourceFlag","synthetic":true,"types":[]},{"text":"impl Sync for SerializedKind","synthetic":true,"types":[]},{"text":"impl Sync for SerializedNativeStructFlag","synthetic":true,"types":[]},{"text":"impl Sync for Opcodes","synthetic":true,"types":[]},{"text":"impl Sync for Field","synthetic":true,"types":[]},{"text":"impl Sync for Struct","synthetic":true,"types":[]},{"text":"impl Sync for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Sync for Module","synthetic":true,"types":[]},{"text":"impl Sync for Type","synthetic":true,"types":[]},{"text":"impl Sync for CompiledModuleStrategyGen","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for ModuleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for ModuleHandleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for StructHandleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for FunctionHandleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for StructDefinitionView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for FieldDefinitionView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for LocalsSignatureView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for FunctionDefinitionView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for StructInstantiationView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for FieldHandleView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for FunctionInstantiationView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for FieldInstantiationView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for TypeSignatureView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for SignatureView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for SignatureTokenView&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["vm_genesis"] = [{"text":"impl Sync for Validator","synthetic":true,"types":[]}];
implementors["vm_validator"] = [{"text":"impl Sync for MockVMValidator","synthetic":true,"types":[]},{"text":"impl Sync for VMValidator","synthetic":true,"types":[]}];
implementors["x_core"] = [{"text":"impl&lt;T&gt; Sync for DebugIgnore&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g&gt; Sync for WorkspaceSubsets&lt;'g&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'g&gt; Sync for WorkspaceSubset&lt;'g&gt;","synthetic":true,"types":[]},{"text":"impl Sync for XCoreContext","synthetic":true,"types":[]},{"text":"impl Sync for SystemError","synthetic":true,"types":[]},{"text":"impl Sync for WorkspaceStatus","synthetic":true,"types":[]},{"text":"impl Sync for XCoreConfig","synthetic":true,"types":[]},{"text":"impl Sync for SubsetConfig","synthetic":true,"types":[]}];
implementors["x_lint"] = [{"text":"impl&lt;'l, 'a&gt; Sync for LintFormatter&lt;'l, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for LintMessage","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Sync for LintSource&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Sync for RunStatus&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Sync for SkipReason&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl Sync for LintLevel","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Sync for LintKind&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Sync for ContentContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Sync for FilePathContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Sync for PackageContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Sync for ProjectContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; Sync for LintEngineConfig&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; Sync for LintEngine&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Sync for LintResults&lt;'l&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()