(function() {var implementors = {};
implementors["abigen"] = [{"text":"impl Freeze for AbigenOptions","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for Abigen&lt;'env&gt;","synthetic":true,"types":[]}];
implementors["accumulator"] = [{"text":"impl&lt;R, H&gt; Freeze for MerkleAccumulator&lt;R, H&gt;","synthetic":true,"types":[]}];
implementors["backup_cli"] = [{"text":"impl Freeze for EpochEndingBackupOpt","synthetic":true,"types":[]},{"text":"impl Freeze for EpochEndingBackupController","synthetic":true,"types":[]},{"text":"impl Freeze for EpochEndingChunk","synthetic":true,"types":[]},{"text":"impl Freeze for EpochEndingBackup","synthetic":true,"types":[]},{"text":"impl Freeze for EpochEndingRestoreOpt","synthetic":true,"types":[]},{"text":"impl Freeze for EpochEndingRestoreController","synthetic":true,"types":[]},{"text":"impl Freeze for PreheatedEpochEndingRestore","synthetic":true,"types":[]},{"text":"impl Freeze for EpochHistory","synthetic":true,"types":[]},{"text":"impl Freeze for EpochHistoryRestoreController","synthetic":true,"types":[]},{"text":"impl Freeze for StateSnapshotBackupOpt","synthetic":true,"types":[]},{"text":"impl Freeze for StateSnapshotBackupController","synthetic":true,"types":[]},{"text":"impl Freeze for StateSnapshotChunk","synthetic":true,"types":[]},{"text":"impl Freeze for StateSnapshotBackup","synthetic":true,"types":[]},{"text":"impl Freeze for StateSnapshotRestoreOpt","synthetic":true,"types":[]},{"text":"impl Freeze for StateSnapshotRestoreController","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionBackupOpt","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionBackupController","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionChunk","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionBackup","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionRestoreOpt","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionRestoreController","synthetic":true,"types":[]},{"text":"impl Freeze for PreheatedTransactionRestore","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionRestoreBatchController","synthetic":true,"types":[]},{"text":"impl Freeze for BackupCoordinatorOpt","synthetic":true,"types":[]},{"text":"impl Freeze for BackupCoordinator","synthetic":true,"types":[]},{"text":"impl Freeze for RestoreCoordinatorOpt","synthetic":true,"types":[]},{"text":"impl Freeze for RestoreCoordinator","synthetic":true,"types":[]},{"text":"impl Freeze for VerifyCoordinator","synthetic":true,"types":[]},{"text":"impl Freeze for EpochEndingBackupMeta","synthetic":true,"types":[]},{"text":"impl Freeze for StateSnapshotBackupMeta","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionBackupMeta","synthetic":true,"types":[]},{"text":"impl Freeze for MetadataCacheOpt","synthetic":true,"types":[]},{"text":"impl Freeze for MetadataView","synthetic":true,"types":[]},{"text":"impl Freeze for BackupStorageState","synthetic":true,"types":[]},{"text":"impl Freeze for ShellSafeName","synthetic":true,"types":[]},{"text":"impl Freeze for TextLine","synthetic":true,"types":[]},{"text":"impl Freeze for StorageOpt","synthetic":true,"types":[]},{"text":"impl Freeze for CommandAdapterOpt","synthetic":true,"types":[]},{"text":"impl Freeze for CommandAdapter","synthetic":true,"types":[]},{"text":"impl Freeze for LocalFsOpt","synthetic":true,"types":[]},{"text":"impl Freeze for LocalFs","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalBackupOpt","synthetic":true,"types":[]},{"text":"impl Freeze for RocksdbOpt","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalRestoreOpt","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalRestoreOptions","synthetic":true,"types":[]},{"text":"impl Freeze for TrustedWaypointOpt","synthetic":true,"types":[]},{"text":"impl Freeze for RestoreRunMode","synthetic":true,"types":[]},{"text":"impl Freeze for BackupServiceClientOpt","synthetic":true,"types":[]},{"text":"impl Freeze for BackupServiceClient","synthetic":true,"types":[]}];
implementors["boogie_backend"] = [{"text":"impl&lt;'env&gt; Freeze for BoogieTranslator&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Freeze for ModuleTranslator&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BoogieOptions","synthetic":true,"types":[]}];
implementors["borrow_graph"] = [{"text":"impl&lt;Loc, Lbl&gt; Freeze for BorrowGraph&lt;Loc, Lbl&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RefID","synthetic":true,"types":[]}];
implementors["bounded_executor"] = [{"text":"impl Freeze for BoundedExecutor","synthetic":true,"types":[]}];
implementors["bytecode"] = [{"text":"impl Freeze for Annotations","synthetic":true,"types":[]},{"text":"impl Freeze for BorrowInfo","synthetic":true,"types":[]},{"text":"impl Freeze for BorrowInfoAtCodeOffset","synthetic":true,"types":[]},{"text":"impl Freeze for BorrowAnnotation","synthetic":true,"types":[]},{"text":"impl Freeze for BorrowAnalysisProcessor","synthetic":true,"types":[]},{"text":"impl Freeze for CleanAndOptimizeProcessor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SummaryCache&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Elem&gt; Freeze for SetDomain&lt;Elem&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for MapDomain&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;State&gt; Freeze for BlockState&lt;State&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;State: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for JoinResult","synthetic":true,"types":[]},{"text":"impl Freeze for DebugInstrumenter","synthetic":true,"types":[]},{"text":"impl Freeze for EliminateImmRefsProcessor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for EliminateImmRefs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EliminateMutRefsProcessor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for EliminateMutRefs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for FunctionDataBuilder&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Freeze for FunctionTarget&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionData","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FunctionDataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionTargetsHolder","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionTargetPipeline","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionVariant","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Reducible&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Graph&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for LiveVarInfoAtCodeOffset","synthetic":true,"types":[]},{"text":"impl Freeze for LiveVarAnnotation","synthetic":true,"types":[]},{"text":"impl Freeze for LiveVarAnalysisProcessor","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryInstrumentationProcessor","synthetic":true,"types":[]},{"text":"impl Freeze for ProverOptions","synthetic":true,"types":[]},{"text":"impl Freeze for PackedTypesProcessor","synthetic":true,"types":[]},{"text":"impl Freeze for ReachingDefAnnotation","synthetic":true,"types":[]},{"text":"impl Freeze for ReachingDefProcessor","synthetic":true,"types":[]},{"text":"impl Freeze for Def","synthetic":true,"types":[]},{"text":"impl Freeze for SpecInstrumenter","synthetic":true,"types":[]},{"text":"impl Freeze for Label","synthetic":true,"types":[]},{"text":"impl Freeze for AttrId","synthetic":true,"types":[]},{"text":"impl Freeze for SpecBlockId","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for BytecodeDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for OperationDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for BorrowNodeDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AssignKind","synthetic":true,"types":[]},{"text":"impl Freeze for Constant","synthetic":true,"types":[]},{"text":"impl Freeze for Operation","synthetic":true,"types":[]},{"text":"impl Freeze for BorrowNode","synthetic":true,"types":[]},{"text":"impl Freeze for PropKind","synthetic":true,"types":[]},{"text":"impl Freeze for Bytecode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StacklessBytecodeGenerator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for StacklessControlFlowGraph","synthetic":true,"types":[]},{"text":"impl Freeze for UsageProcessor","synthetic":true,"types":[]}];
implementors["bytecode_source_map"] = [{"text":"impl&lt;Location&gt; Freeze for SourceMapping&lt;Location&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionMarking","synthetic":true,"types":[]},{"text":"impl Freeze for StructMarking","synthetic":true,"types":[]},{"text":"impl Freeze for MarkedSourceMapping","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; Freeze for StructSourceMap&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; Freeze for FunctionSourceMap&lt;Location&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Location: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; Freeze for SourceMap&lt;Location&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedLoc","synthetic":true,"types":[]}];
implementors["bytecode_verifier"] = [{"text":"impl&lt;'a&gt; Freeze for DuplicationChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CodeUnitVerifier&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for VMControlFlowGraph","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DependencyChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CyclicModuleDependencyChecker","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for InstantiationLoopChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for InstructionConsistency&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ResourceTransitiveChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SignatureChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RecursiveStructDefChecker&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["channel"] = [{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, M&gt; Freeze for Sender&lt;K, M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, M&gt; Freeze for Receiver&lt;K, M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Freeze for ElementStatus&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for QueueStyle","synthetic":true,"types":[]}];
implementors["cli"] = [{"text":"impl Freeze for AccountData","synthetic":true,"types":[]},{"text":"impl Freeze for AccountStatus","synthetic":true,"types":[]},{"text":"impl Freeze for AddressAndIndex","synthetic":true,"types":[]},{"text":"impl Freeze for IndexAndSequence","synthetic":true,"types":[]},{"text":"impl !Freeze for ClientProxy","synthetic":true,"types":[]},{"text":"impl Freeze for AccountEntry","synthetic":true,"types":[]}];
implementors["cluster_test"] = [{"text":"impl Freeze for AtomicHistogramAccumulator","synthetic":true,"types":[]},{"text":"impl Freeze for AtomicHistogramSnapshot","synthetic":true,"types":[]},{"text":"impl Freeze for Cluster","synthetic":true,"types":[]},{"text":"impl Freeze for ClusterBuilderParams","synthetic":true,"types":[]},{"text":"impl !Freeze for ClusterBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for ClusterSwarmKube","synthetic":true,"types":[]},{"text":"impl Freeze for KubeNode","synthetic":true,"types":[]},{"text":"impl !Freeze for NetworkDelay","synthetic":true,"types":[]},{"text":"impl !Freeze for PacketLoss","synthetic":true,"types":[]},{"text":"impl !Freeze for StopValidator","synthetic":true,"types":[]},{"text":"impl !Freeze for CompatibilityTest","synthetic":true,"types":[]},{"text":"impl Freeze for CompatiblityTestParams","synthetic":true,"types":[]},{"text":"impl Freeze for LoadTestParams","synthetic":true,"types":[]},{"text":"impl Freeze for PacketLossRandomValidators","synthetic":true,"types":[]},{"text":"impl Freeze for PacketLossRandomValidatorsParams","synthetic":true,"types":[]},{"text":"impl Freeze for PerformanceBenchmark","synthetic":true,"types":[]},{"text":"impl Freeze for PerformanceBenchmarkParams","synthetic":true,"types":[]},{"text":"impl Freeze for PerformanceBenchmarkThreeRegionSimulation","synthetic":true,"types":[]},{"text":"impl Freeze for PerformanceBenchmarkThreeRegionSimulationParams","synthetic":true,"types":[]},{"text":"impl Freeze for RebootCluster","synthetic":true,"types":[]},{"text":"impl Freeze for RebootClusterParams","synthetic":true,"types":[]},{"text":"impl Freeze for RebootRandomValidators","synthetic":true,"types":[]},{"text":"impl Freeze for RebootRandomValidatorsParams","synthetic":true,"types":[]},{"text":"impl Freeze for Reconfiguration","synthetic":true,"types":[]},{"text":"impl Freeze for ReconfigurationParams","synthetic":true,"types":[]},{"text":"impl !Freeze for RecoveryTime","synthetic":true,"types":[]},{"text":"impl Freeze for RecoveryTimeParams","synthetic":true,"types":[]},{"text":"impl Freeze for TwinValidators","synthetic":true,"types":[]},{"text":"impl Freeze for TwinValidatorsParams","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorVersioning","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorVersioningParams","synthetic":true,"types":[]},{"text":"impl !Freeze for CpuFlamegraph","synthetic":true,"types":[]},{"text":"impl Freeze for CpuFlamegraphParams","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Context&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for GenesisHelper","synthetic":true,"types":[]},{"text":"impl Freeze for CommitInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GitCommitInfo","synthetic":true,"types":[]},{"text":"impl Freeze for Author","synthetic":true,"types":[]},{"text":"impl Freeze for GitHub","synthetic":true,"types":[]},{"text":"impl Freeze for CommitHistoryHealthCheck","synthetic":true,"types":[]},{"text":"impl !Freeze for DebugPortLogWorker","synthetic":true,"types":[]},{"text":"impl Freeze for FullNodeHealthCheck","synthetic":true,"types":[]},{"text":"impl Freeze for LivenessHealthCheck","synthetic":true,"types":[]},{"text":"impl !Freeze for LogTail","synthetic":true,"types":[]},{"text":"impl !Freeze for TraceTail","synthetic":true,"types":[]},{"text":"impl Freeze for Commit","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorEvent","synthetic":true,"types":[]},{"text":"impl Freeze for HealthCheckRunner","synthetic":true,"types":[]},{"text":"impl Freeze for HealthCheckContext","synthetic":true,"types":[]},{"text":"impl Freeze for HealthCheckError","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for PrintFailures","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorGroup","synthetic":true,"types":[]},{"text":"impl Freeze for InstanceConfig","synthetic":true,"types":[]},{"text":"impl Freeze for VaultConfig","synthetic":true,"types":[]},{"text":"impl Freeze for LSRConfig","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorConfig","synthetic":true,"types":[]},{"text":"impl Freeze for FullnodeConfig","synthetic":true,"types":[]},{"text":"impl !Freeze for Instance","synthetic":true,"types":[]},{"text":"impl Freeze for ApplicationConfig","synthetic":true,"types":[]},{"text":"impl Freeze for Prometheus","synthetic":true,"types":[]},{"text":"impl Freeze for MatrixResponse","synthetic":true,"types":[]},{"text":"impl Freeze for TimeSeries","synthetic":true,"types":[]},{"text":"impl Freeze for SuiteReport","synthetic":true,"types":[]},{"text":"impl Freeze for ReportedMetric","synthetic":true,"types":[]},{"text":"impl Freeze for SlackClient","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PrometheusRangeView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ExperimentSuite","synthetic":true,"types":[]},{"text":"impl Freeze for TxEmitter","synthetic":true,"types":[]},{"text":"impl Freeze for EmitJob","synthetic":true,"types":[]},{"text":"impl Freeze for TxStats","synthetic":true,"types":[]},{"text":"impl Freeze for TxStatsRate","synthetic":true,"types":[]},{"text":"impl Freeze for EmitThreadParams","synthetic":true,"types":[]},{"text":"impl Freeze for EmitJobRequest","synthetic":true,"types":[]},{"text":"impl Freeze for AccountData","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidTxType","synthetic":true,"types":[]}];
implementors["compiled_stdlib"] = [{"text":"impl Freeze for StdLibOptions","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledBytes","synthetic":true,"types":[]},{"text":"impl Freeze for StdlibScript","synthetic":true,"types":[]}];
implementors["compiler"] = [{"text":"impl Freeze for Compiler","synthetic":true,"types":[]}];
implementors["consensus"] = [{"text":"impl Freeze for ConsensusNetworkSender","synthetic":true,"types":[]},{"text":"impl Freeze for ConsensusMsg","synthetic":true,"types":[]}];
implementors["consensus_types"] = [{"text":"impl Freeze for Block","synthetic":true,"types":[]},{"text":"impl Freeze for BlockData","synthetic":true,"types":[]},{"text":"impl Freeze for BlockDataHasher","synthetic":true,"types":[]},{"text":"impl Freeze for BlockType","synthetic":true,"types":[]},{"text":"impl Freeze for BlockRetrievalRequest","synthetic":true,"types":[]},{"text":"impl Freeze for BlockRetrievalResponse","synthetic":true,"types":[]},{"text":"impl Freeze for BlockRetrievalStatus","synthetic":true,"types":[]},{"text":"impl Freeze for EpochRetrievalRequest","synthetic":true,"types":[]},{"text":"impl Freeze for ExecutedBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ProposalMsg","synthetic":true,"types":[]},{"text":"impl Freeze for QuorumCert","synthetic":true,"types":[]},{"text":"impl Freeze for SafetyData","synthetic":true,"types":[]},{"text":"impl Freeze for SyncInfo","synthetic":true,"types":[]},{"text":"impl Freeze for Timeout","synthetic":true,"types":[]},{"text":"impl Freeze for TimeoutHasher","synthetic":true,"types":[]},{"text":"impl Freeze for TimeoutCertificate","synthetic":true,"types":[]},{"text":"impl Freeze for Vote","synthetic":true,"types":[]},{"text":"impl Freeze for VoteData","synthetic":true,"types":[]},{"text":"impl Freeze for VoteDataHasher","synthetic":true,"types":[]},{"text":"impl Freeze for VoteMsg","synthetic":true,"types":[]},{"text":"impl Freeze for VoteProposal","synthetic":true,"types":[]},{"text":"impl Freeze for VoteProposalHasher","synthetic":true,"types":[]},{"text":"impl Freeze for MaybeSignedVoteProposal","synthetic":true,"types":[]}];
implementors["crash_handler"] = [{"text":"impl Freeze for CrashInfo","synthetic":true,"types":[]}];
implementors["datatest_stable"] = [{"text":"impl Freeze for Requirements","synthetic":true,"types":[]}];
implementors["debug_interface"] = [{"text":"impl Freeze for NodeDebugClient","synthetic":true,"types":[]},{"text":"impl Freeze for AsyncNodeDebugClient","synthetic":true,"types":[]},{"text":"impl !Freeze for NodeDebugService","synthetic":true,"types":[]}];
implementors["diem_bitvec"] = [{"text":"impl Freeze for BitVec","synthetic":true,"types":[]}];
implementors["diem_config"] = [{"text":"impl Freeze for ConsensusConfig","synthetic":true,"types":[]},{"text":"impl Freeze for LeaderReputationConfig","synthetic":true,"types":[]},{"text":"impl Freeze for DebugInterfaceConfig","synthetic":true,"types":[]},{"text":"impl Freeze for DiemTraceConfig","synthetic":true,"types":[]},{"text":"impl Freeze for ExecutionConfig","synthetic":true,"types":[]},{"text":"impl Freeze for RemoteExecutionService","synthetic":true,"types":[]},{"text":"impl Freeze for KeyManagerConfig","synthetic":true,"types":[]},{"text":"impl Freeze for LoggerConfig","synthetic":true,"types":[]},{"text":"impl Freeze for MetricsConfig","synthetic":true,"types":[]},{"text":"impl Freeze for MempoolConfig","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkConfig","synthetic":true,"types":[]},{"text":"impl Freeze for IdentityFromConfig","synthetic":true,"types":[]},{"text":"impl Freeze for IdentityFromStorage","synthetic":true,"types":[]},{"text":"impl Freeze for RateLimitConfig","synthetic":true,"types":[]},{"text":"impl Freeze for JsonRpcConfig","synthetic":true,"types":[]},{"text":"impl Freeze for GitHubConfig","synthetic":true,"types":[]},{"text":"impl Freeze for VaultConfig","synthetic":true,"types":[]},{"text":"impl Freeze for OnDiskStorageConfig","synthetic":true,"types":[]},{"text":"impl Freeze for TokenFromConfig","synthetic":true,"types":[]},{"text":"impl Freeze for TokenFromDisk","synthetic":true,"types":[]},{"text":"impl Freeze for StateSyncConfig","synthetic":true,"types":[]},{"text":"impl Freeze for RocksdbConfig","synthetic":true,"types":[]},{"text":"impl Freeze for StorageConfig","synthetic":true,"types":[]},{"text":"impl Freeze for SafetyRulesConfig","synthetic":true,"types":[]},{"text":"impl Freeze for RemoteService","synthetic":true,"types":[]},{"text":"impl Freeze for SafetyRulesTestConfig","synthetic":true,"types":[]},{"text":"impl Freeze for UpstreamConfig","synthetic":true,"types":[]},{"text":"impl Freeze for PeerNetworkId","synthetic":true,"types":[]},{"text":"impl Freeze for TestConfig","synthetic":true,"types":[]},{"text":"impl Freeze for NodeConfig","synthetic":true,"types":[]},{"text":"impl Freeze for BaseConfig","synthetic":true,"types":[]},{"text":"impl Freeze for ParseRoleError","synthetic":true,"types":[]},{"text":"impl Freeze for RootPath","synthetic":true,"types":[]},{"text":"impl Freeze for ConsensusProposerType","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for ExecutionCorrectnessService","synthetic":true,"types":[]},{"text":"impl Freeze for DiscoveryMethod","synthetic":true,"types":[]},{"text":"impl Freeze for Identity","synthetic":true,"types":[]},{"text":"impl Freeze for SecureBackend","synthetic":true,"types":[]},{"text":"impl Freeze for Token","synthetic":true,"types":[]},{"text":"impl Freeze for SafetyRulesService","synthetic":true,"types":[]},{"text":"impl Freeze for WaypointConfig","synthetic":true,"types":[]},{"text":"impl Freeze for RoleType","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorSwarm","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ConfigKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkContext","synthetic":true,"types":[]},{"text":"impl Freeze for NodeNetworkId","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkId","synthetic":true,"types":[]}];
implementors["diem_crypto"] = [{"text":"impl Freeze for Sha3_256","synthetic":true,"types":[]},{"text":"impl Freeze for Ed25519PrivateKey","synthetic":true,"types":[]},{"text":"impl Freeze for Ed25519PublicKey","synthetic":true,"types":[]},{"text":"impl Freeze for Ed25519Signature","synthetic":true,"types":[]},{"text":"impl Freeze for HashValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for HashValueBitIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionAccumulatorHasher","synthetic":true,"types":[]},{"text":"impl Freeze for EventAccumulatorHasher","synthetic":true,"types":[]},{"text":"impl Freeze for SparseMerkleInternalHasher","synthetic":true,"types":[]},{"text":"impl Freeze for VoteProposalHasher","synthetic":true,"types":[]},{"text":"impl Freeze for TestOnlyHasher","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Freeze for Hkdf&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for HkdfError","synthetic":true,"types":[]},{"text":"impl Freeze for MultiEd25519PrivateKey","synthetic":true,"types":[]},{"text":"impl Freeze for MultiEd25519PublicKey","synthetic":true,"types":[]},{"text":"impl Freeze for MultiEd25519Signature","synthetic":true,"types":[]},{"text":"impl Freeze for NoiseConfig","synthetic":true,"types":[]},{"text":"impl Freeze for InitiatorHandshakeState","synthetic":true,"types":[]},{"text":"impl Freeze for ResponderHandshakeState","synthetic":true,"types":[]},{"text":"impl Freeze for NoiseSession","synthetic":true,"types":[]},{"text":"impl Freeze for NoiseError","synthetic":true,"types":[]},{"text":"impl&lt;S, P&gt; Freeze for KeyPair&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for TestDiemCrypto","synthetic":true,"types":[]},{"text":"impl Freeze for TestDiemCryptoHasher","synthetic":true,"types":[]},{"text":"impl Freeze for CryptoMaterialError","synthetic":true,"types":[]},{"text":"impl Freeze for PrivateKey","synthetic":true,"types":[]},{"text":"impl Freeze for PublicKey","synthetic":true,"types":[]}];
implementors["diem_events_fetcher"] = [{"text":"impl Freeze for DiemEventsFetcher","synthetic":true,"types":[]}];
implementors["diem_faucet"] = [{"text":"impl Freeze for MintParams","synthetic":true,"types":[]},{"text":"impl Freeze for Service","synthetic":true,"types":[]},{"text":"impl Freeze for Response","synthetic":true,"types":[]}];
implementors["diem_fuzzer"] = [{"text":"impl Freeze for FuzzTarget","synthetic":true,"types":[]}];
implementors["diem_genesis_tool"] = [{"text":"impl Freeze for Command","synthetic":true,"types":[]},{"text":"impl Freeze for CommandName","synthetic":true,"types":[]},{"text":"impl Freeze for Layout","synthetic":true,"types":[]},{"text":"impl Freeze for SetLayout","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ValidatorBuilder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for FullnodeBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for FullnodeType","synthetic":true,"types":[]},{"text":"impl Freeze for SwarmConfig","synthetic":true,"types":[]}];
implementors["diem_github_client"] = [{"text":"impl Freeze for Client","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["diem_infallible"] = [{"text":"impl&lt;T&gt; !Freeze for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for RwLock&lt;T&gt;","synthetic":true,"types":[]}];
implementors["diem_jellyfish_merkle"] = [{"text":"impl Freeze for MissingRootError","synthetic":true,"types":[]},{"text":"impl Freeze for NodeStats","synthetic":true,"types":[]},{"text":"impl Freeze for StaleNodeIndex","synthetic":true,"types":[]},{"text":"impl Freeze for TreeUpdateBatch","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Freeze for JellyfishMerkleTree&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for JellyfishMerkleIterator&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for NodeKey","synthetic":true,"types":[]},{"text":"impl Freeze for Child","synthetic":true,"types":[]},{"text":"impl Freeze for InternalNode","synthetic":true,"types":[]},{"text":"impl Freeze for LeafNode","synthetic":true,"types":[]},{"text":"impl Freeze for Node","synthetic":true,"types":[]},{"text":"impl Freeze for NodeDecodeError","synthetic":true,"types":[]},{"text":"impl Freeze for JellyfishMerkleRestore","synthetic":true,"types":[]}];
implementors["diem_json_rpc_client"] = [{"text":"impl Freeze for JsonRpcClient","synthetic":true,"types":[]},{"text":"impl Freeze for JsonRpcAsyncClient","synthetic":true,"types":[]},{"text":"impl Freeze for JsonRpcBatch","synthetic":true,"types":[]},{"text":"impl Freeze for JsonRpcAsyncClientError","synthetic":true,"types":[]},{"text":"impl Freeze for JsonRpcResponse","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Client&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for BroadcastHttpClient","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Response&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for SimpleHttpClient","synthetic":true,"types":[]},{"text":"impl Freeze for Retry","synthetic":true,"types":[]},{"text":"impl Freeze for State","synthetic":true,"types":[]},{"text":"impl !Freeze for StateManager","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for UnexpectedError","synthetic":true,"types":[]},{"text":"impl Freeze for WaitForTransactionError","synthetic":true,"types":[]}];
implementors["diem_json_rpc_types"] = [{"text":"impl Freeze for JsonRpcError","synthetic":true,"types":[]},{"text":"impl Freeze for ServerCode","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidRequestCode","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorData","synthetic":true,"types":[]},{"text":"impl Freeze for JsonRpcResponse","synthetic":true,"types":[]},{"text":"impl Freeze for AmountView","synthetic":true,"types":[]},{"text":"impl Freeze for AccountView","synthetic":true,"types":[]},{"text":"impl Freeze for EventView","synthetic":true,"types":[]},{"text":"impl Freeze for EventWithProofView","synthetic":true,"types":[]},{"text":"impl Freeze for MetadataView","synthetic":true,"types":[]},{"text":"impl Freeze for BytesView","synthetic":true,"types":[]},{"text":"impl Freeze for MoveAbortExplanationView","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionView","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionsWithProofsView","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionsProofsView","synthetic":true,"types":[]},{"text":"impl Freeze for ScriptView","synthetic":true,"types":[]},{"text":"impl Freeze for CurrencyInfoView","synthetic":true,"types":[]},{"text":"impl Freeze for StateProofView","synthetic":true,"types":[]},{"text":"impl Freeze for AccountStateWithProofView","synthetic":true,"types":[]},{"text":"impl Freeze for AccountStateProofView","synthetic":true,"types":[]},{"text":"impl Freeze for AccountRoleView","synthetic":true,"types":[]},{"text":"impl Freeze for EventDataView","synthetic":true,"types":[]},{"text":"impl Freeze for VMStatusView","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionDataView","synthetic":true,"types":[]},{"text":"impl Freeze for Amount","synthetic":true,"types":[]},{"text":"impl Freeze for Account","synthetic":true,"types":[]},{"text":"impl Freeze for AccountRole","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for EventData","synthetic":true,"types":[]},{"text":"impl Freeze for Metadata","synthetic":true,"types":[]},{"text":"impl Freeze for Transaction","synthetic":true,"types":[]},{"text":"impl Freeze for MoveAbortExplaination","synthetic":true,"types":[]},{"text":"impl Freeze for VmStatus","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionData","synthetic":true,"types":[]},{"text":"impl Freeze for Script","synthetic":true,"types":[]},{"text":"impl Freeze for CurrencyInfo","synthetic":true,"types":[]},{"text":"impl Freeze for StateProof","synthetic":true,"types":[]},{"text":"impl Freeze for AccountStateWithProof","synthetic":true,"types":[]},{"text":"impl Freeze for AccountStateProof","synthetic":true,"types":[]}];
implementors["diem_key_manager"] = [{"text":"impl&lt;LI, S&gt; Freeze for KeyManager&lt;LI, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;LI: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Action","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for JsonRpcDiemInterface","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for LogSchema&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for LogEntry","synthetic":true,"types":[]},{"text":"impl Freeze for LogEvent","synthetic":true,"types":[]}];
implementors["diem_logger"] = [{"text":"impl !Freeze for DiemLogger","synthetic":true,"types":[]},{"text":"impl Freeze for DiemLoggerBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Filter","synthetic":true,"types":[]},{"text":"impl Freeze for Metadata","synthetic":true,"types":[]},{"text":"impl Freeze for Key","synthetic":true,"types":[]},{"text":"impl&lt;'v&gt; Freeze for KeyValue&lt;'v&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for LevelFilter","synthetic":true,"types":[]},{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl&lt;'v&gt; Freeze for Value&lt;'v&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SecurityEvent","synthetic":true,"types":[]},{"text":"impl !Freeze for FileWriter","synthetic":true,"types":[]},{"text":"impl Freeze for JsonLogEntry","synthetic":true,"types":[]},{"text":"impl !Freeze for Sampling","synthetic":true,"types":[]},{"text":"impl Freeze for SampleRate","synthetic":true,"types":[]}];
implementors["diem_management"] = [{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for ConfigPath","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for SecureBackend","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorBackend","synthetic":true,"types":[]},{"text":"impl Freeze for SharedBackend","synthetic":true,"types":[]},{"text":"impl !Freeze for StorageWrapper","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorConfig","synthetic":true,"types":[]},{"text":"impl Freeze for InsertWaypoint","synthetic":true,"types":[]}];
implementors["diem_mempool"] = [{"text":"impl Freeze for CommitNotification","synthetic":true,"types":[]},{"text":"impl Freeze for CommitResponse","synthetic":true,"types":[]},{"text":"impl Freeze for CommittedTransaction","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionExclusion","synthetic":true,"types":[]},{"text":"impl Freeze for ConsensusRequest","synthetic":true,"types":[]},{"text":"impl Freeze for ConsensusResponse","synthetic":true,"types":[]},{"text":"impl !Freeze for MockSharedMempool","synthetic":true,"types":[]},{"text":"impl Freeze for MempoolNetworkSender","synthetic":true,"types":[]},{"text":"impl Freeze for MempoolSyncMsg","synthetic":true,"types":[]}];
implementors["diem_metrics"] = [{"text":"impl Freeze for DurationHistogram","synthetic":true,"types":[]},{"text":"impl Freeze for OpMetrics","synthetic":true,"types":[]}];
implementors["diem_network_address"] = [{"text":"impl Freeze for NetworkAddress","synthetic":true,"types":[]},{"text":"impl Freeze for DnsName","synthetic":true,"types":[]},{"text":"impl Freeze for EmptyError","synthetic":true,"types":[]},{"text":"impl Freeze for Protocol","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl Freeze for IpFilter","synthetic":true,"types":[]},{"text":"impl Freeze for EncNetworkAddress","synthetic":true,"types":[]}];
implementors["diem_network_address_encryption"] = [{"text":"impl !Freeze for Encryptor","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorKeys","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["diem_nibble"] = [{"text":"impl Freeze for Nibble","synthetic":true,"types":[]}];
implementors["diem_node"] = [{"text":"impl !Freeze for DiemHandle","synthetic":true,"types":[]}];
implementors["diem_operational_tool"] = [{"text":"impl Freeze for TransactionContext","synthetic":true,"types":[]},{"text":"impl Freeze for Command","synthetic":true,"types":[]},{"text":"impl Freeze for CommandName","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ResultWrapper&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for JsonRpcClientWrapper","synthetic":true,"types":[]},{"text":"impl Freeze for OperationalTool","synthetic":true,"types":[]}];
implementors["diem_proptest_helpers"] = [{"text":"impl&lt;Ix, T&gt; Freeze for GrowingSubset&lt;Ix, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RepeatVec&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ValueGenerator","synthetic":true,"types":[]},{"text":"impl Freeze for Index","synthetic":true,"types":[]}];
implementors["diem_rate_limiter"] = [{"text":"impl&lt;T&gt; Freeze for AsyncRateLimiter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Key&gt; !Freeze for TokenBucketRateLimiter&lt;Key&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Bucket","synthetic":true,"types":[]}];
implementors["diem_retrier"] = [{"text":"impl Freeze for FixedDelay","synthetic":true,"types":[]},{"text":"impl Freeze for ExponentWithLimitDelay","synthetic":true,"types":[]}];
implementors["diem_secure_json_rpc"] = [{"text":"impl Freeze for JsonRpcClient","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionView","synthetic":true,"types":[]},{"text":"impl Freeze for MoveAbortExplanationView","synthetic":true,"types":[]},{"text":"impl Freeze for Bytes","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for VMStatusView","synthetic":true,"types":[]}];
implementors["diem_secure_net"] = [{"text":"impl Freeze for NetworkClient","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkServer","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["diem_secure_push_metrics"] = [{"text":"impl !Freeze for MetricsPusher","synthetic":true,"types":[]}];
implementors["diem_secure_storage"] = [{"text":"impl Freeze for PublicKeyResponse","synthetic":true,"types":[]},{"text":"impl Freeze for GitHubStorage","synthetic":true,"types":[]},{"text":"impl Freeze for InMemoryStorage","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for GetResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for NamespacedStorage","synthetic":true,"types":[]},{"text":"impl Freeze for OnDiskStorage","synthetic":true,"types":[]},{"text":"impl Freeze for Permission","synthetic":true,"types":[]},{"text":"impl Freeze for Policy","synthetic":true,"types":[]},{"text":"impl !Freeze for VaultStorage","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Capability","synthetic":true,"types":[]},{"text":"impl Freeze for Identity","synthetic":true,"types":[]},{"text":"impl !Freeze for Storage","synthetic":true,"types":[]}];
implementors["diem_state_view"] = [{"text":"impl Freeze for StateViewId","synthetic":true,"types":[]}];
implementors["diem_swarm"] = [{"text":"impl Freeze for InteractiveClient","synthetic":true,"types":[]},{"text":"impl Freeze for Process","synthetic":true,"types":[]},{"text":"impl Freeze for DiemNode","synthetic":true,"types":[]},{"text":"impl Freeze for DiemSwarm","synthetic":true,"types":[]},{"text":"impl Freeze for HealthStatus","synthetic":true,"types":[]},{"text":"impl Freeze for DiemSwarmDir","synthetic":true,"types":[]},{"text":"impl Freeze for SwarmLaunchFailure","synthetic":true,"types":[]}];
implementors["diem_temppath"] = [{"text":"impl Freeze for TempPath","synthetic":true,"types":[]}];
implementors["diem_time_service"] = [{"text":"impl Freeze for TimeService","synthetic":true,"types":[]},{"text":"impl !Freeze for Sleep","synthetic":true,"types":[]},{"text":"impl !Freeze for Interval","synthetic":true,"types":[]},{"text":"impl Freeze for MockTimeService","synthetic":true,"types":[]},{"text":"impl Freeze for MockSleep","synthetic":true,"types":[]},{"text":"impl Freeze for RealTimeService","synthetic":true,"types":[]},{"text":"impl Freeze for Elapsed","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !Freeze for Timeout&lt;F&gt;","synthetic":true,"types":[]}];
implementors["diem_trace"] = [{"text":"impl Freeze for DiemTraceClient","synthetic":true,"types":[]},{"text":"impl Freeze for TraceBlockGuard","synthetic":true,"types":[]}];
implementors["diem_transaction_replay"] = [{"text":"impl Freeze for DiemDebugger","synthetic":true,"types":[]}];
implementors["diem_types"] = [{"text":"impl Freeze for AccessPath","synthetic":true,"types":[]},{"text":"impl Freeze for Path","synthetic":true,"types":[]},{"text":"impl Freeze for AdminTransactionEvent","synthetic":true,"types":[]},{"text":"impl Freeze for BaseUrlRotationEvent","synthetic":true,"types":[]},{"text":"impl Freeze for BurnEvent","synthetic":true,"types":[]},{"text":"impl Freeze for CancelBurnEvent","synthetic":true,"types":[]},{"text":"impl Freeze for ComplianceKeyRotationEvent","synthetic":true,"types":[]},{"text":"impl Freeze for CreateAccountEvent","synthetic":true,"types":[]},{"text":"impl Freeze for ToXDXExchangeRateUpdateEvent","synthetic":true,"types":[]},{"text":"impl Freeze for MintEvent","synthetic":true,"types":[]},{"text":"impl Freeze for NewBlockEvent","synthetic":true,"types":[]},{"text":"impl Freeze for NewEpochEvent","synthetic":true,"types":[]},{"text":"impl Freeze for PreburnEvent","synthetic":true,"types":[]},{"text":"impl Freeze for ReceivedMintEvent","synthetic":true,"types":[]},{"text":"impl Freeze for ReceivedPaymentEvent","synthetic":true,"types":[]},{"text":"impl Freeze for SentPaymentEvent","synthetic":true,"types":[]},{"text":"impl Freeze for AccountResource","synthetic":true,"types":[]},{"text":"impl Freeze for BalanceResource","synthetic":true,"types":[]},{"text":"impl Freeze for ChainIdResource","synthetic":true,"types":[]},{"text":"impl Freeze for CurrencyInfoResource","synthetic":true,"types":[]},{"text":"impl Freeze for DesignatedDealer","synthetic":true,"types":[]},{"text":"impl Freeze for Credential","synthetic":true,"types":[]},{"text":"impl Freeze for Limit","synthetic":true,"types":[]},{"text":"impl Freeze for FreezingBit","synthetic":true,"types":[]},{"text":"impl Freeze for KeyRotationCapabilityResource","synthetic":true,"types":[]},{"text":"impl Freeze for PreburnResource","synthetic":true,"types":[]},{"text":"impl Freeze for AccountRole","synthetic":true,"types":[]},{"text":"impl Freeze for RoleId","synthetic":true,"types":[]},{"text":"impl Freeze for ParentVASP","synthetic":true,"types":[]},{"text":"impl Freeze for ChildVASP","synthetic":true,"types":[]},{"text":"impl Freeze for WithdrawCapabilityResource","synthetic":true,"types":[]},{"text":"impl Freeze for AccountState","synthetic":true,"types":[]},{"text":"impl Freeze for AccountStateBlob","synthetic":true,"types":[]},{"text":"impl Freeze for AccountStateBlobHasher","synthetic":true,"types":[]},{"text":"impl Freeze for AccountStateWithProof","synthetic":true,"types":[]},{"text":"impl Freeze for BlockInfo","synthetic":true,"types":[]},{"text":"impl Freeze for BlockMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for DiemBlockResource","synthetic":true,"types":[]},{"text":"impl Freeze for NewBlockEvent","synthetic":true,"types":[]},{"text":"impl Freeze for ChainId","synthetic":true,"types":[]},{"text":"impl Freeze for NamedChain","synthetic":true,"types":[]},{"text":"impl Freeze for ContractEventHasher","synthetic":true,"types":[]},{"text":"impl Freeze for ContractEventV0","synthetic":true,"types":[]},{"text":"impl Freeze for ContractEventV0Hasher","synthetic":true,"types":[]},{"text":"impl Freeze for EventWithProof","synthetic":true,"types":[]},{"text":"impl Freeze for ContractEvent","synthetic":true,"types":[]},{"text":"impl Freeze for DiemTimestampResource","synthetic":true,"types":[]},{"text":"impl Freeze for DiemTimestamp","synthetic":true,"types":[]},{"text":"impl Freeze for EpochChangeProof","synthetic":true,"types":[]},{"text":"impl Freeze for EpochState","synthetic":true,"types":[]},{"text":"impl Freeze for EventKey","synthetic":true,"types":[]},{"text":"impl Freeze for EventHandle","synthetic":true,"types":[]},{"text":"impl Freeze for LedgerInfo","synthetic":true,"types":[]},{"text":"impl Freeze for LedgerInfoHasher","synthetic":true,"types":[]},{"text":"impl Freeze for LedgerInfoWithV0","synthetic":true,"types":[]},{"text":"impl Freeze for LedgerInfoWithSignatures","synthetic":true,"types":[]},{"text":"impl Freeze for MempoolStatus","synthetic":true,"types":[]},{"text":"impl Freeze for MempoolStatusCode","synthetic":true,"types":[]},{"text":"impl Freeze for DiemVersion","synthetic":true,"types":[]},{"text":"impl Freeze for RegisteredCurrencies","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorSet","synthetic":true,"types":[]},{"text":"impl Freeze for VMConfig","synthetic":true,"types":[]},{"text":"impl Freeze for VMPublishingOption","synthetic":true,"types":[]},{"text":"impl Freeze for ConfigID","synthetic":true,"types":[]},{"text":"impl Freeze for OnChainConfigPayload","synthetic":true,"types":[]},{"text":"impl Freeze for ConfigurationResource","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Freeze for MerkleTreeInternalNode&lt;H&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SparseMerkleLeafNode","synthetic":true,"types":[]},{"text":"impl Freeze for SparseMerkleLeafNodeHasher","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Freeze for InMemoryAccumulator&lt;H&gt;","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Freeze for AccumulatorProof&lt;H&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Freeze for SparseMerkleProof&lt;V&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AccumulatorConsistencyProof","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Freeze for AccumulatorRangeProof&lt;H&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SparseMerkleRangeProof","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionInfoWithProof","synthetic":true,"types":[]},{"text":"impl Freeze for AccountStateProof","synthetic":true,"types":[]},{"text":"impl Freeze for EventProof","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionListProof","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Freeze for AccumulatorExtensionProof&lt;H&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Position","synthetic":true,"types":[]},{"text":"impl Freeze for AncestorSiblingIterator","synthetic":true,"types":[]},{"text":"impl Freeze for AncestorIterator","synthetic":true,"types":[]},{"text":"impl Freeze for FrozenSubTreeIterator","synthetic":true,"types":[]},{"text":"impl Freeze for FrozenSubtreeSiblingIterator","synthetic":true,"types":[]},{"text":"impl Freeze for NodeDirection","synthetic":true,"types":[]},{"text":"impl Freeze for AccountInfoUniverse","synthetic":true,"types":[]},{"text":"impl Freeze for RawTransactionGen","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureCheckedTransactionGen","synthetic":true,"types":[]},{"text":"impl Freeze for ContractEventGen","synthetic":true,"types":[]},{"text":"impl Freeze for AccountResourceGen","synthetic":true,"types":[]},{"text":"impl Freeze for BalanceResourceGen","synthetic":true,"types":[]},{"text":"impl Freeze for AccountStateBlobGen","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionToCommitGen","synthetic":true,"types":[]},{"text":"impl Freeze for BlockInfoGen","synthetic":true,"types":[]},{"text":"impl Freeze for LedgerInfoGen","synthetic":true,"types":[]},{"text":"impl Freeze for LedgerInfoWithSignaturesGen","synthetic":true,"types":[]},{"text":"impl Freeze for ChangeSet","synthetic":true,"types":[]},{"text":"impl Freeze for Module","synthetic":true,"types":[]},{"text":"impl Freeze for ArgumentABI","synthetic":true,"types":[]},{"text":"impl Freeze for Script","synthetic":true,"types":[]},{"text":"impl Freeze for ScriptABI","synthetic":true,"types":[]},{"text":"impl Freeze for TypeArgumentABI","synthetic":true,"types":[]},{"text":"impl Freeze for RawTransaction","synthetic":true,"types":[]},{"text":"impl Freeze for RawTransactionHasher","synthetic":true,"types":[]},{"text":"impl Freeze for SignedTransaction","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureCheckedTransaction","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionWithProof","synthetic":true,"types":[]},{"text":"impl Freeze for VMValidatorResult","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionOutput","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionInfo","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionInfoHasher","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionToCommit","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionListWithProof","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionHasher","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionPayload","synthetic":true,"types":[]},{"text":"impl Freeze for WriteSetPayload","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionStatus","synthetic":true,"types":[]},{"text":"impl Freeze for GovernanceRole","synthetic":true,"types":[]},{"text":"impl Freeze for Transaction","synthetic":true,"types":[]},{"text":"impl Freeze for AuthenticationKey","synthetic":true,"types":[]},{"text":"impl Freeze for AuthenticationKeyHasher","synthetic":true,"types":[]},{"text":"impl Freeze for AuthenticationKeyPreimage","synthetic":true,"types":[]},{"text":"impl Freeze for Scheme","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionAuthenticator","synthetic":true,"types":[]},{"text":"impl Freeze for GeneralMetadataV0","synthetic":true,"types":[]},{"text":"impl Freeze for TravelRuleMetadataV0","synthetic":true,"types":[]},{"text":"impl Freeze for UnstructuredBytesMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for Metadata","synthetic":true,"types":[]},{"text":"impl Freeze for GeneralMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for TravelRuleMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for TrustedState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TrustedStateChange&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorConfigResource","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorOperatorConfigResource","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorConfig","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorSigner","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorConsensusInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatorVerifier","synthetic":true,"types":[]},{"text":"impl Freeze for VerifyError","synthetic":true,"types":[]},{"text":"impl Freeze for Waypoint","synthetic":true,"types":[]},{"text":"impl Freeze for Ledger2WaypointConverterHasher","synthetic":true,"types":[]},{"text":"impl Freeze for WriteSet","synthetic":true,"types":[]},{"text":"impl Freeze for WriteSetMut","synthetic":true,"types":[]},{"text":"impl Freeze for WriteOp","synthetic":true,"types":[]}];
implementors["diem_validator_interface"] = [{"text":"impl Freeze for DBDebuggerInterface","synthetic":true,"types":[]},{"text":"impl Freeze for JsonRpcDebuggerInterface","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DebuggerStateView&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["diem_vault_client"] = [{"text":"impl Freeze for Client","synthetic":true,"types":[]},{"text":"impl Freeze for KeyBackup","synthetic":true,"types":[]},{"text":"impl Freeze for KeyBackupPolicy","synthetic":true,"types":[]},{"text":"impl Freeze for KeyBackupInfo","synthetic":true,"types":[]},{"text":"impl Freeze for BackupInfo","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ReadResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ReadKey","synthetic":true,"types":[]},{"text":"impl Freeze for Policy","synthetic":true,"types":[]},{"text":"impl Freeze for PolicyPaths","synthetic":true,"types":[]},{"text":"impl Freeze for PathPolicy","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Capability","synthetic":true,"types":[]},{"text":"impl Freeze for VaultRunner","synthetic":true,"types":[]}];
implementors["diem_vm"] = [{"text":"impl&lt;'a&gt; Freeze for StateViewCache&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Freeze for RemoteStorage&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for DiemVM","synthetic":true,"types":[]},{"text":"impl Freeze for DiemVMValidator","synthetic":true,"types":[]},{"text":"impl Freeze for AdapterLogSchema","synthetic":true,"types":[]},{"text":"impl Freeze for LogEntry","synthetic":true,"types":[]}];
implementors["diem_wallet"] = [{"text":"impl Freeze for Mnemonic","synthetic":true,"types":[]},{"text":"impl Freeze for WalletLibrary","synthetic":true,"types":[]}];
implementors["diem_writeset_generator"] = [{"text":"impl&lt;'r, 'l, R&gt; Freeze for GenesisSession&lt;'r, 'l, R&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ReleaseArtifact","synthetic":true,"types":[]}];
implementors["diemdb"] = [{"text":"impl !Freeze for DiemDB","synthetic":true,"types":[]},{"text":"impl !Freeze for Diemsum","synthetic":true,"types":[]},{"text":"impl Freeze for BackupHandler","synthetic":true,"types":[]},{"text":"impl Freeze for DbState","synthetic":true,"types":[]},{"text":"impl Freeze for RestoreHandler","synthetic":true,"types":[]},{"text":"impl Freeze for DiemDbError","synthetic":true,"types":[]}];
implementors["disassembler"] = [{"text":"impl Freeze for DisassemblerOptions","synthetic":true,"types":[]},{"text":"impl&lt;Location&gt; Freeze for Disassembler&lt;Location&gt;","synthetic":true,"types":[]}];
implementors["docgen"] = [{"text":"impl Freeze for DocgenOptions","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !Freeze for Docgen&lt;'env&gt;","synthetic":true,"types":[]}];
implementors["errmapgen"] = [{"text":"impl Freeze for ErrmapOptions","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorDescription","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorContext","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorMapping","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for ErrmapGen&lt;'env&gt;","synthetic":true,"types":[]}];
implementors["execution_correctness"] = [{"text":"impl Freeze for ExecutionCorrectnessManager","synthetic":true,"types":[]},{"text":"impl Freeze for Process","synthetic":true,"types":[]}];
implementors["executor"] = [{"text":"impl&lt;V&gt; Freeze for Executor&lt;V&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FakeVM","synthetic":true,"types":[]},{"text":"impl Freeze for FakeDb","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Freeze for GenesisCommitter&lt;V&gt;","synthetic":true,"types":[]}];
implementors["executor_types"] = [{"text":"impl Freeze for StateComputeResult","synthetic":true,"types":[]},{"text":"impl Freeze for ExecutedTrees","synthetic":true,"types":[]},{"text":"impl Freeze for ProofReader","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["functional_tests"] = [{"text":"impl Freeze for Directive","synthetic":true,"types":[]},{"text":"impl Freeze for Match","synthetic":true,"types":[]},{"text":"impl Freeze for MatchResult","synthetic":true,"types":[]},{"text":"impl Freeze for MatchError","synthetic":true,"types":[]},{"text":"impl Freeze for MatchStatus","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for LineSp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ScriptOrModule","synthetic":true,"types":[]},{"text":"impl Freeze for Proposer","synthetic":true,"types":[]},{"text":"impl Freeze for Entry","synthetic":true,"types":[]},{"text":"impl Freeze for Balance","synthetic":true,"types":[]},{"text":"impl Freeze for AccountDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for Role","synthetic":true,"types":[]},{"text":"impl Freeze for Entry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Argument","synthetic":true,"types":[]},{"text":"impl Freeze for Entry","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Transaction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EvaluationLog","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Command&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Stage","synthetic":true,"types":[]},{"text":"impl Freeze for Status","synthetic":true,"types":[]},{"text":"impl Freeze for OutputType","synthetic":true,"types":[]},{"text":"impl Freeze for EvaluationOutput","synthetic":true,"types":[]},{"text":"impl Freeze for RawTransactionInput","synthetic":true,"types":[]},{"text":"impl Freeze for RawCommand","synthetic":true,"types":[]}];
implementors["generate_format"] = [{"text":"impl Freeze for Corpus","synthetic":true,"types":[]}];
implementors["invalid_mutations"] = [{"text":"impl&lt;'a&gt; Freeze for ApplyCodeUnitBoundsContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CodeUnitBoundsMutation","synthetic":true,"types":[]},{"text":"impl Freeze for OutOfBoundsMutation","synthetic":true,"types":[]},{"text":"impl Freeze for ApplyOutOfBoundsContext","synthetic":true,"types":[]},{"text":"impl Freeze for PointerKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SignatureRefMutation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FieldRefMutation&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["ir_to_bytecode"] = [{"text":"impl Freeze for InternalCompilerError","synthetic":true,"types":[]}];
implementors["ir_to_bytecode_syntax"] = [{"text":"impl&lt;L, E&gt; Freeze for ParseError&lt;L, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["language_benchmarks"] = [{"text":"impl&lt;S&gt; Freeze for TransactionBencher&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["language_e2e_tests"] = [{"text":"impl Freeze for Account","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Balance","synthetic":true,"types":[]},{"text":"impl Freeze for AccountRole","synthetic":true,"types":[]},{"text":"impl Freeze for EventHandleGenerator","synthetic":true,"types":[]},{"text":"impl Freeze for AccountData","synthetic":true,"types":[]},{"text":"impl Freeze for WithdrawCapability","synthetic":true,"types":[]},{"text":"impl Freeze for KeyRotationCapability","synthetic":true,"types":[]},{"text":"impl Freeze for FreezingBit","synthetic":true,"types":[]},{"text":"impl Freeze for AccountRoleSpecifier","synthetic":true,"types":[]},{"text":"impl Freeze for SequenceNumberMismatchGen","synthetic":true,"types":[]},{"text":"impl Freeze for InsufficientBalanceGen","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidAuthkeyGen","synthetic":true,"types":[]},{"text":"impl Freeze for CreateAccountGen","synthetic":true,"types":[]},{"text":"impl Freeze for CreateExistingAccountGen","synthetic":true,"types":[]},{"text":"impl Freeze for P2PTransferGen","synthetic":true,"types":[]},{"text":"impl Freeze for RotateKeyGen","synthetic":true,"types":[]},{"text":"impl Freeze for AccountUniverseGen","synthetic":true,"types":[]},{"text":"impl Freeze for AccountUniverse","synthetic":true,"types":[]},{"text":"impl Freeze for AccountPairGen","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for AccountPair&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AccountCurrent","synthetic":true,"types":[]},{"text":"impl Freeze for AccountPickStyle","synthetic":true,"types":[]},{"text":"impl Freeze for FakeDataStore","synthetic":true,"types":[]},{"text":"impl Freeze for BasicStrategy","synthetic":true,"types":[]},{"text":"impl !Freeze for BasicExecutor","synthetic":true,"types":[]},{"text":"impl Freeze for PartitionedGuidedStrategy","synthetic":true,"types":[]},{"text":"impl Freeze for UnPartitionedGuidedStrategy","synthetic":true,"types":[]},{"text":"impl&lt;Strategy&gt; !Freeze for GuidedExecutor&lt;Strategy&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AnnotatedTransaction","synthetic":true,"types":[]},{"text":"impl&lt;TxnType, E&gt; Freeze for MultiExecutor&lt;TxnType, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for MultiResult&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RandomizedStrategy","synthetic":true,"types":[]},{"text":"impl !Freeze for RandomExecutor","synthetic":true,"types":[]},{"text":"impl !Freeze for FakeExecutor","synthetic":true,"types":[]},{"text":"impl Freeze for KeyGen","synthetic":true,"types":[]}];
implementors["memsocket"] = [{"text":"impl Freeze for MemoryListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for MemorySocket","synthetic":true,"types":[]}];
implementors["module_generation"] = [{"text":"impl&lt;'a&gt; Freeze for ModuleGenerator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleGeneratorOptions","synthetic":true,"types":[]},{"text":"impl Freeze for Pad","synthetic":true,"types":[]}];
implementors["move_cli"] = [{"text":"impl Freeze for OnDiskStateView","synthetic":true,"types":[]},{"text":"impl Freeze for Mode","synthetic":true,"types":[]}];
implementors["move_core_types"] = [{"text":"impl Freeze for AccountAddress","synthetic":true,"types":[]},{"text":"impl Freeze for AccountAddressHasher","synthetic":true,"types":[]},{"text":"impl&lt;GasCarrier&gt; Freeze for AbstractMemorySize&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;GasCarrier&gt; Freeze for GasUnits&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;GasCarrier&gt; Freeze for GasPrice&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for GasConstants","synthetic":true,"types":[]},{"text":"impl Freeze for CostTable","synthetic":true,"types":[]},{"text":"impl Freeze for GasCost","synthetic":true,"types":[]},{"text":"impl Freeze for Identifier","synthetic":true,"types":[]},{"text":"impl Freeze for IdentStr","synthetic":true,"types":[]},{"text":"impl Freeze for StructTag","synthetic":true,"types":[]},{"text":"impl Freeze for StructTagHasher","synthetic":true,"types":[]},{"text":"impl Freeze for ResourceKey","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleId","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleIdHasher","synthetic":true,"types":[]},{"text":"impl Freeze for TypeTag","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionArgument","synthetic":true,"types":[]},{"text":"impl Freeze for MoveStruct","synthetic":true,"types":[]},{"text":"impl Freeze for MoveStructLayout","synthetic":true,"types":[]},{"text":"impl Freeze for MoveValue","synthetic":true,"types":[]},{"text":"impl Freeze for MoveTypeLayout","synthetic":true,"types":[]},{"text":"impl Freeze for MoveKind","synthetic":true,"types":[]},{"text":"impl Freeze for MoveKindInfo","synthetic":true,"types":[]},{"text":"impl Freeze for VMStatus","synthetic":true,"types":[]},{"text":"impl Freeze for KeptVMStatus","synthetic":true,"types":[]},{"text":"impl Freeze for AbortLocation","synthetic":true,"types":[]},{"text":"impl Freeze for StatusType","synthetic":true,"types":[]},{"text":"impl Freeze for StatusCode","synthetic":true,"types":[]}];
implementors["move_coverage"] = [{"text":"impl Freeze for CoverageMap","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleCoverageMap","synthetic":true,"types":[]},{"text":"impl Freeze for ExecCoverageMap","synthetic":true,"types":[]},{"text":"impl Freeze for ExecCoverageMapWithModules","synthetic":true,"types":[]},{"text":"impl Freeze for TraceEntry","synthetic":true,"types":[]},{"text":"impl Freeze for TraceMap","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionSourceCoverage","synthetic":true,"types":[]},{"text":"impl Freeze for SourceCoverageBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for SourceCoverage","synthetic":true,"types":[]},{"text":"impl Freeze for AbstractSegment","synthetic":true,"types":[]},{"text":"impl Freeze for StringSegment","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleSummary","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionSummary","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionInfo","synthetic":true,"types":[]}];
implementors["move_ir_types"] = [{"text":"impl Freeze for Program","synthetic":true,"types":[]},{"text":"impl Freeze for Script","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleName","synthetic":true,"types":[]},{"text":"impl Freeze for QualifiedModuleIdent","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleDependency","synthetic":true,"types":[]},{"text":"impl Freeze for ImportDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for Var_","synthetic":true,"types":[]},{"text":"impl Freeze for TypeVar_","synthetic":true,"types":[]},{"text":"impl Freeze for QualifiedStructIdent","synthetic":true,"types":[]},{"text":"impl Freeze for Field_","synthetic":true,"types":[]},{"text":"impl Freeze for StructName","synthetic":true,"types":[]},{"text":"impl Freeze for StructDefinition_","synthetic":true,"types":[]},{"text":"impl Freeze for StructDependency","synthetic":true,"types":[]},{"text":"impl Freeze for ConstantName","synthetic":true,"types":[]},{"text":"impl Freeze for Constant","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionName","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionDependency","synthetic":true,"types":[]},{"text":"impl Freeze for Function_","synthetic":true,"types":[]},{"text":"impl Freeze for IfElse","synthetic":true,"types":[]},{"text":"impl Freeze for While","synthetic":true,"types":[]},{"text":"impl Freeze for Loop","synthetic":true,"types":[]},{"text":"impl Freeze for Block_","synthetic":true,"types":[]},{"text":"impl Freeze for BlockLabel","synthetic":true,"types":[]},{"text":"impl Freeze for NopLabel","synthetic":true,"types":[]},{"text":"impl Freeze for ScriptOrModule","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleIdent","synthetic":true,"types":[]},{"text":"impl Freeze for Kind","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for StructDefinitionFields","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionVisibility","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionBody","synthetic":true,"types":[]},{"text":"impl Freeze for Builtin","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionCall_","synthetic":true,"types":[]},{"text":"impl Freeze for LValue_","synthetic":true,"types":[]},{"text":"impl Freeze for Cmd_","synthetic":true,"types":[]},{"text":"impl Freeze for Statement","synthetic":true,"types":[]},{"text":"impl Freeze for CopyableVal_","synthetic":true,"types":[]},{"text":"impl Freeze for UnaryOp","synthetic":true,"types":[]},{"text":"impl Freeze for BinOp","synthetic":true,"types":[]},{"text":"impl Freeze for Exp_","synthetic":true,"types":[]},{"text":"impl Freeze for Bytecode_","synthetic":true,"types":[]},{"text":"impl Freeze for Loc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Spanned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Invariant_","synthetic":true,"types":[]},{"text":"impl Freeze for SyntheticDefinition_","synthetic":true,"types":[]},{"text":"impl Freeze for FieldOrIndex","synthetic":true,"types":[]},{"text":"impl Freeze for StorageLocation","synthetic":true,"types":[]},{"text":"impl Freeze for SpecExp","synthetic":true,"types":[]},{"text":"impl Freeze for Condition_","synthetic":true,"types":[]}];
implementors["move_lang"] = [{"text":"impl Freeze for Pass","synthetic":true,"types":[]},{"text":"impl Freeze for PassResult","synthetic":true,"types":[]},{"text":"impl Freeze for Program","synthetic":true,"types":[]},{"text":"impl Freeze for Script","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for Constant","synthetic":true,"types":[]},{"text":"impl Freeze for Function","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionBody_","synthetic":true,"types":[]},{"text":"impl Freeze for VarInfo","synthetic":true,"types":[]},{"text":"impl Freeze for SpecInfo","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionInfo","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledUnit","synthetic":true,"types":[]},{"text":"impl Freeze for Program","synthetic":true,"types":[]},{"text":"impl Freeze for Script","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for StructDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Freeze for SpecId","synthetic":true,"types":[]},{"text":"impl Freeze for Function","synthetic":true,"types":[]},{"text":"impl Freeze for Constant","synthetic":true,"types":[]},{"text":"impl Freeze for SpecBlock_","synthetic":true,"types":[]},{"text":"impl Freeze for PragmaProperty_","synthetic":true,"types":[]},{"text":"impl Freeze for StructFields","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionBody_","synthetic":true,"types":[]},{"text":"impl Freeze for SpecBlockMember_","synthetic":true,"types":[]},{"text":"impl Freeze for PragmaValue","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleAccess_","synthetic":true,"types":[]},{"text":"impl Freeze for Type_","synthetic":true,"types":[]},{"text":"impl Freeze for LValue_","synthetic":true,"types":[]},{"text":"impl Freeze for ExpDotted_","synthetic":true,"types":[]},{"text":"impl Freeze for Value_","synthetic":true,"types":[]},{"text":"impl Freeze for Exp_","synthetic":true,"types":[]},{"text":"impl Freeze for SequenceItem_","synthetic":true,"types":[]},{"text":"impl Freeze for Program","synthetic":true,"types":[]},{"text":"impl Freeze for Script","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for StructDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for Constant","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Freeze for Function","synthetic":true,"types":[]},{"text":"impl Freeze for Label","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleCall","synthetic":true,"types":[]},{"text":"impl Freeze for Exp","synthetic":true,"types":[]},{"text":"impl Freeze for StructFields","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionBody_","synthetic":true,"types":[]},{"text":"impl Freeze for TypeName_","synthetic":true,"types":[]},{"text":"impl Freeze for BaseType_","synthetic":true,"types":[]},{"text":"impl Freeze for SingleType_","synthetic":true,"types":[]},{"text":"impl Freeze for Type_","synthetic":true,"types":[]},{"text":"impl Freeze for Statement_","synthetic":true,"types":[]},{"text":"impl Freeze for Command_","synthetic":true,"types":[]},{"text":"impl Freeze for LValue_","synthetic":true,"types":[]},{"text":"impl Freeze for BuiltinFunction_","synthetic":true,"types":[]},{"text":"impl Freeze for UnannotatedExp_","synthetic":true,"types":[]},{"text":"impl Freeze for ExpListItem","synthetic":true,"types":[]},{"text":"impl Freeze for Program","synthetic":true,"types":[]},{"text":"impl Freeze for Script","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for StructDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Freeze for Function","synthetic":true,"types":[]},{"text":"impl Freeze for Constant","synthetic":true,"types":[]},{"text":"impl Freeze for TParamID","synthetic":true,"types":[]},{"text":"impl Freeze for TParam","synthetic":true,"types":[]},{"text":"impl Freeze for TVar","synthetic":true,"types":[]},{"text":"impl Freeze for StructFields","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionBody_","synthetic":true,"types":[]},{"text":"impl Freeze for BuiltinTypeName_","synthetic":true,"types":[]},{"text":"impl Freeze for TypeName_","synthetic":true,"types":[]},{"text":"impl Freeze for Type_","synthetic":true,"types":[]},{"text":"impl Freeze for LValue_","synthetic":true,"types":[]},{"text":"impl Freeze for ExpDotted_","synthetic":true,"types":[]},{"text":"impl Freeze for BuiltinFunction_","synthetic":true,"types":[]},{"text":"impl Freeze for Exp_","synthetic":true,"types":[]},{"text":"impl Freeze for SequenceItem_","synthetic":true,"types":[]},{"text":"impl Freeze for Program","synthetic":true,"types":[]},{"text":"impl Freeze for Script","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleName","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleIdent_","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleIdent","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for Field","synthetic":true,"types":[]},{"text":"impl Freeze for StructName","synthetic":true,"types":[]},{"text":"impl Freeze for StructDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionName","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Freeze for Function","synthetic":true,"types":[]},{"text":"impl Freeze for ConstantName","synthetic":true,"types":[]},{"text":"impl Freeze for Constant","synthetic":true,"types":[]},{"text":"impl Freeze for SpecBlock_","synthetic":true,"types":[]},{"text":"impl Freeze for PragmaProperty_","synthetic":true,"types":[]},{"text":"impl Freeze for SpecApplyPattern_","synthetic":true,"types":[]},{"text":"impl Freeze for Var","synthetic":true,"types":[]},{"text":"impl Freeze for Definition","synthetic":true,"types":[]},{"text":"impl Freeze for Use","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleMember","synthetic":true,"types":[]},{"text":"impl Freeze for StructFields","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionVisibility","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionBody_","synthetic":true,"types":[]},{"text":"impl Freeze for SpecBlockTarget_","synthetic":true,"types":[]},{"text":"impl Freeze for PragmaValue","synthetic":true,"types":[]},{"text":"impl Freeze for SpecApplyFragment_","synthetic":true,"types":[]},{"text":"impl Freeze for SpecBlockMember_","synthetic":true,"types":[]},{"text":"impl Freeze for SpecConditionKind","synthetic":true,"types":[]},{"text":"impl Freeze for InvariantKind","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleAccess_","synthetic":true,"types":[]},{"text":"impl Freeze for Kind_","synthetic":true,"types":[]},{"text":"impl Freeze for Type_","synthetic":true,"types":[]},{"text":"impl Freeze for Bind_","synthetic":true,"types":[]},{"text":"impl Freeze for Value_","synthetic":true,"types":[]},{"text":"impl Freeze for UnaryOp_","synthetic":true,"types":[]},{"text":"impl Freeze for BinOp_","synthetic":true,"types":[]},{"text":"impl Freeze for QuantKind_","synthetic":true,"types":[]},{"text":"impl Freeze for Exp_","synthetic":true,"types":[]},{"text":"impl Freeze for SequenceItem_","synthetic":true,"types":[]},{"text":"impl Freeze for Address","synthetic":true,"types":[]},{"text":"impl Freeze for Counter","synthetic":true,"types":[]},{"text":"impl Freeze for AstWriter","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for RememberingUniqueMap&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for UniqueMap&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Program","synthetic":true,"types":[]},{"text":"impl Freeze for Script","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for Function","synthetic":true,"types":[]},{"text":"impl Freeze for Constant","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleCall","synthetic":true,"types":[]},{"text":"impl Freeze for Exp","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionBody_","synthetic":true,"types":[]},{"text":"impl Freeze for LValue_","synthetic":true,"types":[]},{"text":"impl Freeze for BuiltinFunction_","synthetic":true,"types":[]},{"text":"impl Freeze for UnannotatedExp_","synthetic":true,"types":[]},{"text":"impl Freeze for SequenceItem_","synthetic":true,"types":[]},{"text":"impl Freeze for ExpListItem","synthetic":true,"types":[]}];
implementors["move_lang_test_utils"] = [{"text":"impl Freeze for StringError","synthetic":true,"types":[]}];
implementors["move_model"] = [{"text":"impl Freeze for SpecVarDecl","synthetic":true,"types":[]},{"text":"impl Freeze for SpecFunDecl","synthetic":true,"types":[]},{"text":"impl Freeze for Condition","synthetic":true,"types":[]},{"text":"impl Freeze for Spec","synthetic":true,"types":[]},{"text":"impl Freeze for SpecBlockInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalInvariant","synthetic":true,"types":[]},{"text":"impl Freeze for LocalVarDecl","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ModuleNameDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for QualifiedSymbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for QualifiedSymbolDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ExpDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for OperationDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ConditionKind","synthetic":true,"types":[]},{"text":"impl Freeze for QuantKind","synthetic":true,"types":[]},{"text":"impl Freeze for PropertyValue","synthetic":true,"types":[]},{"text":"impl Freeze for SpecBlockTarget","synthetic":true,"types":[]},{"text":"impl Freeze for Exp","synthetic":true,"types":[]},{"text":"impl Freeze for Operation","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]},{"text":"impl !Freeze for CodeWriter","synthetic":true,"types":[]},{"text":"impl Freeze for CodeWriterLabel","synthetic":true,"types":[]},{"text":"impl&lt;'env, 'rewriter&gt; Freeze for ExpRewriter&lt;'env, 'rewriter&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Loc","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleId","synthetic":true,"types":[]},{"text":"impl Freeze for NamedConstantId","synthetic":true,"types":[]},{"text":"impl Freeze for StructId","synthetic":true,"types":[]},{"text":"impl Freeze for FieldId","synthetic":true,"types":[]},{"text":"impl Freeze for FunId","synthetic":true,"types":[]},{"text":"impl Freeze for SchemaId","synthetic":true,"types":[]},{"text":"impl Freeze for SpecFunId","synthetic":true,"types":[]},{"text":"impl Freeze for SpecVarId","synthetic":true,"types":[]},{"text":"impl Freeze for NodeId","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalId","synthetic":true,"types":[]},{"text":"impl&lt;Id&gt; Freeze for QualifiedId&lt;Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for GlobalEnv","synthetic":true,"types":[]},{"text":"impl Freeze for ConditionInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for ModuleEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for StructData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for StructEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FieldData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for FieldEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for NamedConstantData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for NamedConstantEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParameter","synthetic":true,"types":[]},{"text":"impl Freeze for Parameter","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionData","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for FunctionEnv&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for LocDisplay&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for VerificationScope","synthetic":true,"types":[]},{"text":"impl Freeze for ConditionTag","synthetic":true,"types":[]},{"text":"impl Freeze for TypeConstraint","synthetic":true,"types":[]},{"text":"impl Freeze for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SymbolDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for SymbolPool","synthetic":true,"types":[]},{"text":"impl Freeze for Substitution","synthetic":true,"types":[]},{"text":"impl Freeze for TypeError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TypeDisplay&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for PrimitiveType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TypeDisplayContext&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["move_prover"] = [{"text":"impl Freeze for Options","synthetic":true,"types":[]}];
implementors["move_vm_runtime"] = [{"text":"impl Freeze for AccountDataCache","synthetic":true,"types":[]},{"text":"impl Freeze for TransactionEffects","synthetic":true,"types":[]},{"text":"impl Freeze for NoContextLog","synthetic":true,"types":[]},{"text":"impl !Freeze for MoveVM","synthetic":true,"types":[]},{"text":"impl&lt;'r, 'l, R&gt; Freeze for Session&lt;'r, 'l, R&gt;","synthetic":true,"types":[]}];
implementors["move_vm_test_utils"] = [{"text":"impl Freeze for AccountChangeSet","synthetic":true,"types":[]},{"text":"impl Freeze for ChangeSet","synthetic":true,"types":[]},{"text":"impl Freeze for BlankStorage","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for DeltaStorage&lt;'a, 'b, S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for InMemoryStorage","synthetic":true,"types":[]}];
implementors["move_vm_types"] = [{"text":"impl&lt;'a&gt; Freeze for CostStrategy&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for NativeCostIndex","synthetic":true,"types":[]},{"text":"impl Freeze for StructType","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for NativeResult","synthetic":true,"types":[]},{"text":"impl Freeze for SignerRef","synthetic":true,"types":[]},{"text":"impl Freeze for VectorRef","synthetic":true,"types":[]},{"text":"impl Freeze for Vector","synthetic":true,"types":[]},{"text":"impl Freeze for StructRef","synthetic":true,"types":[]},{"text":"impl Freeze for Reference","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]},{"text":"impl Freeze for Locals","synthetic":true,"types":[]},{"text":"impl Freeze for Struct","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalValue","synthetic":true,"types":[]},{"text":"impl Freeze for IntegerValue","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for GlobalValueEffect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["netcore"] = [{"text":"impl Freeze for ConnectionOrigin","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Freeze for AndThen&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for AndThenStream&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for AndThenFuture&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;O, E&gt; Freeze for BoxedTransport&lt;O, E&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryTransport","synthetic":true,"types":[]},{"text":"impl Freeze for Listener","synthetic":true,"types":[]},{"text":"impl Freeze for TcpTransport","synthetic":true,"types":[]},{"text":"impl !Freeze for TcpListenerStream","synthetic":true,"types":[]},{"text":"impl Freeze for TcpOutbound","synthetic":true,"types":[]},{"text":"impl !Freeze for TcpSocket","synthetic":true,"types":[]}];
implementors["network"] = [{"text":"impl&lt;TTicker, TBackoff&gt; Freeze for ConnectivityManager&lt;TTicker, TBackoff&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBackoff: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;TTicker: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for DiscoverySource","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectivityRequest","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectivityManagerBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkError","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for NetworkSchema&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for NoiseHandshakeError","synthetic":true,"types":[]},{"text":"impl Freeze for AntiReplayTimestamps","synthetic":true,"types":[]},{"text":"impl !Freeze for NoiseUpgrader","synthetic":true,"types":[]},{"text":"impl !Freeze for HandshakeAuthMode","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; Freeze for NoiseStream&lt;TSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSocket: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; !Freeze for Peer&lt;TSocket&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for PeerRequest","synthetic":true,"types":[]},{"text":"impl !Freeze for PeerNotification","synthetic":true,"types":[]},{"text":"impl Freeze for DisconnectReason","synthetic":true,"types":[]},{"text":"impl Freeze for PeerManagerRequestSender","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionRequestSender","synthetic":true,"types":[]},{"text":"impl&lt;TTransport, TSocket&gt; !Freeze for PeerManager&lt;TTransport, TSocket&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for PeerManagerError","synthetic":true,"types":[]},{"text":"impl !Freeze for PeerManagerRequest","synthetic":true,"types":[]},{"text":"impl !Freeze for PeerManagerNotification","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionRequest","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionNotification","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; Freeze for TransportNotification&lt;TSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSocket: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for PeerManagerBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for AuthenticationMode","synthetic":true,"types":[]},{"text":"impl !Freeze for Message","synthetic":true,"types":[]},{"text":"impl&lt;TMessage&gt; Freeze for NetworkEvents&lt;TMessage&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TMessage: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TMessage&gt; Freeze for NetworkSender&lt;TMessage&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TMessage&gt; Freeze for Event&lt;TMessage&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TMessage: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for InboundRpcRequest","synthetic":true,"types":[]},{"text":"impl !Freeze for OutboundRpcRequest","synthetic":true,"types":[]},{"text":"impl !Freeze for InboundRpcs","synthetic":true,"types":[]},{"text":"impl !Freeze for OutboundRpcs","synthetic":true,"types":[]},{"text":"impl Freeze for RpcError","synthetic":true,"types":[]},{"text":"impl Freeze for HealthCheckerNetworkSender","synthetic":true,"types":[]},{"text":"impl Freeze for Ping","synthetic":true,"types":[]},{"text":"impl Freeze for Pong","synthetic":true,"types":[]},{"text":"impl&lt;TTicker&gt; Freeze for HealthChecker&lt;TTicker&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TTicker: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for HealthCheckerMsg","synthetic":true,"types":[]},{"text":"impl Freeze for HealthCheckerBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for SupportedProtocols","synthetic":true,"types":[]},{"text":"impl Freeze for HandshakeMsg","synthetic":true,"types":[]},{"text":"impl Freeze for ProtocolId","synthetic":true,"types":[]},{"text":"impl Freeze for MessagingProtocolVersion","synthetic":true,"types":[]},{"text":"impl Freeze for HandshakeError","synthetic":true,"types":[]},{"text":"impl Freeze for ParsingErrorType","synthetic":true,"types":[]},{"text":"impl Freeze for RpcRequest","synthetic":true,"types":[]},{"text":"impl Freeze for RpcResponse","synthetic":true,"types":[]},{"text":"impl Freeze for DirectSendMsg","synthetic":true,"types":[]},{"text":"impl&lt;TReadSocket&gt; Freeze for NetworkMessageStream&lt;TReadSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TReadSocket: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TWriteSocket&gt; Freeze for NetworkMessageSink&lt;TWriteSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TWriteSocket: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkMessage","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorCode","synthetic":true,"types":[]},{"text":"impl Freeze for NotSupportedType","synthetic":true,"types":[]},{"text":"impl !Freeze for ReadError","synthetic":true,"types":[]},{"text":"impl Freeze for WriteError","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionId","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionMetadata","synthetic":true,"types":[]},{"text":"impl&lt;TSocket&gt; Freeze for Connection&lt;TSocket&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSocket: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TTransport&gt; Freeze for DiemNetTransport&lt;TTransport&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TTransport: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for TrustLevel","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ReadOnlyTestSocket&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ReadOnlyTestSocketVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for ReadWriteTestSocket&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["network_builder"] = [{"text":"impl !Freeze for NetworkBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for DummyMsg","synthetic":true,"types":[]},{"text":"impl Freeze for DummyNetworkSender","synthetic":true,"types":[]},{"text":"impl !Freeze for DummyNetwork","synthetic":true,"types":[]}];
implementors["network_simple_onchain_discovery"] = [{"text":"impl !Freeze for ConfigurationChangeListener","synthetic":true,"types":[]},{"text":"impl !Freeze for ConfigurationChangeListenerBuilder","synthetic":true,"types":[]}];
implementors["proxy"] = [{"text":"impl Freeze for Proxy","synthetic":true,"types":[]}];
implementors["resource_viewer"] = [{"text":"impl Freeze for AnnotatedAccountStateBlob","synthetic":true,"types":[]},{"text":"impl Freeze for AnnotatedMoveStruct","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for MoveValueAnnotator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for NullStateView","synthetic":true,"types":[]},{"text":"impl Freeze for AnnotatedMoveValue","synthetic":true,"types":[]}];
implementors["safety_rules"] = [{"text":"impl Freeze for ConsensusState","synthetic":true,"types":[]},{"text":"impl !Freeze for PersistentSafetyStorage","synthetic":true,"types":[]},{"text":"impl !Freeze for Process","synthetic":true,"types":[]},{"text":"impl !Freeze for SafetyRules","synthetic":true,"types":[]},{"text":"impl Freeze for SafetyRulesManager","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["schemadb"] = [{"text":"impl Freeze for SchemaBatch","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Freeze for SchemaIterator&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DB","synthetic":true,"types":[]},{"text":"impl Freeze for ScanDirection","synthetic":true,"types":[]}];
implementors["scratchpad"] = [{"text":"impl&lt;V&gt; Freeze for SparseMerkleTree&lt;V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Freeze for AccountStatus&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["short_hex_str"] = [{"text":"impl Freeze for ShortHexStr","synthetic":true,"types":[]},{"text":"impl Freeze for InputTooShortError","synthetic":true,"types":[]}];
implementors["socket_bench_server"] = [{"text":"impl Freeze for Args","synthetic":true,"types":[]}];
implementors["state_sync"] = [{"text":"impl !Freeze for StateSyncBootstrapper","synthetic":true,"types":[]},{"text":"impl Freeze for GetChunkRequest","synthetic":true,"types":[]},{"text":"impl Freeze for TargetType","synthetic":true,"types":[]},{"text":"impl Freeze for GetChunkResponse","synthetic":true,"types":[]},{"text":"impl Freeze for ResponseLedgerInfo","synthetic":true,"types":[]},{"text":"impl Freeze for SyncRequest","synthetic":true,"types":[]},{"text":"impl Freeze for CommitNotification","synthetic":true,"types":[]},{"text":"impl Freeze for StateSyncClient","synthetic":true,"types":[]},{"text":"impl Freeze for CoordinatorMessage","synthetic":true,"types":[]},{"text":"impl Freeze for SyncState","synthetic":true,"types":[]},{"text":"impl Freeze for StateSyncSender","synthetic":true,"types":[]},{"text":"impl Freeze for StateSyncMessage","synthetic":true,"types":[]}];
implementors["storage_client"] = [{"text":"impl !Freeze for StorageClient","synthetic":true,"types":[]}];
implementors["storage_interface"] = [{"text":"impl Freeze for StartupInfo","synthetic":true,"types":[]},{"text":"impl Freeze for TreeState","synthetic":true,"types":[]},{"text":"impl Freeze for DbReaderWriter","synthetic":true,"types":[]},{"text":"impl Freeze for GetAccountStateWithProofByVersionRequest","synthetic":true,"types":[]},{"text":"impl Freeze for SaveTransactionsRequest","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Order","synthetic":true,"types":[]},{"text":"impl Freeze for StorageRequest","synthetic":true,"types":[]},{"text":"impl Freeze for MockDbReader","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for VerifiedStateView&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["storage_service"] = [{"text":"impl Freeze for StorageService","synthetic":true,"types":[]}];
implementors["subscription_service"] = [{"text":"impl&lt;T, U&gt; Freeze for SubscriptionService&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for SubscriptionBundle","synthetic":true,"types":[]}];
implementors["swiss_knife"] = [{"text":"impl Freeze for Response","synthetic":true,"types":[]}];
implementors["test_generation"] = [{"text":"impl Freeze for Status","synthetic":true,"types":[]},{"text":"impl Freeze for AbstractValue","synthetic":true,"types":[]},{"text":"impl Freeze for CallGraph","synthetic":true,"types":[]},{"text":"impl Freeze for InstantiableModule","synthetic":true,"types":[]},{"text":"impl Freeze for AbstractState","synthetic":true,"types":[]},{"text":"impl Freeze for BorrowState","synthetic":true,"types":[]},{"text":"impl Freeze for Mutability","synthetic":true,"types":[]},{"text":"impl Freeze for BorrowGraph","synthetic":true,"types":[]},{"text":"impl Freeze for EdgeType","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionGenerationContext","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BytecodeGenerator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Args","synthetic":true,"types":[]},{"text":"impl Freeze for BasicBlock","synthetic":true,"types":[]},{"text":"impl Freeze for CFG","synthetic":true,"types":[]},{"text":"impl Freeze for VMError","synthetic":true,"types":[]},{"text":"impl Freeze for Summary","synthetic":true,"types":[]},{"text":"impl Freeze for Effects","synthetic":true,"types":[]},{"text":"impl Freeze for Subst","synthetic":true,"types":[]},{"text":"impl Freeze for StackBinOpResult","synthetic":true,"types":[]}];
implementors["transaction_builder_generated"] = [{"text":"impl Freeze for ScriptCall","synthetic":true,"types":[]}];
implementors["transaction_builder_generator"] = [{"text":"impl Freeze for Installer","synthetic":true,"types":[]},{"text":"impl Freeze for Installer","synthetic":true,"types":[]},{"text":"impl Freeze for Installer","synthetic":true,"types":[]},{"text":"impl Freeze for Installer","synthetic":true,"types":[]},{"text":"impl Freeze for Installer","synthetic":true,"types":[]}];
implementors["vm"] = [{"text":"impl Freeze for IndexKind","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureTokenKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BoundsChecker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Compatibility","synthetic":true,"types":[]},{"text":"impl Freeze for VMError","synthetic":true,"types":[]},{"text":"impl Freeze for PartialVMError","synthetic":true,"types":[]},{"text":"impl Freeze for Location","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleHandleIndex","synthetic":true,"types":[]},{"text":"impl Freeze for StructHandleIndex","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionHandleIndex","synthetic":true,"types":[]},{"text":"impl Freeze for FieldHandleIndex","synthetic":true,"types":[]},{"text":"impl Freeze for StructDefInstantiationIndex","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionInstantiationIndex","synthetic":true,"types":[]},{"text":"impl Freeze for FieldInstantiationIndex","synthetic":true,"types":[]},{"text":"impl Freeze for IdentifierIndex","synthetic":true,"types":[]},{"text":"impl Freeze for AddressIdentifierIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ConstantPoolIndex","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureIndex","synthetic":true,"types":[]},{"text":"impl Freeze for StructDefinitionIndex","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionDefinitionIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleHandle","synthetic":true,"types":[]},{"text":"impl Freeze for StructHandle","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionHandle","synthetic":true,"types":[]},{"text":"impl Freeze for FieldHandle","synthetic":true,"types":[]},{"text":"impl Freeze for StructDefInstantiation","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionInstantiation","synthetic":true,"types":[]},{"text":"impl Freeze for FieldInstantiation","synthetic":true,"types":[]},{"text":"impl Freeze for StructDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for FieldDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for TypeSignature","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Freeze for Signature","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SignatureTokenPreorderTraversalIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SignatureTokenPreorderTraversalIterWithDepth&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Constant","synthetic":true,"types":[]},{"text":"impl Freeze for CodeUnit","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledScript","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledScriptMut","synthetic":true,"types":[]},{"text":"impl Freeze for ScriptConversionInfo","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledModule","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledModuleMut","synthetic":true,"types":[]},{"text":"impl Freeze for StructFieldInformation","synthetic":true,"types":[]},{"text":"impl Freeze for Kind","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureToken","synthetic":true,"types":[]},{"text":"impl Freeze for Bytecode","synthetic":true,"types":[]},{"text":"impl Freeze for BinaryConstants","synthetic":true,"types":[]},{"text":"impl Freeze for TableType","synthetic":true,"types":[]},{"text":"impl Freeze for SerializedType","synthetic":true,"types":[]},{"text":"impl Freeze for SerializedNominalResourceFlag","synthetic":true,"types":[]},{"text":"impl Freeze for SerializedKind","synthetic":true,"types":[]},{"text":"impl Freeze for SerializedNativeStructFlag","synthetic":true,"types":[]},{"text":"impl Freeze for Opcodes","synthetic":true,"types":[]},{"text":"impl Freeze for Field","synthetic":true,"types":[]},{"text":"impl Freeze for Struct","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionSignature","synthetic":true,"types":[]},{"text":"impl Freeze for Module","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledModuleStrategyGen","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ModuleView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ModuleHandleView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for StructHandleView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for FunctionHandleView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for StructDefinitionView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for FieldDefinitionView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for LocalsSignatureView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for FunctionDefinitionView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for StructInstantiationView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for FieldHandleView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for FunctionInstantiationView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for FieldInstantiationView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for TypeSignatureView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for SignatureView&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for SignatureTokenView&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["vm_genesis"] = [{"text":"impl Freeze for Validator","synthetic":true,"types":[]}];
implementors["vm_validator"] = [{"text":"impl Freeze for MockVMValidator","synthetic":true,"types":[]},{"text":"impl Freeze for VMValidator","synthetic":true,"types":[]}];
implementors["x_core"] = [{"text":"impl&lt;T&gt; Freeze for DebugIgnore&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g&gt; Freeze for WorkspaceSubsets&lt;'g&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'g&gt; Freeze for WorkspaceSubset&lt;'g&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for XCoreContext","synthetic":true,"types":[]},{"text":"impl Freeze for SystemError","synthetic":true,"types":[]},{"text":"impl Freeze for WorkspaceStatus","synthetic":true,"types":[]},{"text":"impl Freeze for XCoreConfig","synthetic":true,"types":[]},{"text":"impl Freeze for SubsetConfig","synthetic":true,"types":[]}];
implementors["x_lint"] = [{"text":"impl&lt;'l, 'a&gt; Freeze for LintFormatter&lt;'l, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for LintMessage","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Freeze for LintSource&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Freeze for RunStatus&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Freeze for SkipReason&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for LintLevel","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Freeze for LintKind&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Freeze for ContentContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Freeze for FilePathContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Freeze for PackageContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Freeze for ProjectContext&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; Freeze for LintEngineConfig&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; Freeze for LintEngine&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Freeze for LintResults&lt;'l&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()