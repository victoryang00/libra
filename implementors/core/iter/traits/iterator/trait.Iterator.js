(function() {var implementors = {};
implementors["diem_crypto"] = [{"text":"impl&lt;'a&gt; Iterator for HashValueBitIterator&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["diem_jellyfish_merkle"] = [{"text":"impl&lt;R&gt; Iterator for JellyfishMerkleIterator&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: TreeReader,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["diem_retrier"] = [{"text":"impl Iterator for FixedDelay","synthetic":false,"types":[]},{"text":"impl Iterator for ExponentWithLimitDelay","synthetic":false,"types":[]}];
implementors["diem_types"] = [{"text":"impl Iterator for AncestorSiblingIterator","synthetic":false,"types":[]},{"text":"impl Iterator for AncestorIterator","synthetic":false,"types":[]},{"text":"impl Iterator for FrozenSubTreeIterator","synthetic":false,"types":[]},{"text":"impl Iterator for FrozenSubtreeSiblingIterator","synthetic":false,"types":[]}];
implementors["move_ir_types"] = [{"text":"impl Iterator for Script","synthetic":false,"types":[]},{"text":"impl Iterator for Block_","synthetic":false,"types":[]}];
implementors["move_lang"] = [{"text":"impl&lt;K:&nbsp;TName, V&gt; Iterator for IntoIter&lt;K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, K:&nbsp;TName, V&gt; Iterator for Iter&lt;'a, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, K:&nbsp;TName, V&gt; Iterator for IterMut&lt;'a, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K:&nbsp;TName, V&gt; Iterator for IntoIter&lt;K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, K:&nbsp;TName, V&gt; Iterator for Iter&lt;'a, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, K:&nbsp;TName, V&gt; Iterator for IterMut&lt;'a, K, V&gt;","synthetic":false,"types":[]}];
implementors["schemadb"] = [{"text":"impl&lt;'a, S&gt; Iterator for SchemaIterator&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Schema,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["vm"] = [{"text":"impl&lt;'a&gt; Iterator for SignatureTokenPreorderTraversalIter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Iterator for SignatureTokenPreorderTraversalIterWithDepth&lt;'a&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()