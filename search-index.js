var searchIndex = JSON.parse('{\
"abigen":{"doc":"","i":[[3,"AbigenOptions","abigen","Options passed into the ABI generator.",null,null],[12,"compiled_script_directory","","Where to find the .mv files of scripts.",0,null],[12,"output_directory","","In which directory to store output.",0,null],[3,"Abigen","","The ABI generator.",null,null],[11,"new","","Creates a new ABI generator.",1,[[["globalenv",3],["abigenoptions",3]]]],[11,"into_result","","Returns the result of ABI generation, a vector of pairs of…",1,[[],["vec",3]]],[11,"gen","","Generates ABIs for all script modules in the environment…",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"clone","","",0,[[],["abigenoptions",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"AbigenOptions"],[3,"Abigen"]]},\
"accumulator":{"doc":"This module provides algorithms for accessing and updating…","i":[[3,"MerkleAccumulator","accumulator","In this live Merkle Accumulator algorithms.",null,null],[0,"test_helpers","","",null,null],[5,"arb_two_hash_batches","accumulator::test_helpers","",null,[[]]],[5,"arb_three_hash_batches","","",null,[[]]],[5,"test_proof_impl","","",null,[[]]],[5,"test_consistency_proof_impl","","",null,[[]]],[5,"test_range_proof_impl","","",null,[[]]],[5,"arb_hash_batch","","",null,[[]]],[5,"test_get_frozen_subtree_hashes_impl","","",null,[[["vec",3],["hashvalue",3]]]],[5,"arb_list_of_hash_batches","","",null,[[]]],[5,"test_append_many_impl","","",null,[[["vec",3],["vec",3]]]],[5,"test_append_empty_impl","","",null,[[["vec",3],["hashvalue",3]]]],[8,"HashReader","accumulator","Defines the interface between `MerkleAccumulator` and…",null,null],[10,"get","","Return `HashValue` carried by the node at `Position`.",0,[[["position",3]],[["hashvalue",3],["result",6]]]],[11,"append","","Given an existing Merkle Accumulator (represented by…",1,[[["leafcount",6]],["result",6]]],[11,"get_proof","","Get proof of inclusion of the leaf at `leaf_index` in this…",1,[[["leafcount",6]],[["result",6],["accumulatorproof",3]]]],[11,"get_consistency_proof","","Gets a proof that shows the full accumulator is consistent…",1,[[["leafcount",6]],[["result",6],["accumulatorconsistencyproof",3]]]],[11,"get_range_proof","","Gets a proof that shows a range of leaves are part of the…",1,[[["leafcount",6],["option",4]],[["result",6],["accumulatorrangeproof",3]]]],[11,"get_range_proof_positions","","See `get_range_proof`. This is the version of it that…",1,[[["leafcount",6],["option",4]],["result",6]]],[11,"get_frozen_subtree_hashes","","From left to right, gets frozen subtree root hashes of the…",1,[[["leafcount",6]],[["vec",3],["result",6]]]],[11,"get_root_hash","","Get root hash at a specific version (hence num_leaves).",1,[[["leafcount",6]],[["hashvalue",3],["result",6]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]]],"p":[[8,"HashReader"],[3,"MerkleAccumulator"]]},\
"backup_cli":{"doc":"","i":[[0,"backup_types","backup_cli","",null,null],[0,"epoch_ending","backup_cli::backup_types","",null,null],[0,"backup","backup_cli::backup_types::epoch_ending","",null,null],[3,"EpochEndingBackupOpt","backup_cli::backup_types::epoch_ending::backup","",null,null],[12,"start_epoch","","",0,null],[12,"end_epoch","","",0,null],[3,"EpochEndingBackupController","","",null,null],[11,"new","","",1,[[["arc",3],["globalbackupopt",3],["backupstorage",8],["arc",3],["epochendingbackupopt",3],["backupserviceclient",3]]]],[11,"run","","",1,[[]]],[0,"manifest","backup_cli::backup_types::epoch_ending","",null,null],[3,"EpochEndingChunk","backup_cli::backup_types::epoch_ending::manifest","A chunk of an epoch ending backup manifest, representing…",null,null],[12,"first_epoch","","",2,null],[12,"last_epoch","","",2,null],[12,"ledger_infos","","",2,null],[3,"EpochEndingBackup","","Epoch ending backup manifest, representing epoch ending…",null,null],[12,"first_epoch","","",3,null],[12,"last_epoch","","",3,null],[12,"waypoints","","",3,null],[12,"chunks","","",3,null],[11,"verify","","",3,[[],["result",6]]],[0,"restore","backup_cli::backup_types::epoch_ending","",null,null],[3,"EpochEndingRestoreOpt","backup_cli::backup_types::epoch_ending::restore","",null,null],[12,"manifest_handle","","",4,null],[3,"EpochEndingRestoreController","","",null,null],[3,"PreheatedEpochEndingRestore","","",null,null],[3,"EpochHistory","","Represents a history of epoch changes since epoch 0.",null,null],[12,"epoch_endings","","",5,null],[3,"EpochHistoryRestoreController","","",null,null],[11,"new","","",6,[[["globalrestoreoptions",3],["epochendingrestoreopt",3],["arc",3],["backupstorage",8]]]],[11,"preheat","","",6,[[]]],[11,"run","","",6,[[["option",4],["ledgerinfo",3]]]],[11,"run","","",7,[[["option",4],["ledgerinfo",3]]]],[11,"verify_ledger_info","","",5,[[["ledgerinfowithsignatures",4]],["result",6]]],[11,"new","","",8,[[["globalrestoreoptions",3],["backupstorage",8],["filehandle",6],["vec",3],["arc",3]]]],[11,"run","","",8,[[]]],[0,"state_snapshot","backup_cli::backup_types","",null,null],[0,"backup","backup_cli::backup_types::state_snapshot","",null,null],[3,"StateSnapshotBackupOpt","backup_cli::backup_types::state_snapshot::backup","",null,null],[12,"version","","",9,null],[3,"StateSnapshotBackupController","","",null,null],[11,"new","","",10,[[["arc",3],["globalbackupopt",3],["backupstorage",8],["arc",3],["statesnapshotbackupopt",3],["backupserviceclient",3]]]],[11,"run","","",10,[[]]],[0,"manifest","backup_cli::backup_types::state_snapshot","",null,null],[3,"StateSnapshotChunk","backup_cli::backup_types::state_snapshot::manifest","A chunk of a state snapshot manifest, representing…",null,null],[12,"first_idx","","index of the first account in this chunk over all accounts.",11,null],[12,"last_idx","","index of the last account in this chunk over all accounts.",11,null],[12,"first_key","","key of the first account in this chunk.",11,null],[12,"last_key","","key of the last account in this chunk.",11,null],[12,"blobs","","Repeated `len(record) + record` where `record` is BCS…",11,null],[12,"proof","","BCS serialized `SparseMerkleRangeProof` that proves this…",11,null],[3,"StateSnapshotBackup","","State snapshot backup manifest, representing a complete…",null,null],[12,"version","","Version at which this state snapshot is taken.",12,null],[12,"root_hash","","Hash of the state tree root.",12,null],[12,"chunks","","All account blobs in chunks.",12,null],[12,"proof","","BCS serialized `Tuple(TransactionInfoWithProof,…",12,null],[0,"restore","backup_cli::backup_types::state_snapshot","",null,null],[3,"StateSnapshotRestoreOpt","backup_cli::backup_types::state_snapshot::restore","",null,null],[12,"manifest_handle","","",13,null],[12,"version","","",13,null],[3,"StateSnapshotRestoreController","","",null,null],[11,"new","","",14,[[["globalrestoreoptions",3],["backupstorage",8],["option",4],["arc",3],["statesnapshotrestoreopt",3],["arc",3]]]],[11,"run","","",14,[[]]],[0,"transaction","backup_cli::backup_types","",null,null],[0,"backup","backup_cli::backup_types::transaction","",null,null],[3,"TransactionBackupOpt","backup_cli::backup_types::transaction::backup","",null,null],[12,"start_version","","",15,null],[12,"num_transactions","","",15,null],[3,"TransactionBackupController","","",null,null],[11,"new","","",16,[[["backupstorage",8],["globalbackupopt",3],["transactionbackupopt",3],["arc",3],["arc",3],["backupserviceclient",3]]]],[11,"run","","",16,[[]]],[0,"manifest","backup_cli::backup_types::transaction","",null,null],[3,"TransactionChunk","backup_cli::backup_types::transaction::manifest","A chunk of a transaction backup manifest to represent the…",null,null],[12,"first_version","","",17,null],[12,"last_version","","",17,null],[12,"transactions","","Repeated `len(record) + record`, where `record` is BCS…",17,null],[12,"proof","","BCS serialized `(TransactionAccumulatorRangeProof,…",17,null],[3,"TransactionBackup","","Transaction backup manifest, representing transactions in…",null,null],[12,"first_version","","",18,null],[12,"last_version","","",18,null],[12,"chunks","","",18,null],[11,"verify","","",18,[[],["result",6]]],[0,"restore","backup_cli::backup_types::transaction","",null,null],[3,"TransactionRestoreOpt","backup_cli::backup_types::transaction::restore","",null,null],[12,"manifest_handle","","",19,null],[12,"replay_from_version","","",19,null],[3,"TransactionRestoreController","","",null,null],[3,"PreheatedTransactionRestore","","",null,null],[3,"TransactionRestoreBatchController","","Takes a series of transaction backup manifests, preheat in…",null,null],[11,"replay_from_version","","",19,[[],["version",6]]],[11,"new","","",20,[[["globalrestoreoptions",3],["transactionrestoreopt",3],["option",4],["arc",3],["arc",3],["backupstorage",8]]]],[11,"preheat","","",20,[[]]],[11,"run","","",20,[[]]],[11,"run","","",21,[[]]],[11,"get_last_version","","",21,[[],[["result",6],["version",6]]]],[11,"new","","",22,[[["backupstorage",8],["option",4],["version",6],["option",4],["globalrestoreoptions",3],["arc",3],["filehandle",6],["vec",3],["arc",3]]]],[11,"run","","",22,[[]]],[0,"coordinators","backup_cli","",null,null],[0,"backup","backup_cli::coordinators","",null,null],[3,"BackupCoordinatorOpt","backup_cli::coordinators::backup","",null,null],[12,"metadata_cache_opt","","",23,null],[12,"state_snapshot_interval","","",23,null],[12,"transaction_batch_size","","",23,null],[3,"BackupCoordinator","","",null,null],[11,"new","","",24,[[["backupstorage",8],["globalbackupopt",3],["arc",3],["backupcoordinatoropt",3],["arc",3],["backupserviceclient",3]]]],[11,"run","","",24,[[]]],[0,"restore","backup_cli::coordinators","",null,null],[3,"RestoreCoordinatorOpt","backup_cli::coordinators::restore","",null,null],[12,"metadata_cache_opt","","",25,null],[3,"RestoreCoordinator","","",null,null],[11,"new","","",26,[[["globalrestoreoptions",3],["restorecoordinatoropt",3],["arc",3],["backupstorage",8]]]],[11,"run","","",26,[[]]],[0,"verify","backup_cli::coordinators","",null,null],[3,"VerifyCoordinator","backup_cli::coordinators::verify","",null,null],[11,"new","","",27,[[["metadatacacheopt",3],["arc",3],["backupstorage",8]],["result",6]]],[11,"run","","",27,[[]]],[0,"metadata","backup_cli","",null,null],[3,"EpochEndingBackupMeta","backup_cli::metadata","",null,null],[12,"first_epoch","","",28,null],[12,"last_epoch","","",28,null],[12,"first_version","","",28,null],[12,"last_version","","",28,null],[12,"manifest","","",28,null],[3,"StateSnapshotBackupMeta","","",null,null],[12,"version","","",29,null],[12,"manifest","","",29,null],[3,"TransactionBackupMeta","","",null,null],[12,"first_version","","",30,null],[12,"last_version","","",30,null],[12,"manifest","","",30,null],[0,"cache","","",null,null],[3,"MetadataCacheOpt","backup_cli::metadata::cache","",null,null],[5,"sync_and_load","","Sync local cache folder with remote storage, and load all…",null,[[["backupstorage",8],["metadatacacheopt",3],["arc",3]]]],[0,"view","backup_cli::metadata","",null,null],[3,"MetadataView","backup_cli::metadata::view","",null,null],[3,"BackupStorageState","","",null,null],[12,"latest_epoch_ending_epoch","","",31,null],[12,"latest_state_snapshot_version","","",31,null],[12,"latest_transaction_version","","",31,null],[11,"get_storage_state","","",32,[[],["backupstoragestate",3]]],[11,"select_state_snapshot","","",32,[[["version",6]],[["result",6],["option",4]]]],[11,"select_transaction_backups","","",32,[[["version",6]],[["vec",3],["result",6]]]],[11,"select_epoch_ending_backups","","",32,[[["version",6]],[["result",6],["vec",3]]]],[0,"metrics","backup_cli","",null,null],[0,"backup","backup_cli::metrics","",null,null],[7,"HEARTBEAT_TS","backup_cli::metrics::backup","",null,null],[7,"EPOCH_ENDING_EPOCH","","",null,null],[7,"STATE_SNAPSHOT_VERSION","","",null,null],[7,"TRANSACTION_VERSION","","",null,null],[0,"metadata","backup_cli::metrics","",null,null],[7,"NUM_META_FILES","backup_cli::metrics::metadata","",null,null],[7,"NUM_META_MISS","","",null,null],[7,"NUM_META_DOWNLOAD","","",null,null],[0,"restore","backup_cli::metrics","",null,null],[7,"COORDINATOR_TARGET_VERSION","backup_cli::metrics::restore","",null,null],[7,"EPOCH_ENDING_EPOCH","","",null,null],[7,"EPOCH_ENDING_VERSION","","",null,null],[7,"STATE_SNAPSHOT_VERSION","","",null,null],[7,"STATE_SNAPSHOT_TARGET_LEAF_INDEX","","",null,null],[7,"STATE_SNAPSHOT_LEAF_INDEX","","",null,null],[7,"TRANSACTION_SAVE_VERSION","","",null,null],[7,"TRANSACTION_REPLAY_VERSION","","",null,null],[7,"COORDINATOR_START_TS","","",null,null],[7,"COORDINATOR_SUCC_TS","","",null,null],[7,"COORDINATOR_FAIL_TS","","",null,null],[0,"verify","backup_cli::metrics","",null,null],[7,"VERIFY_EPOCH_ENDING_EPOCH","backup_cli::metrics::verify","",null,null],[7,"VERIFY_EPOCH_ENDING_VERSION","","",null,null],[7,"VERIFY_STATE_SNAPSHOT_VERSION","","",null,null],[7,"VERIFY_STATE_SNAPSHOT_TARGET_LEAF_INDEX","","",null,null],[7,"VERIFY_STATE_SNAPSHOT_LEAF_INDEX","","",null,null],[7,"VERIFY_TRANSACTION_VERSION","","",null,null],[7,"VERIFY_COORDINATOR_START_TS","","",null,null],[7,"VERIFY_COORDINATOR_SUCC_TS","","",null,null],[7,"VERIFY_COORDINATOR_FAIL_TS","","",null,null],[0,"storage","backup_cli","",null,null],[3,"ShellSafeName","backup_cli::storage","Through this, the backup controller promises to the…",null,null],[3,"TextLine","","",null,null],[4,"StorageOpt","","",null,null],[13,"LocalFs","","",33,null],[13,"CommandAdapter","","",33,null],[0,"command_adapter","","",null,null],[3,"CommandAdapterOpt","backup_cli::storage::command_adapter","",null,null],[3,"CommandAdapter","","A BackupStorage that delegates required APIs to configured…",null,null],[11,"new","","",34,[[["commandadapterconfig",3]]]],[11,"new_with_opt","","",34,[[["commandadapteropt",3]]]],[0,"local_fs","backup_cli::storage","",null,null],[3,"LocalFsOpt","backup_cli::storage::local_fs","",null,null],[12,"dir","","",35,null],[3,"LocalFs","","A storage backend that stores everything in a local…",null,null],[11,"new","","",36,[[["pathbuf",3]]]],[11,"new_with_opt","","",36,[[["localfsopt",3]]]],[11,"metadata_dir","","",36,[[],["pathbuf",3]]],[6,"BackupHandle","backup_cli::storage","String returned by a specific storage implementation to…",null,null],[6,"BackupHandleRef","","",null,null],[6,"FileHandle","","URI pointing to a file in a backup storage, like…",null,null],[6,"FileHandleRef","","",null,null],[8,"BackupStorage","","",null,null],[10,"create_backup","","Hint that a bunch of files are gonna be created related to…",37,[[["shellsafename",3]],[["box",3],["pin",3]]]],[10,"create_for_write","","Ask to create a file for write, `backup_handle` was…",37,[[["shellsafename",3],["backuphandleref",6]],[["box",3],["pin",3]]]],[10,"open_for_read","","Open file for reading.",37,[[["filehandleref",6]],[["pin",3],["box",3]]]],[10,"save_metadata_line","","Asks to save a metadata entry. A metadata entry is one…",37,[[["shellsafename",3],["textline",3]],[["pin",3],["box",3]]]],[10,"list_metadata_files","","The backup system always asks for all metadata files and…",37,[[],[["box",3],["pin",3]]]],[11,"new","","",38,[[],["result",6]]],[11,"init_storage","","",33,[[]]],[0,"utils","backup_cli","",null,null],[3,"GlobalBackupOpt","backup_cli::utils","",null,null],[12,"max_chunk_size","","",39,null],[3,"RocksdbOpt","","",null,null],[3,"GlobalRestoreOpt","","",null,null],[12,"dry_run","","",40,null],[12,"db_dir","","",40,null],[12,"target_version","","",40,null],[12,"trusted_waypoints","","",40,null],[12,"rocksdb_opt","","",40,null],[3,"GlobalRestoreOptions","","",null,null],[12,"target_version","","",41,null],[12,"trusted_waypoints","","",41,null],[12,"run_mode","","",41,null],[3,"TrustedWaypointOpt","","",null,null],[12,"trust_waypoint","","",42,null],[4,"RestoreRunMode","","",null,null],[13,"Restore","","",43,null],[12,"restore_handler","backup_cli::utils::RestoreRunMode","",44,null],[13,"Verify","backup_cli::utils","",43,null],[0,"backup_service_client","","",null,null],[3,"BackupServiceClientOpt","backup_cli::utils::backup_service_client","",null,null],[12,"address","","",45,null],[3,"BackupServiceClient","","",null,null],[11,"new_with_opt","","",46,[[["backupserviceclientopt",3]]]],[11,"new","","",46,[[["string",3]]]],[11,"get_db_state","","",46,[[]]],[11,"get_account_range_proof","","",46,[[["hashvalue",3],["version",6]]]],[11,"get_state_snapshot","","",46,[[["version",6]]]],[11,"get_state_root_proof","","",46,[[["version",6]]]],[11,"get_epoch_ending_ledger_infos","","",46,[[]]],[11,"get_transactions","","",46,[[["version",6]]]],[11,"get_transaction_range_proof","","",46,[[["version",6]]]],[0,"read_record_bytes","backup_cli::utils","",null,null],[8,"ReadRecordBytes","backup_cli::utils::read_record_bytes","",null,null],[10,"read_full_buf_or_none","","",47,[[["bytesmut",3]],[["pin",3],["box",3]]]],[10,"read_record_bytes","","",47,[[],[["pin",3],["box",3]]]],[0,"storage_ext","backup_cli::utils","",null,null],[8,"BackupStorageExt","backup_cli::utils::storage_ext","",null,null],[10,"read_all","","",48,[[["filehandleref",6]],[["pin",3],["box",3]]]],[10,"load_json_file","","",48,[[["filehandleref",6]],[["pin",3],["box",3]]]],[10,"load_bcs_file","","",48,[[["filehandleref",6]],[["pin",3],["box",3]]]],[10,"create_backup_with_random_suffix","","Adds a random suffix \\\".XXXX\\\" to the backup name, so a…",48,[[],[["box",3],["pin",3]]]],[11,"name","backup_cli::utils","",43,[[]]],[11,"is_verify","","",43,[[]]],[11,"get_state_restore_receiver","","",43,[[["hashvalue",3],["version",6]],[["result",6],["jellyfishmerklerestore",3]]]],[11,"verify","","",42,[[],[["hashmap",3],["result",6]]]],[11,"from","backup_cli::backup_types::epoch_ending::backup","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","backup_cli::backup_types::epoch_ending::manifest","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","backup_cli::backup_types::epoch_ending::restore","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","backup_cli::backup_types::state_snapshot::backup","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","backup_cli::backup_types::state_snapshot::manifest","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"erased_serialize","","",11,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"erased_serialize","","",12,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","backup_cli::backup_types::state_snapshot::restore","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","backup_cli::backup_types::transaction::backup","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","backup_cli::backup_types::transaction::manifest","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"erased_serialize","","",17,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"test_only_hash","","",17,[[],["hashvalue",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"erased_serialize","","",18,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"test_only_hash","","",18,[[],["hashvalue",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","backup_cli::backup_types::transaction::restore","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","backup_cli::coordinators::backup","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","backup_cli::coordinators::restore","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","backup_cli::coordinators::verify","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","backup_cli::metadata","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"equivalent","","",28,[[]]],[11,"erased_serialize","","",28,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"test_only_hash","","",28,[[],["hashvalue",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"equivalent","","",29,[[]]],[11,"erased_serialize","","",29,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"equivalent","","",30,[[]]],[11,"erased_serialize","","",30,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"test_only_hash","","",30,[[],["hashvalue",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","backup_cli::metadata::cache","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","backup_cli::metadata::view","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","backup_cli::storage","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","backup_cli::storage::command_adapter","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","backup_cli::storage::local_fs","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","backup_cli::utils","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","backup_cli::utils::backup_service_client","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"create_backup","backup_cli::storage::command_adapter","",34,[[["shellsafename",3]],[["box",3],["pin",3]]]],[11,"create_for_write","","",34,[[["shellsafename",3],["backuphandleref",6]],[["box",3],["pin",3]]]],[11,"open_for_read","","",34,[[["filehandleref",6]],[["pin",3],["box",3]]]],[11,"save_metadata_line","","",34,[[["shellsafename",3],["textline",3]],[["pin",3],["box",3]]]],[11,"list_metadata_files","","",34,[[],[["box",3],["pin",3]]]],[11,"create_backup","backup_cli::storage::local_fs","",36,[[["shellsafename",3]],[["box",3],["pin",3]]]],[11,"create_for_write","","",36,[[["shellsafename",3],["backuphandleref",6]],[["box",3],["pin",3]]]],[11,"open_for_read","","",36,[[["filehandleref",6]],[["pin",3],["box",3]]]],[11,"save_metadata_line","","",36,[[["shellsafename",3],["textline",3]],[["pin",3],["box",3]]]],[11,"list_metadata_files","","",36,[[],[["box",3],["pin",3]]]],[11,"as_ref","backup_cli::storage","",50,[[]]],[11,"as_ref","","",38,[[]]],[11,"from","backup_cli::metadata::view","",32,[[["vec",3],["metadata",4]]]],[11,"clone","backup_cli::backup_types::epoch_ending::restore","",5,[[],["epochhistory",3]]],[11,"clone","backup_cli::backup_types::transaction::manifest","",17,[[],["transactionchunk",3]]],[11,"clone","backup_cli::metadata","",28,[[],["epochendingbackupmeta",3]]],[11,"clone","","",29,[[],["statesnapshotbackupmeta",3]]],[11,"clone","","",30,[[],["transactionbackupmeta",3]]],[11,"clone","backup_cli::utils","",39,[[],["globalbackupopt",3]]],[11,"clone","","",52,[[],["rocksdbopt",3]]],[11,"clone","","",40,[[],["globalrestoreopt",3]]],[11,"clone","","",41,[[],["globalrestoreoptions",3]]],[11,"clone","","",42,[[],["trustedwaypointopt",3]]],[11,"default","","",52,[[]]],[11,"default","","",42,[[],["trustedwaypointopt",3]]],[11,"cmp","backup_cli::metadata","",28,[[["epochendingbackupmeta",3]],["ordering",4]]],[11,"cmp","","",29,[[["statesnapshotbackupmeta",3]],["ordering",4]]],[11,"cmp","","",30,[[["transactionbackupmeta",3]],["ordering",4]]],[11,"eq","","",28,[[["epochendingbackupmeta",3]]]],[11,"ne","","",28,[[["epochendingbackupmeta",3]]]],[11,"eq","","",29,[[["statesnapshotbackupmeta",3]]]],[11,"ne","","",29,[[["statesnapshotbackupmeta",3]]]],[11,"eq","","",30,[[["transactionbackupmeta",3]]]],[11,"ne","","",30,[[["transactionbackupmeta",3]]]],[11,"partial_cmp","","",28,[[["epochendingbackupmeta",3]],[["ordering",4],["option",4]]]],[11,"lt","","",28,[[["epochendingbackupmeta",3]]]],[11,"le","","",28,[[["epochendingbackupmeta",3]]]],[11,"gt","","",28,[[["epochendingbackupmeta",3]]]],[11,"ge","","",28,[[["epochendingbackupmeta",3]]]],[11,"partial_cmp","","",29,[[["statesnapshotbackupmeta",3]],[["ordering",4],["option",4]]]],[11,"lt","","",29,[[["statesnapshotbackupmeta",3]]]],[11,"le","","",29,[[["statesnapshotbackupmeta",3]]]],[11,"gt","","",29,[[["statesnapshotbackupmeta",3]]]],[11,"ge","","",29,[[["statesnapshotbackupmeta",3]]]],[11,"partial_cmp","","",30,[[["transactionbackupmeta",3]],[["ordering",4],["option",4]]]],[11,"lt","","",30,[[["transactionbackupmeta",3]]]],[11,"le","","",30,[[["transactionbackupmeta",3]]]],[11,"gt","","",30,[[["transactionbackupmeta",3]]]],[11,"ge","","",30,[[["transactionbackupmeta",3]]]],[11,"deref","backup_cli::storage","",50,[[]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","backup_cli::metadata::view","",31,[[["formatter",3]],["result",6]]],[11,"try_from","backup_cli::storage","",50,[[["string",3]],["result",6]]],[11,"try_from","backup_cli::utils","",41,[[["globalrestoreopt",3]],["result",6]]],[11,"from_str","backup_cli::metadata::view","",31,[[],["result",6]]],[11,"from_str","backup_cli::storage","",50,[[],["result",6]]],[11,"deserialize","backup_cli::backup_types::epoch_ending::manifest","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","backup_cli::backup_types::state_snapshot::manifest","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","backup_cli::backup_types::transaction::manifest","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","backup_cli::metadata","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"serialize","backup_cli::backup_types::epoch_ending::manifest","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","backup_cli::backup_types::state_snapshot::manifest","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","backup_cli::backup_types::transaction::manifest","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","backup_cli::metadata","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"clap","backup_cli::backup_types::epoch_ending::backup","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"clap","backup_cli::backup_types::epoch_ending::restore","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"clap","backup_cli::backup_types::state_snapshot::backup","",9,[[],["app",3]]],[11,"from_clap","","",9,[[["argmatches",3]]]],[11,"clap","backup_cli::backup_types::state_snapshot::restore","",13,[[],["app",3]]],[11,"from_clap","","",13,[[["argmatches",3]]]],[11,"clap","backup_cli::backup_types::transaction::backup","",15,[[],["app",3]]],[11,"from_clap","","",15,[[["argmatches",3]]]],[11,"clap","backup_cli::backup_types::transaction::restore","",19,[[],["app",3]]],[11,"from_clap","","",19,[[["argmatches",3]]]],[11,"clap","backup_cli::coordinators::backup","",23,[[],["app",3]]],[11,"from_clap","","",23,[[["argmatches",3]]]],[11,"clap","backup_cli::coordinators::restore","",25,[[],["app",3]]],[11,"from_clap","","",25,[[["argmatches",3]]]],[11,"clap","backup_cli::metadata::cache","",49,[[],["app",3]]],[11,"from_clap","","",49,[[["argmatches",3]]]],[11,"clap","backup_cli::storage::command_adapter","",51,[[],["app",3]]],[11,"from_clap","","",51,[[["argmatches",3]]]],[11,"clap","backup_cli::storage::local_fs","",35,[[],["app",3]]],[11,"from_clap","","",35,[[["argmatches",3]]]],[11,"clap","backup_cli::storage","",33,[[],["app",3]]],[11,"from_clap","","",33,[[["argmatches",3]]]],[11,"clap","backup_cli::utils::backup_service_client","",45,[[],["app",3]]],[11,"from_clap","","",45,[[["argmatches",3]]]],[11,"clap","backup_cli::utils","",39,[[],["app",3]]],[11,"from_clap","","",39,[[["argmatches",3]]]],[11,"clap","","",52,[[],["app",3]]],[11,"from_clap","","",52,[[["argmatches",3]]]],[11,"clap","","",40,[[],["app",3]]],[11,"from_clap","","",40,[[["argmatches",3]]]],[11,"clap","","",42,[[],["app",3]]],[11,"from_clap","","",42,[[["argmatches",3]]]],[11,"augment_clap","backup_cli::backup_types::epoch_ending::backup","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]],[11,"augment_clap","backup_cli::backup_types::epoch_ending::restore","",4,[[["app",3]],["app",3]]],[11,"is_subcommand","","",4,[[]]],[11,"augment_clap","backup_cli::backup_types::state_snapshot::backup","",9,[[["app",3]],["app",3]]],[11,"is_subcommand","","",9,[[]]],[11,"augment_clap","backup_cli::backup_types::state_snapshot::restore","",13,[[["app",3]],["app",3]]],[11,"is_subcommand","","",13,[[]]],[11,"augment_clap","backup_cli::backup_types::transaction::backup","",15,[[["app",3]],["app",3]]],[11,"is_subcommand","","",15,[[]]],[11,"augment_clap","backup_cli::backup_types::transaction::restore","",19,[[["app",3]],["app",3]]],[11,"is_subcommand","","",19,[[]]],[11,"augment_clap","backup_cli::coordinators::backup","",23,[[["app",3]],["app",3]]],[11,"is_subcommand","","",23,[[]]],[11,"augment_clap","backup_cli::coordinators::restore","",25,[[["app",3]],["app",3]]],[11,"is_subcommand","","",25,[[]]],[11,"augment_clap","backup_cli::metadata::cache","",49,[[["app",3]],["app",3]]],[11,"is_subcommand","","",49,[[]]],[11,"augment_clap","backup_cli::storage::command_adapter","",51,[[["app",3]],["app",3]]],[11,"is_subcommand","","",51,[[]]],[11,"augment_clap","backup_cli::storage::local_fs","",35,[[["app",3]],["app",3]]],[11,"is_subcommand","","",35,[[]]],[11,"augment_clap","backup_cli::storage","",33,[[["app",3]],["app",3]]],[11,"from_subcommand","","",33,[[],["option",4]]],[11,"is_subcommand","","",33,[[]]],[11,"augment_clap","backup_cli::utils::backup_service_client","",45,[[["app",3]],["app",3]]],[11,"is_subcommand","","",45,[[]]],[11,"augment_clap","backup_cli::utils","",39,[[["app",3]],["app",3]]],[11,"is_subcommand","","",39,[[]]],[11,"augment_clap","","",52,[[["app",3]],["app",3]]],[11,"is_subcommand","","",52,[[]]],[11,"augment_clap","","",40,[[["app",3]],["app",3]]],[11,"is_subcommand","","",40,[[]]],[11,"augment_clap","","",42,[[["app",3]],["app",3]]],[11,"is_subcommand","","",42,[[]]]],"p":[[3,"EpochEndingBackupOpt"],[3,"EpochEndingBackupController"],[3,"EpochEndingChunk"],[3,"EpochEndingBackup"],[3,"EpochEndingRestoreOpt"],[3,"EpochHistory"],[3,"EpochEndingRestoreController"],[3,"PreheatedEpochEndingRestore"],[3,"EpochHistoryRestoreController"],[3,"StateSnapshotBackupOpt"],[3,"StateSnapshotBackupController"],[3,"StateSnapshotChunk"],[3,"StateSnapshotBackup"],[3,"StateSnapshotRestoreOpt"],[3,"StateSnapshotRestoreController"],[3,"TransactionBackupOpt"],[3,"TransactionBackupController"],[3,"TransactionChunk"],[3,"TransactionBackup"],[3,"TransactionRestoreOpt"],[3,"TransactionRestoreController"],[3,"PreheatedTransactionRestore"],[3,"TransactionRestoreBatchController"],[3,"BackupCoordinatorOpt"],[3,"BackupCoordinator"],[3,"RestoreCoordinatorOpt"],[3,"RestoreCoordinator"],[3,"VerifyCoordinator"],[3,"EpochEndingBackupMeta"],[3,"StateSnapshotBackupMeta"],[3,"TransactionBackupMeta"],[3,"BackupStorageState"],[3,"MetadataView"],[4,"StorageOpt"],[3,"CommandAdapter"],[3,"LocalFsOpt"],[3,"LocalFs"],[8,"BackupStorage"],[3,"TextLine"],[3,"GlobalBackupOpt"],[3,"GlobalRestoreOpt"],[3,"GlobalRestoreOptions"],[3,"TrustedWaypointOpt"],[4,"RestoreRunMode"],[13,"Restore"],[3,"BackupServiceClientOpt"],[3,"BackupServiceClient"],[8,"ReadRecordBytes"],[8,"BackupStorageExt"],[3,"MetadataCacheOpt"],[3,"ShellSafeName"],[3,"CommandAdapterOpt"],[3,"RocksdbOpt"]]},\
"backup_service":{"doc":"","i":[[5,"start_backup_service","backup_service","",null,[[["socketaddr",4],["arc",3],["diemdb",3]],["runtime",3]]]],"p":[]},\
"boogie_backend":{"doc":"","i":[[0,"bytecode_translator","boogie_backend","This module translates the bytecode of a module to Boogie…",null,null],[3,"BoogieTranslator","boogie_backend::bytecode_translator","",null,null],[3,"ModuleTranslator","","",null,null],[11,"new","","",0,[[["boogieoptions",3],["functiontargetsholder",3],["globalenv",3],["codewriter",3]]]],[11,"translate","","",0,[[]]],[0,"options","boogie_backend","",null,null],[3,"BoogieOptions","boogie_backend::options","Backend options.",null,null],[12,"boogie_exe","","Path to the boogie executable.",1,null],[12,"z3_exe","","Path to the z3 executable.",1,null],[12,"use_cvc4","","Whether to use cvc4.",1,null],[12,"cvc4_exe","","Path to the cvc4 executable.",1,null],[12,"debug_trace","","Whether to generate debug trace code.",1,null],[12,"boogie_flags","","List of flags to pass on to boogie.",1,null],[12,"use_array_theory","","Whether to use native array theory.",1,null],[12,"generate_smt","","Whether to produce an SMT file for each verification…",1,null],[12,"native_equality","","Whether native instead of stratified equality should be…",1,null],[12,"type_requires","","A string determining the type of requires used for…",1,null],[12,"stratification_depth","","The depth until which stratified functions are expanded.",1,null],[12,"aggressive_func_inline","","A string to be used to inline a function of medium size.…",1,null],[12,"func_inline","","A string to be used to inline a function of small size.…",1,null],[12,"serialize_bound","","A bound to apply to the length of serialization results.",1,null],[12,"bench_repeat","","How many times to call the prover backend for the…",1,null],[12,"vector_using_sequences","","Whether to use the sequence theory as the internal…",1,null],[12,"random_seed","","A seed for the prover.",1,null],[12,"proc_cores","","The number of cores to use for parallel processing of…",1,null],[12,"vc_timeout","","A (soft) timeout for the solver, per verification…",1,null],[12,"keep_artifacts","","Whether Boogie output and log should be saved.",1,null],[12,"eager_threshold","","Eager threshold for quantifier instantiation.",1,null],[12,"lazy_threshold","","Lazy threshold for quantifier instantiation.",1,null],[12,"use_boogie_debug_attrib","","Whether to use the new Boogie `{:debug ..}` attribute for…",1,null],[11,"from","boogie_backend::bytecode_translator","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","boogie_backend::options","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"clone","","",1,[[],["boogieoptions",3]]],[11,"default","","",1,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]]],"p":[[3,"BoogieTranslator"],[3,"BoogieOptions"],[3,"ModuleTranslator"]]},\
"borrow_graph":{"doc":"","i":[[0,"graph","borrow_graph","",null,null],[3,"BorrowGraph","borrow_graph::graph","",null,null],[11,"new","","creates an empty borrow graph",0,[[]]],[11,"is_mutable","","checks if the given reference is mutable or not",0,[[["refid",3]]]],[11,"new_ref","","Adds a new reference to the borrow graph Fails if the id…",0,[[["refid",3]]]],[11,"borrowed_by","","Return the references borrowing the `id` reference The…",0,[[["refid",3]]]],[11,"between_edges","","Return the edges between parent and child",0,[[["refid",3]],["vec",3]]],[11,"out_edges","","Return the outgoing edges from id",0,[[["refid",3]],["vec",3]]],[11,"in_edges","","Return the incoming edges into id",0,[[["refid",3]],["vec",3]]],[11,"add_strong_borrow","","Add a strong (exact) epsilon borrow from `parent_id` to…",0,[[["refid",3]]]],[11,"add_strong_field_borrow","","Add a strong (exact) field borrow from `parent_id` to…",0,[[["refid",3]]]],[11,"add_weak_borrow","","Add a weak (prefix) epsilon borrow from `parent_id` to…",0,[[["refid",3]]]],[11,"add_weak_field_borrow","","Add a weak (prefix) field borrow from `parent_id` to…",0,[[["refid",3]]]],[11,"release","","Remove reference `id` from the graph Fixes any transitive…",0,[[["refid",3]]]],[11,"leq","","checks if `self` covers `other`",0,[[]]],[11,"remap_refs","","Utility for remapping the reference ids according the…",0,[[["btreemap",3]]]],[11,"join","","Joins other into self It adds only \'unmatched\' edges from…",0,[[]]],[11,"contains_id","","Checks if the current reference is in the graph",0,[[["refid",3]]]],[11,"all_refs","","Returns all ref ids in the map",0,[[],[["btreeset",3],["refid",3]]]],[11,"display","","Prints out a view of the borrow graph",0,[[]]],[0,"references","borrow_graph","",null,null],[3,"RefID","borrow_graph::references","Unique identifier for the reference",null,null],[11,"new","","Creates a new reference id from the given number",1,[[]]],[11,"number","","Returns the number representing this reference id.",1,[[]]],[11,"from","borrow_graph::graph","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","borrow_graph::references","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","borrow_graph::graph","",0,[[],["borrowgraph",3]]],[11,"clone","borrow_graph::references","",1,[[],["refid",3]]],[11,"default","borrow_graph::graph","",0,[[],["borrowgraph",3]]],[11,"cmp","borrow_graph::references","",1,[[["refid",3]],["ordering",4]]],[11,"eq","borrow_graph::graph","",0,[[["borrowgraph",3]]]],[11,"ne","","",0,[[["borrowgraph",3]]]],[11,"eq","borrow_graph::references","",1,[[["refid",3]]]],[11,"ne","","",1,[[["refid",3]]]],[11,"partial_cmp","","",1,[[["refid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["refid",3]]]],[11,"le","","",1,[[["refid",3]]]],[11,"gt","","",1,[[["refid",3]]]],[11,"ge","","",1,[[["refid",3]]]],[11,"fmt","borrow_graph::graph","",0,[[["formatter",3]],["result",6]]],[11,"fmt","borrow_graph::references","",1,[[["formatter",3]],["result",6]]]],"p":[[3,"BorrowGraph"],[3,"RefID"]]},\
"bounded_executor":{"doc":"A bounded tokio [`Handle`]. Only a bounded number of tasks…","i":[[3,"BoundedExecutor","bounded_executor","",null,null],[11,"new","","Create a new `BoundedExecutor` from an existing tokio…",0,[[["handle",3]]]],[11,"spawn","","Spawn a [`Future`] on the `BoundedExecutor`. This function…",0,[[]]],[11,"try_spawn","","Try to spawn a [`Future`] on the `BoundedExecutor`. If the…",0,[[],[["result",4],["joinhandle",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["boundedexecutor",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"BoundedExecutor"]]},\
"bytecode":{"doc":"","i":[[5,"print_targets_for_test","bytecode","Print function targets for testing and debugging.",null,[[["globalenv",3],["functiontargetsholder",3]],["string",3]]],[0,"annotations","","",null,null],[3,"Annotations","bytecode::annotations","A container for an extensible, dynamically typed set of…",null,null],[11,"has","","Tests whether annotation of type T is present.",0,[[]]],[11,"get","","Gets annotation of type T.",0,[[],["option",4]]],[11,"set","","Sets annotation of type T.",0,[[["any",8]]]],[11,"remove","","Removes annotation of type T.",0,[[],[["option",4],["box",3]]]],[0,"borrow_analysis","bytecode","Data flow analysis computing borrow information for…",null,null],[3,"BorrowInfo","bytecode::borrow_analysis","",null,null],[3,"BorrowInfoAtCodeOffset","","",null,null],[12,"before","","",1,null],[12,"after","","",1,null],[3,"BorrowAnnotation","","Borrow annotation computed by the borrow analysis processor.",null,null],[3,"BorrowAnalysisProcessor","","Borrow analysis processor.",null,null],[5,"format_borrow_annotation","","Format a borrow annotation.",null,[[["functiontarget",3],["codeoffset",6]],[["option",4],["string",3]]]],[11,"get_children","","Gets the children of this node.",2,[[["borrownode",4]],[["vec",3],["borrownode",4]]]],[11,"get_parents","","Gets the parents of this node.",2,[[["borrownode",4]],[["vec",3],["borrownode",4]]]],[11,"is_in_use","","Checks whether a node is in use. A node is used if it is…",2,[[["borrownode",4]]]],[11,"is_unchecked","","Checks whether this is an unchecked node.",2,[[["borrownode",4]]]],[11,"is_moved","","Checks whether this is a moved node.",2,[[["borrownode",4]]]],[11,"is_spliced","","Checks whether this is an spliced node.",2,[[["borrownode",4]]]],[11,"dying_nodes","","Returns nodes which are dying from this to the next state.…",2,[[["borrowinfo",3]],[["borrownode",4],["vec",3]]]],[11,"is_empty","","",2,[[]]],[11,"borrow_info_str","","",2,[[["functiontarget",3]],["string",3]]],[11,"get_borrow_info_at","","",3,[[["codeoffset",6]],[["option",4],["borrowinfoatcodeoffset",3]]]],[11,"new","","",4,[[],["box",3]]],[0,"clean_and_optimize","bytecode","",null,null],[3,"CleanAndOptimizeProcessor","bytecode::clean_and_optimize","",null,null],[11,"new","","",5,[[],["box",3]]],[0,"compositional_analysis","bytecode","",null,null],[3,"SummaryCache","bytecode::compositional_analysis","Provides access to procedure summaries that have already…",null,null],[8,"CompositionalAnalysis","","Trait that lifts an intraprocedural analysis into a…",null,null],[10,"to_summary","","Specifies mapping from elements of dataflow analysis…",6,[[]]],[11,"summarize","","Computes a postcondition for the procedure `data` and then…",6,[[["functionenv",3],["functiondata",3]],["functiondata",3]]],[11,"new","","",7,[[["functiontargetsholder",3],["globalenv",3]]]],[11,"get","","Return a summary for `fun_id`. Returns None if `fun_id` is…",7,[[["funid",3],["qualifiedid",3]],["option",4]]],[11,"global_env","","",7,[[],["globalenv",3]]],[0,"dataflow_analysis","bytecode","Adapted from AbstractInterpreter for Bytecode, this module…",null,null],[3,"SetDomain","bytecode::dataflow_analysis","",null,null],[12,"0","","",8,null],[3,"MapDomain","","",null,null],[12,"0","","",9,null],[3,"BlockState","","",null,null],[12,"pre","","",10,null],[12,"post","","",10,null],[4,"JoinResult","","",null,null],[13,"Unchanged","","",11,null],[13,"Changed","","",11,null],[6,"StateMap","","",null,null],[8,"AbstractDomain","","",null,null],[10,"join","","",12,[[],["joinresult",4]]],[8,"TransferFunctions","","Take a pre-state + instruction and mutate it to produce a…",null,null],[16,"State","","",13,null],[18,"BACKWARD","","",13,null],[11,"execute_block","","",13,[[["blockid",6],["stacklesscontrolflowgraph",3]]]],[10,"execute","","",13,[[["bytecode",4],["codeoffset",6]]]],[8,"DataflowAnalysis","","",null,null],[11,"analyze_function","","",14,[[["stacklesscontrolflowgraph",3]],["statemap",6]]],[11,"state_per_instruction","","Takes the StateMap resulting from `analyze_function` and…",14,[[["statemap",6],["stacklesscontrolflowgraph",3]],[["btreemap",3],["codeoffset",6]]]],[11,"join","","",11,[[["joinresult",4]],["joinresult",4]]],[11,"singleton","","",8,[[]]],[11,"insert_join","","join `v` with self[k] if `k` is bound, insert `v` otherwise",9,[[]]],[0,"debug_instrumentation","bytecode","Transformation which injects trace instructions which are…",null,null],[3,"DebugInstrumenter","bytecode::debug_instrumentation","",null,null],[11,"new","","",15,[[],["box",3]]],[0,"eliminate_imm_refs","bytecode","",null,null],[3,"EliminateImmRefsProcessor","bytecode::eliminate_imm_refs","",null,null],[3,"EliminateImmRefs","","",null,null],[11,"new","","",16,[[],["box",3]]],[0,"eliminate_mut_refs","bytecode","",null,null],[3,"EliminateMutRefsProcessor","bytecode::eliminate_mut_refs","",null,null],[3,"EliminateMutRefs","","",null,null],[11,"new","","",17,[[],["box",3]]],[0,"function_data_builder","bytecode","Provides a builder for `FunctionData`, including building…",null,null],[3,"FunctionDataBuilder","bytecode::function_data_builder","A builder for `FunctionData`.",null,null],[12,"fun_env","","",18,null],[12,"data","","",18,null],[11,"new","","Creates a new builder.",18,[[["functionenv",3],["functiondata",3]]]],[11,"global_env","","Gets the global env associated with this builder.",18,[[],["globalenv",3]]],[11,"get_target","","Gets a function target viewpoint on this builder. This…",18,[[],["functiontarget",3]]],[11,"new_temp","","Allocates a new temporary.",18,[[["type",4]],["tempindex",6]]],[11,"set_loc","","Sets the default location.",18,[[["loc",3]]]],[11,"set_loc_and_vc_info","","Sets the default location as well as information about…",18,[[["loc",3],["conditiontag",4]]]],[11,"set_loc_from_attr","","Sets the default location from a code attribute id.",18,[[["attrid",3]]]],[11,"set_loc_from_node","","Sets the default location from a node id.",18,[[["nodeid",3]]]],[11,"get_loc","","Gets the location from the bytecode attribute.",18,[[["attrid",3]],["loc",3]]],[11,"new_attr","","Creates a new bytecode attribute id with default location.",18,[[],["attrid",3]]],[11,"new_label","","Creates a new branching label for bytecode.",18,[[],["label",3]]],[11,"mk_bool_const","","Make a boolean constant expression.",18,[[],["exp",4]]],[11,"mk_call","","Makes a Call expression.",18,[[["operation",4],["vec",3],["exp",4],["type",4]],["exp",4]]],[11,"mk_bool_call","","Makes a Call expression with boolean result type.",18,[[["operation",4],["vec",3],["exp",4]],["exp",4]]],[11,"mk_not","","Make a boolean not expression.",18,[[["exp",4]],["exp",4]]],[11,"mk_eq","","Make an equality expression.",18,[[["exp",4]],["exp",4]]],[11,"mk_and","","Make an and expression.",18,[[["exp",4]],["exp",4]]],[11,"mk_or","","Make an or expression.",18,[[["exp",4]],["exp",4]]],[11,"mk_implies","","Make an implies expression.",18,[[["exp",4]],["exp",4]]],[11,"mk_builtin_num_const","","Make a numerical expression for some of the builtin…",18,[[["operation",4]],["exp",4]]],[11,"mk_join_bool","","Join an iterator of boolean expressions with a boolean…",18,[[["operation",4]],[["option",4],["exp",4]]]],[11,"mk_join_opt_bool","","Join two boolean optional expression with binary operator.",18,[[["operation",4],["option",4],["exp",4]],[["option",4],["exp",4]]]],[11,"mk_local","","Makes a local for a temporary.",18,[[["tempindex",6]],["exp",4]]],[11,"get_memory_of_node","","Get\'s the memory associated with a Call(Global,..) or…",18,[[["nodeid",3]],[["qualifiedid",3],["structid",3]]]],[11,"emit","","Emits a bytecode.",18,[[["bytecode",4]]]],[11,"emit_with","","Emits a bytecode via a function which takes a freshly…",18,[[]]],[11,"emit_let","","Emits a let: this creates a new temporary and emits an…",18,[[["exp",4]]]],[0,"function_target","bytecode","",null,null],[3,"FunctionTarget","bytecode::function_target","A FunctionTarget is a drop-in replacement for a…",null,null],[12,"func_env","","",19,null],[12,"data","","",19,null],[3,"FunctionData","","Holds the owned data belonging to a FunctionTarget,…",null,null],[12,"code","","The bytecode.",20,null],[12,"local_types","","The locals, including parameters.",20,null],[12,"return_types","","The return types.",20,null],[12,"param_proxy_map","","TODO(wrwg): document what this is for",20,null],[12,"ref_param_proxy_map","","A map from mut ref input parameters to the generated…",20,null],[12,"ref_param_return_map","","A map from mut ref output parameters to the input…",20,null],[12,"acquires_global_resources","","The set of global resources acquired by  this function.",20,null],[12,"locations","","A map from byte code attribute to source code location.",20,null],[12,"annotations","","Annotations associated with this function.",20,null],[12,"spec_blocks_on_impl","","Map of spec block ids as given by the source, to the code…",20,null],[12,"name_to_index","","A map from local names to temp indices in code.",20,null],[12,"modify_targets","","A cache of targets modified by this function.",20,null],[3,"FunctionDataBuilder","","",null,null],[12,"data","","",21,null],[12,"next_attr_index","","",21,null],[6,"AnnotationFormatter","","A function which is called to display the value of an…",null,null],[11,"new","","",19,[[["functionenv",3],["functiondata",3]],["functiontarget",3]]],[11,"get_name","","Returns the name of this function.",19,[[],["symbol",3]]],[11,"get_id","","Gets the id of this function.",19,[[],["funid",3]]],[11,"symbol_pool","","Shortcut for accessing the symbol pool.",19,[[],["symbolpool",3]]],[11,"module_env","","Shortcut for accessing the module env of this function.",19,[[],["moduleenv",3]]],[11,"global_env","","Shortcut for accessing the global env of this function.",19,[[],["globalenv",3]]],[11,"get_loc","","Returns the location of this function.",19,[[],["loc",3]]],[11,"get_bytecode_loc","","Returns the location of the bytecode with the given…",19,[[["attrid",3]],["loc",3]]],[11,"is_native","","Returns true if this function is native.",19,[[]]],[11,"is_intrinsic","","Returns true if this function is marked as intrinsic",19,[[]]],[11,"is_opaque","","Returns true if this function is opaque.",19,[[]]],[11,"is_public","","Returns true if this function is public.",19,[[]]],[11,"is_mutating","","Returns true if this function mutates any references (i.e.…",19,[[]]],[11,"get_type_parameters","","Returns the type parameters associated with this function.",19,[[],[["typeparameter",3],["vec",3]]]],[11,"get_return_type","","Returns return type at given index.",19,[[],["type",4]]],[11,"get_return_types","","Returns return types of this function.",19,[[]]],[11,"get_return_count","","Returns the number of return values of this function.",19,[[]]],[11,"get_parameter_count","","Return the number of parameters of this function",19,[[]]],[11,"get_parameters","","Return an iterator over this function\'s parameters",19,[[],["range",3]]],[11,"get_local_name","","Get the name to be used for a local. If the local is an…",19,[[],["symbol",3]]],[11,"get_local_index","","Get the index corresponding to a local name",19,[[["symbol",3]],["option",4]]],[11,"get_local_count","","Gets the number of locals of this function, including…",19,[[]]],[11,"get_user_local_count","","Gets the number of user declared locals of this function,…",19,[[]]],[11,"is_temporary","","Returns true if the index is for a temporary, not user…",19,[[]]],[11,"get_local_type","","Gets the type of the local at index. This must use an…",19,[[],["type",4]]],[11,"get_spec","","Returns specification associated with this function.",19,[[],["spec",3]]],[11,"get_spec_on_impl","","Returns specification conditions associated with this…",19,[[["specblockid",3]],["spec",3]]],[11,"is_pragma_true","","Returns the value of a boolean pragma for this function.…",19,[[]]],[11,"get_bytecode","","Gets the bytecode.",19,[[]]],[11,"get_annotations","","Gets annotations.",19,[[],["annotations",3]]],[11,"get_acquires_global_resources","","Gets acquired resources",19,[[]]],[11,"get_return_index","","Gets index of return parameter for a reference input…",19,[[],["option",4]]],[11,"get_input_for_return_index","","For a return index, return the reference input parameter.…",19,[[],["option",4]]],[11,"get_proxy_index","","TODO(wrwg): better document what this does, it seems to be…",19,[[],["option",4]]],[11,"get_ref_proxy_index","","Gets index of mutable proxy variable for an input ref…",19,[[],["option",4]]],[11,"get_reverse_ref_proxy_index","","Reverse of `get_ref_proxy_index`.",19,[[],["option",4]]],[11,"is_unchecked_param","","Returns true if this is an unchecked parameter. Such a…",19,[[["tempindex",6]]]],[11,"call_ends_lifetime","","Returns whether a call to this function ends lifetime of…",19,[[]]],[11,"get_modify_targets_for_type","","Gets modify targets for a type",19,[[["qualifiedid",3]],[["option",4],["vec",3]]]],[11,"get_modify_targets","","Gets all modify targets",19,[[],["btreemap",3]]],[11,"new","","Creates new function target data.",20,[[["codeoffset",6],["specblockid",3],["loc",3],["type",4],["attrid",3],["vec",3],["functionenv",3],["bytecode",4],["structid",3],["vec",3],["vec",3],["btreemap",3],["btreemap",3]]]],[11,"next_free_attr_index","","Computes the next available index for AttrId.",20,[[]]],[11,"next_free_label_index","","Computes the next available index for Label.",20,[[]]],[11,"get_callees","","Return the set of callees invoked by this function,…",20,[[],[["qualifiedid",3],["btreeset",3]]]],[11,"rename_vars","","Apply a variable renaming to this data, adjusting internal…",20,[[]]],[11,"register_annotation_formatter","","Register a formatter. Each function target processor which…",19,[[["annotationformatter",6],["box",3]]]],[11,"register_annotation_formatters_for_test","","Tests use this function to register all relevant…",19,[[]]],[0,"function_target_pipeline","bytecode","",null,null],[3,"FunctionTargetsHolder","bytecode::function_target_pipeline","A data structure which holds data for multiple function…",null,null],[3,"FunctionTargetPipeline","","A processing pipeline for function targets.",null,null],[4,"FunctionVariant","","Describes a function target variant.",null,null],[13,"Baseline","","The baseline variant which was created from the original…",22,null],[13,"Verification","","The variant which is instrumented for verification. Only…",22,null],[8,"FunctionTargetProcessor","","A trait for processing a function target. Takes as…",null,null],[10,"process","","",23,[[["functiondata",3],["functiontargetsholder",3],["functionenv",3]],["functiondata",3]]],[10,"name","","Returns a name for this processor. This should be suitable…",23,[[],["string",3]]],[11,"add_target","","Adds a new function target. The target will be initialized…",24,[[["functionenv",3]]]],[11,"get_target","","Gets a function target for read-only consumption, for the…",24,[[["functionenv",3],["functionvariant",4]],["functiontarget",3]]],[11,"get_annotated_target","","Gets the function target from the variant which owns the…",24,[[["functionenv",3]],["functiontarget",3]]],[11,"get_target_variants","","Gets all available variants for function.",24,[[["functionenv",3]],[["vec",3],["functionvariant",4]]]],[11,"get_targets","","Gets targets for all available variants.",24,[[["functionenv",3]],["vec",3]]],[11,"get_target_data","","Gets function data for a variant.",24,[[["qualifiedid",3],["functionvariant",4]],[["option",4],["functiondata",3]]]],[11,"remove_target_data","","Removes function data for a variant.",24,[[["qualifiedid",3],["functionvariant",4]],["functiondata",3]]],[11,"insert_target_data","","Sets function data for a function\'s variant.",24,[[["qualifiedid",3],["functionvariant",4],["functiondata",3]]]],[11,"add_processor","","Adds a processor to this pipeline. Processor will be…",25,[[["box",3],["functiontargetprocessor",8]]]],[11,"run","","Runs the pipeline on all functions in the targets holder.…",25,[[["globalenv",3],["string",3],["option",4],["functiontargetsholder",3]]]],[0,"graph","bytecode","",null,null],[3,"Reducible","bytecode::graph","",null,null],[12,"loop_headers","","",26,null],[12,"natural_loops","","",26,null],[3,"Graph","","",null,null],[11,"new","","This function creates a graph from a set of nodes (with a…",27,[[["vec",3],["vec",3]]]],[11,"compute_reducible","","This function computes the loop headers and natural loops…",27,[[],[["option",4],["reducible",3]]]],[0,"livevar_analysis","bytecode","",null,null],[3,"LiveVarInfoAtCodeOffset","bytecode::livevar_analysis","The annotation for live variable analysis. For each code…",null,null],[12,"before","","",28,null],[12,"after","","",28,null],[3,"LiveVarAnnotation","","",null,null],[3,"LiveVarAnalysisProcessor","","",null,null],[5,"format_livevar_annotation","","Format a live variable annotation.",null,[[["functiontarget",3],["codeoffset",6]],[["option",4],["string",3]]]],[11,"get_live_var_info_at","","",29,[[["codeoffset",6]],[["livevarinfoatcodeoffset",3],["option",4]]]],[11,"new","","",30,[[],["box",3]]],[11,"new_no_annotate","","",30,[[],["box",3]]],[0,"memory_instrumentation","bytecode","",null,null],[3,"MemoryInstrumentationProcessor","bytecode::memory_instrumentation","",null,null],[11,"new","","",31,[[],["box",3]]],[0,"options","bytecode","",null,null],[3,"ProverOptions","bytecode::options","",null,null],[12,"generate_only","","Whether to only generate backend code.",32,null],[12,"native_stubs","","Whether to generate stubs for native functions.",32,null],[12,"minimize_execution_trace","","Whether to minimize execution traces in errors.",32,null],[12,"omit_model_debug","","Whether to omit debug information in generated model.",32,null],[12,"stable_test_output","","Whether output for e.g. diagnosis shall be stable/redacted…",32,null],[12,"verify_scope","","Scope of what functions to verify.",32,null],[12,"resource_wellformed_axiom","","[deprecated] Whether to emit global axiom that resources…",32,null],[12,"assume_wellformed_on_access","","Whether to assume wellformedness when elements are read…",32,null],[12,"assume_invariant_on_access","","Whether to assume a global invariant when the related…",32,null],[12,"deep_pack_unpack","","Whether pack/unpack should recurse over the structure.",32,null],[12,"debug_trace","","Whether to automatically debug trace values of…",32,null],[12,"report_warnings","","Report warnings. This is not on by default. We may turn it…",32,null],[12,"dump_bytecode","","Whether to dump the transformed stackless bytecode to a file",32,null],[12,"num_instances","","Number of Boogie instances to be run concurrently.",32,null],[12,"sequential_task","","Whether to run Boogie instances sequentially.",32,null],[12,"negative_checks","","Run negative verification checks.",32,null],[7,"PROVER_DEFAULT_OPTIONS","","",null,null],[0,"packed_types_analysis","bytecode","",null,null],[3,"PackedTypesProcessor","bytecode::packed_types_analysis","",null,null],[5,"get_packed_types","","Get all closed types that may be packed by (1) genesis and…",null,[[["globalenv",3],["functiontargetsholder",3]],[["btreeset",3],["structtag",3]]]],[11,"new","","",33,[[],["box",3]]],[0,"reaching_def_analysis","bytecode","",null,null],[3,"ReachingDefAnnotation","bytecode::reaching_def_analysis","The annotation for reaching definitions. For each code…",null,null],[3,"ReachingDefProcessor","","",null,null],[4,"Def","","The reaching definitions we are capturing. Currently we…",null,null],[13,"Alias","","",34,null],[5,"format_reaching_def_annotation","","Format a reaching definition annotation.",null,[[["functiontarget",3],["codeoffset",6]],[["option",4],["string",3]]]],[11,"new","","",35,[[],["box",3]]],[11,"new_no_preserve_user_locals","","",35,[[],["box",3]]],[11,"copy_propagation","","Perform copy propagation based on reaching definitions…",35,[[["reachingdefannotation",3],["functiontarget",3],["vec",3],["bytecode",4]],[["vec",3],["bytecode",4]]]],[0,"spec_instrumentation","bytecode","",null,null],[3,"SpecInstrumenter","bytecode::spec_instrumentation","",null,null],[11,"new","","",36,[[],["box",3]]],[0,"stackless_bytecode","bytecode","",null,null],[3,"Label","bytecode::stackless_bytecode","A label for a branch destination.",null,null],[3,"AttrId","","An id for an attribute attached to an instruction.",null,null],[3,"SpecBlockId","","An id for a spec block. A spec block can contain assumes…",null,null],[3,"BytecodeDisplay","","A display object for a bytecode.",null,null],[3,"OperationDisplay","","A display object for an operation.",null,null],[3,"BorrowNodeDisplay","","A display object for a borrow node.",null,null],[4,"AssignKind","","The kind of an assignment in the bytecode.",null,null],[13,"Copy","","The assign copies the lhs value.",37,null],[13,"Move","","The assign moves the lhs value.",37,null],[13,"Store","","The assign stores the lhs value.",37,null],[4,"Constant","","A constant value.",null,null],[13,"Bool","","",38,null],[13,"U8","","",38,null],[13,"U64","","",38,null],[13,"U128","","",38,null],[13,"Address","","",38,null],[13,"ByteArray","","",38,null],[4,"Operation","","An operation -- target of a call. This contains user…",null,null],[13,"Function","","",39,null],[13,"Pack","","",39,null],[13,"Unpack","","",39,null],[13,"MoveTo","","",39,null],[13,"MoveFrom","","",39,null],[13,"Exists","","",39,null],[13,"BorrowLoc","","",39,null],[13,"BorrowField","","",39,null],[13,"BorrowGlobal","","",39,null],[13,"GetField","","",39,null],[13,"GetGlobal","","",39,null],[13,"Destroy","","",39,null],[13,"ReadRef","","",39,null],[13,"WriteRef","","",39,null],[13,"FreezeRef","","",39,null],[13,"WriteBack","","",39,null],[13,"Splice","","",39,null],[13,"UnpackRef","","",39,null],[13,"PackRef","","",39,null],[13,"UnpackRefDeep","","",39,null],[13,"PackRefDeep","","",39,null],[13,"CastU8","","",39,null],[13,"CastU64","","",39,null],[13,"CastU128","","",39,null],[13,"Not","","",39,null],[13,"Add","","",39,null],[13,"Sub","","",39,null],[13,"Mul","","",39,null],[13,"Div","","",39,null],[13,"Mod","","",39,null],[13,"BitOr","","",39,null],[13,"BitAnd","","",39,null],[13,"Xor","","",39,null],[13,"Shl","","",39,null],[13,"Shr","","",39,null],[13,"Lt","","",39,null],[13,"Gt","","",39,null],[13,"Le","","",39,null],[13,"Ge","","",39,null],[13,"Or","","",39,null],[13,"And","","",39,null],[13,"Eq","","",39,null],[13,"Neq","","",39,null],[13,"TraceLocal","","",39,null],[13,"TraceReturn","","",39,null],[13,"TraceAbort","","",39,null],[4,"BorrowNode","","A borrow node -- used in memory operations.",null,null],[13,"GlobalRoot","","",40,null],[13,"LocalRoot","","",40,null],[13,"Reference","","",40,null],[4,"PropKind","","A specification property kind.",null,null],[13,"Assert","","",41,null],[13,"Assume","","",41,null],[13,"Modifies","","",41,null],[4,"Bytecode","","The stackless bytecode.",null,null],[13,"SpecBlock","","",42,null],[13,"Assign","","",42,null],[13,"Call","","",42,null],[13,"Ret","","",42,null],[13,"Load","","",42,null],[13,"Branch","","",42,null],[13,"OnAbort","","",42,null],[13,"Jump","","",42,null],[13,"Label","","",42,null],[13,"Abort","","",42,null],[13,"Nop","","",42,null],[13,"SaveMem","","",42,null],[13,"SaveSpecVar","","",42,null],[13,"Prop","","",42,null],[6,"TempIndex","","",null,null],[11,"new","","",43,[[]]],[11,"as_usize","","",43,[[]]],[11,"new","","",44,[[]]],[11,"as_usize","","",44,[[]]],[11,"new","","",45,[[]]],[11,"as_usize","","",45,[[]]],[11,"can_abort","","Returns true of the operation can cause abort.",39,[[]]],[11,"get_ref","","",40,[[],[["option",4],["tempindex",6]]]],[11,"get_attr_id","","",42,[[],["attrid",3]]],[11,"is_exit","","",42,[[]]],[11,"is_return","","",42,[[]]],[11,"is_unconditional_branch","","",42,[[]]],[11,"is_conditional_branch","","",42,[[]]],[11,"is_branch","","",42,[[]]],[11,"branch_dests","","Return the destination(s) if self is a branch/jump…",42,[[],[["label",3],["vec",3]]]],[11,"label_offsets","","Returns a mapping from labels to code offsets.",42,[[],[["label",3],["btreemap",3],["codeoffset",6]]]],[11,"get_successors","","Return the successor offsets of this instruction. In…",42,[[["codeoffset",6],["btreemap",3]],[["vec",3],["codeoffset",6]]]],[11,"get_exits","","Returns the code offsets at which the code exits(aborts or…",42,[[],[["vec",3],["codeoffset",6]]]],[11,"remap_all_vars","","Remaps variables in the instruction.",42,[[["functiontarget",3]]]],[11,"remap_src_vars","","Remaps variables in source position in the instruction.",42,[[["functiontarget",3]]]],[11,"modifies","","Return the temporaries this instruction modifies. This…",42,[[["functiontarget",3]],[["vec",3],["tempindex",6]]]],[11,"display","","Creates a format object for a bytecode in context of a…",42,[[["functiontarget",3]],["bytecodedisplay",3]]],[11,"display","","Creates a format object for a bytecode in context of a…",39,[[["functiontarget",3]],["operationdisplay",3]]],[11,"display","","Creates a format object for a borrow node in context of a…",40,[[["functiontarget",3]],["borrownodedisplay",3]]],[0,"stackless_bytecode_generator","bytecode","",null,null],[3,"StacklessBytecodeGenerator","bytecode::stackless_bytecode_generator","",null,null],[11,"new","","",46,[[["functionenv",3]]]],[11,"generate_function","","",46,[[],["functiondata",3]]],[11,"generate_bytecode","","",46,[[["btreemap",3],["movebytecode",4],["btreemap",3],["codeoffset",6]]]],[0,"stackless_control_flow_graph","bytecode","Adapted from control_flow_graph for Bytecode, this module…",null,null],[3,"StacklessControlFlowGraph","bytecode::stackless_control_flow_graph","",null,null],[6,"BlockId","","",null,null],[11,"new_forward","","",47,[[]]],[11,"new_backward","","",47,[[]]],[11,"block_start","","",47,[[["blockid",6]],["codeoffset",6]]],[11,"block_end","","",47,[[["blockid",6]],["codeoffset",6]]],[11,"successors","","",47,[[["blockid",6]],["vec",3]]],[11,"blocks","","",47,[[],[["blockid",6],["vec",3]]]],[11,"entry_blocks","","",47,[[],[["blockid",6],["vec",3]]]],[11,"exit_blocks","","",47,[[],[["blockid",6],["vec",3]]]],[11,"instr_indexes","","",47,[[["blockid",6]],[["doubleendediterator",8],["box",3]]]],[11,"num_blocks","","",47,[[]]],[0,"usage_analysis","bytecode","",null,null],[3,"UsageProcessor","bytecode::usage_analysis","",null,null],[5,"get_used_memory","","",null,[[["functiontarget",3]],["btreeset",3]]],[5,"get_modified_memory","","",null,[[["functiontarget",3]],["btreeset",3]]],[5,"get_directly_modified_memory","","",null,[[["functiontarget",3]],["btreeset",3]]],[11,"new","","",48,[[],["box",3]]],[11,"from","bytecode::annotations","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","bytecode::borrow_analysis","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","bytecode::clean_and_optimize","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","bytecode::compositional_analysis","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","bytecode::dataflow_analysis","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"equivalent","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"equivalent","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"equivalent","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"equivalent","","",11,[[]]],[11,"from","bytecode::debug_instrumentation","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","bytecode::eliminate_imm_refs","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","bytecode::eliminate_mut_refs","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","bytecode::function_data_builder","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","bytecode::function_target","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","bytecode::function_target_pipeline","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"equivalent","","",22,[[]]],[11,"from","bytecode::graph","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","bytecode::livevar_analysis","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","bytecode::memory_instrumentation","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","bytecode::options","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"test_only_hash","","",32,[[],["hashvalue",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","bytecode::packed_types_analysis","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","bytecode::reaching_def_analysis","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"equivalent","","",34,[[]]],[11,"from","bytecode::spec_instrumentation","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","bytecode::stackless_bytecode","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"equivalent","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"equivalent","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"equivalent","","",45,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"equivalent","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"equivalent","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"equivalent","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"equivalent","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"equivalent","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"equivalent","","",42,[[]]],[11,"from","bytecode::stackless_bytecode_generator","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","bytecode::stackless_control_flow_graph","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","bytecode::usage_analysis","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"join","bytecode::borrow_analysis","",2,[[],["joinresult",4]]],[11,"join","bytecode::dataflow_analysis","",8,[[],["joinresult",4]]],[11,"join","","",9,[[],["joinresult",4]]],[11,"process","bytecode::borrow_analysis","",4,[[["functiondata",3],["functiontargetsholder",3],["functionenv",3]],["functiondata",3]]],[11,"name","","",4,[[],["string",3]]],[11,"process","bytecode::clean_and_optimize","",5,[[["functiondata",3],["functiontargetsholder",3],["functionenv",3]],["functiondata",3]]],[11,"name","","",5,[[],["string",3]]],[11,"process","bytecode::debug_instrumentation","",15,[[["functiondata",3],["functiontargetsholder",3],["functionenv",3]],["functiondata",3]]],[11,"name","","",15,[[],["string",3]]],[11,"process","bytecode::eliminate_imm_refs","",16,[[["functiondata",3],["functiontargetsholder",3],["functionenv",3]],["functiondata",3]]],[11,"name","","",16,[[],["string",3]]],[11,"process","bytecode::eliminate_mut_refs","",17,[[["functiondata",3],["functiontargetsholder",3],["functionenv",3]],["functiondata",3]]],[11,"name","","",17,[[],["string",3]]],[11,"process","bytecode::livevar_analysis","",30,[[["functiondata",3],["functiontargetsholder",3],["functionenv",3]],["functiondata",3]]],[11,"name","","",30,[[],["string",3]]],[11,"process","bytecode::memory_instrumentation","",31,[[["functiondata",3],["functiontargetsholder",3],["functionenv",3]],["functiondata",3]]],[11,"name","","",31,[[],["string",3]]],[11,"process","bytecode::packed_types_analysis","",33,[[["functiondata",3],["functiontargetsholder",3],["functionenv",3]],["functiondata",3]]],[11,"name","","",33,[[],["string",3]]],[11,"process","bytecode::reaching_def_analysis","",35,[[["functiondata",3],["functiontargetsholder",3],["functionenv",3]],["functiondata",3]]],[11,"name","","",35,[[],["string",3]]],[11,"process","bytecode::spec_instrumentation","",36,[[["functiondata",3],["functiontargetsholder",3],["functionenv",3]],["functiondata",3]]],[11,"name","","",36,[[],["string",3]]],[11,"process","bytecode::usage_analysis","",48,[[["functiondata",3],["functiontargetsholder",3],["functionenv",3]],["functiondata",3]]],[11,"name","","",48,[[],["string",3]]],[11,"clone","bytecode::borrow_analysis","",2,[[],["borrowinfo",3]]],[11,"clone","bytecode::dataflow_analysis","",11,[[],["joinresult",4]]],[11,"clone","","",8,[[],["setdomain",3]]],[11,"clone","","",9,[[],["mapdomain",3]]],[11,"clone","","",10,[[],["blockstate",3]]],[11,"clone","bytecode::function_target","",19,[[]]],[11,"clone","","Create a clone of this function data, without annotations.",20,[[]]],[11,"clone","bytecode::function_target_pipeline","",22,[[],["functionvariant",4]]],[11,"clone","bytecode::options","",32,[[],["proveroptions",3]]],[11,"clone","bytecode::reaching_def_analysis","",34,[[],["def",4]]],[11,"clone","bytecode::stackless_bytecode","",43,[[],["label",3]]],[11,"clone","","",44,[[],["attrid",3]]],[11,"clone","","",45,[[],["specblockid",3]]],[11,"clone","","",37,[[],["assignkind",4]]],[11,"clone","","",38,[[],["constant",4]]],[11,"clone","","",39,[[],["operation",4]]],[11,"clone","","",40,[[],["borrownode",4]]],[11,"clone","","",41,[[],["propkind",4]]],[11,"clone","","",42,[[],["bytecode",4]]],[11,"default","bytecode::annotations","",0,[[],["annotations",3]]],[11,"default","bytecode::borrow_analysis","",2,[[],["borrowinfo",3]]],[11,"default","bytecode::dataflow_analysis","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","bytecode::function_target_pipeline","",24,[[],["functiontargetsholder",3]]],[11,"default","","",25,[[],["functiontargetpipeline",3]]],[11,"default","bytecode::livevar_analysis","",28,[[],["livevarinfoatcodeoffset",3]]],[11,"default","","",29,[[],["livevarannotation",3]]],[11,"default","bytecode::options","",32,[[]]],[11,"default","bytecode::reaching_def_analysis","",51,[[],["reachingdefannotation",3]]],[11,"cmp","bytecode::dataflow_analysis","",8,[[["setdomain",3]],["ordering",4]]],[11,"cmp","","",9,[[["mapdomain",3]],["ordering",4]]],[11,"cmp","","",10,[[["blockstate",3]],["ordering",4]]],[11,"cmp","bytecode::function_target_pipeline","",22,[[["functionvariant",4]],["ordering",4]]],[11,"cmp","bytecode::reaching_def_analysis","",34,[[["def",4]],["ordering",4]]],[11,"cmp","bytecode::stackless_bytecode","",43,[[["label",3]],["ordering",4]]],[11,"cmp","","",44,[[["attrid",3]],["ordering",4]]],[11,"cmp","","",45,[[["specblockid",3]],["ordering",4]]],[11,"cmp","","",37,[[["assignkind",4]],["ordering",4]]],[11,"cmp","","",38,[[["constant",4]],["ordering",4]]],[11,"cmp","","",40,[[["borrownode",4]],["ordering",4]]],[11,"cmp","","",41,[[["propkind",4]],["ordering",4]]],[11,"eq","bytecode::borrow_analysis","",2,[[["borrowinfo",3]]]],[11,"ne","","",2,[[["borrowinfo",3]]]],[11,"eq","bytecode::dataflow_analysis","",11,[[["joinresult",4]]]],[11,"eq","","",8,[[["setdomain",3]]]],[11,"ne","","",8,[[["setdomain",3]]]],[11,"eq","","",9,[[["mapdomain",3]]]],[11,"ne","","",9,[[["mapdomain",3]]]],[11,"eq","","",10,[[["blockstate",3]]]],[11,"ne","","",10,[[["blockstate",3]]]],[11,"eq","bytecode::function_target_pipeline","",22,[[["functionvariant",4]]]],[11,"eq","bytecode::reaching_def_analysis","",34,[[["def",4]]]],[11,"ne","","",34,[[["def",4]]]],[11,"eq","bytecode::stackless_bytecode","",43,[[["label",3]]]],[11,"ne","","",43,[[["label",3]]]],[11,"eq","","",44,[[["attrid",3]]]],[11,"ne","","",44,[[["attrid",3]]]],[11,"eq","","",45,[[["specblockid",3]]]],[11,"ne","","",45,[[["specblockid",3]]]],[11,"eq","","",37,[[["assignkind",4]]]],[11,"eq","","",38,[[["constant",4]]]],[11,"ne","","",38,[[["constant",4]]]],[11,"eq","","",39,[[["operation",4]]]],[11,"ne","","",39,[[["operation",4]]]],[11,"eq","","",40,[[["borrownode",4]]]],[11,"ne","","",40,[[["borrownode",4]]]],[11,"eq","","",41,[[["propkind",4]]]],[11,"eq","","",42,[[["bytecode",4]]]],[11,"ne","","",42,[[["bytecode",4]]]],[11,"partial_cmp","bytecode::borrow_analysis","",2,[[["borrowinfo",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["borrowinfo",3]]]],[11,"le","","",2,[[["borrowinfo",3]]]],[11,"gt","","",2,[[["borrowinfo",3]]]],[11,"ge","","",2,[[["borrowinfo",3]]]],[11,"partial_cmp","bytecode::dataflow_analysis","",8,[[["setdomain",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["setdomain",3]]]],[11,"le","","",8,[[["setdomain",3]]]],[11,"gt","","",8,[[["setdomain",3]]]],[11,"ge","","",8,[[["setdomain",3]]]],[11,"partial_cmp","","",9,[[["mapdomain",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["mapdomain",3]]]],[11,"le","","",9,[[["mapdomain",3]]]],[11,"gt","","",9,[[["mapdomain",3]]]],[11,"ge","","",9,[[["mapdomain",3]]]],[11,"partial_cmp","","",10,[[["blockstate",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["blockstate",3]]]],[11,"le","","",10,[[["blockstate",3]]]],[11,"gt","","",10,[[["blockstate",3]]]],[11,"ge","","",10,[[["blockstate",3]]]],[11,"partial_cmp","bytecode::function_target_pipeline","",22,[[["functionvariant",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","bytecode::reaching_def_analysis","",34,[[["def",4]],[["ordering",4],["option",4]]]],[11,"lt","","",34,[[["def",4]]]],[11,"le","","",34,[[["def",4]]]],[11,"gt","","",34,[[["def",4]]]],[11,"ge","","",34,[[["def",4]]]],[11,"partial_cmp","bytecode::stackless_bytecode","",43,[[["label",3]],[["ordering",4],["option",4]]]],[11,"lt","","",43,[[["label",3]]]],[11,"le","","",43,[[["label",3]]]],[11,"gt","","",43,[[["label",3]]]],[11,"ge","","",43,[[["label",3]]]],[11,"partial_cmp","","",44,[[["attrid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",44,[[["attrid",3]]]],[11,"le","","",44,[[["attrid",3]]]],[11,"gt","","",44,[[["attrid",3]]]],[11,"ge","","",44,[[["attrid",3]]]],[11,"partial_cmp","","",45,[[["specblockid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",45,[[["specblockid",3]]]],[11,"le","","",45,[[["specblockid",3]]]],[11,"gt","","",45,[[["specblockid",3]]]],[11,"ge","","",45,[[["specblockid",3]]]],[11,"partial_cmp","","",37,[[["assignkind",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",38,[[["constant",4]],[["ordering",4],["option",4]]]],[11,"lt","","",38,[[["constant",4]]]],[11,"le","","",38,[[["constant",4]]]],[11,"gt","","",38,[[["constant",4]]]],[11,"ge","","",38,[[["constant",4]]]],[11,"partial_cmp","","",40,[[["borrownode",4]],[["ordering",4],["option",4]]]],[11,"lt","","",40,[[["borrownode",4]]]],[11,"le","","",40,[[["borrownode",4]]]],[11,"gt","","",40,[[["borrownode",4]]]],[11,"ge","","",40,[[["borrownode",4]]]],[11,"partial_cmp","","",41,[[["propkind",4]],[["ordering",4],["option",4]]]],[11,"deref","bytecode::dataflow_analysis","",8,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",8,[[]]],[11,"deref_mut","","",9,[[]]],[11,"fmt","bytecode::annotations","",0,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::borrow_analysis","",2,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::dataflow_analysis","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::function_target","",20,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::function_target_pipeline","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::livevar_analysis","",28,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::options","",32,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::reaching_def_analysis","",34,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::stackless_bytecode","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::function_target","",19,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::function_target_pipeline","",22,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::stackless_bytecode","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"deserialize","bytecode::options","",32,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]]],"p":[[3,"Annotations"],[3,"BorrowInfoAtCodeOffset"],[3,"BorrowInfo"],[3,"BorrowAnnotation"],[3,"BorrowAnalysisProcessor"],[3,"CleanAndOptimizeProcessor"],[8,"CompositionalAnalysis"],[3,"SummaryCache"],[3,"SetDomain"],[3,"MapDomain"],[3,"BlockState"],[4,"JoinResult"],[8,"AbstractDomain"],[8,"TransferFunctions"],[8,"DataflowAnalysis"],[3,"DebugInstrumenter"],[3,"EliminateImmRefsProcessor"],[3,"EliminateMutRefsProcessor"],[3,"FunctionDataBuilder"],[3,"FunctionTarget"],[3,"FunctionData"],[3,"FunctionDataBuilder"],[4,"FunctionVariant"],[8,"FunctionTargetProcessor"],[3,"FunctionTargetsHolder"],[3,"FunctionTargetPipeline"],[3,"Reducible"],[3,"Graph"],[3,"LiveVarInfoAtCodeOffset"],[3,"LiveVarAnnotation"],[3,"LiveVarAnalysisProcessor"],[3,"MemoryInstrumentationProcessor"],[3,"ProverOptions"],[3,"PackedTypesProcessor"],[4,"Def"],[3,"ReachingDefProcessor"],[3,"SpecInstrumenter"],[4,"AssignKind"],[4,"Constant"],[4,"Operation"],[4,"BorrowNode"],[4,"PropKind"],[4,"Bytecode"],[3,"Label"],[3,"AttrId"],[3,"SpecBlockId"],[3,"StacklessBytecodeGenerator"],[3,"StacklessControlFlowGraph"],[3,"UsageProcessor"],[3,"EliminateImmRefs"],[3,"EliminateMutRefs"],[3,"ReachingDefAnnotation"],[3,"BytecodeDisplay"],[3,"OperationDisplay"],[3,"BorrowNodeDisplay"]]},\
"bytecode_source_map":{"doc":"","i":[[0,"mapping","bytecode_source_map","",null,null],[3,"SourceMapping","bytecode_source_map::mapping","An object that associates source code with compiled…",null,null],[12,"bytecode","","",0,null],[12,"source_map","","",0,null],[12,"source_code","","",0,null],[12,"marks","","",0,null],[11,"new","","",0,[[["sourcemap",3],["compiledmodule",3]]]],[11,"new_from_module","","",0,[[["compiledmodule",3]],["result",6]]],[11,"new_from_script","","",0,[[["sourcemap",3],["compiledscript",3]]]],[11,"with_marks","","",0,[[["markedsourcemapping",3]]]],[11,"with_source_code","","",0,[[]]],[0,"marking","bytecode_source_map","",null,null],[3,"FunctionMarking","bytecode_source_map::marking","A data structure used to track any markings or extra…",null,null],[12,"code_offsets","","",1,null],[12,"type_param_offsets","","",1,null],[3,"StructMarking","","A data structure used to track any markings or extra…",null,null],[12,"fields","","",2,null],[12,"type_param_offsets","","",2,null],[3,"MarkedSourceMapping","","A data structure that contains markings for both functions…",null,null],[11,"new","","",1,[[]]],[11,"code_offset","","",1,[[["codeoffset",6],["string",3]]]],[11,"type_param","","",1,[[["string",3]]]],[11,"new","","",2,[[]]],[11,"field","","",2,[[["membercount",6],["string",3]]]],[11,"type_param","","",2,[[["string",3]]]],[11,"new","","",3,[[]]],[11,"mark_code_offset","","",3,[[["string",3],["codeoffset",6],["functiondefinitionindex",3]]]],[11,"mark_function_type_param","","",3,[[["string",3],["functiondefinitionindex",3]]]],[11,"mark_struct_field","","",3,[[["structdefinitionindex",3],["membercount",6],["string",3]]]],[11,"mark_struct_type_param","","",3,[[["structdefinitionindex",3],["string",3]]]],[0,"source_map","bytecode_source_map","",null,null],[3,"StructSourceMap","bytecode_source_map::source_map","",null,null],[12,"decl_location","","The source declaration location of the struct",4,null],[12,"type_parameters","","Important: type parameters need to be added in the order…",4,null],[12,"fields","","Note that fields to a struct source map need to be added…",4,null],[3,"FunctionSourceMap","","",null,null],[12,"decl_location","","The source location for the definition of this entire…",5,null],[12,"type_parameters","","Note that type parameters need to be added in the order of…",5,null],[12,"parameters","","",5,null],[12,"locals","","The index into the vector is the locals index. The…",5,null],[12,"nops","","A map to the code offset for a corresponding nop. Nop\'s…",5,null],[12,"code_map","","The source location map for the function body.",5,null],[3,"SourceMap","","",null,null],[12,"module_name_opt","","The name <address.module_name> for module that this source…",6,null],[12,"constant_map","","",6,null],[5,"remap_locations_source_name","","",null,[[["clone",8],["sourcename",6],["eq",8]],[["clone",8],["sourcename",6],["eq",8]]]],[5,"remap_locations_source_map","","",null,[[["sourcemap",3],["vec",3]],[["sourcemap",3],["vec",3]]]],[6,"SourceName","","",null,null],[11,"new","","",4,[[]]],[11,"add_type_parameter","","",4,[[["sourcename",6]]]],[11,"get_type_parameter_name","","",4,[[],[["sourcename",6],["option",4]]]],[11,"add_field_location","","",4,[[]]],[11,"get_field_location","","",4,[[["membercount",6]],["option",4]]],[11,"dummy_struct_map","","",4,[[["structdefinition",3],["compiledmodule",3]],["result",6]]],[11,"remap_locations","","",4,[[],[["structsourcemap",3],["clone",8],["eq",8]]]],[11,"new","","",5,[[]]],[11,"add_type_parameter","","",5,[[["sourcename",6]]]],[11,"get_type_parameter_name","","",5,[[],[["sourcename",6],["option",4]]]],[11,"add_code_mapping","","A single source-level instruction may possibly map to a…",5,[[["codeoffset",6]]]],[11,"add_nop_mapping","","Record the code offset for an Nop label",5,[[["codeoffset",6],["noplabel",3]]]],[11,"add_local_mapping","","",5,[[["sourcename",6]]]],[11,"add_parameter_mapping","","",5,[[["sourcename",6]]]],[11,"get_code_location","","Recall that we are using a segment tree. We therefore…",5,[[["codeoffset",6]],["option",4]]],[11,"get_parameter_or_local_name","","",5,[[],[["sourcename",6],["option",4]]]],[11,"make_local_name_to_index_map","","",5,[[],[["btreemap",3],["string",3],["localindex",6]]]],[11,"dummy_function_map","","",5,[[["compiledmodule",3],["functiondefinition",3]],["result",6]]],[11,"remap_locations","","",5,[[],[["clone",8],["functionsourcemap",3],["eq",8]]]],[11,"new","","",6,[[["option",4],["qualifiedmoduleident",3]]]],[11,"add_top_level_function_mapping","","",6,[[["functiondefinitionindex",3]],["result",6]]],[11,"add_function_type_parameter_mapping","","",6,[[["sourcename",6],["functiondefinitionindex",3]],["result",6]]],[11,"get_function_type_parameter_name","","",6,[[["functiondefinitionindex",3]],[["sourcename",6],["result",6]]]],[11,"add_code_mapping","","",6,[[["codeoffset",6],["functiondefinitionindex",3]],["result",6]]],[11,"add_nop_mapping","","",6,[[["codeoffset",6],["noplabel",3],["functiondefinitionindex",3]],["result",6]]],[11,"get_code_location","","Given a function definition and a code offset within that…",6,[[["codeoffset",6],["functiondefinitionindex",3]],["result",6]]],[11,"add_local_mapping","","",6,[[["sourcename",6],["functiondefinitionindex",3]],["result",6]]],[11,"add_parameter_mapping","","",6,[[["sourcename",6],["functiondefinitionindex",3]],["result",6]]],[11,"get_parameter_or_local_name","","",6,[[["functiondefinitionindex",3]],[["sourcename",6],["result",6]]]],[11,"add_top_level_struct_mapping","","",6,[[["structdefinitionindex",3]],["result",6]]],[11,"add_const_mapping","","",6,[[["constantname",3],["constantpoolindex",3]],["result",6]]],[11,"add_struct_field_mapping","","",6,[[["structdefinitionindex",3]],["result",6]]],[11,"get_struct_field_name","","",6,[[["structdefinitionindex",3],["membercount",6]],["option",4]]],[11,"add_struct_type_parameter_mapping","","",6,[[["structdefinitionindex",3],["sourcename",6]],["result",6]]],[11,"get_struct_type_parameter_name","","",6,[[["structdefinitionindex",3]],[["sourcename",6],["result",6]]]],[11,"get_function_source_map","","",6,[[["functiondefinitionindex",3]],[["functionsourcemap",3],["result",6]]]],[11,"get_struct_source_map","","",6,[[["structdefinitionindex",3]],[["result",6],["structsourcemap",3]]]],[11,"dummy_from_module","","Create a \'dummy\' source map for a compiled module. This is…",6,[[["compiledmodule",3]],["result",6]]],[11,"dummy_from_script","","",6,[[["compiledscript",3]],["result",6]]],[11,"remap_locations","","",6,[[],[["sourcemap",3],["clone",8],["eq",8]]]],[0,"utils","bytecode_source_map","",null,null],[3,"OwnedLoc","bytecode_source_map::utils","",null,null],[5,"source_map_from_file","","",null,[[["path",3]],[["sourcemap",3],["result",6]]]],[5,"render_errors","","",null,[[["sourcemapping",3],["errors",6]],["result",6]]],[5,"create_diagnostic","","",null,[[["fileid",3],["error",6]],["diagnostic",3]]],[5,"remap_owned_loc_to_loc","","",null,[[["sourcemap",3],["ownedloc",3]],[["sourcemap",3],["loc",3]]]],[6,"Error","","",null,null],[6,"Errors","","",null,null],[11,"from","bytecode_source_map::mapping","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","bytecode_source_map::marking","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","bytecode_source_map::source_map","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","bytecode_source_map::utils","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"equivalent","","",7,[[]]],[11,"clone","bytecode_source_map::source_map","",4,[[],["structsourcemap",3]]],[11,"clone","","",5,[[],["functionsourcemap",3]]],[11,"clone","","",6,[[],["sourcemap",3]]],[11,"clone","bytecode_source_map::utils","",7,[[],["ownedloc",3]]],[11,"default","bytecode_source_map::marking","",1,[[],["functionmarking",3]]],[11,"default","","",2,[[],["structmarking",3]]],[11,"default","","",3,[[],["markedsourcemapping",3]]],[11,"default","bytecode_source_map::utils","",7,[[],["ownedloc",3]]],[11,"eq","","",7,[[["ownedloc",3]]]],[11,"ne","","",7,[[["ownedloc",3]]]],[11,"fmt","bytecode_source_map::mapping","",0,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode_source_map::marking","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode_source_map::source_map","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode_source_map::utils","",7,[[["formatter",3]],["result",6]]],[11,"serialize","bytecode_source_map::source_map","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","bytecode_source_map::utils","",7,[[],["result",4]]],[11,"deserialize","bytecode_source_map::source_map","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","bytecode_source_map::utils","",7,[[],["result",4]]]],"p":[[3,"SourceMapping"],[3,"FunctionMarking"],[3,"StructMarking"],[3,"MarkedSourceMapping"],[3,"StructSourceMap"],[3,"FunctionSourceMap"],[3,"SourceMap"],[3,"OwnedLoc"]]},\
"bytecode_verifier":{"doc":"Verifies bytecode sanity.","i":[[0,"check_duplication","bytecode_verifier","This module implements a checker for verifying that each…",null,null],[3,"DuplicationChecker","bytecode_verifier::check_duplication","",null,null],[11,"verify_module","","",0,[[["compiledmodule",3]],["vmresult",6]]],[11,"verify_script","","",0,[[["compiledscript",3]],["vmresult",6]]],[0,"code_unit_verifier","bytecode_verifier","This module implements the checker for verifying…",null,null],[3,"CodeUnitVerifier","bytecode_verifier::code_unit_verifier","",null,null],[11,"verify_module","","",1,[[["compiledmodule",3]],["vmresult",6]]],[11,"verify_script","","",1,[[["compiledscript",3]],["vmresult",6]]],[0,"constants","bytecode_verifier","This module implements a checker for verifying that",null,null],[5,"verify_module","bytecode_verifier::constants","",null,[[["compiledmodule",3]],["vmresult",6]]],[5,"verify_script","","",null,[[["compiledscript",3]],["vmresult",6]]],[0,"control_flow","bytecode_verifier","This module implements a checker for verifies control…",null,null],[5,"verify","bytecode_verifier::control_flow","",null,[[["codeunit",3],["option",4],["functiondefinitionindex",3]],["partialvmresult",6]]],[0,"control_flow_graph","bytecode_verifier","This module defines the control-flow graph uses for…",null,null],[3,"VMControlFlowGraph","bytecode_verifier::control_flow_graph","The control flow graph that we build from the bytecode.",null,null],[6,"BlockId","","",null,null],[8,"ControlFlowGraph","","A trait that specifies the basic requirements for a CFG",null,null],[10,"block_start","","Start index of the block ID in the bytecode vector",2,[[["blockid",6]],["codeoffset",6]]],[10,"block_end","","End index of the block ID in the bytecode vector",2,[[["blockid",6]],["codeoffset",6]]],[10,"successors","","Successors of the block ID in the bytecode vector",2,[[["blockid",6]],["vec",3]]],[10,"instr_indexes","","Iterator over the indexes of instructions in this block",2,[[["blockid",6]],[["iterator",8],["box",3]]]],[10,"blocks","","Return an iterator over the blocks of the CFG",2,[[],[["blockid",6],["vec",3]]]],[10,"num_blocks","","Return the number of blocks (vertices) in the control flow…",2,[[]]],[10,"entry_block_id","","Return the id of the entry block for this control-flow…",2,[[],["blockid",6]]],[11,"new","","",3,[[]]],[11,"display","","",3,[[]]],[11,"reachable_from","","",3,[[["blockid",6]],[["blockid",6],["vec",3]]]],[0,"dependencies","bytecode_verifier","This module contains the public APIs supported by the…",null,null],[3,"DependencyChecker","bytecode_verifier::dependencies","",null,null],[3,"CyclicModuleDependencyChecker","","",null,null],[11,"verify_module","","",4,[[["compiledmodule",3]],["vmresult",6]]],[11,"verify_script","","",4,[[["compiledscript",3]],["vmresult",6]]],[11,"verify_script_impl","","",4,[[["compiledscript",3]],["partialvmresult",6]]],[11,"compare_cross_module_signatures","","",4,[[["compiledmodule",3]],["partialvmresult",6]]],[11,"verify_module","","",5,[[["compiledmodule",3],["fn",8]],["vmresult",6]]],[0,"instantiation_loops","bytecode_verifier","This implements an algorithm that detects loops during the…",null,null],[3,"InstantiationLoopChecker","bytecode_verifier::instantiation_loops","",null,null],[11,"verify_module","","",6,[[["compiledmodule",3]],["vmresult",6]]],[0,"instruction_consistency","bytecode_verifier","This module defines the transfer functions for verifying…",null,null],[3,"InstructionConsistency","bytecode_verifier::instruction_consistency","",null,null],[11,"verify_module","","",7,[[["compiledmodule",3]],["vmresult",6]]],[11,"verify_script","","",7,[[["compiledscript",3]],["vmresult",6]]],[11,"verify_script_impl","","",7,[[["compiledscript",3]],["partialvmresult",6]]],[0,"resources","bytecode_verifier","This module implements a checker for verifying that a…",null,null],[3,"ResourceTransitiveChecker","bytecode_verifier::resources","",null,null],[11,"verify_module","","",8,[[["compiledmodule",3]],["vmresult",6]]],[0,"signature","bytecode_verifier","This module implements a checker for verifying signature…",null,null],[3,"SignatureChecker","bytecode_verifier::signature","",null,null],[11,"verify_module","","",9,[[["compiledmodule",3]],["vmresult",6]]],[11,"verify_script","","",9,[[["compiledscript",3]],["vmresult",6]]],[0,"struct_defs","bytecode_verifier","This module provides a checker for verifying that struct…",null,null],[3,"RecursiveStructDefChecker","bytecode_verifier::struct_defs","",null,null],[11,"verify_module","","",10,[[["compiledmodule",3]],["vmresult",6]]],[0,"verifier","bytecode_verifier","This module contains the public APIs supported by the…",null,null],[5,"verify_module","bytecode_verifier::verifier","Helper for a \\\"canonical\\\" verification of a module.",null,[[["compiledmodule",3]],["vmresult",6]]],[5,"verify_script","","Helper for a \\\"canonical\\\" verification of a script.",null,[[["compiledscript",3]],["vmresult",6]]],[5,"verify_main_signature","","This function checks the extra requirements on the…",null,[[["compiledscript",3]],["vmresult",6]]],[11,"from","bytecode_verifier::check_duplication","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","bytecode_verifier::code_unit_verifier","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","bytecode_verifier::control_flow_graph","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","bytecode_verifier::dependencies","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","bytecode_verifier::instantiation_loops","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","bytecode_verifier::instruction_consistency","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","bytecode_verifier::resources","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","bytecode_verifier::signature","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","bytecode_verifier::struct_defs","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"block_start","bytecode_verifier::control_flow_graph","",3,[[["blockid",6]],["codeoffset",6]]],[11,"block_end","","",3,[[["blockid",6]],["codeoffset",6]]],[11,"successors","","",3,[[["blockid",6]],["vec",3]]],[11,"blocks","","",3,[[],[["blockid",6],["vec",3]]]],[11,"instr_indexes","","",3,[[["blockid",6]],[["iterator",8],["box",3]]]],[11,"num_blocks","","",3,[[]]],[11,"entry_block_id","","",3,[[],["blockid",6]]]],"p":[[3,"DuplicationChecker"],[3,"CodeUnitVerifier"],[8,"ControlFlowGraph"],[3,"VMControlFlowGraph"],[3,"DependencyChecker"],[3,"CyclicModuleDependencyChecker"],[3,"InstantiationLoopChecker"],[3,"InstructionConsistency"],[3,"ResourceTransitiveChecker"],[3,"SignatureChecker"],[3,"RecursiveStructDefChecker"]]},\
"bytecode_verifier_tests":{"doc":"","i":[],"p":[]},\
"channel":{"doc":"Provides an mpsc (multi-producer single-consumer) channel…","i":[[3,"Sender","channel","An `mpsc::Sender` with an [`IntGauge`] counting the number…",null,null],[3,"Receiver","","An `mpsc::Receiver` with an [`IntGauge`] counting the…",null,null],[5,"new","","Similar to `mpsc::channel`, `new` creates a pair of…",null,[[["intgauge",6]]]],[5,"new_test","","",null,[[]]],[0,"diem_channel","","diem_channel provides an mpsc channel which has two ends…",null,null],[3,"Sender","channel::diem_channel","The sending end of the diem_channel.",null,null],[3,"Receiver","","The receiving end of the diem_channel.",null,null],[4,"ElementStatus","","The status of an element inserted into a diem_channel. If…",null,null],[13,"Dequeued","","",0,null],[13,"Dropped","","",0,null],[5,"new","","Create a new Diem Channel and returns the two ends of the…",null,[[["queuestyle",4],["option",4],["intcountervec",6]]]],[11,"push","","This adds the message into the internal queue data…",1,[[],["result",6]]],[11,"push_with_feedback","","Same as `push`, but this function also accepts a…",1,[[["option",4],["sender",3]],["result",6]]],[11,"clear","","Removes all the previously sent transactions that have not…",2,[[]]],[0,"message_queues","channel","",null,null],[4,"QueueStyle","channel::message_queues","QueueStyle is an enum which can be used as a configuration…",null,null],[13,"LIFO","","",3,null],[13,"FIFO","","",3,null],[13,"KLAST","","",3,null],[11,"try_send","channel","",4,[[],[["senderror",3],["result",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"try_poll_next","","",5,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","channel::diem_channel","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"try_poll_next","","",2,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","channel::message_queues","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"drop","channel::diem_channel","",1,[[]]],[11,"drop","","",2,[[]]],[11,"clone","","",1,[[]]],[11,"clone","channel::message_queues","",3,[[],["queuestyle",4]]],[11,"clone","channel","",4,[[]]],[11,"eq","channel::diem_channel","",0,[[["elementstatus",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","channel::message_queues","",3,[[["formatter",3]],["result",6]]],[11,"is_terminated","channel::diem_channel","",2,[[]]],[11,"is_terminated","channel","",5,[[]]],[11,"poll_next","channel::diem_channel","poll_next checks whether there is something ready for…",2,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","channel","",5,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_ready","","",4,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",4,[[["pin",3]],["result",4]]],[11,"poll_flush","","",4,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",4,[[["context",3],["pin",3]],[["result",4],["poll",4]]]]],"p":[[4,"ElementStatus"],[3,"Sender"],[3,"Receiver"],[4,"QueueStyle"],[3,"Sender"],[3,"Receiver"]]},\
"cli":{"doc":"Diem Client","i":[[3,"AccountData","cli","Struct used to store data for each created account. We…",null,null],[12,"address","","Address of the account.",0,null],[12,"authentication_key","","Authentication key of the account.",0,null],[12,"key_pair","","(private_key, public_key) pair if the account is not…",0,null],[12,"sequence_number","","Latest sequence number maintained by client, it can be…",0,null],[12,"status","","Whether the account is initialized on chain, cached local…",0,null],[4,"AccountStatus","","Enum used to represent account status.",null,null],[13,"Local","","Account exists only in local cache, it is not persisted on…",1,null],[13,"Persisted","","Account is persisted on chain.",1,null],[13,"Unknown","","Not able to check account status, probably because client…",1,null],[0,"client_proxy","","Main instance of client holding corresponding information,…",null,null],[3,"AddressAndIndex","cli::client_proxy","Account data is stored in a map and referenced by an index.",null,null],[12,"address","","Address of the account.",2,null],[12,"index","","The account_ref_id of this account in client.",2,null],[3,"IndexAndSequence","","Used to return the sequence and sender account index…",null,null],[12,"account_index","","Index/key of the account in TestClient::accounts vector.",3,null],[12,"sequence_number","","Sequence number of the account.",3,null],[3,"ClientProxy","","Proxy handling CLI commands/inputs.",null,null],[12,"chain_id","","chain ID of the Diem network this client is interacting with",4,null],[12,"client","","client for admission control interface.",4,null],[12,"accounts","","Created accounts.",4,null],[12,"diem_root_account","","Account used for Diem Root operations (e.g., adding a new…",4,null],[12,"tc_account","","Account used for Treasury Compliance operations",4,null],[12,"testnet_designated_dealer_account","","Account used for \\\"minting\\\" operations",4,null],[12,"quiet_wait","","do not print \'.\' when waiting for signed transaction",4,null],[4,"AccountEntry","","Account is represented either as an entry into accounts…",null,null],[13,"Index","","Index into client.accounts",5,null],[13,"Address","","Address of the account",5,null],[11,"new","","Construct a new TestClient.",4,[[["chainid",3],["string",3],["option",4],["waypoint",3]],["result",6]]],[11,"create_next_account","","Returns the account index that should be used by user to…",4,[[],[["addressandindex",3],["result",6]]]],[11,"latest_epoch_change_li","","Returns the ledger info corresonding to the latest epoch…",4,[[],[["option",4],["ledgerinfowithsignatures",4]]]],[11,"print_all_accounts","","Print index and address of all accounts.",4,[[]]],[11,"copy_all_accounts","","Clone all accounts held in the client.",4,[[],[["accountdata",3],["vec",3]]]],[11,"set_accounts","","Set the account of this client instance.",4,[[["accountdata",3],["vec",3]],[["addressandindex",3],["vec",3]]]],[11,"get_balances","","Get balance from validator for the account specified.",4,[[],[["result",6],["vec",3]]]],[11,"get_sequence_number","","Get the latest sequence number from validator for the…",4,[[],["result",6]]],[11,"add_currency","","Adds a currency to the sending account. Fails if that…",4,[[],["result",6]]],[11,"mint_coins","","Mints coins for the receiver specified.",4,[[],["result",6]]],[11,"enable_custom_script","","Allow executing arbitrary script in the network.",4,[[],["result",6]]],[11,"add_to_script_allow_list","","Add a hash to the allowlist that could be executed by the…",4,[[],["result",6]]],[11,"change_diem_version","","Modify the stored DiemVersion on chain.",4,[[],["result",6]]],[11,"upgrade_stdlib","","Only allow executing predefined script in the Move…",4,[[],["result",6]]],[11,"wait_for_transaction","","Wait for transaction, this function is not safe for…",4,[[["accountaddress",3]],["result",6]]],[11,"submit_and_wait","","Submit transaction and waits for the transaction executed",4,[[["signedtransaction",3]],["result",6]]],[11,"wait_for_signed_transaction","","Waits for the transaction",4,[[["signedtransaction",3]],[["result",6],["transaction",3]]]],[11,"transfer_coins_int","","Transfer num_coins from sender account to receiver. If…",4,[[["string",3],["option",4],["accountaddress",3],["option",4]],[["result",6],["indexandsequence",3]]]],[11,"prepare_transfer_coins","","Prepare a transfer transaction: return the unsigned raw…",4,[[["accountaddress",3],["string",3],["option",4],["option",4]],[["result",6],["rawtransaction",3]]]],[11,"transfer_coins","","Transfers coins from sender to receiver.",4,[[],[["result",6],["indexandsequence",3]]]],[11,"compile_program","","Compile Move program",4,[[],[["result",6],["vec",3]]]],[11,"submit_signed_transaction","","Submit a transaction to the network given the unsigned raw…",4,[[["ed25519signature",3],["ed25519publickey",3],["rawtransaction",3]],["result",6]]],[11,"publish_module","","Publish Move module",4,[[],["result",6]]],[11,"execute_script","","Execute custom script",4,[[],["result",6]]],[11,"get_latest_account","","Get the latest account information from validator.",4,[[],[["option",4],["result",6]]]],[11,"get_latest_version","","Get the latest version",4,[[],["version",6]]],[11,"get_latest_account_resources","","Get the latest annotated account resources from validator.",4,[[],["result",6]]],[11,"get_committed_txn_by_acc_seq","","Get committed txn by account and sequence number.",4,[[],[["option",4],["result",6]]]],[11,"get_committed_txn_by_range","","Get committed txn by account and sequence number",4,[[],[["result",6],["vec",3]]]],[11,"get_account_address_from_parameter","","Get account address and (if applicable) authentication key…",4,[[],["result",6]]],[11,"get_events_by_account_and_type","","Get events by account and event type with start sequence…",4,[[],["result",6]]],[11,"write_recovery","","Write mnemonic recover to the file specified.",4,[[],["result",6]]],[11,"recover_wallet_accounts","","Recover wallet accounts from command \'recover \' and return…",4,[[],[["result",6],["vec",3]]]],[11,"recover_accounts_in_wallet","","Recover accounts in wallets and sync state if…",4,[[],[["result",6],["vec",3]]]],[11,"insert_account_data","","Insert the account data to Client::accounts and return its…",4,[[["accountdata",3]],["addressandindex",3]]],[11,"test_validator_connection","","Test JSON RPC client connection with validator.",4,[[],[["result",6],["metadata",3]]]],[11,"test_trusted_connection","","Test client\'s connection to validator with proof.",4,[[],["result",6]]],[11,"association_transaction_with_local_diem_root_account","","Send a transaction signed by the local diem_root credential",4,[[["transactionpayload",4]],["result",6]]],[11,"convert_to_scaled_representation","","Scale the number in `input` based on `scaling_factor` and…",4,[[],["result",6]]],[11,"convert_to_on_chain_representation","","convert number of coins (main unit) given as string to its…",4,[[],["result",6]]],[0,"commands","cli","Command struct to interact with client.",null,null],[5,"report_error","cli::commands","Print the error and bump up error counter.",null,[[["error",3]]]],[5,"blocking_cmd","","Check whether a command is blocking.",null,[[]]],[5,"debug_format_cmd","","Check whether a command is debugging command.",null,[[]]],[5,"is_address","","Check whether the input string is a valid diem address.",null,[[]]],[5,"is_authentication_key","","Check whether the input string is a valid diem…",null,[[]]],[5,"get_commands","","Returns all the commands available, as well as the reverse…",null,[[]]],[5,"parse_cmd","","Parse a cmd string, the first element in the returned…",null,[[],["vec",3]]],[5,"print_subcommand_help","","Print the help message for all sub commands.",null,[[]]],[5,"subcommand_execute","","Execute sub command.",null,[[["vec",3],["clientproxy",3],["box",3]]]],[8,"Command","","Trait to perform client operations.",null,null],[10,"get_aliases","","all commands and aliases this command support.",6,[[],["vec",3]]],[11,"get_params_help","","string that describes params.",6,[[]]],[10,"get_description","","string that describes what the command does.",6,[[]]],[10,"execute","","code to execute.",6,[[["clientproxy",3]]]],[11,"keypair_as_string","cli","Serialize account keypair if exists.",0,[[],["option",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","cli::client_proxy","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"clone","cli","",0,[[],["accountdata",3]]],[11,"clone","","",1,[[],["accountstatus",4]]],[11,"eq","","",0,[[["accountdata",3]]]],[11,"ne","","",0,[[["accountdata",3]]]],[11,"eq","","",1,[[["accountstatus",4]]]],[11,"fmt","cli::client_proxy","",2,[[["formatter",3]],["result",6]]],[11,"fmt","cli","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","cli::client_proxy","",5,[[["formatter",3]],["result",6]]],[11,"serialize","cli","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]]],"p":[[3,"AccountData"],[4,"AccountStatus"],[3,"AddressAndIndex"],[3,"IndexAndSequence"],[3,"ClientProxy"],[4,"AccountEntry"],[8,"Command"]]},\
"cluster_test":{"doc":"","i":[[0,"atomic_histogram","cluster_test","",null,null],[3,"AtomicHistogramAccumulator","cluster_test::atomic_histogram","",null,null],[3,"AtomicHistogramSnapshot","","",null,null],[11,"new","","",0,[[],["atomichistogramaccumulator",3]]],[11,"snapshot","","",0,[[],["atomichistogramsnapshot",3]]],[11,"record_data_point","","",0,[[]]],[11,"percentile","","",1,[[]]],[0,"aws","cluster_test","",null,null],[5,"set_asg_size","cluster_test::aws","set_asg_size sets the size of the given autoscaling group",null,[[]]],[0,"cluster","cluster_test","",null,null],[3,"Cluster","cluster_test::cluster","",null,null],[12,"chain_id","","",2,null],[5,"dummy_key_pair","","",null,[[],[["keypair",3],["ed25519privatekey",3],["ed25519publickey",3]]]],[11,"from_host_port","","",2,[[["vec",3],["chainid",3]]]],[11,"new","","",2,[[["option",4],["instance",3],["vec",3],["waypoint",3]]]],[11,"random_validator_instance","","",2,[[],["instance",3]]],[11,"validator_instances","","",2,[[]]],[11,"random_fullnode_instance","","",2,[[],["instance",3]]],[11,"fullnode_instances","","",2,[[]]],[11,"lsr_instances","","",2,[[]]],[11,"vault_instances","","",2,[[]]],[11,"all_instances","","",2,[[]]],[11,"validator_and_fullnode_instances","","",2,[[]]],[11,"into_validator_instances","","",2,[[],[["vec",3],["instance",3]]]],[11,"into_fullnode_instances","","",2,[[],[["vec",3],["instance",3]]]],[11,"into_lsr_instances","","",2,[[],[["vec",3],["instance",3]]]],[11,"into_vault_instances","","",2,[[],[["vec",3],["instance",3]]]],[11,"mint_key_pair","","",2,[[],["keypair",3]]],[11,"get_validator_instance","","",2,[[],[["instance",3],["option",4]]]],[11,"split_n_validators_random","","Splits this cluster into two",2,[[]]],[11,"split_n_fullnodes_random","","",2,[[]]],[11,"validator_sub_cluster","","",2,[[["vec",3],["string",3]],["cluster",3]]],[11,"find_instance_by_pod","","",2,[[],[["instance",3],["option",4]]]],[11,"instances_for_group","","",2,[[["validatorgroup",3]]]],[11,"lsr_instances_for_validators","","",2,[[],[["vec",3],["instance",3]]]],[11,"vault_instances_for_validators","","",2,[[],[["vec",3],["instance",3]]]],[0,"cluster_builder","cluster_test","",null,null],[3,"ClusterBuilderParams","cluster_test::cluster_builder","",null,null],[12,"fullnodes_per_validator","","",3,null],[12,"num_validators","","",3,null],[12,"enable_lsr","","",3,null],[12,"lsr_backend","","",3,null],[3,"ClusterBuilder","","",null,null],[12,"current_tag","","",4,null],[12,"cluster_swarm","","",4,null],[11,"enable_lsr","","",3,[[]]],[11,"new","","",4,[[["clusterswarmkube",3],["string",3]]]],[11,"setup_cluster","","",4,[[["clusterbuilderparams",3]]]],[11,"spawn_validator_and_fullnode_set","","Creates a set of validators and fullnodes with the given…",4,[[]]],[0,"cluster_swarm","cluster_test","",null,null],[0,"cluster_swarm_kube","cluster_test::cluster_swarm","",null,null],[3,"ClusterSwarmKube","cluster_test::cluster_swarm::cluster_swarm_kube","",null,null],[12,"node_map","","",5,null],[3,"KubeNode","","",null,null],[12,"name","","",6,null],[12,"provider_id","","",6,null],[12,"internal_ip","","",6,null],[17,"CFG_SEED","","",null,null],[11,"new","","",5,[[]]],[11,"kill_job","","",5,[[]]],[11,"get_workspace","","",5,[[]]],[11,"spawn_job","","",5,[[]]],[11,"run","","",5,[[]]],[11,"allocate_node","","",5,[[]]],[11,"upsert_node","","",5,[[["instanceconfig",3]]]],[11,"delete_node","","",5,[[["instanceconfig",3]]]],[11,"cleanup","","",5,[[]]],[11,"delete","","",5,[[]]],[11,"delete_all","","",5,[[]]],[11,"util_cmd","","Runs command on the provided host in separate utility…",5,[[["asref",8]]]],[8,"ClusterSwarm","cluster_test::cluster_swarm","",null,null],[10,"spawn_new_instance","","Spawns a new instance.",7,[[["instanceconfig",3]],[["pin",3],["box",3]]]],[10,"clean_data","","If deleting /opt/diem/data/* is required, call clean_date…",7,[[],[["pin",3],["box",3]]]],[10,"get_node_name","","",7,[[],[["pin",3],["box",3]]]],[10,"get_grafana_baseurl","","",7,[[],[["pin",3],["box",3]]]],[10,"put_file","","",7,[[],[["pin",3],["box",3]]]],[0,"effects","cluster_test","",null,null],[5,"activate_all","cluster_test::effects","",null,[[["vec",3]]]],[5,"deactivate_all","","",null,[[["vec",3]]]],[0,"network_delay","","",null,null],[3,"NetworkDelay","cluster_test::effects::network_delay","",null,null],[5,"three_region_simulation_effects","","three_region_simulation_effects returns the list of…",null,[[],[["networkdelay",3],["vec",3]]]],[11,"new","","",8,[[["vec",3],["instance",3]]]],[0,"packet_loss","cluster_test::effects","",null,null],[3,"PacketLoss","cluster_test::effects::packet_loss","",null,null],[11,"new","","",9,[[["instance",3]]]],[0,"stop_validator","cluster_test::effects","",null,null],[3,"StopValidator","cluster_test::effects::stop_validator","",null,null],[11,"new","","",10,[[["instance",3]]]],[8,"Effect","cluster_test::effects","",null,null],[10,"activate","","",11,[[],[["pin",3],["box",3]]]],[10,"deactivate","","",11,[[],[["pin",3],["box",3]]]],[0,"experiments","cluster_test","",null,null],[3,"CompatibilityTest","cluster_test::experiments","",null,null],[3,"CompatiblityTestParams","","",null,null],[12,"count","","",12,null],[12,"updated_image_tag","","",12,null],[3,"LoadTestParams","","",null,null],[12,"mempool","","",13,null],[12,"state_sync","","",13,null],[12,"emit_txn","","",13,null],[12,"duration","","",13,null],[12,"num_stubbed","","",13,null],[3,"PacketLossRandomValidators","","",null,null],[3,"PacketLossRandomValidatorsParams","","",null,null],[3,"PerformanceBenchmark","","",null,null],[3,"PerformanceBenchmarkParams","","",null,null],[12,"percent_nodes_down","","",14,null],[12,"trace","","",14,null],[12,"trace_single","","",14,null],[12,"use_logs_for_trace","","",14,null],[12,"duration","","",14,null],[12,"tps","","",14,null],[12,"backup","","",14,null],[12,"gas_price","","",14,null],[12,"periodic_stats","","",14,null],[3,"PerformanceBenchmarkThreeRegionSimulation","","",null,null],[3,"PerformanceBenchmarkThreeRegionSimulationParams","","",null,null],[3,"RebootCluster","","",null,null],[3,"RebootClusterParams","","",null,null],[3,"RebootRandomValidators","","",null,null],[3,"RebootRandomValidatorsParams","","",null,null],[3,"Reconfiguration","","",null,null],[3,"ReconfigurationParams","","",null,null],[12,"count","","",15,null],[12,"emit_txn","","",15,null],[3,"RecoveryTime","","",null,null],[3,"RecoveryTimeParams","","",null,null],[12,"num_accounts_to_mint","","",16,null],[3,"TwinValidators","","",null,null],[3,"TwinValidatorsParams","","",null,null],[12,"pair","","",17,null],[3,"ValidatorVersioning","","",null,null],[3,"ValidatorVersioningParams","","",null,null],[12,"count","","",18,null],[12,"updated_image_tag","","",18,null],[3,"CpuFlamegraph","","",null,null],[3,"CpuFlamegraphParams","","",null,null],[12,"duration_secs","","",19,null],[3,"Context","","",null,null],[12,"tx_emitter","","",20,null],[12,"trace_tail","","",20,null],[12,"prometheus","","",20,null],[12,"cluster_builder","","",20,null],[12,"cluster_builder_params","","",20,null],[12,"cluster","","",20,null],[12,"report","","",20,null],[12,"global_emit_job_request","","",20,null],[12,"emit_to_validator","","",20,null],[12,"cluster_swarm","","",20,null],[12,"current_tag","","Current docker image tag used by this run",20,null],[5,"get_experiment","","Given an experiment name and its flags, it constructs an…",null,[[["cluster",3]],[["experiment",8],["box",3]]]],[11,"new_nodes_down","","",14,[[]]],[11,"new_fixed_tps","","",14,[[]]],[11,"non_zero_gas_price","","",14,[[]]],[11,"enable_db_backup","","",14,[[]]],[11,"new","","",21,[[]]],[8,"Experiment","","",null,null],[11,"affected_validators","","",22,[[],[["hashset",3],["string",3]]]],[10,"run","","",22,[[["context",3]],[["box",3],["pin",3]]]],[10,"deadline","","",22,[[],["duration",3]]],[8,"ExperimentParam","","",null,null],[16,"E","","",23,null],[10,"build","","",23,[[["cluster",3]]]],[11,"new","","",20,[[["suitereport",3],["tracetail",3],["clusterbuilder",3],["clusterswarmkube",3],["txemitter",3],["prometheus",3],["cluster",3],["clusterbuilderparams",3],["option",4]]]],[0,"genesis_helper","cluster_test","",null,null],[3,"GenesisHelper","cluster_test::genesis_helper","",null,null],[11,"new","","",24,[[]]],[11,"set_layout","","",24,[[]]],[11,"diem_root_key","","",24,[[]]],[11,"owner_key","","",24,[[]]],[11,"operator_key","","",24,[[]]],[11,"treasury_compliance_key","","",24,[[]]],[11,"validator_config","","",24,[[["chainid",3],["networkaddress",3]]]],[11,"set_operator","","",24,[[]]],[11,"genesis","","",24,[[["chainid",3],["path",3]]]],[11,"create_and_insert_waypoint","","",24,[[["chainid",3]]]],[11,"create_waypoint","","",24,[[["chainid",3]]]],[11,"extract_private_key","","",24,[[]]],[0,"github","cluster_test","",null,null],[3,"CommitInfo","cluster_test::github","",null,null],[12,"sha","","",25,null],[12,"commit","","",25,null],[3,"GitCommitInfo","","",null,null],[12,"author","","",26,null],[12,"message","","",26,null],[3,"Author","","",null,null],[12,"name","","",27,null],[12,"email","","",27,null],[3,"GitHub","","",null,null],[11,"new","","",28,[[],["github",3]]],[11,"get_commits","","repo in format owner/repo_name sha can be long or short…",28,[[],[["result",6],["vec",3]]]],[0,"health","cluster_test","",null,null],[3,"CommitHistoryHealthCheck","cluster_test::health","Verifies that commit history produced by validators is…",null,null],[3,"DebugPortLogWorker","","",null,null],[3,"FullNodeHealthCheck","","",null,null],[3,"LivenessHealthCheck","","",null,null],[3,"LogTail","","",null,null],[12,"event_receiver","","",29,null],[12,"pending_messages","","",29,null],[3,"TraceTail","","",null,null],[12,"trace_receiver","","",30,null],[12,"trace_enabled","","",30,null],[3,"Commit","","",null,null],[3,"ValidatorEvent","","",null,null],[3,"HealthCheckRunner","","",null,null],[3,"HealthCheckContext","","",null,null],[3,"HealthCheckError","","",null,null],[12,"validator","","",31,null],[12,"message","","",31,null],[4,"Event","","",null,null],[13,"Commit","","",32,null],[13,"ConsensusStarted","","",32,null],[4,"PrintFailures","","",null,null],[13,"None","","",33,null],[13,"UnexpectedOnly","","",33,null],[13,"All","","",33,null],[11,"new","","",34,[[]]],[11,"spawn_new","","",35,[[["cluster",3]]]],[11,"run","","",35,[[]]],[11,"new","","",36,[[["cluster",3]],["fullnodehealthcheck",3]]],[11,"new","","",37,[[["cluster",3]]]],[11,"recv_all_until_deadline","","",29,[[["instant",3]],[["vec",3],["validatorevent",3]]]],[11,"recv_all","","",29,[[],[["vec",3],["validatorevent",3]]]],[11,"capture_trace","","",30,[[["duration",3]]]],[8,"HealthCheck","","",null,null],[11,"on_event","","Verify specific event",38,[[["validatorevent",3],["healthcheckcontext",3]]]],[10,"verify","","Periodic verification (happens even if when no events…",38,[[["healthcheckcontext",3]],[["pin",3],["box",3]]]],[11,"invalidate","","Optionally marks validator as failed, requiring waiting…",38,[[]]],[11,"clear","","Clean is invoked when cluster is wiped This means that…",38,[[]]],[10,"name","","",38,[[]]],[11,"epoch_and_round","","",39,[[]]],[11,"new","","",40,[[["vec",3],["box",3],["cluster",3]]]],[11,"new_all","","",40,[[["cluster",3]]]],[11,"run","","Takes a list of affected_validators. If there are…",40,[[["hashset",3],["printfailures",4]]]],[11,"invalidate","","",40,[[]]],[11,"clear","","",40,[[]]],[11,"new","","",41,[[]]],[11,"now","","",41,[[],["duration",3]]],[11,"report_failure","","",41,[[["string",3]]]],[0,"instance","cluster_test","",null,null],[3,"ValidatorGroup","cluster_test::instance","",null,null],[12,"index","","",42,null],[12,"twin_index","","",42,null],[3,"InstanceConfig","","",null,null],[12,"validator_group","","",43,null],[12,"application_config","","",43,null],[3,"VaultConfig","","",null,null],[3,"LSRConfig","","",null,null],[12,"image_tag","","",44,null],[12,"lsr_backend","","",44,null],[12,"vault_addr","","",44,null],[12,"vault_namespace","","",44,null],[3,"ValidatorConfig","","",null,null],[12,"enable_lsr","","",45,null],[12,"image_tag","","",45,null],[12,"safety_rules_addr","","",45,null],[12,"vault_addr","","",45,null],[12,"vault_namespace","","",45,null],[3,"FullnodeConfig","","",null,null],[12,"fullnode_index","","",46,null],[12,"image_tag","","",46,null],[12,"seed_peer_ip","","",46,null],[12,"vault_addr","","",46,null],[12,"vault_namespace","","",46,null],[3,"Instance","","",null,null],[4,"ApplicationConfig","","",null,null],[13,"Validator","","",47,null],[13,"Fullnode","","",47,null],[13,"LSR","","",47,null],[13,"Vault","","",47,null],[5,"instancelist_to_set","","",null,[[],[["hashset",3],["string",3]]]],[5,"validator_pod_name","","",null,[[],["string",3]]],[5,"vault_pod_name","","",null,[[],["string",3]]],[5,"lsr_pod_name","","",null,[[],["string",3]]],[5,"fullnode_pod_name","","",null,[[],["string",3]]],[11,"new_for_index","","",42,[[],["validatorgroup",3]]],[11,"index_only","","",42,[[]]],[11,"needs_genesis","","",47,[[]]],[11,"needs_config","","",47,[[]]],[11,"needs_fluentbit","","",47,[[]]],[11,"replace_tag","","",43,[[["string",3]],["result",6]]],[11,"pod_name","","",43,[[],["string",3]]],[11,"make_twin","","",43,[[]]],[11,"new","","",48,[[["option",4],["client",3],["string",3]],["instance",3]]],[11,"new_k8s","","",48,[[["client",3],["clusterswarmkube",3],["string",3],["instanceconfig",3]],["instance",3]]],[11,"counter","","",48,[[],["result",6]]],[11,"try_json_rpc","","",48,[[]]],[11,"wait_json_rpc","","",48,[[["instant",3]]]],[11,"peer_name","","",48,[[],["string",3]]],[11,"validator_group","","",48,[[],["validatorgroup",3]]],[11,"ip","","",48,[[],["string",3]]],[11,"ac_port","","",48,[[]]],[11,"json_rpc_url","","",48,[[],["url",3]]],[11,"debug_interface_port","","",48,[[],["option",4]]],[11,"json_rpc_client","","",48,[[],["jsonrpcasyncclient",3]]],[11,"stop","","",48,[[]]],[11,"start","","Node must be stopped first",48,[[]]],[11,"clean_data","","If deleting /opt/diem/data/* is required, call…",48,[[]]],[11,"spawn_job","","",48,[[]]],[11,"instance_config","","",48,[[],["instanceconfig",3]]],[11,"cmd","","",48,[[["asref",8]]]],[11,"util_cmd","","Runs command on the same host in separate utility…",48,[[["asref",8]]]],[11,"exec","","Unlike util_cmd, exec runs command inside the container",48,[[]]],[11,"debug_interface_client","","",48,[[],["asyncnodedebugclient",3]]],[0,"prometheus","cluster_test","",null,null],[3,"Prometheus","cluster_test::prometheus","",null,null],[3,"MatrixResponse","","",null,null],[3,"TimeSeries","","",null,null],[11,"new","","",49,[[["string",3]]]],[11,"link_to_dashboard","","",49,[[["duration",3]],["string",3]]],[11,"query_range_avg","","",49,[[["duration",3],["string",3]],["result",6]]],[11,"avg","","",50,[[],["option",4]]],[11,"get","","",51,[[]]],[11,"avg","","",51,[[],["option",4]]],[0,"report","cluster_test","",null,null],[3,"SuiteReport","cluster_test::report","",null,null],[3,"ReportedMetric","","",null,null],[12,"experiment","","",52,null],[12,"metric","","",52,null],[12,"value","","",52,null],[11,"new","","",53,[[]]],[11,"report_metric","","",53,[[["tostring",8]]]],[11,"report_text","","",53,[[["string",3]]]],[11,"report_txn_stats","","",53,[[["duration",3],["txstats",3],["string",3]]]],[0,"slack","cluster_test","",null,null],[3,"SlackClient","cluster_test::slack","",null,null],[11,"new","","",54,[[]]],[11,"send_message","","",54,[[["url",3]],["result",6]]],[0,"stats","cluster_test","",null,null],[3,"PrometheusRangeView","cluster_test::stats","",null,null],[11,"new","","",55,[[["prometheus",3],["duration",3]]]],[11,"avg_txns_per_block","","",55,[[],["option",4]]],[11,"avg_backup_bytes_per_second","","",55,[[],["option",4]]],[0,"suite","cluster_test","",null,null],[3,"ExperimentSuite","cluster_test::suite","",null,null],[12,"experiments","","",56,null],[11,"new_by_name","","",56,[[["cluster",3]],["result",6]]],[0,"tx_emitter","cluster_test","",null,null],[3,"TxEmitter","cluster_test::tx_emitter","",null,null],[3,"EmitJob","","",null,null],[3,"TxStats","","",null,null],[12,"submitted","","",57,null],[12,"committed","","",57,null],[12,"expired","","",57,null],[12,"latency","","",57,null],[12,"latency_buckets","","",57,null],[3,"TxStatsRate","","",null,null],[12,"submitted","","",58,null],[12,"committed","","",58,null],[12,"expired","","",58,null],[12,"latency","","",58,null],[12,"p99_latency","","",58,null],[3,"EmitThreadParams","","",null,null],[12,"wait_millis","","",59,null],[12,"wait_committed","","",59,null],[3,"EmitJobRequest","","",null,null],[12,"instances","","",60,null],[12,"accounts_per_client","","",60,null],[12,"workers_per_ac","","",60,null],[12,"thread_params","","",60,null],[12,"gas_price","","",60,null],[3,"AccountData","","",null,null],[12,"address","","",61,null],[12,"key_pair","","",61,null],[12,"sequence_number","","",61,null],[4,"InvalidTxType","","",null,null],[13,"ChainId","","invalid tx with wrong chain id",62,null],[13,"Sender","","invalid tx with sender not on chain",62,null],[13,"Receiver","","invalid tx with receiver not on chain",62,null],[13,"MaxValue","","Last element of enum, please add new case above",62,null],[5,"gen_submit_transaction_request","","",null,[[["accountdata",3],["script",3],["chainid",3]],["signedtransaction",3]]],[5,"gen_transfer_txn_request","","",null,[[["accountdata",3],["accountaddress",3],["chainid",3]],["signedtransaction",3]]],[5,"execute_and_wait_transactions","","",null,[[["signedtransaction",3],["jsonrpcasyncclient",3],["accountdata",3],["vec",3]]]],[7,"REUSE_ACC","","",null,null],[11,"for_instances","","",60,[[["vec",3],["option",4],["instance",3]]]],[11,"fixed_tps_params","","",60,[[]]],[11,"fixed_tps","","",60,[[["vec",3],["instance",3]]]],[11,"new","","",63,[[["cluster",3]]]],[11,"take_account","","",63,[[],["accountdata",3]]],[11,"clear","","",63,[[]]],[11,"submit_single_transaction","","",63,[[["instance",3],["accountdata",3],["accountaddress",3]]]],[11,"start_job","","",63,[[["emitjobrequest",3]]]],[11,"load_diem_root_account","","",63,[[["jsonrpcasyncclient",3]]]],[11,"load_faucet_account","","",63,[[["jsonrpcasyncclient",3]]]],[11,"load_tc_account","","",63,[[["jsonrpcasyncclient",3]]]],[11,"load_dd_account","","",63,[[["jsonrpcasyncclient",3]]]],[11,"load_vasp_account","","",63,[[["jsonrpcasyncclient",3]]]],[11,"get_money_source","","",63,[[]]],[11,"get_seed_accounts","","",63,[[]]],[11,"mint_accounts","","",63,[[["emitjobrequest",3]]]],[11,"peek_job_stats","","",63,[[["emitjob",3]],["txstats",3]]],[11,"stop_job","","",63,[[["emitjob",3]]]],[11,"periodic_stat","","",63,[[["emitjob",3],["duration",3]]]],[11,"emit_txn_for","","",63,[[["emitjobrequest",3],["duration",3]]]],[11,"emit_txn_for_with_stats","","",63,[[["emitjobrequest",3],["duration",3]]]],[11,"query_sequence_numbers","","",63,[[["instance",3],["accountaddress",3]]]],[11,"auth_key_prefix","","",61,[[],["vec",3]]],[11,"rate","","",57,[[["duration",3]],["txstatsrate",3]]],[0,"util","cluster_test","",null,null],[5,"human_readable_bytes_per_sec","cluster_test::util","",null,[[],["string",3]]],[11,"from","cluster_test::atomic_histogram","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","cluster_test::cluster","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","cluster_test::cluster_builder","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","cluster_test::cluster_swarm::cluster_swarm_kube","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","cluster_test::effects::network_delay","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","cluster_test::effects::packet_loss","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","cluster_test::effects::stop_validator","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","cluster_test::experiments","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_string","","",67,[[],["string",3]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_string","","",68,[[],["string",3]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_string","","",72,[[],["string",3]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_string","","",73,[[],["string",3]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"init","","",74,[[]]],[11,"deref","","",74,[[]]],[11,"deref_mut","","",74,[[]]],[11,"drop","","",74,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_string","","",75,[[],["string",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"init","","",75,[[]]],[11,"deref","","",75,[[]]],[11,"deref_mut","","",75,[[]]],[11,"drop","","",75,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"init","","",77,[[]]],[11,"deref","","",77,[[]]],[11,"deref_mut","","",77,[[]]],[11,"drop","","",77,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","cluster_test::genesis_helper","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","cluster_test::github","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","cluster_test::health","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","cluster_test::instance","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"init","","",79,[[]]],[11,"deref","","",79,[[]]],[11,"deref_mut","","",79,[[]]],[11,"drop","","",79,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","cluster_test::prometheus","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","cluster_test::report","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"erased_serialize","","",53,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"test_only_hash","","",53,[[],["hashvalue",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"erased_serialize","","",52,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"test_only_hash","","",52,[[],["hashvalue",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","cluster_test::slack","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","cluster_test::stats","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"from","cluster_test::suite","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","cluster_test::tx_emitter","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[]]],[11,"deref","","",80,[[]]],[11,"deref_mut","","",80,[[]]],[11,"drop","","",80,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"build","cluster_test::experiments","",12,[[["cluster",3]]]],[11,"build","","",19,[[["cluster",3]]]],[11,"build","","",13,[[["cluster",3]]]],[11,"build","","",66,[[["cluster",3]]]],[11,"build","","",14,[[["cluster",3]]]],[11,"build","","",69,[[["cluster",3]]]],[11,"build","","",71,[[["cluster",3]]]],[11,"build","","",21,[[["cluster",3]]]],[11,"build","","",15,[[["cluster",3]]]],[11,"build","","",16,[[["cluster",3]]]],[11,"build","","",17,[[["cluster",3]]]],[11,"build","","",18,[[["cluster",3]]]],[11,"spawn_new_instance","cluster_test::cluster_swarm::cluster_swarm_kube","",5,[[["instanceconfig",3]],[["pin",3],["box",3]]]],[11,"clean_data","","",5,[[],[["pin",3],["box",3]]]],[11,"get_node_name","","",5,[[],[["pin",3],["box",3]]]],[11,"get_grafana_baseurl","","",5,[[],[["pin",3],["box",3]]]],[11,"put_file","","",5,[[],[["pin",3],["box",3]]]],[11,"activate","cluster_test::effects::network_delay","",8,[[],[["pin",3],["box",3]]]],[11,"deactivate","","",8,[[],[["pin",3],["box",3]]]],[11,"activate","cluster_test::effects::packet_loss","",9,[[],[["pin",3],["box",3]]]],[11,"deactivate","","",9,[[],[["pin",3],["box",3]]]],[11,"activate","cluster_test::effects::stop_validator","",10,[[],[["pin",3],["box",3]]]],[11,"deactivate","","",10,[[],[["pin",3],["box",3]]]],[11,"affected_validators","cluster_test::experiments","",64,[[],[["hashset",3],["string",3]]]],[11,"run","","",64,[[["context",3]],[["box",3],["pin",3]]]],[11,"deadline","","",64,[[],["duration",3]]],[11,"affected_validators","","",77,[[],[["hashset",3],["string",3]]]],[11,"run","","",77,[[["context",3]],[["pin",3],["box",3]]]],[11,"deadline","","",77,[[],["duration",3]]],[11,"run","","",65,[[["context",3]],[["box",3],["pin",3]]]],[11,"deadline","","",65,[[],["duration",3]]],[11,"affected_validators","","",67,[[],[["hashset",3],["string",3]]]],[11,"run","","",67,[[["context",3]],[["pin",3],["box",3]]]],[11,"deadline","","",67,[[],["duration",3]]],[11,"run","","",68,[[["context",3]],[["box",3],["pin",3]]]],[11,"deadline","","",68,[[],["duration",3]]],[11,"affected_validators","","",70,[[],[["hashset",3],["string",3]]]],[11,"run","","",70,[[["context",3]],[["box",3],["pin",3]]]],[11,"deadline","","",70,[[],["duration",3]]],[11,"affected_validators","","",72,[[],[["hashset",3],["string",3]]]],[11,"run","","",72,[[["context",3]],[["box",3],["pin",3]]]],[11,"deadline","","",72,[[],["duration",3]]],[11,"affected_validators","","",73,[[],[["hashset",3],["string",3]]]],[11,"run","","",73,[[["context",3]],[["box",3],["pin",3]]]],[11,"deadline","","",73,[[],["duration",3]]],[11,"affected_validators","","",74,[[],[["hashset",3],["string",3]]]],[11,"run","","",74,[[["context",3]],[["box",3],["pin",3]]]],[11,"deadline","","",74,[[],["duration",3]]],[11,"affected_validators","","",75,[[],[["hashset",3],["string",3]]]],[11,"run","","",75,[[["context",3]],[["box",3],["pin",3]]]],[11,"deadline","","",75,[[],["duration",3]]],[11,"affected_validators","","",76,[[],[["hashset",3],["string",3]]]],[11,"run","","",76,[[["context",3]],[["box",3],["pin",3]]]],[11,"deadline","","",76,[[],["duration",3]]],[11,"on_event","cluster_test::health","",34,[[["validatorevent",3],["healthcheckcontext",3]]]],[11,"verify","","",34,[[["healthcheckcontext",3]],[["pin",3],["box",3]]]],[11,"clear","","",34,[[]]],[11,"name","","",34,[[]]],[11,"verify","","",36,[[["healthcheckcontext",3]],[["pin",3],["box",3]]]],[11,"name","","",36,[[]]],[11,"on_event","","",37,[[["validatorevent",3],["healthcheckcontext",3]]]],[11,"verify","","",37,[[["healthcheckcontext",3]],[["pin",3],["box",3]]]],[11,"invalidate","","",37,[[]]],[11,"name","","",37,[[]]],[11,"clone","cluster_test::cluster","",2,[[],["cluster",3]]],[11,"clone","cluster_test::cluster_builder","",3,[[],["clusterbuilderparams",3]]],[11,"clone","cluster_test::cluster_swarm::cluster_swarm_kube","",5,[[],["clusterswarmkube",3]]],[11,"clone","","",6,[[],["kubenode",3]]],[11,"clone","cluster_test::health","",39,[[],["commit",3]]],[11,"clone","","",32,[[],["event",4]]],[11,"clone","","",78,[[],["validatorevent",3]]],[11,"clone","cluster_test::instance","",42,[[],["validatorgroup",3]]],[11,"clone","","",43,[[],["instanceconfig",3]]],[11,"clone","","",47,[[],["applicationconfig",4]]],[11,"clone","","",79,[[],["vaultconfig",3]]],[11,"clone","","",44,[[],["lsrconfig",3]]],[11,"clone","","",45,[[],["validatorconfig",3]]],[11,"clone","","",46,[[],["fullnodeconfig",3]]],[11,"clone","","",48,[[],["instance",3]]],[11,"clone","cluster_test::prometheus","",49,[[],["prometheus",3]]],[11,"clone","cluster_test::tx_emitter","",59,[[],["emitthreadparams",3]]],[11,"clone","","",60,[[],["emitjobrequest",3]]],[11,"clone","","",61,[[],["accountdata",3]]],[11,"default","cluster_test::atomic_histogram","",0,[[],["atomichistogramaccumulator",3]]],[11,"default","","",1,[[],["atomichistogramsnapshot",3]]],[11,"default","cluster_test::github","",28,[[]]],[11,"default","cluster_test::health","",34,[[],["commithistoryhealthcheck",3]]],[11,"default","","",41,[[]]],[11,"default","cluster_test::report","",53,[[],["suitereport",3]]],[11,"default","cluster_test::slack","",54,[[]]],[11,"default","cluster_test::tx_emitter","",57,[[],["txstats",3]]],[11,"default","","",58,[[],["txstatsrate",3]]],[11,"default","","",59,[[]]],[11,"eq","cluster_test::instance","",42,[[["validatorgroup",3]]]],[11,"ne","","",42,[[["validatorgroup",3]]]],[11,"fmt","cluster_test::atomic_histogram","",1,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::cluster_builder","",3,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::cluster_swarm::cluster_swarm_kube","",6,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::experiments","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::github","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::health","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::instance","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::report","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::tx_emitter","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::effects::network_delay","",8,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::effects::packet_loss","",9,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::effects::stop_validator","",10,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::experiments","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",6]]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",6]]]],[11,"fmt","","",68,[[["formatter",3]],[["error",3],["result",6]]]],[11,"fmt","","",70,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::instance","",48,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::report","",53,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::tx_emitter","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"try_from","cluster_test::cluster_swarm::cluster_swarm_kube","",6,[[["node",3]],["result",6]]],[11,"deserialize","cluster_test::github","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"serialize","cluster_test::report","",53,[[],["result",4]]],[11,"serialize","","",52,[[],["result",4]]],[11,"clap","cluster_test::cluster_builder","",3,[[],["app",3]]],[11,"from_clap","","",3,[[["argmatches",3]]]],[11,"clap","cluster_test::experiments","",12,[[],["app",3]]],[11,"from_clap","","",12,[[["argmatches",3]]]],[11,"clap","","",19,[[],["app",3]]],[11,"from_clap","","",19,[[["argmatches",3]]]],[11,"clap","","",13,[[],["app",3]]],[11,"from_clap","","",13,[[["argmatches",3]]]],[11,"clap","","",66,[[],["app",3]]],[11,"from_clap","","",66,[[["argmatches",3]]]],[11,"clap","","",14,[[],["app",3]]],[11,"from_clap","","",14,[[["argmatches",3]]]],[11,"clap","","",69,[[],["app",3]]],[11,"from_clap","","",69,[[["argmatches",3]]]],[11,"clap","","",71,[[],["app",3]]],[11,"from_clap","","",71,[[["argmatches",3]]]],[11,"clap","","",21,[[],["app",3]]],[11,"from_clap","","",21,[[["argmatches",3]]]],[11,"clap","","",15,[[],["app",3]]],[11,"from_clap","","",15,[[["argmatches",3]]]],[11,"clap","","",16,[[],["app",3]]],[11,"from_clap","","",16,[[["argmatches",3]]]],[11,"clap","","",17,[[],["app",3]]],[11,"from_clap","","",17,[[["argmatches",3]]]],[11,"clap","","",18,[[],["app",3]]],[11,"from_clap","","",18,[[["argmatches",3]]]],[11,"augment_clap","cluster_test::cluster_builder","",3,[[["app",3]],["app",3]]],[11,"is_subcommand","","",3,[[]]],[11,"augment_clap","cluster_test::experiments","",12,[[["app",3]],["app",3]]],[11,"is_subcommand","","",12,[[]]],[11,"augment_clap","","",19,[[["app",3]],["app",3]]],[11,"is_subcommand","","",19,[[]]],[11,"augment_clap","","",13,[[["app",3]],["app",3]]],[11,"is_subcommand","","",13,[[]]],[11,"augment_clap","","",66,[[["app",3]],["app",3]]],[11,"is_subcommand","","",66,[[]]],[11,"augment_clap","","",14,[[["app",3]],["app",3]]],[11,"is_subcommand","","",14,[[]]],[11,"augment_clap","","",69,[[["app",3]],["app",3]]],[11,"is_subcommand","","",69,[[]]],[11,"augment_clap","","",71,[[["app",3]],["app",3]]],[11,"is_subcommand","","",71,[[]]],[11,"augment_clap","","",21,[[["app",3]],["app",3]]],[11,"is_subcommand","","",21,[[]]],[11,"augment_clap","","",15,[[["app",3]],["app",3]]],[11,"is_subcommand","","",15,[[]]],[11,"augment_clap","","",16,[[["app",3]],["app",3]]],[11,"is_subcommand","","",16,[[]]],[11,"augment_clap","","",17,[[["app",3]],["app",3]]],[11,"is_subcommand","","",17,[[]]],[11,"augment_clap","","",18,[[["app",3]],["app",3]]],[11,"is_subcommand","","",18,[[]]]],"p":[[3,"AtomicHistogramAccumulator"],[3,"AtomicHistogramSnapshot"],[3,"Cluster"],[3,"ClusterBuilderParams"],[3,"ClusterBuilder"],[3,"ClusterSwarmKube"],[3,"KubeNode"],[8,"ClusterSwarm"],[3,"NetworkDelay"],[3,"PacketLoss"],[3,"StopValidator"],[8,"Effect"],[3,"CompatiblityTestParams"],[3,"LoadTestParams"],[3,"PerformanceBenchmarkParams"],[3,"ReconfigurationParams"],[3,"RecoveryTimeParams"],[3,"TwinValidatorsParams"],[3,"ValidatorVersioningParams"],[3,"CpuFlamegraphParams"],[3,"Context"],[3,"RebootRandomValidatorsParams"],[8,"Experiment"],[8,"ExperimentParam"],[3,"GenesisHelper"],[3,"CommitInfo"],[3,"GitCommitInfo"],[3,"Author"],[3,"GitHub"],[3,"LogTail"],[3,"TraceTail"],[3,"HealthCheckError"],[4,"Event"],[4,"PrintFailures"],[3,"CommitHistoryHealthCheck"],[3,"DebugPortLogWorker"],[3,"FullNodeHealthCheck"],[3,"LivenessHealthCheck"],[8,"HealthCheck"],[3,"Commit"],[3,"HealthCheckRunner"],[3,"HealthCheckContext"],[3,"ValidatorGroup"],[3,"InstanceConfig"],[3,"LSRConfig"],[3,"ValidatorConfig"],[3,"FullnodeConfig"],[4,"ApplicationConfig"],[3,"Instance"],[3,"Prometheus"],[3,"MatrixResponse"],[3,"TimeSeries"],[3,"ReportedMetric"],[3,"SuiteReport"],[3,"SlackClient"],[3,"PrometheusRangeView"],[3,"ExperimentSuite"],[3,"TxStats"],[3,"TxStatsRate"],[3,"EmitThreadParams"],[3,"EmitJobRequest"],[3,"AccountData"],[4,"InvalidTxType"],[3,"TxEmitter"],[3,"CompatibilityTest"],[3,"PacketLossRandomValidators"],[3,"PacketLossRandomValidatorsParams"],[3,"PerformanceBenchmark"],[3,"PerformanceBenchmarkThreeRegionSimulation"],[3,"PerformanceBenchmarkThreeRegionSimulationParams"],[3,"RebootCluster"],[3,"RebootClusterParams"],[3,"RebootRandomValidators"],[3,"Reconfiguration"],[3,"RecoveryTime"],[3,"TwinValidators"],[3,"ValidatorVersioning"],[3,"CpuFlamegraph"],[3,"ValidatorEvent"],[3,"VaultConfig"],[3,"EmitJob"]]},\
"compiled_stdlib":{"doc":"","i":[[4,"StdLibOptions","compiled_stdlib","An enum specifying whether the compiled stdlib/scripts…",null,null],[13,"Compiled","","",0,null],[13,"Fresh","","",0,null],[5,"stdlib_modules","","Returns a reference to the standard library. Depending…",null,[[["stdliboptions",4]]]],[5,"env_stdlib_modules","","Returns a reference to the standard library built by…",null,[[]]],[5,"use_compiled","","A predicate detailing whether the compiled versions of…",null,[[]]],[0,"transaction_scripts","","Rust representation of a Move transaction script that can…",null,null],[3,"CompiledBytes","compiled_stdlib::transaction_scripts","Bytes produced by compiling a Move source language script…",null,null],[4,"StdlibScript","","All of the Move transaction scripts that can be executed…",null,null],[13,"AddCurrencyToAccount","","",1,null],[13,"AddRecoveryRotationCapability","","",1,null],[13,"AddScriptAllowList","","",1,null],[13,"AddValidatorAndReconfigure","","",1,null],[13,"Burn","","",1,null],[13,"BurnTxnFees","","",1,null],[13,"CancelBurn","","",1,null],[13,"CreateChildVaspAccount","","",1,null],[13,"CreateDesignatedDealer","","",1,null],[13,"CreateParentVaspAccount","","",1,null],[13,"CreateRecoveryAddress","","",1,null],[13,"CreateValidatorAccount","","",1,null],[13,"CreateValidatorOperatorAccount","","",1,null],[13,"FreezeAccount","","",1,null],[13,"PeerToPeerWithMetadata","","",1,null],[13,"Preburn","","",1,null],[13,"PublishSharedEd2551PublicKey","","",1,null],[13,"RegisterValidatorConfig","","",1,null],[13,"RemoveValidatorAndReconfigure","","",1,null],[13,"RotateAuthenticationKey","","",1,null],[13,"RotateAuthenticationKeyWithNonce","","",1,null],[13,"RotateAuthenticationKeyWithNonceAdmin","","",1,null],[13,"RotateAuthenticationKeyWithRecoveryAddress","","",1,null],[13,"RotateDualAttestationInfo","","",1,null],[13,"RotateSharedEd2551PublicKey","","",1,null],[13,"SetValidatorConfigAndReconfigure","","",1,null],[13,"SetValidatorOperator","","",1,null],[13,"SetValidatorOperatorWithNonceAdmin","","",1,null],[13,"TieredMint","","",1,null],[13,"UnfreezeAccount","","",1,null],[13,"UpdateExchangeRate","","",1,null],[13,"UpdateDiemVersion","","",1,null],[13,"UpdateMintingAbility","","",1,null],[13,"UpdateDualAttestationLimit","","",1,null],[11,"all","","Return a vector containing all of the standard library…",1,[[],["vec",3]]],[11,"allowlist","","Construct the allowlist of script hashes used to determine…",1,[[],["vec",3]]],[11,"name","","Return a lowercase-underscore style name for this script",1,[[],["string",3]]],[11,"is","","Return true if `code_bytes` is the bytecode of one of the…",1,[[]]],[11,"compiled_bytes","","Return the Move bytecode that was produced by compiling…",1,[[],["compiledbytes",3]]],[11,"abi","","Return the ABI of the script (including the bytecode).",1,[[],["scriptabi",3]]],[11,"hash","","Return the sha3-256 hash of the compiled script bytes.",1,[[],["hashvalue",3]]],[11,"hash","","Return the sha3-256 hash of the script bytes",2,[[],["hashvalue",3]]],[11,"into_vec","","Convert this newtype wrapper into a vector of bytes",2,[[],["vec",3]]],[17,"NO_USE_COMPILED","compiled_stdlib","",null,null],[17,"COMPILED_STDLIB_DIR","","The compiled library needs to be included in the Rust…",null,null],[17,"ERROR_DESCRIPTIONS","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","compiled_stdlib::transaction_scripts","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"clone","","",1,[[],["stdlibscript",4]]],[11,"clone","","",2,[[],["compiledbytes",3]]],[11,"eq","","",1,[[["stdlibscript",4]]]],[11,"eq","compiled_stdlib","",0,[[["stdliboptions",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","compiled_stdlib::transaction_scripts","",1,[[["formatter",3]],["result",6]]],[11,"try_from","","Return `Some(<script_name>)` if `code_bytes` is the…",1,[[],["result",6]]]],"p":[[4,"StdLibOptions"],[4,"StdlibScript"],[3,"CompiledBytes"]]},\
"compiler":{"doc":"","i":[[3,"Compiler","compiler","An API for the compiler. Supports setting custom options.",null,null],[12,"address","","The address used as the sender for the compiler.",0,null],[12,"skip_stdlib_deps","","Skip stdlib dependencies if true.",0,null],[12,"extra_deps","","Extra dependencies to compile with.",0,null],[0,"util","","",null,null],[5,"do_compile_module","compiler::util","",null,[[["accountaddress",3],["path",3]]]],[11,"into_compiled_script_and_source_map","compiler","Compiles into a `CompiledScript` where the bytecode hasn\'t…",0,[[],["result",6]]],[11,"into_script_blob","","Compiles the script into a serialized form.",0,[[],[["result",6],["vec",3]]]],[11,"into_compiled_module","","Compiles the module.",0,[[],[["result",6],["compiledmodule",3]]]],[11,"into_module_blob","","Compiles the module into a serialized form.",0,[[],[["result",6],["vec",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"clone","","",0,[[],["compiler",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Compiler"]]},\
"consensus":{"doc":"Consensus for the Diem Core blockchain","i":[[5,"gen_consensus_reconfig_subscription","consensus","Creates consensus\'s subscription to reconfiguration…",null,[[]]],[0,"consensus_provider","","DiemBFT implementation",null,null],[5,"start_consensus","consensus::consensus_provider","Helper function to start consensus based on configuration…",null,[[["receiver",3],["consensusnetworksender",3],["statesyncclient",3],["sender",3],["consensusrequest",4],["dbreader",8],["nodeconfig",3],["arc",3],["consensusnetworkevents",6],["onchainconfigpayload",3]],["runtime",3]]],[0,"network_interface","consensus","DiemNet interface. Interface between Consensus and Network…",null,null],[3,"ConsensusNetworkSender","consensus::network_interface","The interface from Consensus to Networking layer.",null,null],[4,"ConsensusMsg","","Network type for consensus",null,null],[13,"BlockRetrievalRequest","","RPC to get a chain of block of the given length starting…",0,null],[13,"BlockRetrievalResponse","","Carries the returned blocks and the retrieval status.",0,null],[13,"EpochRetrievalRequest","","Request to get a EpochChangeProof from current_epoch to…",0,null],[13,"ProposalMsg","","ProposalMsg contains the required information for the…",0,null],[13,"SyncInfo","","This struct describes basic synchronization metadata.",0,null],[13,"EpochChangeProof","","A vector of LedgerInfo with contiguous increasing epoch…",0,null],[13,"VoteMsg","","VoteMsg is the struct that is ultimately sent by the voter…",0,null],[5,"network_endpoint_config","","Configuration for the network endpoints to support…",null,[[]]],[6,"ConsensusNetworkEvents","","The interface from Network to Consensus layer.",null,null],[11,"send_to","","Send a single message to the destination peer using the…",1,[[["consensusmsg",4],["peerid",3]],[["networkerror",3],["result",4]]]],[11,"send_to_many","","Send a single message to the destination peers using the…",1,[[["consensusmsg",4]],[["networkerror",3],["result",4]]]],[11,"send_rpc","","Send a RPC to the destination peer using the…",1,[[["consensusmsg",4],["duration",3],["peerid",3]]]],[0,"round_manager_fuzzing","consensus","",null,null],[5,"generate_corpus_proposal","consensus::round_manager_fuzzing","",null,[[],["vec",3]]],[5,"fuzz_proposal","","",null,[[]]],[11,"from","consensus::network_interface","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"clone","","",0,[[],["consensusmsg",4]]],[11,"clone","","",1,[[],["consensusnetworksender",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"new","","Returns a Sender that only sends for the…",1,[[["connectionrequestsender",3],["peermanagerrequestsender",3]]]]],"p":[[4,"ConsensusMsg"],[3,"ConsensusNetworkSender"]]},\
"consensus_types":{"doc":"","i":[[0,"block","consensus_types","",null,null],[3,"Block","consensus_types::block","Block has the core data of a consensus block that should…",null,null],[0,"block_test_utils","","",null,null],[5,"new_proposal","consensus_types::block::block_test_utils","This strategy is a swiss-army tool to produce a low-level…",null,[[["hashvalue",3],["quorumcert",3]]]],[5,"genesis_strategy","","This produces the genesis block",null,[[]]],[5,"unmoored_block","","This produces an unmoored block, with arbitrary parent &…",null,[[]]],[5,"leaf_strategy","","Offers the genesis block.",null,[[]]],[5,"fake_id","","This produces a block with an invalid id (and therefore…",null,[[]]],[5,"some_round","","This produces a round that is often higher than the…",null,[[["round",6]]]],[5,"block_forest_and_its_keys","","This returns keys and a block forest created from them",null,[[]]],[5,"placeholder_ledger_info","","",null,[[],["ledgerinfo",3]]],[5,"gen_test_certificate","","",null,[[["vec",3],["blockinfo",3],["validatorsigner",3],["option",4]],["quorumcert",3]]],[5,"placeholder_certificate_for_block","","",null,[[["vec",3],["hashvalue",3],["validatorsigner",3]],["quorumcert",3]]],[5,"certificate_for_genesis","","",null,[[],["quorumcert",3]]],[5,"random_payload","","",null,[[],["payload",6]]],[11,"author","consensus_types::block","",0,[[],[["option",4],["author",6]]]],[11,"epoch","","",0,[[]]],[11,"id","","",0,[[],["hashvalue",3]]],[11,"parent_id","","",0,[[],["hashvalue",3]]],[11,"payload","","",0,[[],[["payload",6],["option",4]]]],[11,"quorum_cert","","",0,[[],["quorumcert",3]]],[11,"round","","",0,[[],["round",6]]],[11,"signature","","",0,[[],[["ed25519signature",3],["option",4]]]],[11,"timestamp_usecs","","",0,[[]]],[11,"gen_block_info","","",0,[[["version",6],["epochstate",3],["hashvalue",3],["option",4]],["blockinfo",3]]],[11,"block_data","","",0,[[],["blockdata",3]]],[11,"is_genesis_block","","",0,[[]]],[11,"is_nil_block","","",0,[[]]],[11,"make_genesis_block","","",0,[[]]],[11,"make_genesis_block_from_ledger_info","","Construct new genesis block for next epoch…",0,[[["ledgerinfo",3]]]],[11,"new_for_testing","","",0,[[["blockdata",3],["option",4],["ed25519signature",3],["hashvalue",3]]]],[11,"new_nil","","The NIL blocks are special: they\'re not carrying any real…",0,[[["quorumcert",3],["round",6]]]],[11,"new_proposal","","",0,[[["quorumcert",3],["payload",6],["validatorsigner",3],["round",6]]]],[11,"new_proposal_from_block_data","","",0,[[["blockdata",3],["validatorsigner",3]]]],[11,"new_proposal_from_block_data_and_signature","","",0,[[["blockdata",3],["ed25519signature",3]]]],[11,"validate_signature","","Verifies that the proposal and the QC are correctly…",0,[[["validatorverifier",3]],["result",6]]],[11,"verify_well_formed","","Makes sure that the proposal makes sense, independently of…",0,[[],["result",6]]],[0,"block_data","consensus_types","",null,null],[3,"BlockData","consensus_types::block_data","Block has the core data of a consensus block that should…",null,null],[3,"BlockDataHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[4,"BlockType","","",null,null],[13,"Proposal","","",1,null],[12,"payload","consensus_types::block_data::BlockType","T of the block (e.g. one or more transaction(s)",2,null],[12,"author","","Author of the block that can be validated by the author\'s…",2,null],[13,"NilBlock","consensus_types::block_data","NIL blocks don\'t have authors or signatures: they\'re…",1,null],[13,"Genesis","","A genesis block is the first committed block in any epoch…",1,null],[11,"author","","",3,[[],[["option",4],["author",6]]]],[11,"block_type","","",3,[[],["blocktype",4]]],[11,"epoch","","",3,[[]]],[11,"parent_id","","",3,[[],["hashvalue",3]]],[11,"payload","","",3,[[],[["payload",6],["option",4]]]],[11,"round","","",3,[[],["round",6]]],[11,"timestamp_usecs","","",3,[[]]],[11,"quorum_cert","","",3,[[],["quorumcert",3]]],[11,"is_genesis_block","","",3,[[]]],[11,"is_nil_block","","",3,[[]]],[11,"new_genesis_from_ledger_info","","",3,[[["ledgerinfo",3]]]],[11,"new_for_testing","","",3,[[["quorumcert",3],["blocktype",4],["round",6]]]],[11,"new_genesis","","",3,[[["quorumcert",3]]]],[11,"new_nil","","",3,[[["quorumcert",3],["round",6]]]],[11,"new_proposal","","",3,[[["quorumcert",3],["payload",6],["author",6],["round",6]]]],[0,"block_retrieval","consensus_types","",null,null],[3,"BlockRetrievalRequest","consensus_types::block_retrieval","RPC to get a chain of block of the given length starting…",null,null],[3,"BlockRetrievalResponse","","Carries the returned blocks and the retrieval status.",null,null],[4,"BlockRetrievalStatus","","",null,null],[13,"Succeeded","","",4,null],[13,"IdNotFound","","",4,null],[13,"NotEnoughBlocks","","",4,null],[17,"MAX_BLOCKS_PER_REQUEST","","",null,null],[11,"new","","",5,[[["hashvalue",3]]]],[11,"block_id","","",5,[[],["hashvalue",3]]],[11,"num_blocks","","",5,[[]]],[11,"new","","",6,[[["blockretrievalstatus",4],["block",3],["vec",3]]]],[11,"status","","",6,[[],["blockretrievalstatus",4]]],[11,"blocks","","",6,[[],["vec",3]]],[11,"verify","","",6,[[["hashvalue",3],["validatorverifier",3]],["result",6]]],[0,"common","consensus_types","",null,null],[6,"Round","consensus_types::common","The round of a block is a consensus-internal counter,…",null,null],[6,"Author","","Author refers to the author\'s account address",null,null],[6,"Payload","","The payload in block.",null,null],[0,"epoch_retrieval","consensus_types","",null,null],[3,"EpochRetrievalRequest","consensus_types::epoch_retrieval","Request to get a EpochChangeProof from current_epoch to…",null,null],[12,"start_epoch","","",7,null],[12,"end_epoch","","",7,null],[0,"executed_block","consensus_types","",null,null],[3,"ExecutedBlock","consensus_types::executed_block","ExecutedBlocks are managed in a speculative tree, the…",null,null],[11,"new","","",8,[[["block",3],["statecomputeresult",3]]]],[11,"block","","",8,[[],["block",3]]],[11,"id","","",8,[[],["hashvalue",3]]],[11,"epoch","","",8,[[]]],[11,"payload","","",8,[[],[["payload",6],["option",4]]]],[11,"parent_id","","",8,[[],["hashvalue",3]]],[11,"quorum_cert","","",8,[[],["quorumcert",3]]],[11,"round","","",8,[[],["round",6]]],[11,"timestamp_usecs","","",8,[[]]],[11,"compute_result","","",8,[[],["statecomputeresult",3]]],[11,"block_info","","",8,[[],["blockinfo",3]]],[11,"maybe_signed_vote_proposal","","",8,[[],["maybesignedvoteproposal",3]]],[0,"proposal_msg","consensus_types","",null,null],[3,"ProposalMsg","consensus_types::proposal_msg","ProposalMsg contains the required information for the…",null,null],[11,"new","","Creates a new proposal.",9,[[["block",3],["syncinfo",3]]]],[11,"epoch","","",9,[[]]],[11,"verify_well_formed","","Verifies that the ProposalMsg is well-formed.",9,[[],["result",6]]],[11,"verify","","",9,[[["validatorverifier",3]],["result",6]]],[11,"proposal","","",9,[[],["block",3]]],[11,"take_proposal","","",9,[[],["block",3]]],[11,"sync_info","","",9,[[],["syncinfo",3]]],[11,"proposer","","",9,[[],["author",6]]],[0,"quorum_cert","consensus_types","",null,null],[3,"QuorumCert","consensus_types::quorum_cert","",null,null],[11,"new","","",10,[[["ledgerinfowithsignatures",4],["votedata",3]]]],[11,"vote_data","","",10,[[],["votedata",3]]],[11,"certified_block","","",10,[[],["blockinfo",3]]],[11,"parent_block","","",10,[[],["blockinfo",3]]],[11,"ledger_info","","",10,[[],["ledgerinfowithsignatures",4]]],[11,"commit_info","","",10,[[],["blockinfo",3]]],[11,"ends_epoch","","If the QC commits reconfiguration and starts a new epoch",10,[[]]],[11,"certificate_for_genesis_from_ledger_info","","QuorumCert for the genesis block deterministically…",10,[[["ledgerinfo",3],["hashvalue",3]],["quorumcert",3]]],[11,"verify","","",10,[[["validatorverifier",3]],["result",6]]],[0,"safety_data","consensus_types","",null,null],[3,"SafetyData","consensus_types::safety_data","Data structure for safety rules to ensure consensus safety.",null,null],[12,"epoch","","",11,null],[12,"last_voted_round","","",11,null],[12,"preferred_round","","",11,null],[12,"last_vote","","",11,null],[11,"new","","",11,[[["vote",3],["option",4]]]],[0,"sync_info","consensus_types","",null,null],[3,"SyncInfo","consensus_types::sync_info","This struct describes basic synchronization metadata.",null,null],[11,"new","","",12,[[["option",4],["quorumcert",3],["timeoutcertificate",3]]]],[11,"highest_quorum_cert","","Highest quorum certificate",12,[[],["quorumcert",3]]],[11,"highest_commit_cert","","Highest ledger info",12,[[],["quorumcert",3]]],[11,"highest_timeout_certificate","","Highest timeout certificate if available",12,[[],[["timeoutcertificate",3],["option",4]]]],[11,"highest_certified_round","","",12,[[],["round",6]]],[11,"highest_timeout_round","","",12,[[],["round",6]]],[11,"highest_commit_round","","",12,[[],["round",6]]],[11,"highest_round","","The highest round the SyncInfo carries.",12,[[],["round",6]]],[11,"verify","","",12,[[["validatorverifier",3]],["result",6]]],[11,"epoch","","",12,[[]]],[11,"has_newer_certificates","","",12,[[["syncinfo",3]]]],[0,"timeout","consensus_types","",null,null],[3,"Timeout","consensus_types::timeout","This structure contains all the information necessary to…",null,null],[3,"TimeoutHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new","","",13,[[["round",6]]]],[11,"epoch","","",13,[[]]],[11,"round","","",13,[[],["round",6]]],[11,"sign","","",13,[[["validatorsigner",3]],["ed25519signature",3]]],[0,"timeout_certificate","consensus_types","",null,null],[3,"TimeoutCertificate","consensus_types::timeout_certificate","TimeoutCertificate is a proof that 2f+1 participants in…",null,null],[11,"new","","Creates new TimeoutCertificate",14,[[["timeout",3]]]],[11,"verify","","Verifies the signatures for the round",14,[[["validatorverifier",3]],["result",6]]],[11,"epoch","","Returns the epoch of the timeout certificate",14,[[]]],[11,"round","","Returns the round of the timeout certificate",14,[[],["round",6]]],[11,"signatures","","Returns the signatures certifying the round",14,[[],["btreemap",3]]],[11,"add_signature","","",14,[[["author",6],["ed25519signature",3]]]],[11,"remove_signature","","",14,[[["author",6]]]],[0,"vote","consensus_types","",null,null],[3,"Vote","consensus_types::vote","Vote is the struct that is ultimately sent by the voter in…",null,null],[11,"new","","Generates a new Vote corresponding to the \\\"fast-vote\\\" path…",15,[[["votedata",3],["author",6],["ledgerinfo",3],["validatorsigner",3]]]],[11,"new_with_signature","","Generates a new Vote using a signature over the specified…",15,[[["votedata",3],["author",6],["ledgerinfo",3],["ed25519signature",3]]]],[11,"add_timeout_signature","","Generates a round signature, which can then be used for…",15,[[["ed25519signature",3]]]],[11,"vote_data","","",15,[[],["votedata",3]]],[11,"author","","Return the author of the vote",15,[[],["author",6]]],[11,"ledger_info","","Return the LedgerInfo associated with this vote",15,[[],["ledgerinfo",3]]],[11,"signature","","Return the signature of the vote",15,[[],["ed25519signature",3]]],[11,"timeout","","Returns the hash of the data represent by a timeout proposal",15,[[],["timeout",3]]],[11,"epoch","","Return the epoch of the vote",15,[[]]],[11,"timeout_signature","","Returns the signature for the…",15,[[],[["ed25519signature",3],["option",4]]]],[11,"is_timeout","","The vote message is considered a timeout vote message if…",15,[[]]],[11,"verify","","Verifies that the consensus data hash of LedgerInfo…",15,[[["validatorverifier",3]],["result",6]]],[0,"vote_data","consensus_types","",null,null],[3,"VoteData","consensus_types::vote_data","VoteData keeps the information about the block, and its…",null,null],[3,"VoteDataHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new","","Constructs a new VoteData from the block information of a…",16,[[["blockinfo",3]]]],[11,"parent","","Returns block information associated to the block being…",16,[[],["blockinfo",3]]],[11,"proposed","","Returns block information associated to the block being…",16,[[],["blockinfo",3]]],[11,"verify","","Well-formedness checks that are independent of the current…",16,[[],["result",6]]],[0,"vote_msg","consensus_types","",null,null],[3,"VoteMsg","consensus_types::vote_msg","VoteMsg is the struct that is ultimately sent by the voter…",null,null],[11,"new","","",17,[[["vote",3],["syncinfo",3]]]],[11,"vote","","Container for actual voting material",17,[[],["vote",3]]],[11,"sync_info","","SyncInfo of the given vote message",17,[[],["syncinfo",3]]],[11,"epoch","","",17,[[]]],[11,"proposed_block_id","","",17,[[],["hashvalue",3]]],[11,"verify","","",17,[[["validatorverifier",3]],["result",6]]],[0,"vote_proposal","consensus_types","",null,null],[3,"VoteProposal","consensus_types::vote_proposal","This structure contains all the information needed by…",null,null],[3,"VoteProposalHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[3,"MaybeSignedVoteProposal","","Wraps a vote_proposal and its signature.",null,null],[12,"vote_proposal","","The vote proposal to be signed.",18,null],[12,"signature","","The signature of this proposal\'s hash from Diem Execution…",18,null],[11,"new","","",19,[[["block",3],["epochstate",3],["accumulatorextensionproof",3],["option",4],["transactionaccumulatorhasher",3]]]],[11,"accumulator_extension_proof","","",19,[[],["accumulatorextensionproof",3]]],[11,"block","","",19,[[],["block",3]]],[11,"next_epoch_state","","",19,[[],[["option",4],["epochstate",3]]]],[11,"from","consensus_types::block","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","consensus_types::block_data","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"equivalent","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","consensus_types::block_retrieval","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"equivalent","","",6,[[]]],[11,"erased_serialize","","",6,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","consensus_types::epoch_retrieval","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"erased_serialize","","",7,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","consensus_types::executed_block","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"equivalent","","",8,[[]]],[11,"from","consensus_types::proposal_msg","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"equivalent","","",9,[[]]],[11,"erased_serialize","","",9,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","consensus_types::quorum_cert","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"equivalent","","",10,[[]]],[11,"erased_serialize","","",10,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","consensus_types::safety_data","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"equivalent","","",11,[[]]],[11,"erased_serialize","","",11,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","consensus_types::sync_info","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"equivalent","","",12,[[]]],[11,"erased_serialize","","",12,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","consensus_types::timeout","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"equivalent","","",13,[[]]],[11,"erased_serialize","","",13,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","consensus_types::timeout_certificate","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"equivalent","","",14,[[]]],[11,"erased_serialize","","",14,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","consensus_types::vote","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"test_only_hash","","",15,[[],["hashvalue",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"equivalent","","",15,[[]]],[11,"erased_serialize","","",15,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","consensus_types::vote_data","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"test_only_hash","","",16,[[],["hashvalue",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"equivalent","","",16,[[]]],[11,"erased_serialize","","",16,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","consensus_types::vote_msg","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"test_only_hash","","",17,[[],["hashvalue",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"equivalent","","",17,[[]]],[11,"erased_serialize","","",17,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","consensus_types::vote_proposal","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"test_only_hash","","",19,[[],["hashvalue",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"erased_serialize","","",19,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"test_only_hash","","",18,[[],["hashvalue",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"erased_serialize","","",18,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"clone","consensus_types::block","",0,[[],["block",3]]],[11,"clone","consensus_types::block_data","",1,[[],["blocktype",4]]],[11,"clone","","",3,[[],["blockdata",3]]],[11,"clone","","",20,[[],["blockdatahasher",3]]],[11,"clone","consensus_types::block_retrieval","",5,[[],["blockretrievalrequest",3]]],[11,"clone","","",4,[[],["blockretrievalstatus",4]]],[11,"clone","","",6,[[],["blockretrievalresponse",3]]],[11,"clone","consensus_types::epoch_retrieval","",7,[[],["epochretrievalrequest",3]]],[11,"clone","consensus_types::executed_block","",8,[[],["executedblock",3]]],[11,"clone","consensus_types::proposal_msg","",9,[[],["proposalmsg",3]]],[11,"clone","consensus_types::quorum_cert","",10,[[],["quorumcert",3]]],[11,"clone","consensus_types::safety_data","",11,[[],["safetydata",3]]],[11,"clone","consensus_types::sync_info","",12,[[],["syncinfo",3]]],[11,"clone","consensus_types::timeout","",13,[[],["timeout",3]]],[11,"clone","","",21,[[],["timeouthasher",3]]],[11,"clone","consensus_types::timeout_certificate","",14,[[],["timeoutcertificate",3]]],[11,"clone","consensus_types::vote","",15,[[],["vote",3]]],[11,"clone","consensus_types::vote_data","",16,[[],["votedata",3]]],[11,"clone","","",22,[[],["votedatahasher",3]]],[11,"clone","consensus_types::vote_msg","",17,[[],["votemsg",3]]],[11,"clone","consensus_types::vote_proposal","",19,[[],["voteproposal",3]]],[11,"clone","","",23,[[],["voteproposalhasher",3]]],[11,"clone","","",18,[[],["maybesignedvoteproposal",3]]],[11,"default","consensus_types::block_data","",20,[[]]],[11,"default","consensus_types::safety_data","",11,[[],["safetydata",3]]],[11,"default","consensus_types::timeout","",21,[[]]],[11,"default","consensus_types::vote_data","",22,[[]]],[11,"default","consensus_types::vote_proposal","",23,[[]]],[11,"eq","consensus_types::block","",0,[[["block",3]]]],[11,"ne","","",0,[[["block",3]]]],[11,"eq","consensus_types::block_data","",1,[[["blocktype",4]]]],[11,"ne","","",1,[[["blocktype",4]]]],[11,"eq","","",3,[[["blockdata",3]]]],[11,"ne","","",3,[[["blockdata",3]]]],[11,"eq","consensus_types::block_retrieval","",5,[[["blockretrievalrequest",3]]]],[11,"ne","","",5,[[["blockretrievalrequest",3]]]],[11,"eq","","",4,[[["blockretrievalstatus",4]]]],[11,"eq","","",6,[[["blockretrievalresponse",3]]]],[11,"ne","","",6,[[["blockretrievalresponse",3]]]],[11,"eq","consensus_types::executed_block","",8,[[["executedblock",3]]]],[11,"ne","","",8,[[["executedblock",3]]]],[11,"eq","consensus_types::proposal_msg","",9,[[["proposalmsg",3]]]],[11,"ne","","",9,[[["proposalmsg",3]]]],[11,"eq","consensus_types::quorum_cert","",10,[[["quorumcert",3]]]],[11,"ne","","",10,[[["quorumcert",3]]]],[11,"eq","consensus_types::safety_data","",11,[[["safetydata",3]]]],[11,"ne","","",11,[[["safetydata",3]]]],[11,"eq","consensus_types::sync_info","",12,[[["syncinfo",3]]]],[11,"ne","","",12,[[["syncinfo",3]]]],[11,"eq","consensus_types::timeout","",13,[[["timeout",3]]]],[11,"ne","","",13,[[["timeout",3]]]],[11,"eq","consensus_types::timeout_certificate","",14,[[["timeoutcertificate",3]]]],[11,"ne","","",14,[[["timeoutcertificate",3]]]],[11,"eq","consensus_types::vote","",15,[[["vote",3]]]],[11,"ne","","",15,[[["vote",3]]]],[11,"eq","consensus_types::vote_data","",16,[[["votedata",3]]]],[11,"ne","","",16,[[["votedata",3]]]],[11,"eq","consensus_types::vote_msg","",17,[[["votemsg",3]]]],[11,"ne","","",17,[[["votemsg",3]]]],[11,"deref","consensus_types::vote_proposal","",18,[[],["voteproposal",3]]],[11,"fmt","consensus_types::block","",0,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::block_data","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::block_retrieval","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::epoch_retrieval","",7,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::executed_block","",8,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::proposal_msg","",9,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::quorum_cert","",10,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::safety_data","",11,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::sync_info","",12,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::timeout","",13,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::timeout_certificate","",14,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote","",15,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote_data","",16,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote_msg","",17,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote_proposal","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::block","",0,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::block_retrieval","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::epoch_retrieval","",7,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::executed_block","",8,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::proposal_msg","",9,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::quorum_cert","",10,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::safety_data","",11,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::sync_info","",12,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::timeout","",13,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::timeout_certificate","",14,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote","",15,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote_data","",16,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote_msg","",17,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote_proposal","",19,[[["formatter",3]],["result",6]]],[11,"write","consensus_types::block_data","",20,[[],["result",6]]],[11,"flush","","",20,[[],["result",6]]],[11,"write","consensus_types::timeout","",21,[[],["result",6]]],[11,"flush","","",21,[[],["result",6]]],[11,"write","consensus_types::vote_data","",22,[[],["result",6]]],[11,"flush","","",22,[[],["result",6]]],[11,"write","consensus_types::vote_proposal","",23,[[],["result",6]]],[11,"flush","","",23,[[],["result",6]]],[11,"hash","consensus_types::block_data","",3,[[],["hashvalue",3]]],[11,"hash","consensus_types::timeout","",13,[[],["hashvalue",3]]],[11,"hash","consensus_types::vote_data","",16,[[],["hashvalue",3]]],[11,"hash","consensus_types::vote_proposal","",19,[[],["hashvalue",3]]],[11,"seed","consensus_types::block_data","",20,[[]]],[11,"update","","",20,[[]]],[11,"finish","","",20,[[],["hashvalue",3]]],[11,"seed","consensus_types::timeout","",21,[[]]],[11,"update","","",21,[[]]],[11,"finish","","",21,[[],["hashvalue",3]]],[11,"seed","consensus_types::vote_data","",22,[[]]],[11,"update","","",22,[[]]],[11,"finish","","",22,[[],["hashvalue",3]]],[11,"seed","consensus_types::vote_proposal","",23,[[]]],[11,"update","","",23,[[]]],[11,"finish","","",23,[[],["hashvalue",3]]],[11,"serialize","consensus_types::block","",0,[[],["result",4]]],[11,"serialize","consensus_types::block_data","",1,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","consensus_types::block_retrieval","",5,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","consensus_types::epoch_retrieval","",7,[[],["result",4]]],[11,"serialize","consensus_types::proposal_msg","",9,[[],["result",4]]],[11,"serialize","consensus_types::quorum_cert","",10,[[],["result",4]]],[11,"serialize","consensus_types::safety_data","",11,[[],["result",4]]],[11,"serialize","consensus_types::sync_info","",12,[[],["result",4]]],[11,"serialize","consensus_types::timeout","",13,[[],["result",4]]],[11,"serialize","consensus_types::timeout_certificate","",14,[[],["result",4]]],[11,"serialize","consensus_types::vote","",15,[[],["result",4]]],[11,"serialize","consensus_types::vote_data","",16,[[],["result",4]]],[11,"serialize","consensus_types::vote_msg","",17,[[],["result",4]]],[11,"serialize","consensus_types::vote_proposal","",19,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"deserialize","consensus_types::block","",0,[[],["result",4]]],[11,"deserialize","consensus_types::block_data","",1,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","consensus_types::block_retrieval","",5,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","consensus_types::epoch_retrieval","",7,[[],["result",4]]],[11,"deserialize","consensus_types::proposal_msg","",9,[[],["result",4]]],[11,"deserialize","consensus_types::quorum_cert","",10,[[],["result",4]]],[11,"deserialize","consensus_types::safety_data","",11,[[],["result",4]]],[11,"deserialize","consensus_types::sync_info","",12,[[],["result",4]]],[11,"deserialize","consensus_types::timeout","",13,[[],["result",4]]],[11,"deserialize","consensus_types::timeout_certificate","",14,[[],["result",4]]],[11,"deserialize","consensus_types::vote","",15,[[],["result",4]]],[11,"deserialize","consensus_types::vote_data","",16,[[],["result",4]]],[11,"deserialize","consensus_types::vote_msg","",17,[[],["result",4]]],[11,"deserialize","consensus_types::vote_proposal","",19,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]]],"p":[[3,"Block"],[4,"BlockType"],[13,"Proposal"],[3,"BlockData"],[4,"BlockRetrievalStatus"],[3,"BlockRetrievalRequest"],[3,"BlockRetrievalResponse"],[3,"EpochRetrievalRequest"],[3,"ExecutedBlock"],[3,"ProposalMsg"],[3,"QuorumCert"],[3,"SafetyData"],[3,"SyncInfo"],[3,"Timeout"],[3,"TimeoutCertificate"],[3,"Vote"],[3,"VoteData"],[3,"VoteMsg"],[3,"MaybeSignedVoteProposal"],[3,"VoteProposal"],[3,"BlockDataHasher"],[3,"TimeoutHasher"],[3,"VoteDataHasher"],[3,"VoteProposalHasher"]]},\
"crash_handler":{"doc":"","i":[[3,"CrashInfo","crash_handler","",null,null],[5,"setup_panic_handler","","Invoke to ensure process exits on a thread panic.",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]]],"p":[[3,"CrashInfo"]]},\
"datatest_stable":{"doc":"`datatest-stable` is a very simple test harness intended…","i":[[3,"Requirements","datatest_stable","",null,null],[5,"runner","","",null,[[]]],[11,"new","","",0,[[["string",3]]]],[0,"utils","","",null,null],[5,"iterate_directory","datatest_stable::utils","Helper function to iterate through all the files in the…",null,[[["path",3]]]],[5,"derive_test_name","","",null,[[["path",3]],["string",3]]],[6,"Result","datatest_stable","",null,null],[14,"harness","","`datatest-stable` test harness entry point. Should be…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"Requirements"]]},\
"debug_interface":{"doc":"","i":[[3,"NodeDebugClient","debug_interface","Implement default utility client for NodeDebugInterface",null,null],[3,"AsyncNodeDebugClient","","Implement default utility client for AsyncNodeDebugInterface",null,null],[0,"node_debug_service","","Debug interface to access information in a specific node.",null,null],[3,"NodeDebugService","debug_interface::node_debug_service","",null,null],[11,"new","","",0,[[["socketaddr",4],["arc",3],["option",4]]]],[11,"runtime","","",0,[[],["runtime",3]]],[11,"new","debug_interface","Create NodeDebugInterfaceClient from a valid socket address.",1,[[["asref",8]]]],[11,"get_node_metric","","",1,[[["asref",8]],[["option",4],["result",6]]]],[11,"get_node_metrics","","",1,[[],[["result",6],["hashmap",3]]]],[11,"get_events","","",1,[[],[["vec",3],["result",6]]]],[11,"new","","Create AsyncNodeDebugInterface from a valid socket address.",2,[[["client",3],["asref",8]]]],[11,"get_node_metric","","",2,[[["asref",8]]]],[11,"get_node_metrics","","",2,[[]]],[11,"get_events","","",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","debug_interface::node_debug_service","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"NodeDebugService"],[3,"NodeDebugClient"],[3,"AsyncNodeDebugClient"]]},\
"diem_bitvec":{"doc":"This library defines a BitVec struct that represents a bit…","i":[[3,"BitVec","diem_bitvec","BitVec represents a bit vector that supports 4 operations:",null,null],[11,"set","","Sets the bit at position @pos.",0,[[]]],[11,"is_set","","Checks if the bit at position @pos is set.",0,[[]]],[11,"count_ones","","Returns the number of set bits.",0,[[]]],[11,"last_set_bit","","Returns the index of the last set bit.",0,[[],["option",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"clone","","",0,[[],["bitvec",3]]],[11,"default","","",0,[[],["bitvec",3]]],[11,"eq","","",0,[[["bitvec",3]]]],[11,"ne","","",0,[[["bitvec",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"bitand","","Returns a new BitVec that is a bitwise AND of two BitVecs.",0,[[]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"arbitrary_with","","",0,[[]]]],"p":[[3,"BitVec"]]},\
"diem_config":{"doc":"","i":[[0,"config","diem_config","",null,null],[3,"ConsensusConfig","diem_config::config","",null,null],[12,"contiguous_rounds","","",0,null],[12,"max_block_size","","",0,null],[12,"max_pruned_blocks_in_mem","","",0,null],[12,"round_initial_timeout_ms","","",0,null],[12,"proposer_type","","",0,null],[12,"safety_rules","","",0,null],[12,"sync_only","","",0,null],[12,"mempool_poll_count","","",0,null],[3,"LeaderReputationConfig","","",null,null],[12,"active_weights","","",1,null],[12,"inactive_weights","","",1,null],[3,"DebugInterfaceConfig","","",null,null],[12,"admission_control_node_debug_port","","",2,null],[12,"address","","",2,null],[12,"diem_trace","","",2,null],[12,"metrics_server_port","","",2,null],[12,"public_metrics_server_port","","",2,null],[3,"DiemTraceConfig","","",null,null],[12,"sampling","","",3,null],[3,"ExecutionConfig","","",null,null],[12,"genesis","","",4,null],[12,"sign_vote_proposal","","",4,null],[12,"genesis_file_location","","",4,null],[12,"service","","",4,null],[12,"backend","","",4,null],[12,"network_timeout_ms","","",4,null],[3,"RemoteExecutionService","","",null,null],[12,"server_address","","",5,null],[3,"KeyManagerConfig","","",null,null],[12,"logger","","",6,null],[12,"json_rpc_endpoint","","",6,null],[12,"rotation_period_secs","","",6,null],[12,"secure_backend","","",6,null],[12,"sleep_period_secs","","",6,null],[12,"txn_expiration_secs","","",6,null],[12,"chain_id","","",6,null],[3,"LoggerConfig","","",null,null],[12,"chan_size","","",7,null],[12,"is_async","","",7,null],[12,"level","","",7,null],[3,"MetricsConfig","","",null,null],[12,"collection_interval_ms","","",8,null],[12,"dir","","",8,null],[12,"enabled","","",8,null],[3,"MempoolConfig","","",null,null],[12,"capacity","","",9,null],[12,"capacity_per_user","","",9,null],[12,"default_failovers","","",9,null],[12,"max_broadcasts_per_peer","","",9,null],[12,"mempool_snapshot_interval_secs","","",9,null],[12,"shared_mempool_ack_timeout_ms","","",9,null],[12,"shared_mempool_backoff_interval_ms","","",9,null],[12,"shared_mempool_batch_size","","",9,null],[12,"shared_mempool_max_concurrent_inbound_syncs","","",9,null],[12,"shared_mempool_tick_interval_ms","","",9,null],[12,"system_transaction_timeout_secs","","",9,null],[12,"system_transaction_gc_interval_ms","","",9,null],[3,"NetworkConfig","","",null,null],[12,"max_connection_delay_ms","","",10,null],[12,"connection_backoff_base","","",10,null],[12,"connectivity_check_interval_ms","","",10,null],[12,"network_channel_size","","",10,null],[12,"max_concurrent_network_reqs","","",10,null],[12,"discovery_method","","",10,null],[12,"identity","","",10,null],[12,"listen_address","","",10,null],[12,"mutual_authentication","","",10,null],[12,"network_address_key_backend","","",10,null],[12,"network_id","","",10,null],[12,"seed_addrs","","",10,null],[12,"seed_pubkeys","","",10,null],[12,"max_frame_size","","",10,null],[12,"enable_proxy_protocol","","",10,null],[12,"ping_interval_ms","","",10,null],[12,"ping_timeout_ms","","",10,null],[12,"ping_failures_tolerated","","",10,null],[12,"max_outbound_connections","","",10,null],[12,"max_inbound_connections","","",10,null],[12,"inbound_rate_limit_config","","",10,null],[12,"outbound_rate_limit_config","","",10,null],[3,"IdentityFromConfig","","The identity is stored within the config.",null,null],[12,"key","","",11,null],[12,"peer_id","","",11,null],[3,"IdentityFromStorage","","This represents an identity in a secure-storage as defined…",null,null],[12,"backend","","",12,null],[12,"key_name","","",12,null],[12,"peer_id_name","","",12,null],[3,"RateLimitConfig","","",null,null],[12,"ip_byte_bucket_rate","","Maximum number of bytes/s for an IP",13,null],[12,"ip_byte_bucket_size","","Maximum burst of bytes for an IP",13,null],[12,"initial_bucket_fill_percentage","","Initial amount of tokens initially in the bucket",13,null],[12,"enabled","","Allow for disabling the throttles",13,null],[3,"JsonRpcConfig","","",null,null],[12,"address","","",14,null],[12,"batch_size_limit","","",14,null],[12,"page_size_limit","","",14,null],[12,"content_length_limit","","",14,null],[12,"tls_cert_path","","",14,null],[12,"tls_key_path","","",14,null],[3,"GitHubConfig","","",null,null],[12,"repository_owner","","The owner or account that hosts a repository",15,null],[12,"repository","","The repository where storage will mount",15,null],[12,"branch","","The branch containing storage, defaults to master",15,null],[12,"token","","The authorization token for accessing the repository",15,null],[12,"namespace","","A namespace is an optional portion of the path to a key…",15,null],[3,"VaultConfig","","",null,null],[12,"ca_certificate","","Optional SSL Certificate for the vault host, this is…",16,null],[12,"namespace","","A namespace is an optional portion of the path to a key…",16,null],[12,"renew_ttl_secs","","Vault leverages leases on many tokens, specify this to…",16,null],[12,"server","","Vault\'s URL, note: only HTTP is currently supported.",16,null],[12,"token","","The authorization token for accessing secrets",16,null],[12,"disable_cas","","Disable check-and-set when writing secrets to Vault",16,null],[3,"OnDiskStorageConfig","","",null,null],[12,"path","","",17,null],[12,"namespace","","A namespace is an optional portion of the path to a key…",17,null],[3,"TokenFromConfig","","",null,null],[3,"TokenFromDisk","","",null,null],[3,"StateSyncConfig","","",null,null],[12,"chunk_limit","","",18,null],[12,"long_poll_timeout_ms","","",18,null],[12,"max_chunk_limit","","",18,null],[12,"max_pending_li_limit","","",18,null],[12,"max_timeout_ms","","",18,null],[12,"multicast_timeout_ms","","",18,null],[12,"sync_request_timeout_ms","","",18,null],[12,"tick_interval_ms","","",18,null],[3,"RocksdbConfig","","Port selected RocksDB options for tuning underlying…",null,null],[12,"max_open_files","","",19,null],[12,"max_total_wal_size","","",19,null],[3,"StorageConfig","","",null,null],[12,"address","","",20,null],[12,"backup_service_address","","",20,null],[12,"dir","","",20,null],[12,"grpc_max_receive_len","","",20,null],[12,"prune_window","","None disables pruning. The windows is in number of…",20,null],[12,"timeout_ms","","Read, Write, Connect timeout for network operations in…",20,null],[12,"rocksdb_config","","Rocksdb-specific configurations",20,null],[3,"SafetyRulesConfig","","",null,null],[12,"backend","","",21,null],[12,"logger","","",21,null],[12,"service","","",21,null],[12,"test","","",21,null],[12,"verify_vote_proposal_signature","","",21,null],[12,"export_consensus_key","","",21,null],[12,"network_timeout_ms","","",21,null],[12,"enable_cached_safety_data","","",21,null],[3,"RemoteService","","",null,null],[12,"server_address","","",22,null],[3,"SafetyRulesTestConfig","","",null,null],[12,"author","","",23,null],[12,"consensus_key","","",23,null],[12,"execution_key","","",23,null],[12,"waypoint","","",23,null],[3,"UpstreamConfig","","If a node considers a network \'upstream\', the node will…",null,null],[12,"networks","","",24,null],[3,"PeerNetworkId","","Identifier of a node, represented as (network_id, peer_id)",null,null],[12,"0","","",25,null],[12,"1","","",25,null],[3,"TestConfig","","",null,null],[12,"auth_key","","",26,null],[12,"operator_key","","",26,null],[12,"owner_key","","",26,null],[12,"execution_key","","",26,null],[12,"publishing_option","","",26,null],[3,"NodeConfig","","Config pulls in configuration information from the config…",null,null],[12,"base","","",27,null],[12,"consensus","","",27,null],[12,"debug_interface","","",27,null],[12,"execution","","",27,null],[12,"full_node_networks","","",27,null],[12,"logger","","",27,null],[12,"metrics","","",27,null],[12,"mempool","","",27,null],[12,"json_rpc","","",27,null],[12,"state_sync","","",27,null],[12,"storage","","",27,null],[12,"test","","",27,null],[12,"upstream","","",27,null],[12,"validator_network","","",27,null],[12,"failpoints","","",27,null],[3,"BaseConfig","","",null,null],[12,"role","","",28,null],[12,"waypoint","","",28,null],[3,"ParseRoleError","","",null,null],[3,"RootPath","","",null,null],[4,"ConsensusProposerType","","",null,null],[13,"FixedProposer","","",29,null],[13,"RotatingProposer","","",29,null],[13,"LeaderReputation","","",29,null],[13,"RoundProposer","","",29,null],[4,"Error","","",null,null],[13,"InvariantViolation","","",30,null],[13,"IO","","",30,null],[13,"BCS","","",30,null],[13,"Yaml","","",30,null],[13,"Missing","","",30,null],[4,"ExecutionCorrectnessService","","Defines how execution correctness should be run",null,null],[13,"Local","","This runs execution correctness in the same thread as…",31,null],[13,"Process","","This is the production, separate service approach",31,null],[13,"Serializer","","This runs safety rules in the same thread as event…",31,null],[13,"Thread","","This creates a separate thread to run execution…",31,null],[4,"DiscoveryMethod","","",null,null],[13,"Onchain","","",32,null],[13,"None","","",32,null],[4,"Identity","","",null,null],[13,"FromConfig","","",33,null],[13,"FromStorage","","",33,null],[13,"None","","",33,null],[4,"SecureBackend","","",null,null],[13,"GitHub","","",34,null],[13,"InMemoryStorage","","",34,null],[13,"Vault","","",34,null],[13,"OnDiskStorage","","",34,null],[4,"Token","","Tokens can either be directly within this config or stored…",null,null],[13,"FromConfig","","",35,null],[13,"FromDisk","","This is an absolute path and not relative to data_dir",35,null],[4,"SafetyRulesService","","Defines how safety rules should be executed",null,null],[13,"Local","","This runs safety rules in the same thread as event processor",36,null],[13,"Process","","This is the production, separate service approach",36,null],[13,"Serializer","","This runs safety rules in the same thread as event…",36,null],[13,"Thread","","This creates a separate thread to run safety rules, it is…",36,null],[4,"WaypointConfig","","",null,null],[13,"FromConfig","","",37,null],[13,"FromFile","","",37,null],[13,"FromStorage","","",37,null],[13,"None","","",37,null],[4,"RoleType","","",null,null],[13,"Validator","","",38,null],[13,"FullNode","","",38,null],[5,"invariant","","",null,[[["string",3]],[["result",4],["error",4]]]],[11,"set_data_dir","","",0,[[["pathbuf",3]]]],[11,"randomize_ports","","",2,[[]]],[11,"load","","",4,[[["rootpath",3]],[["result",4],["error",4]]]],[11,"save","","",4,[[["rootpath",3]],[["result",4],["error",4]]]],[11,"set_data_dir","","",4,[[["pathbuf",3]]]],[11,"load","","Reads the key manager config file from the given…",6,[[["asref",8],["path",3]],[["result",4],["error",4]]]],[11,"save","","Saves the key manager config file to the given output_path.",6,[[["asref",8],["path",3]],[["result",4],["error",4]]]],[11,"set_data_dir","","",6,[[["pathbuf",3]]]],[11,"dir","","",8,[[],["pathbuf",3]]],[11,"set_data_dir","","",8,[[["pathbuf",3]]]],[11,"network_with_id","","",10,[[["networkid",4]],["networkconfig",3]]],[11,"identity_key","","",10,[[],["privatekey",3]]],[11,"identity_from_storage","","",10,[[],["identityfromstorage",3]]],[11,"encryptor","","",10,[[],["encryptor",3]]],[11,"load","","",10,[[["roletype",4]],[["result",4],["error",4]]]],[11,"peer_id","","",10,[[],["peerid",3]]],[11,"random","","",10,[[["stdrng",3]]]],[11,"random_with_peer_id","","",10,[[["option",4],["stdrng",3],["peerid",3]]]],[11,"verify_seed_addrs","","Check that all seed peer addresses look like canonical…",10,[[],[["result",4],["error",4]]]],[11,"from_config","","",33,[[["privatekey",3],["peerid",3]]]],[11,"from_storage","","",33,[[["securebackend",4],["string",3]]]],[11,"randomize_ports","","",14,[[]]],[11,"ca_certificate","","",16,[[],[["string",3],["error",4],["result",4]]]],[11,"read_token","","",35,[[],[["string",3],["error",4],["result",4]]]],[11,"path","","",17,[[],["pathbuf",3]]],[11,"set_data_dir","","",17,[[["pathbuf",3]]]],[11,"dir","","",20,[[],["pathbuf",3]]],[11,"set_data_dir","","",20,[[["pathbuf",3]]]],[11,"randomize_ports","","",20,[[]]],[11,"set_data_dir","","",21,[[["pathbuf",3]]]],[11,"server_address","","",22,[[],["socketaddr",4]]],[11,"new","","",23,[[["peerid",3]]]],[11,"consensus_key","","",23,[[["ed25519privatekey",3]]]],[11,"execution_key","","",23,[[["ed25519privatekey",3]]]],[11,"random_consensus_key","","",23,[[["stdrng",3]]]],[11,"random_execution_key","","",23,[[["stdrng",3]]]],[11,"get_upstream_preference","","Returns the upstream network preference of a network…",24,[[["networkid",4]],["option",4]]],[11,"upstream_count","","Returns the number of upstream networks possible for a…",24,[[]]],[11,"network_id","","",25,[[],["nodenetworkid",3]]],[11,"raw_network_id","","",25,[[],["networkid",4]]],[11,"peer_id","","",25,[[],["peerid",3]]],[11,"random","","",25,[[]]],[11,"random_validator","","",25,[[]]],[11,"open_module","","",26,[[]]],[11,"new_with_temp_dir","","",26,[[["option",4],["temppath",3]]]],[11,"execution_key","","",26,[[["ed25519privatekey",3]]]],[11,"operator_key","","",26,[[["ed25519privatekey",3]]]],[11,"owner_key","","",26,[[["ed25519privatekey",3]]]],[11,"random_account_key","","",26,[[["stdrng",3]]]],[11,"random_execution_key","","",26,[[["stdrng",3]]]],[11,"temp_dir","","",26,[[],[["path",3],["option",4]]]],[6,"SeedPublicKeys","","",null,null],[6,"SeedAddresses","","",null,null],[17,"HANDSHAKE_VERSION","","Current supported protocol negotiation handshake version.…",null,null],[17,"NETWORK_CHANNEL_SIZE","","",null,null],[17,"PING_INTERVAL_MS","","",null,null],[17,"PING_TIMEOUT_MS","","",null,null],[17,"PING_FAILURES_TOLERATED","","",null,null],[17,"CONNECTIVITY_CHECK_INTERVAL_MS","","",null,null],[17,"MAX_CONCURRENT_NETWORK_REQS","","",null,null],[17,"MAX_CONNECTION_DELAY_MS","","",null,null],[17,"MAX_FULLNODE_OUTBOUND_CONNECTIONS","","",null,null],[17,"MAX_INBOUND_CONNECTIONS","","",null,null],[17,"MAX_FRAME_SIZE","","",null,null],[17,"CONNECTION_BACKOFF_BASE","","",null,null],[17,"IP_BYTE_BUCKET_RATE","","",null,null],[17,"IP_BYTE_BUCKET_SIZE","","",null,null],[17,"DEFAULT_JSON_RPC_ADDRESS","","",null,null],[17,"DEFAULT_JSON_RPC_PORT","","",null,null],[17,"DEFAULT_BATCH_SIZE_LIMIT","","",null,null],[17,"DEFAULT_PAGE_SIZE_LIMIT","","",null,null],[17,"DEFAULT_CONTENT_LENGTH_LIMIT","","",null,null],[8,"PersistableConfig","","",null,null],[11,"load_config","","",39,[[["asref",8],["path",3]],[["result",4],["error",4]]]],[11,"save_config","","",39,[[["asref",8],["path",3]],[["result",4],["error",4]]]],[11,"parse","","",39,[[],[["result",4],["error",4]]]],[11,"waypoint_from_config","","",37,[[],[["option",4],["waypoint",3]]]],[11,"waypoint","","",37,[[],["waypoint",3]]],[11,"genesis_waypoint","","",37,[[],["waypoint",3]]],[11,"is_validator","","",38,[[]]],[11,"as_str","","",38,[[]]],[11,"data_dir","","",27,[[],["pathbuf",3]]],[11,"set_data_dir","","",27,[[["pathbuf",3]]]],[11,"load","","Reads the config file and returns the configuration object…",27,[[["asref",8],["path",3]],[["result",4],["error",4]]]],[11,"save","","",27,[[["asref",8],["path",3]],[["result",4],["error",4]]]],[11,"randomize_ports","","",27,[[]]],[11,"random","","",27,[[]]],[11,"random_with_template","","",27,[[["stdrng",3]]]],[11,"default_for_public_full_node","","",27,[[]]],[11,"default_for_validator","","",27,[[]]],[11,"default_for_validator_full_node","","",27,[[]]],[11,"new","","",40,[[["asref",8],["path",3]]]],[11,"new_path","","This function assumes that the path is already a directory",40,[[["asref",8],["path",3]]]],[11,"full_path","","This adds a full path when loading / storing if one is not…",40,[[["pathbuf",3]],["pathbuf",3]]],[0,"generator","diem_config","Convenience structs and functions for generating a random…",null,null],[3,"ValidatorSwarm","diem_config::generator","",null,null],[12,"nodes","","",41,null],[5,"validator_swarm","","",null,[[["nodeconfig",3]],["validatorswarm",3]]],[5,"validator_swarm_for_testing","","",null,[[],["validatorswarm",3]]],[5,"build_seed_addrs","","Convenience function that builds a `SeedAddresses`…",null,[[["networkaddress",3],["networkconfig",3]],["seedaddresses",6]]],[0,"keys","diem_config","This file implements a KeyPair data structure.",null,null],[3,"ConfigKey","diem_config::keys","ConfigKey places a clonable wrapper around PrivateKeys for…",null,null],[11,"private_key","","",42,[[]]],[11,"public_key","","",42,[[]]],[0,"network_id","diem_config","",null,null],[3,"NetworkContext","diem_config::network_id","A grouping of common information between all networking…",null,null],[3,"NodeNetworkId","","An intra-node identifier for a network of a node unique…",null,null],[4,"NetworkId","","A representation of the network being used in…",null,null],[13,"Validator","","",43,null],[13,"Public","","",43,null],[13,"Private","","",43,null],[11,"new","","",44,[[["roletype",4],["networkid",4],["peerid",3]],["networkcontext",3]]],[11,"network_id","","",44,[[],["networkid",4]]],[11,"role","","",44,[[],["roletype",4]]],[11,"peer_id","","",44,[[],["peerid",3]]],[11,"mock_with_peer_id","","",44,[[["peerid",3]],["arc",3]]],[11,"mock","","",44,[[],["arc",3]]],[11,"new","","",45,[[["networkid",4]]]],[11,"network_id","","",45,[[],["networkid",4]]],[11,"vfn_network","","Convenience function to specify the VFN network",43,[[],["networkid",4]]],[11,"as_str","","",43,[[]]],[0,"utils","diem_config","",null,null],[5,"default_validator_owner_auth_key_from_name","diem_config::utils","",null,[[],["authenticationkey",3]]],[5,"validator_owner_account_from_name","","",null,[[],["accountaddress",3]]],[5,"get_available_port","","Return an ephemeral, available port. On unix systems, the…",null,[[]]],[5,"get_local_ip","","Extracts one local non-loopback IP address, if one exists.…",null,[[],[["networkaddress",3],["option",4]]]],[5,"get_available_port_in_multiaddr","","",null,[[],["networkaddress",3]]],[5,"get_genesis_txn","","",null,[[["nodeconfig",3]],[["transaction",4],["option",4]]]],[11,"from","diem_config::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"erased_serialize","","",6,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"erased_serialize","","",7,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"test_only_hash","","",8,[[],["hashvalue",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"erased_serialize","","",8,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"erased_serialize","","",9,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"erased_serialize","","",10,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"erased_serialize","","",11,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"erased_serialize","","",12,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"equivalent","","",13,[[]]],[11,"erased_serialize","","",13,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"erased_serialize","","",14,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"test_only_hash","","",15,[[],["hashvalue",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"erased_serialize","","",15,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"test_only_hash","","",16,[[],["hashvalue",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"erased_serialize","","",16,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"test_only_hash","","",17,[[],["hashvalue",3]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"erased_serialize","","",17,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"test_only_hash","","",46,[[],["hashvalue",3]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"erased_serialize","","",46,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"test_only_hash","","",47,[[],["hashvalue",3]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"erased_serialize","","",47,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"test_only_hash","","",18,[[],["hashvalue",3]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"erased_serialize","","",18,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"test_only_hash","","",19,[[],["hashvalue",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"erased_serialize","","",19,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"test_only_hash","","",20,[[],["hashvalue",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"erased_serialize","","",20,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"test_only_hash","","",21,[[],["hashvalue",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"erased_serialize","","",21,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"test_only_hash","","",22,[[],["hashvalue",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"erased_serialize","","",22,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"test_only_hash","","",23,[[],["hashvalue",3]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"erased_serialize","","",23,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"test_only_hash","","",24,[[],["hashvalue",3]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"erased_serialize","","",24,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"test_only_hash","","",25,[[],["hashvalue",3]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"equivalent","","",25,[[]]],[11,"erased_serialize","","",25,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"test_only_hash","","",26,[[],["hashvalue",3]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"erased_serialize","","",26,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"test_only_hash","","",27,[[],["hashvalue",3]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"erased_serialize","","",27,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"test_only_hash","","",28,[[],["hashvalue",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"erased_serialize","","",28,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"equivalent","","",29,[[]]],[11,"erased_serialize","","",29,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"test_only_hash","","",31,[[],["hashvalue",3]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"erased_serialize","","",31,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"test_only_hash","","",32,[[],["hashvalue",3]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"equivalent","","",32,[[]]],[11,"erased_serialize","","",32,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"test_only_hash","","",33,[[],["hashvalue",3]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"erased_serialize","","",33,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"test_only_hash","","",34,[[],["hashvalue",3]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"erased_serialize","","",34,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"test_only_hash","","",35,[[],["hashvalue",3]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"erased_serialize","","",35,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"test_only_hash","","",36,[[],["hashvalue",3]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"erased_serialize","","",36,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"test_only_hash","","",37,[[],["hashvalue",3]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"erased_serialize","","",37,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"test_only_hash","","",38,[[],["hashvalue",3]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"equivalent","","",38,[[]]],[11,"erased_serialize","","",38,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","diem_config::generator","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","diem_config::keys","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"test_only_hash","","",42,[[],["hashvalue",3]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"erased_serialize","","",42,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","diem_config::network_id","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"test_only_hash","","",44,[[],["hashvalue",3]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"equivalent","","",44,[[]]],[11,"erased_serialize","","",44,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"test_only_hash","","",45,[[],["hashvalue",3]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"equivalent","","",45,[[]]],[11,"erased_serialize","","",45,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"test_only_hash","","",43,[[],["hashvalue",3]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"equivalent","","",43,[[]]],[11,"erased_serialize","","",43,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"clone","diem_config::config","",0,[[],["consensusconfig",3]]],[11,"clone","","",29,[[],["consensusproposertype",4]]],[11,"clone","","",1,[[],["leaderreputationconfig",3]]],[11,"clone","","",2,[[],["debuginterfaceconfig",3]]],[11,"clone","","",3,[[],["diemtraceconfig",3]]],[11,"clone","","",4,[[],["executionconfig",3]]],[11,"clone","","",31,[[],["executioncorrectnessservice",4]]],[11,"clone","","",5,[[],["remoteexecutionservice",3]]],[11,"clone","","",6,[[],["keymanagerconfig",3]]],[11,"clone","","",7,[[],["loggerconfig",3]]],[11,"clone","","",8,[[],["metricsconfig",3]]],[11,"clone","","",9,[[],["mempoolconfig",3]]],[11,"clone","","",10,[[],["networkconfig",3]]],[11,"clone","","",32,[[],["discoverymethod",4]]],[11,"clone","","",33,[[],["identity",4]]],[11,"clone","","",11,[[],["identityfromconfig",3]]],[11,"clone","","",12,[[],["identityfromstorage",3]]],[11,"clone","","",13,[[],["ratelimitconfig",3]]],[11,"clone","","",14,[[],["jsonrpcconfig",3]]],[11,"clone","","",34,[[],["securebackend",4]]],[11,"clone","","",15,[[],["githubconfig",3]]],[11,"clone","","",16,[[],["vaultconfig",3]]],[11,"clone","","",17,[[],["ondiskstorageconfig",3]]],[11,"clone","","",35,[[],["token",4]]],[11,"clone","","",46,[[],["tokenfromconfig",3]]],[11,"clone","","",47,[[],["tokenfromdisk",3]]],[11,"clone","","",18,[[],["statesyncconfig",3]]],[11,"clone","","",19,[[],["rocksdbconfig",3]]],[11,"clone","","",20,[[],["storageconfig",3]]],[11,"clone","","",21,[[],["safetyrulesconfig",3]]],[11,"clone","","",36,[[],["safetyrulesservice",4]]],[11,"clone","","",22,[[],["remoteservice",3]]],[11,"clone","","",23,[[],["safetyrulestestconfig",3]]],[11,"clone","","",24,[[],["upstreamconfig",3]]],[11,"clone","","",25,[[],["peernetworkid",3]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[],["nodeconfig",3]]],[11,"clone","","",28,[[],["baseconfig",3]]],[11,"clone","","",37,[[],["waypointconfig",4]]],[11,"clone","","",38,[[],["roletype",4]]],[11,"clone","diem_config::keys","",42,[[]]],[11,"clone","diem_config::network_id","",44,[[],["networkcontext",3]]],[11,"clone","","",43,[[],["networkid",4]]],[11,"clone","","",45,[[],["nodenetworkid",3]]],[11,"default","diem_config::config","",0,[[],["consensusconfig",3]]],[11,"default","","",2,[[],["debuginterfaceconfig",3]]],[11,"default","","",3,[[],["diemtraceconfig",3]]],[11,"default","","",4,[[],["executionconfig",3]]],[11,"default","","",6,[[],["keymanagerconfig",3]]],[11,"default","","",7,[[],["loggerconfig",3]]],[11,"default","","",8,[[],["metricsconfig",3]]],[11,"default","","",9,[[],["mempoolconfig",3]]],[11,"default","","",10,[[]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[],["jsonrpcconfig",3]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[],["storageconfig",3]]],[11,"default","","",21,[[]]],[11,"default","","",24,[[],["upstreamconfig",3]]],[11,"default","","",26,[[],["testconfig",3]]],[11,"default","","",27,[[],["nodeconfig",3]]],[11,"default","","",28,[[],["baseconfig",3]]],[11,"default","diem_config::network_id","",43,[[],["networkid",4]]],[11,"eq","diem_config::config","",0,[[["consensusconfig",3]]]],[11,"ne","","",0,[[["consensusconfig",3]]]],[11,"eq","","",29,[[["consensusproposertype",4]]]],[11,"ne","","",29,[[["consensusproposertype",4]]]],[11,"eq","","",1,[[["leaderreputationconfig",3]]]],[11,"ne","","",1,[[["leaderreputationconfig",3]]]],[11,"eq","","",2,[[["debuginterfaceconfig",3]]]],[11,"ne","","",2,[[["debuginterfaceconfig",3]]]],[11,"eq","","",3,[[["diemtraceconfig",3]]]],[11,"ne","","",3,[[["diemtraceconfig",3]]]],[11,"eq","","",4,[[["executionconfig",3]]]],[11,"ne","","",4,[[["executionconfig",3]]]],[11,"eq","","",31,[[["executioncorrectnessservice",4]]]],[11,"ne","","",31,[[["executioncorrectnessservice",4]]]],[11,"eq","","",5,[[["remoteexecutionservice",3]]]],[11,"ne","","",5,[[["remoteexecutionservice",3]]]],[11,"eq","","",6,[[["keymanagerconfig",3]]]],[11,"ne","","",6,[[["keymanagerconfig",3]]]],[11,"eq","","",7,[[["loggerconfig",3]]]],[11,"ne","","",7,[[["loggerconfig",3]]]],[11,"eq","","",8,[[["metricsconfig",3]]]],[11,"ne","","",8,[[["metricsconfig",3]]]],[11,"eq","","",9,[[["mempoolconfig",3]]]],[11,"ne","","",9,[[["mempoolconfig",3]]]],[11,"eq","","",10,[[["networkconfig",3]]]],[11,"ne","","",10,[[["networkconfig",3]]]],[11,"eq","","",32,[[["discoverymethod",4]]]],[11,"eq","","",33,[[["identity",4]]]],[11,"ne","","",33,[[["identity",4]]]],[11,"eq","","",11,[[["identityfromconfig",3]]]],[11,"ne","","",11,[[["identityfromconfig",3]]]],[11,"eq","","",12,[[["identityfromstorage",3]]]],[11,"ne","","",12,[[["identityfromstorage",3]]]],[11,"eq","","",13,[[["ratelimitconfig",3]]]],[11,"ne","","",13,[[["ratelimitconfig",3]]]],[11,"eq","","",14,[[["jsonrpcconfig",3]]]],[11,"ne","","",14,[[["jsonrpcconfig",3]]]],[11,"eq","","",34,[[["securebackend",4]]]],[11,"ne","","",34,[[["securebackend",4]]]],[11,"eq","","",15,[[["githubconfig",3]]]],[11,"ne","","",15,[[["githubconfig",3]]]],[11,"eq","","",16,[[["vaultconfig",3]]]],[11,"ne","","",16,[[["vaultconfig",3]]]],[11,"eq","","",17,[[["ondiskstorageconfig",3]]]],[11,"ne","","",17,[[["ondiskstorageconfig",3]]]],[11,"eq","","",35,[[["token",4]]]],[11,"ne","","",35,[[["token",4]]]],[11,"eq","","",46,[[["tokenfromconfig",3]]]],[11,"ne","","",46,[[["tokenfromconfig",3]]]],[11,"eq","","",47,[[["tokenfromdisk",3]]]],[11,"ne","","",47,[[["tokenfromdisk",3]]]],[11,"eq","","",18,[[["statesyncconfig",3]]]],[11,"ne","","",18,[[["statesyncconfig",3]]]],[11,"eq","","",19,[[["rocksdbconfig",3]]]],[11,"ne","","",19,[[["rocksdbconfig",3]]]],[11,"eq","","",20,[[["storageconfig",3]]]],[11,"ne","","",20,[[["storageconfig",3]]]],[11,"eq","","",21,[[["safetyrulesconfig",3]]]],[11,"ne","","",21,[[["safetyrulesconfig",3]]]],[11,"eq","","",36,[[["safetyrulesservice",4]]]],[11,"ne","","",36,[[["safetyrulesservice",4]]]],[11,"eq","","",22,[[["remoteservice",3]]]],[11,"ne","","",22,[[["remoteservice",3]]]],[11,"eq","","",23,[[["safetyrulestestconfig",3]]]],[11,"ne","","",23,[[["safetyrulestestconfig",3]]]],[11,"eq","","",24,[[["upstreamconfig",3]]]],[11,"ne","","",24,[[["upstreamconfig",3]]]],[11,"eq","","",25,[[["peernetworkid",3]]]],[11,"ne","","",25,[[["peernetworkid",3]]]],[11,"eq","","",26,[[]]],[11,"eq","","",27,[[["nodeconfig",3]]]],[11,"ne","","",27,[[["nodeconfig",3]]]],[11,"eq","","",28,[[["baseconfig",3]]]],[11,"ne","","",28,[[["baseconfig",3]]]],[11,"eq","","",37,[[["waypointconfig",4]]]],[11,"ne","","",37,[[["waypointconfig",4]]]],[11,"eq","","",38,[[["roletype",4]]]],[11,"eq","diem_config::keys","",42,[[]]],[11,"eq","diem_config::network_id","",44,[[["networkcontext",3]]]],[11,"ne","","",44,[[["networkcontext",3]]]],[11,"eq","","",43,[[["networkid",4]]]],[11,"ne","","",43,[[["networkid",4]]]],[11,"eq","","",45,[[["nodenetworkid",3]]]],[11,"ne","","",45,[[["nodenetworkid",3]]]],[11,"fmt","diem_config::config","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","diem_config::keys","",42,[[["formatter",3]],["result",6]]],[11,"fmt","diem_config::network_id","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","diem_config::config","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","diem_config::network_id","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"hash","diem_config::config","",25,[[]]],[11,"hash","diem_config::network_id","",43,[[]]],[11,"hash","","",45,[[]]],[11,"from_str","diem_config::config","",38,[[],["result",4]]],[11,"source","","",30,[[],[["option",4],["error",8]]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","diem_config::keys","",42,[[],["result",4]]],[11,"serialize","diem_config::network_id","",44,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",45,[[],["result",4]]],[11,"deserialize","diem_config::config","",0,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]],[11,"deserialize","","",47,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","diem_config::keys","",42,[[],["result",4]]],[11,"deserialize","diem_config::network_id","",43,[[],["result",4]]],[11,"deserialize","","",45,[[],["result",4]]]],"p":[[3,"ConsensusConfig"],[3,"LeaderReputationConfig"],[3,"DebugInterfaceConfig"],[3,"DiemTraceConfig"],[3,"ExecutionConfig"],[3,"RemoteExecutionService"],[3,"KeyManagerConfig"],[3,"LoggerConfig"],[3,"MetricsConfig"],[3,"MempoolConfig"],[3,"NetworkConfig"],[3,"IdentityFromConfig"],[3,"IdentityFromStorage"],[3,"RateLimitConfig"],[3,"JsonRpcConfig"],[3,"GitHubConfig"],[3,"VaultConfig"],[3,"OnDiskStorageConfig"],[3,"StateSyncConfig"],[3,"RocksdbConfig"],[3,"StorageConfig"],[3,"SafetyRulesConfig"],[3,"RemoteService"],[3,"SafetyRulesTestConfig"],[3,"UpstreamConfig"],[3,"PeerNetworkId"],[3,"TestConfig"],[3,"NodeConfig"],[3,"BaseConfig"],[4,"ConsensusProposerType"],[4,"Error"],[4,"ExecutionCorrectnessService"],[4,"DiscoveryMethod"],[4,"Identity"],[4,"SecureBackend"],[4,"Token"],[4,"SafetyRulesService"],[4,"WaypointConfig"],[4,"RoleType"],[8,"PersistableConfig"],[3,"RootPath"],[3,"ValidatorSwarm"],[3,"ConfigKey"],[4,"NetworkId"],[3,"NetworkContext"],[3,"NodeNetworkId"],[3,"TokenFromConfig"],[3,"TokenFromDisk"],[3,"ParseRoleError"]]},\
"diem_crypto":{"doc":"This feature gets turned on only if diem-crypto is…","i":[[0,"compat","diem_crypto","Wrapper structs for types that need RustCrypto traits…",null,null],[3,"Sha3_256","diem_crypto::compat","A wrapper for [`tiny_keccak::Sha3::v256`] that implements…",null,null],[0,"ed25519","diem_crypto","This module provides an API for the PureEdDSA signature…",null,null],[3,"Ed25519PrivateKey","diem_crypto::ed25519","An Ed25519 private key",null,null],[3,"Ed25519PublicKey","","An Ed25519 public key",null,null],[3,"Ed25519Signature","","An Ed25519 signature",null,null],[5,"keypair_strategy","","Produces a uniformly random ed25519 keypair from a seed",null,[[]]],[17,"ED25519_PRIVATE_KEY_LENGTH","","The length of the Ed25519PrivateKey",null,null],[17,"ED25519_PUBLIC_KEY_LENGTH","","The length of the Ed25519PublicKey",null,null],[17,"ED25519_SIGNATURE_LENGTH","","The length of the Ed25519Signature",null,null],[18,"LENGTH","","The length of the Ed25519PrivateKey",0,null],[11,"to_bytes","","Serialize an Ed25519PrivateKey.",0,[[]]],[11,"to_bytes","","Serialize an Ed25519PublicKey.",1,[[]]],[18,"LENGTH","","The length of the Ed25519Signature",2,null],[11,"to_bytes","","Serialize an Ed25519Signature.",2,[[]]],[11,"dummy_signature","","return an all-zero signature (for test only)",2,[[]]],[11,"check_malleability","","Check for correct size and third-party based signature…",2,[[],[["result",4],["cryptomaterialerror",4]]]],[0,"error","diem_crypto","Rexport the error types needed for the various crypto traits",null,null],[14,"bail","diem_crypto::error","Return early with an error.",null,null],[3,"Error","","The `Error` type, a wrapper around a dynamic error type.",null,null],[0,"hash","diem_crypto","This module defines traits and implementations of…",null,null],[3,"HashValue","diem_crypto::hash","Output value of our hash function. Intentionally opaque…",null,null],[3,"HashValueBitIterator","","An iterator over `HashValue` that generates one bit for…",null,null],[3,"TransactionAccumulatorHasher","","The hasher used to compute the hash of an internal node in…",null,null],[3,"EventAccumulatorHasher","","The hasher used to compute the hash of an internal node in…",null,null],[3,"SparseMerkleInternalHasher","","The hasher used to compute the hash of an internal node in…",null,null],[3,"VoteProposalHasher","","The hasher used to compute the hash of an internal node in…",null,null],[3,"TestOnlyHasher","","The hasher used only for testing. It doesn\'t have a salt.",null,null],[7,"ACCUMULATOR_PLACEHOLDER_HASH","","Placeholder hash of `Accumulator`.",null,null],[7,"SPARSE_MERKLE_PLACEHOLDER_HASH","","Placeholder hash of `SparseMerkleTree`.",null,null],[7,"PRE_GENESIS_BLOCK_ID","","Block id reserved as the id of parent block of the genesis…",null,null],[7,"GENESIS_BLOCK_ID","","Genesis block id is used as a parent of the very first…",null,null],[8,"CryptoHash","","A type that can be cryptographically hashed to produce a…",null,null],[16,"Hasher","","The associated `Hasher` type which comes with a unique…",3,null],[10,"hash","","Hashes the object and produces a `HashValue`.",3,[[],["hashvalue",3]]],[8,"CryptoHasher","","A trait for representing the state of a cryptographic…",null,null],[10,"seed","","the seed used to initialize hashing `Self` before the…",4,[[]]],[10,"update","","Write bytes into the hasher.",4,[[]]],[10,"finish","","Finish constructing the [`HashValue`].",4,[[],["hashvalue",3]]],[8,"TestOnlyHash","","Provides a test_only_hash() method that can be used in…",null,null],[10,"test_only_hash","","Generates a hash used only for tests.",5,[[],["hashvalue",3]]],[18,"LENGTH","","The length of the hash in bytes.",6,null],[18,"LENGTH_IN_BITS","","The length of the hash in bits.",6,null],[18,"LENGTH_IN_NIBBLES","","The length of the hash in nibbles.",6,null],[11,"new","","Create a new [`HashValue`] from a byte array.",6,[[]]],[11,"from_slice","","Create from a slice (e.g. retrieved from storage).",6,[[],["result",6]]],[11,"to_vec","","Dumps into a vector.",6,[[],["vec",3]]],[11,"zero","","Creates a zero-initialized instance.",6,[[]]],[11,"random","","Create a cryptographically random instance.",6,[[]]],[11,"random_with_rng","","Creates a random instance with given rng. Useful in unit…",6,[[]]],[11,"sha3_256_of","","Convenience function that computes a `HashValue`…",6,[[]]],[11,"iter_bits","","Returns a `HashValueBitIterator` over all the bits that…",6,[[],["hashvaluebititerator",3]]],[11,"from_bit_iter","","Constructs a `HashValue` from an iterator of bits.",6,[[],["result",6]]],[11,"common_prefix_bits_len","","Returns the length of common prefix of `self` and `other`…",6,[[["hashvalue",3]]]],[11,"common_prefix_nibbles_len","","Returns the length of common prefix of `self` and `other`…",6,[[["hashvalue",3]]]],[11,"get_nibble","","Returns the `index`-th nibble.",6,[[],["nibble",3]]],[11,"short_str","","Returns first 4 bytes as hex-formatted string",6,[[],["shorthexstr",3]]],[11,"to_hex","","Full hex representation of a given hash value.",6,[[],["string",3]]],[11,"from_hex","","Parse a given hex string to a hash value.",6,[[],["result",6]]],[0,"hkdf","diem_crypto","An implementation of HKDF, the HMAC-based…",null,null],[3,"Hkdf","diem_crypto::hkdf","Structure representing the HKDF, capable of HKDF-Extract…",null,null],[4,"HkdfError","","An error type for HKDF key derivation issues.",null,null],[13,"InvalidOutputLengthError","","HKDF expand output exceeds the maximum allowed or is zero.",7,null],[13,"WrongPseudorandomKeyError","","PRK on HKDF-Expand should not be less than the underlying…",7,null],[13,"MACKeyError","","HMAC key related error; unlikely to happen because every…",7,null],[11,"extract","","The RFC5869 HKDF-Extract operation.",8,[[["option",4]],[["result",4],["vec",3],["hkdferror",4]]]],[11,"expand","","The RFC5869 HKDF-Expand operation.",8,[[["option",4]],[["result",4],["vec",3],["hkdferror",4]]]],[11,"extract_then_expand","","HKDF Extract then Expand operation as a single step.",8,[[["option",4]],[["result",4],["vec",3],["hkdferror",4]]]],[0,"multi_ed25519","diem_crypto","This module provides an API for the accountable threshold…",null,null],[3,"MultiEd25519PrivateKey","diem_crypto::multi_ed25519","Vector of private keys in the multi-key Ed25519 structure…",null,null],[3,"MultiEd25519PublicKey","","Vector of public keys in the multi-key Ed25519 structure…",null,null],[3,"MultiEd25519Signature","","Vector of the multi-key signatures along with a 32bit [u8;…",null,null],[11,"new","","Construct a new MultiEd25519PrivateKey.",9,[[["ed25519privatekey",3],["vec",3]],[["cryptomaterialerror",4],["result",4]]]],[11,"to_bytes","","Serialize a MultiEd25519PrivateKey.",9,[[],["vec",3]]],[11,"new","","Construct a new MultiEd25519PublicKey. --- Rules --- a)…",10,[[["vec",3],["ed25519publickey",3]],[["cryptomaterialerror",4],["result",4]]]],[11,"public_keys","","Getter public_keys",10,[[],["vec",3]]],[11,"threshold","","Getter threshold",10,[[]]],[11,"to_bytes","","Serialize a MultiEd25519PublicKey.",10,[[],["vec",3]]],[11,"new","","This method will also sort signatures based on index.",11,[[["vec",3]],[["cryptomaterialerror",4],["result",4]]]],[11,"signatures","","Getter signatures.",11,[[],["vec",3]]],[11,"bitmap","","Getter bitmap.",11,[[]]],[11,"to_bytes","","Serialize a MultiEd25519Signature in the form of…",11,[[],["vec",3]]],[0,"noise","diem_crypto","Noise is a protocol framework which we use in Diem to…",null,null],[3,"NoiseConfig","diem_crypto::noise","A key holder structure used for both initiators and…",null,null],[3,"InitiatorHandshakeState","","Refer to the Noise protocol framework specification in…",null,null],[3,"ResponderHandshakeState","","Refer to the Noise protocol framework specification in…",null,null],[3,"NoiseSession","","A NoiseSession is produced after a successful Noise…",null,null],[4,"NoiseError","","A NoiseError enum represents the different types of error…",null,null],[13,"MsgTooShort","","the received message is too short to contain the expected…",12,null],[13,"Hkdf","","HKDF has failed (in practice there is no reason for HKDF…",12,null],[13,"Encrypt","","encryption has failed (in practice there is no reason for…",12,null],[13,"Decrypt","","could not decrypt the received data (most likely the data…",12,null],[13,"WrongPublicKeyReceived","","the public key received is of the wrong format",12,null],[13,"SessionClosed","","session was closed due to decrypt error",12,null],[13,"PayloadTooLarge","","the payload that we are trying to send is too large",12,null],[13,"ReceivedMsgTooLarge","","the message we received is too large",12,null],[13,"ResponseBufferTooSmall","","the response buffer passed as argument is too small",12,null],[13,"NonceOverflow","","the nonce exceeds the maximum u64 value (in practice this…",12,null],[5,"encrypted_len","","A handy const fn to get the expanded size of a plaintext…",null,[[]]],[5,"decrypted_len","","A handy const fn to get the size of a plaintext from a…",null,[[]]],[5,"handshake_init_msg_len","","A handy const fn to get the size of the first handshake…",null,[[]]],[5,"handshake_resp_msg_len","","A handy const fn to get the size of the second handshake…",null,[[]]],[17,"MAX_SIZE_NOISE_MSG","","A noise message cannot be larger than 65535 bytes as per…",null,null],[17,"AES_GCM_TAGLEN","","The authentication tag length of AES-GCM.",null,null],[11,"new","","A peer must create a NoiseConfig through this function…",13,[[["privatekey",3]]]],[11,"public_key","","Handy getter to access the configuration\'s public key",13,[[],["publickey",3]]],[11,"initiate_connection","","An initiator can use this function to initiate a handshake…",13,[[["publickey",3],["option",4]],[["result",4],["initiatorhandshakestate",3],["noiseerror",4]]]],[11,"finalize_connection","","A client can call this to finalize a connection, after…",13,[[["initiatorhandshakestate",3]],[["result",4],["noiseerror",4]]]],[11,"parse_client_init_message","","A responder can accept a connection by first parsing an…",13,[[],[["noiseerror",4],["result",4]]]],[11,"respond_to_client","","A responder can respond to an initiator by calling this…",13,[[["option",4],["responderhandshakestate",3]],[["noiseerror",4],["noisesession",3],["result",4]]]],[11,"respond_to_client_and_finalize","","This function is a one-call that replaces calling the two…",13,[[["option",4]],[["result",4],["noiseerror",4]]]],[11,"new_for_testing","","create a dummy session with 0 keys",14,[[]]],[11,"get_remote_static","","obtain remote static public key",14,[[],["publickey",3]]],[11,"write_message_in_place","","encrypts a message for the other peers (post-handshake)…",14,[[],[["noiseerror",4],["result",4],["vec",3]]]],[11,"read_message_in_place","","decrypts a message from the other peer (post-handshake)…",14,[[],[["result",4],["noiseerror",4]]]],[0,"test_utils","diem_crypto","Internal module containing convenience utility functions…",null,null],[3,"KeyPair","diem_crypto::test_utils","A keypair consisting of a private and public key",null,null],[12,"private_key","","the private key component",15,null],[12,"public_key","","the public key component",15,null],[3,"TestDiemCrypto","","This struct provides a means of testing signing and…",null,null],[12,"0","","",16,null],[3,"TestDiemCryptoHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[5,"uniform_keypair_strategy","","Produces a uniformly random keypair from a seed",null,[[]]],[5,"random_serializable_struct","","Produces a random TestDiemCrypto signable / verifiable…",null,[[]]],[17,"TEST_SEED","","A deterministic seed for PRNGs related to keys",null,null],[0,"traits","diem_crypto","This module provides a generic set of traits for dealing…",null,null],[4,"CryptoMaterialError","diem_crypto::traits","An error type for key and signature validation issues, see…",null,null],[13,"SerializationError","","Struct to be signed does not serialize correctly.",17,null],[13,"DeserializationError","","Key or signature material does not deserialize correctly.",17,null],[13,"ValidationError","","Key or signature material deserializes, but is otherwise…",17,null],[13,"WrongLengthError","","Key, threshold or signature material does not have the…",17,null],[13,"CanonicalRepresentationError","","Part of the signature or key is not canonical resulting to…",17,null],[13,"SmallSubgroupError","","A curve point (i.e., a public key) lies on a small group.",17,null],[13,"PointNotOnCurveError","","A curve point (i.e., a public key) does not satisfy the…",17,null],[13,"BitVecError","","BitVec errors in accountable multi-sig schemes.",17,null],[8,"Length","","The serialized length of the data that enables macro…",null,null],[10,"length","","The serialized length of the data",18,[[]]],[8,"ValidCryptoMaterial","","Key or more generally crypto material with a notion of…",null,null],[10,"to_bytes","","Convert the valid crypto material to bytes.",19,[[],["vec",3]]],[8,"ValidCryptoMaterialStringExt","","An extension to to/from Strings for…",null,null],[11,"from_encoded_string","","When trying to convert from bytes, we simply decode the…",20,[[],[["cryptomaterialerror",4],["result",4]]]],[11,"to_encoded_string","","A function to encode into hex-string after serializing.",20,[[],[["result",6],["string",3]]]],[8,"PrivateKey","","A type family for key material that should remain secret…",null,null],[16,"PublicKeyMaterial","","We require public / private types to be coupled, i.e.…",21,null],[11,"public_key","","Returns the associated public key",21,[[]]],[8,"SigningKey","","A type family of valid keys that know how to sign.",null,null],[16,"VerifyingKeyMaterial","","The associated verifying key type for this signing key.",22,null],[16,"SignatureMaterial","","The associated signature type for this signing key.",22,null],[10,"sign","","Signs an object that has an distinct domain-separation…",22,[[]]],[10,"sign_arbitrary_message","","Signs a non-hash input message. For testing only.",22,[[]]],[11,"verifying_key","","Returns the associated verifying key",22,[[]]],[8,"PublicKey","","A type for key material that can be publicly shared, and…",null,null],[16,"PrivateKeyMaterial","","We require public / private types to be coupled, i.e.…",23,null],[8,"VerifyingKey","","A type family of public keys that are used for signing.",null,null],[16,"SigningKeyMaterial","","The associated signing key type for this verifying key.",24,null],[16,"SignatureMaterial","","The associated signature type for this verifying key.",24,null],[11,"verify_struct_signature","","We provide the striaghtfoward implementation which…",24,[[],["result",6]]],[11,"batch_verify","","We provide the implementation which dispatches to the…",24,[[["vec",3]],["result",6]]],[8,"Signature","","A type family for signature material that knows which…",null,null],[16,"VerifyingKeyMaterial","","The associated verifying key type for this signature.",25,null],[16,"SigningKeyMaterial","","The associated signing key type for this signature",25,null],[10,"verify","","Verification for a struct we unabmiguously know how to…",25,[[],["result",6]]],[10,"verify_arbitrary_msg","","Native verification function.",25,[[],["result",6]]],[10,"to_bytes","","Convert the signature into a byte representation.",25,[[],["vec",3]]],[11,"batch_verify","","The implementer can override a batch verification…",25,[[["vec",3]],["result",6]]],[8,"Uniform","","A type family for schemes which know how to generate key…",null,null],[10,"generate","","Generate key material from an RNG. This should generally…",26,[[]]],[11,"generate_for_testing","","Generate a random key using the shared TEST_SEED",26,[[]]],[8,"Genesis","","A type family with a by-convention notion of genesis…",null,null],[10,"genesis","","Produces the genesis private key.",27,[[]]],[0,"x25519","diem_crypto","An abstraction of x25519 elliptic curve keys required for…",null,null],[3,"PrivateKey","diem_crypto::x25519","This type should be used to deserialize a received private…",null,null],[3,"PublicKey","","This type should be used to deserialize a received public…",null,null],[5,"keypair_strategy","","Produces a uniformly random ed25519 keypair from a seed",null,[[]]],[17,"PRIVATE_KEY_SIZE","","Size of a X25519 private key",null,null],[17,"PUBLIC_KEY_SIZE","","Size of a X25519 public key",null,null],[17,"SHARED_SECRET_SIZE","","Size of a X25519 shared secret",null,null],[11,"public_key","","Obtain the public key part of a private key",28,[[],["publickey",3]]],[11,"diffie_hellman","","To perform a key exchange with another public key",28,[[["publickey",3]]]],[11,"from_ed25519_private_bytes","","Deserialize an X25119 PrivateKey given the sha512…",28,[[],[["cryptomaterialerror",4],["result",4]]]],[11,"as_slice","","Obtain a slice reference to the underlying bytearray",29,[[]]],[11,"from_ed25519_public_bytes","","Deserialize an X25119 PublicKey from its representation as…",29,[[],[["cryptomaterialerror",4],["result",4]]]],[11,"from","diem_crypto::compat","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"new","","",30,[[]]],[11,"update","","",30,[[]]],[11,"chain","","",30,[[]]],[11,"finalize","","",30,[[],["genericarray",3]]],[11,"finalize_reset","","",30,[[],["genericarray",3]]],[11,"reset","","",30,[[]]],[11,"output_size","","",30,[[]]],[11,"digest","","",30,[[],["genericarray",3]]],[11,"finalize_into","","",30,[[["genericarray",3]]]],[11,"finalize_into_reset","","",30,[[["genericarray",3]]]],[11,"update","","",30,[[]]],[11,"finalize_reset","","",30,[[],[["global",3],["box",3]]]],[11,"finalize","","",30,[[["global",3],["box",3]],[["global",3],["box",3]]]],[11,"reset","","",30,[[]]],[11,"output_size","","",30,[[]]],[11,"box_clone","","",30,[[],[["global",3],["dyndigest",8],["box",3]]]],[11,"vzip","","",30,[[]]],[11,"test_only_hash","diem_crypto::ed25519","",0,[[],["hashvalue",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","diem_crypto::error","",31,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"test_only_hash","diem_crypto::hash","",6,[[],["hashvalue",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","diem_crypto::hkdf","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"test_only_hash","diem_crypto::multi_ed25519","",9,[[],["hashvalue",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","diem_crypto::noise","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"test_only_hash","diem_crypto::test_utils","",15,[[],["hashvalue",3]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"test_only_hash","","",16,[[],["hashvalue",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","diem_crypto::traits","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"test_only_hash","diem_crypto::x25519","",28,[[],["hashvalue",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"drop","diem_crypto::error","",31,[[]]],[11,"from","","",31,[[],["error",3]]],[11,"deref","","",31,[[]]],[11,"as_ref","","",31,[[],["error",8]]],[11,"as_ref","","",31,[[],["error",8]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deref_mut","","",31,[[]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","diem_crypto::test_utils","",16,[[],["hashvalue",3]]],[11,"seed","diem_crypto::hash","",33,[[]]],[11,"update","","",33,[[]]],[11,"finish","","",33,[[],["hashvalue",3]]],[11,"seed","","",34,[[]]],[11,"update","","",34,[[]]],[11,"finish","","",34,[[],["hashvalue",3]]],[11,"seed","","",35,[[]]],[11,"update","","",35,[[]]],[11,"finish","","",35,[[],["hashvalue",3]]],[11,"seed","","",36,[[]]],[11,"update","","",36,[[]]],[11,"finish","","",36,[[],["hashvalue",3]]],[11,"seed","","",37,[[]]],[11,"update","","",37,[[]]],[11,"finish","","",37,[[],["hashvalue",3]]],[11,"seed","diem_crypto::test_utils","",40,[[]]],[11,"update","","",40,[[]]],[11,"finish","","",40,[[],["hashvalue",3]]],[11,"length","diem_crypto::ed25519","",0,[[]]],[11,"length","","",1,[[]]],[11,"length","","",2,[[]]],[11,"length","diem_crypto::multi_ed25519","",9,[[]]],[11,"length","","",10,[[]]],[11,"length","","",11,[[]]],[11,"to_bytes","diem_crypto::ed25519","",0,[[],["vec",3]]],[11,"to_bytes","","",1,[[],["vec",3]]],[11,"to_bytes","","",2,[[],["vec",3]]],[11,"to_bytes","diem_crypto::multi_ed25519","",9,[[],["vec",3]]],[11,"to_bytes","","",10,[[],["vec",3]]],[11,"to_bytes","","",11,[[],["vec",3]]],[11,"to_bytes","diem_crypto::x25519","",28,[[],["vec",3]]],[11,"to_bytes","","",29,[[],["vec",3]]],[11,"sign","diem_crypto::ed25519","",0,[[],["ed25519signature",3]]],[11,"sign_arbitrary_message","","",0,[[],["ed25519signature",3]]],[11,"sign","diem_crypto::multi_ed25519","",9,[[],["multied25519signature",3]]],[11,"sign_arbitrary_message","","",9,[[],["multied25519signature",3]]],[11,"verify","diem_crypto::ed25519","Verifies that the provided signature is valid for the…",2,[[["ed25519publickey",3]],["result",6]]],[11,"verify_arbitrary_msg","","Checks that `self` is valid for an arbitrary &[u8]…",2,[[["ed25519publickey",3]],["result",6]]],[11,"to_bytes","","",2,[[],["vec",3]]],[11,"verify","diem_crypto::multi_ed25519","",11,[[["multied25519publickey",3]],["result",6]]],[11,"verify_arbitrary_msg","","Checks that `self` is valid for an arbitrary &[u8]…",11,[[["multied25519publickey",3]],["result",6]]],[11,"to_bytes","","",11,[[],["vec",3]]],[11,"generate","diem_crypto::ed25519","",0,[[]]],[11,"generate","diem_crypto::multi_ed25519","",9,[[]]],[11,"generate","diem_crypto::test_utils","",15,[[]]],[11,"generate","diem_crypto::x25519","",28,[[]]],[11,"genesis","diem_crypto::ed25519","",0,[[]]],[11,"genesis","diem_crypto::multi_ed25519","",9,[[]]],[11,"as_ref","diem_crypto::hash","",6,[[]]],[11,"from","diem_crypto::ed25519","",1,[[["ed25519privatekey",3]]]],[11,"from","diem_crypto::multi_ed25519","",9,[[["ed25519privatekey",3]]]],[11,"from","","",10,[[["ed25519publickey",3]]]],[11,"from","","",10,[[["multied25519privatekey",3]]]],[11,"from","","",11,[[["ed25519signature",3]]]],[11,"from","diem_crypto::test_utils","",15,[[]]],[11,"from","diem_crypto::x25519","",28,[[]]],[11,"from","","",29,[[["privatekey",3]]]],[11,"from","","",29,[[]]],[11,"next_back","diem_crypto::hash","",32,[[],["option",4]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"clone","diem_crypto::compat","",30,[[],["sha3_256",3]]],[11,"clone","diem_crypto::ed25519","",0,[[]]],[11,"clone","","",1,[[],["ed25519publickey",3]]],[11,"clone","","",2,[[],["ed25519signature",3]]],[11,"clone","diem_crypto::hash","",6,[[],["hashvalue",3]]],[11,"clone","","",33,[[],["transactionaccumulatorhasher",3]]],[11,"clone","","",34,[[],["eventaccumulatorhasher",3]]],[11,"clone","","",35,[[],["sparsemerkleinternalhasher",3]]],[11,"clone","","",36,[[],["voteproposalhasher",3]]],[11,"clone","","",37,[[],["testonlyhasher",3]]],[11,"clone","diem_crypto::hkdf","",8,[[],["hkdf",3]]],[11,"clone","","",7,[[],["hkdferror",4]]],[11,"clone","diem_crypto::multi_ed25519","",10,[[],["multied25519publickey",3]]],[11,"clone","","",11,[[],["multied25519signature",3]]],[11,"clone","diem_crypto::test_utils","",15,[[],["keypair",3]]],[11,"clone","","",40,[[],["testdiemcryptohasher",3]]],[11,"clone","diem_crypto::traits","",17,[[],["cryptomaterialerror",4]]],[11,"clone","diem_crypto::x25519","",28,[[],["privatekey",3]]],[11,"clone","","",29,[[],["publickey",3]]],[11,"default","diem_crypto::compat","",30,[[]]],[11,"default","diem_crypto::hash","",6,[[]]],[11,"default","","",33,[[]]],[11,"default","","",34,[[]]],[11,"default","","",35,[[]]],[11,"default","","",36,[[]]],[11,"default","","",37,[[]]],[11,"default","diem_crypto::test_utils","",40,[[]]],[11,"default","diem_crypto::x25519","",29,[[],["publickey",3]]],[11,"cmp","diem_crypto::hash","",6,[[["hashvalue",3]],["ordering",4]]],[11,"cmp","diem_crypto::x25519","",29,[[["publickey",3]],["ordering",4]]],[11,"eq","diem_crypto::ed25519","",0,[[]]],[11,"eq","","",1,[[["ed25519publickey",3]]]],[11,"eq","","",2,[[["ed25519signature",3]]]],[11,"eq","diem_crypto::hash","",6,[[["hashvalue",3]]]],[11,"ne","","",6,[[["hashvalue",3]]]],[11,"eq","diem_crypto::hkdf","",7,[[["hkdferror",4]]]],[11,"eq","diem_crypto::multi_ed25519","",9,[[["multied25519privatekey",3]]]],[11,"ne","","",9,[[["multied25519privatekey",3]]]],[11,"eq","","",10,[[["multied25519publickey",3]]]],[11,"ne","","",10,[[["multied25519publickey",3]]]],[11,"eq","","",11,[[["multied25519signature",3]]]],[11,"ne","","",11,[[["multied25519signature",3]]]],[11,"eq","diem_crypto::test_utils","",15,[[["keypair",3]]]],[11,"ne","","",15,[[["keypair",3]]]],[11,"eq","diem_crypto::traits","",17,[[["cryptomaterialerror",4]]]],[11,"ne","","",17,[[["cryptomaterialerror",4]]]],[11,"eq","diem_crypto::x25519","",29,[[["publickey",3]]]],[11,"ne","","",29,[[["publickey",3]]]],[11,"eq","","",28,[[]]],[11,"partial_cmp","diem_crypto::hash","",6,[[["hashvalue",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["hashvalue",3]]]],[11,"le","","",6,[[["hashvalue",3]]]],[11,"gt","","",6,[[["hashvalue",3]]]],[11,"ge","","",6,[[["hashvalue",3]]]],[11,"partial_cmp","diem_crypto::x25519","",29,[[["publickey",3]],[["ordering",4],["option",4]]]],[11,"lt","","",29,[[["publickey",3]]]],[11,"le","","",29,[[["publickey",3]]]],[11,"gt","","",29,[[["publickey",3]]]],[11,"ge","","",29,[[["publickey",3]]]],[11,"fmt","diem_crypto::ed25519","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::hash","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::hkdf","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::multi_ed25519","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::noise","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::test_utils","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::traits","",17,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::x25519","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::ed25519","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::hash","",6,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::hkdf","",7,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::multi_ed25519","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::noise","",12,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::traits","",17,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::x25519","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"index","diem_crypto::hash","",6,[[]]],[11,"hash","diem_crypto::ed25519","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","diem_crypto::hash","",6,[[]]],[11,"hash","diem_crypto::multi_ed25519","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","diem_crypto::x25519","",29,[[]]],[11,"try_from","diem_crypto::ed25519","Deserialize an Ed25519PrivateKey. This method will also…",0,[[],[["result",4],["ed25519privatekey",3],["cryptomaterialerror",4]]]],[11,"try_from","","Deserialize an Ed25519PublicKey. This method will also…",1,[[],[["result",4],["ed25519publickey",3],["cryptomaterialerror",4]]]],[11,"try_from","","",2,[[],[["ed25519signature",3],["cryptomaterialerror",4],["result",4]]]],[11,"try_from","diem_crypto::multi_ed25519","Deserialize an Ed25519PrivateKey. This method will also…",9,[[],[["multied25519privatekey",3],["cryptomaterialerror",4],["result",4]]]],[11,"try_from","","Deserialize a MultiEd25519PublicKey. This method will also…",10,[[],[["cryptomaterialerror",4],["result",4],["multied25519publickey",3]]]],[11,"try_from","","Deserialize a MultiEd25519Signature. This method will also…",11,[[],[["result",4],["cryptomaterialerror",4],["multied25519signature",3]]]],[11,"try_from","diem_crypto::x25519","",28,[[],["result",4]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from_str","diem_crypto::hash","",6,[[],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"write","","",33,[[],["result",6]]],[11,"flush","","",33,[[],["result",6]]],[11,"write","","",34,[[],["result",6]]],[11,"flush","","",34,[[],["result",6]]],[11,"write","","",35,[[],["result",6]]],[11,"flush","","",35,[[],["result",6]]],[11,"write","","",36,[[],["result",6]]],[11,"flush","","",36,[[],["result",6]]],[11,"write","","",37,[[],["result",6]]],[11,"flush","","",37,[[],["result",6]]],[11,"write","diem_crypto::test_utils","",40,[[],["result",6]]],[11,"flush","","",40,[[],["result",6]]],[11,"finalize_into","diem_crypto::compat","",30,[[["genericarray",3]]]],[11,"finalize_into_reset","","",30,[[["genericarray",3]]]],[11,"reset","","",30,[[]]],[11,"update","","",30,[[]]],[11,"serialize","diem_crypto::ed25519","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","diem_crypto::hash","",6,[[],["result",4]]],[11,"serialize","diem_crypto::multi_ed25519","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","diem_crypto::test_utils","",15,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","diem_crypto::x25519","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"deserialize","diem_crypto::ed25519","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","diem_crypto::hash","",6,[[],["result",4]]],[11,"deserialize","diem_crypto::multi_ed25519","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","diem_crypto::test_utils","",15,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","diem_crypto::x25519","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"arbitrary_with","diem_crypto::ed25519","",1,[[]]],[11,"arbitrary_with","diem_crypto::hash","",6,[[]]],[11,"arbitrary_with","diem_crypto::x25519","",29,[[]]],[11,"arbitrary_with","","",28,[[]]],[11,"new","diem_crypto::error","Create a new error object from any error type.",31,[[],["error",3]]],[11,"msg","","Create a new error object from a printable error message.",31,[[],["error",3]]],[11,"context","","Wrap the error value with additional context.",31,[[],["error",3]]],[11,"backtrace","","Get the backtrace for this Error.",31,[[],["backtrace",3]]],[11,"chain","","An iterator of the chain of source errors contained by…",31,[[],["chain",3]]],[11,"root_cause","","The lowest level cause of this error — this error\'s…",31,[[],["error",8]]],[11,"is","","Returns true if `E` is the type held by this error object.",31,[[]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",31,[[],[["result",4],["error",3]]]],[11,"downcast_ref","","Downcast this error object by reference.",31,[[],["option",4]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",31,[[],["option",4]]]],"p":[[3,"Ed25519PrivateKey"],[3,"Ed25519PublicKey"],[3,"Ed25519Signature"],[8,"CryptoHash"],[8,"CryptoHasher"],[8,"TestOnlyHash"],[3,"HashValue"],[4,"HkdfError"],[3,"Hkdf"],[3,"MultiEd25519PrivateKey"],[3,"MultiEd25519PublicKey"],[3,"MultiEd25519Signature"],[4,"NoiseError"],[3,"NoiseConfig"],[3,"NoiseSession"],[3,"KeyPair"],[3,"TestDiemCrypto"],[4,"CryptoMaterialError"],[8,"Length"],[8,"ValidCryptoMaterial"],[8,"ValidCryptoMaterialStringExt"],[8,"PrivateKey"],[8,"SigningKey"],[8,"PublicKey"],[8,"VerifyingKey"],[8,"Signature"],[8,"Uniform"],[8,"Genesis"],[3,"PrivateKey"],[3,"PublicKey"],[3,"Sha3_256"],[3,"Error"],[3,"HashValueBitIterator"],[3,"TransactionAccumulatorHasher"],[3,"EventAccumulatorHasher"],[3,"SparseMerkleInternalHasher"],[3,"VoteProposalHasher"],[3,"TestOnlyHasher"],[3,"InitiatorHandshakeState"],[3,"ResponderHandshakeState"],[3,"TestDiemCryptoHasher"]]},\
"diem_crypto_derive":{"doc":"Derive macros for crypto operationsThis crate contains…","i":[[24,"SilentDisplay","diem_crypto_derive","",null,null],[24,"SilentDebug","","",null,null],[24,"DeserializeKey","","Deserialize from a human readable format where applicable",null,null],[24,"SerializeKey","","Serialize into a human readable format where applicable",null,null],[24,"Deref","","",null,null],[24,"ValidCryptoMaterial","","",null,null],[24,"PublicKey","","",null,null],[24,"PrivateKey","","",null,null],[24,"VerifyingKey","","",null,null],[24,"SigningKey","","",null,null],[24,"Signature","","",null,null],[24,"CryptoHasher","","",null,null],[24,"BCSCryptoHash","","",null,null]],"p":[]},\
"diem_dev":{"doc":"","i":[[0,"crypto","diem_dev","",null,null],[5,"diem_DiemAccountKey_from","diem_dev::crypto","Takes in private key in bytes and return the associated…",null,[[],["diemstatus",4]]],[0,"error","diem_dev","",null,null],[5,"update_last_error","diem_dev::error","Update the most recent error.",null,[[["string",3]]]],[5,"clear_error","","Clear the most recent error.",null,[[]]],[5,"diem_strerror","","Return the most recent error string.",null,[[]]],[0,"transaction","diem_dev","",null,null],[5,"diem_SignedTransactionBytes_from","diem_dev::transaction","",null,[[],["diemstatus",4]]],[5,"diem_TransactionP2PScript_from","","",null,[[],["diemstatus",4]]],[5,"diem_TransactionAddCurrencyScript_from","","",null,[[],["diemstatus",4]]],[5,"diem_TransactionRotateDualAttestationInfoScript_from","","",null,[[],["diemstatus",4]]],[5,"diem_free_bytes_buffer","","",null,[[]]],[5,"diem_RawTransactionBytes_from","","",null,[[],["diemstatus",4]]],[5,"diem_RawTransaction_sign","","",null,[[],["diemstatus",4]]],[5,"diem_DiemSignedTransaction_from","","",null,[[],["diemstatus",4]]]],"p":[]},\
"diem_documentation_tool":{"doc":"","i":[[5,"quote_container_definitions","diem_documentation_tool","",null,[[["registry",6]],[["box",3],["btreemap",3],["result",4]]]],[5,"update_rust_quotes","","Replace the markdown content in `reader` and return a new…",null,[[["btreemap",3]],[["string",3],["result",6]]]]],"p":[]},\
"diem_events_fetcher":{"doc":"","i":[[3,"DiemEventsFetcher","diem_events_fetcher","",null,null],[11,"new","","",0,[[],["result",6]]],[11,"get_payment_event_handles","","",0,[[["accountaddress",3]]]],[11,"get_events","","",0,[[["eventkey",3]]]],[11,"get_all_events","","",0,[[["eventhandle",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]]],"p":[[3,"DiemEventsFetcher"]]},\
"diem_faucet":{"doc":"This crates provides Faucet service for creating Testnet…","i":[[0,"mint","diem_faucet","",null,null],[3,"MintParams","diem_faucet::mint","",null,null],[12,"amount","","",0,null],[12,"currency_code","","",0,null],[12,"auth_key","","",0,null],[12,"return_txns","","",0,null],[12,"is_designated_dealer","","",0,null],[3,"Service","","",null,null],[4,"Response","","",null,null],[13,"DDAccountNextSeqNum","","",1,null],[13,"SubmittedTxns","","",1,null],[11,"new","","",2,[[["chainid",3],["string",3]]]],[11,"process","","",2,[[["mintparams",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"sign_txn","","",2,[[["rawtransaction",3]],[["signedtransaction",3],["result",6]]]]],"p":[[3,"MintParams"],[4,"Response"],[3,"Service"]]},\
"diem_fuzzer":{"doc":"","i":[[3,"FuzzTarget","diem_fuzzer","A fuzz target.",null,null],[5,"fuzz_data_to_value","","Helper to convert a bytearray to a value implementing the…",null,[[],["debug",8]]],[0,"commands","","",null,null],[5,"make_corpus","diem_fuzzer::commands","Generates data for this fuzz target into the output…",null,[[["fuzztarget",3],["path",3]],["result",6]]],[5,"fuzz_target","","Fuzz a target by running `cargo fuzz run`.",null,[[["pathbuf",3],["osstring",3],["fuzztarget",3],["vec",3]],["result",6]]],[5,"list_targets","","List all known fuzz targets.",null,[[]]],[0,"fuzz_targets","diem_fuzzer","",null,null],[11,"from_env","","Get the current fuzz target from the environment.",0,[[],["result",6]]],[11,"by_name","","Get a fuzz target by name.",0,[[],["option",4]]],[11,"all_targets","","A list of all fuzz targets.",0,[[]]],[8,"FuzzTargetImpl","","Implementation for a particular target of a fuzz operation.",null,null],[11,"name","","The name of the fuzz target. By default, we use the struct…",1,[[]]],[10,"description","","A description for this target.",1,[[]]],[10,"generate","","Generates a new example for this target to store in the…",1,[[["valuegenerator",3]],[["vec",3],["option",4]]]],[10,"fuzz","","Fuzz the target with this data. The fuzzer tests for…",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"clone","","",0,[[],["fuzztarget",3]]],[11,"deref","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"from_str","","",0,[[],["result",4]]]],"p":[[3,"FuzzTarget"],[8,"FuzzTargetImpl"]]},\
"diem_genesis_tool":{"doc":"","i":[[0,"command","diem_genesis_tool","",null,null],[4,"Command","diem_genesis_tool::command","",null,null],[13,"CreateWaypoint","","",0,null],[13,"Genesis","","",0,null],[13,"InsertWaypoint","","",0,null],[13,"DiemRootKey","","",0,null],[13,"OperatorKey","","",0,null],[13,"OwnerKey","","",0,null],[13,"SetLayout","","",0,null],[13,"SetOperator","","",0,null],[13,"TreasuryComplianceKey","","",0,null],[13,"ValidatorConfig","","",0,null],[13,"Verify","","",0,null],[4,"CommandName","","",null,null],[13,"CreateWaypoint","","",1,null],[13,"Genesis","","",1,null],[13,"InsertWaypoint","","",1,null],[13,"DiemRootKey","","",1,null],[13,"OperatorKey","","",1,null],[13,"OwnerKey","","",1,null],[13,"SetLayout","","",1,null],[13,"SetOperator","","",1,null],[13,"TreasuryComplianceKey","","",1,null],[13,"ValidatorConfig","","",1,null],[13,"Verify","","",1,null],[11,"execute","","",0,[[],[["string",3],["error",4],["result",4]]]],[11,"create_waypoint","","",0,[[],[["error",4],["result",4],["waypoint",3]]]],[11,"genesis","","",0,[[],[["result",4],["transaction",4],["error",4]]]],[11,"insert_waypoint","","",0,[[],[["result",4],["error",4]]]],[11,"diem_root_key","","",0,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"operator_key","","",0,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"owner_key","","",0,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"set_layout","","",0,[[],[["layout",3],["error",4],["result",4]]]],[11,"set_operator","","",0,[[],[["string",3],["error",4],["result",4]]]],[11,"treasury_compliance_key","","",0,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"validator_config","","",0,[[],[["result",4],["transaction",4],["error",4]]]],[11,"verify","","",0,[[],[["string",3],["error",4],["result",4]]]],[0,"layout","diem_genesis_tool","",null,null],[3,"Layout","diem_genesis_tool::layout","Layout defines the set of roles to identities within…",null,null],[12,"operators","","",2,null],[12,"owners","","",2,null],[12,"diem_root","","",2,null],[12,"treasury_compliance","","",2,null],[3,"SetLayout","","",null,null],[11,"from_disk","","",2,[[["asref",8],["path",3]],[["result",4],["error",4]]]],[11,"parse","","",2,[[],[["result",4],["error",4]]]],[11,"to_toml","","",2,[[],[["string",3],["error",4],["result",4]]]],[11,"execute","","",3,[[],[["layout",3],["result",4],["error",4]]]],[0,"config_builder","diem_genesis_tool","",null,null],[3,"ValidatorBuilder","diem_genesis_tool::config_builder","",null,null],[3,"FullnodeBuilder","","",null,null],[4,"FullnodeType","","",null,null],[13,"ValidatorFullnode","","",4,null],[13,"PublicFullnode","","",4,null],[5,"test_config","","",null,[[]]],[11,"new","","",5,[[["nodeconfig",3]]]],[11,"randomize_first_validator_ports","","",5,[[]]],[11,"new","","",6,[[["nodeconfig",3],["pathbuf",3],["fullnodetype",4],["vec",3]]]],[0,"swarm_config","diem_genesis_tool","",null,null],[3,"SwarmConfig","diem_genesis_tool::swarm_config","",null,null],[12,"config_files","","",7,null],[12,"diem_root_key_path","","",7,null],[12,"waypoint","","",7,null],[8,"BuildSwarm","","",null,null],[10,"build_swarm","","Generate the configs for a swarm",8,[[],["result",6]]],[11,"build","","",7,[[["pathbuf",3]],["result",6]]],[11,"from","diem_genesis_tool::command","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","diem_genesis_tool::layout","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diem_genesis_tool::config_builder","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","diem_genesis_tool::swarm_config","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"build_swarm","diem_genesis_tool::config_builder","",5,[[],["result",6]]],[11,"build_swarm","","",6,[[],["result",6]]],[11,"from","diem_genesis_tool::command","",1,[[["command",4]]]],[11,"default","diem_genesis_tool::layout","",2,[[],["layout",3]]],[11,"eq","diem_genesis_tool::command","",1,[[["commandname",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","diem_genesis_tool::layout","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","diem_genesis_tool::config_builder","",4,[[["formatter",3]],["result",6]]],[11,"fmt","diem_genesis_tool::command","",1,[[["formatter",3]],["result",6]]],[11,"fmt","diem_genesis_tool::layout","",2,[[["formatter",3]],["result",6]]],[11,"serialize","","",2,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"clap","diem_genesis_tool::command","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"clap","diem_genesis_tool::layout","",3,[[],["app",3]]],[11,"from_clap","","",3,[[["argmatches",3]]]],[11,"augment_clap","diem_genesis_tool::command","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[]]],[11,"augment_clap","diem_genesis_tool::layout","",3,[[["app",3]],["app",3]]],[11,"is_subcommand","","",3,[[]]]],"p":[[4,"Command"],[4,"CommandName"],[3,"Layout"],[3,"SetLayout"],[4,"FullnodeType"],[3,"ValidatorBuilder"],[3,"FullnodeBuilder"],[3,"SwarmConfig"],[8,"BuildSwarm"]]},\
"diem_github_client":{"doc":"","i":[[3,"Client","diem_github_client","Client provides a client around the restful interface to…",null,null],[4,"Error","","",null,null],[13,"HttpError","","",0,null],[13,"InternalError","","",0,null],[13,"MissingField","","",0,null],[13,"NotFound","","",0,null],[13,"SerializationError","","",0,null],[11,"new","","",1,[[["string",3]]]],[11,"delete_file","","Delete a file from a GitHub repository",1,[[],[["result",4],["error",4]]]],[11,"delete_directory","","Recursively delete all files, which as a by product will…",1,[[],[["result",4],["error",4]]]],[11,"get_branches","","Retrieve a list of branches, this is effectively a status…",1,[[],[["result",4],["vec",3],["error",4]]]],[11,"get_directory","","Retrieve the name of contents within a given directory,…",1,[[],[["result",4],["vec",3],["error",4]]]],[11,"get_file","","Retrieve the contents of a file.",1,[[],[["error",4],["result",4],["string",3]]]],[11,"put","","Create or update a file.",1,[[],[["result",4],["error",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["response",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"Error"],[3,"Client"]]},\
"diem_global_constants":{"doc":"The purpose of this crate is to offer a single source of…","i":[[17,"CONSENSUS_KEY","diem_global_constants","Definitions of global cryptographic keys (e.g., as held in…",null,null],[17,"EXECUTION_KEY","","",null,null],[17,"FULLNODE_NETWORK_KEY","","",null,null],[17,"DIEM_ROOT_KEY","","",null,null],[17,"TREASURY_COMPLIANCE_KEY","","",null,null],[17,"OPERATOR_ACCOUNT","","",null,null],[17,"OPERATOR_KEY","","",null,null],[17,"OWNER_ACCOUNT","","",null,null],[17,"OWNER_KEY","","",null,null],[17,"VALIDATOR_NETWORK_ADDRESS_KEYS","","",null,null],[17,"VALIDATOR_NETWORK_KEY","","",null,null],[17,"SAFETY_DATA","","Definitions of global data items (e.g., as held in secure…",null,null],[17,"WAYPOINT","","",null,null],[17,"GENESIS_WAYPOINT","","",null,null]],"p":[]},\
"diem_infallible":{"doc":"","i":[[3,"MutexGuard","diem_infallible","An RAII implementation of a \\\"scoped lock\\\" of a mutex. When…",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",null,null],[3,"Mutex","","A simple wrapper around the lock() function of a…",null,null],[3,"RwLock","","A simple wrapper around the lock() function of a…",null,null],[5,"duration_since_epoch","","Gives the duration since the Unix epoch, notice the expect.",null,[[],["duration",3]]],[11,"new","","creates mutex",0,[[]]],[11,"lock","","lock the mutex",0,[[],["mutexguard",3]]],[11,"new","","creates a read-write lock",1,[[]]],[11,"read","","lock the rwlock in read mode",1,[[],["rwlockreadguard",3]]],[11,"write","","lock the rwlock in write mode",1,[[],["rwlockwriteguard",3]]],[11,"into_inner","","return the owned type consuming the lock",1,[[]]],[14,"NonZeroUsize","","A wrapper around `std::num::NonZeroUsize` to no longer…",null,null],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"deref","","",2,[[]]],[11,"deref","","",4,[[]]],[11,"deref","","",3,[[]]],[11,"drop","","",2,[[]]],[11,"drop","","",4,[[]]],[11,"drop","","",3,[[]]],[11,"deref_mut","","",2,[[]]],[11,"deref_mut","","",4,[[]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",1,[[],["rwlock",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[3,"Mutex"],[3,"RwLock"],[3,"MutexGuard"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"]]},\
"diem_jellyfish_merkle":{"doc":"This module implements `JellyfishMerkleTree` backed by…","i":[[3,"MissingRootError","diem_jellyfish_merkle","",null,null],[12,"version","","",0,null],[3,"NodeStats","","",null,null],[12,"new_nodes","","",1,null],[12,"new_leaves","","",1,null],[12,"stale_nodes","","",1,null],[12,"stale_leaves","","",1,null],[3,"StaleNodeIndex","","Indicates a node becomes stale since `stale_since_version`.",null,null],[12,"stale_since_version","","The version since when the node is overwritten and becomes…",2,null],[12,"node_key","","The `NodeKey` identifying the node associated with this…",2,null],[3,"TreeUpdateBatch","","This is a wrapper of `NodeBatch`, `StaleNodeIndexBatch`…",null,null],[12,"node_batch","","",3,null],[12,"stale_node_index_batch","","",3,null],[12,"node_stats","","",3,null],[3,"JellyfishMerkleTree","","The Jellyfish Merkle tree data structure. See [`crate`]…",null,null],[0,"iterator","","This module implements `JellyfishMerkleIterator`.…",null,null],[3,"JellyfishMerkleIterator","diem_jellyfish_merkle::iterator","The `JellyfishMerkleIterator` implementation.",null,null],[11,"new","","Constructs a new iterator. This puts the internal state in…",4,[[["hashvalue",3],["version",6],["arc",3]],["result",6]]],[0,"node_type","diem_jellyfish_merkle","Node types of `JellyfishMerkleTree`",null,null],[3,"NodeKey","diem_jellyfish_merkle::node_type","The unique key of each node.",null,null],[3,"Child","","Each child of [`InternalNode`] encapsulates a nibble…",null,null],[12,"hash","","",5,null],[12,"version","","",5,null],[12,"is_leaf","","",5,null],[3,"InternalNode","","Represents a 4-level subtree with 16 children at the…",null,null],[3,"LeafNode","","Represents an account.",null,null],[4,"Node","","The concrete node type of `JellyfishMerkleTree`.",null,null],[13,"Null","","Represents `null`.",6,null],[13,"Internal","","A wrapper of [`InternalNode`].",6,null],[13,"Leaf","","A wrapper of [`LeafNode`].",6,null],[4,"NodeDecodeError","","Error thrown when a [`Node`] fails to be deserialized out…",null,null],[13,"EmptyInput","","Input is empty.",7,null],[13,"UnknownTag","","The first byte of the input is not a known tag…",7,null],[12,"unknown_tag","diem_jellyfish_merkle::node_type::NodeDecodeError","",8,null],[13,"NoChildren","diem_jellyfish_merkle::node_type","No children found in internal node",7,null],[13,"ExtraLeaves","","Extra leaf bits set",7,null],[12,"existing","diem_jellyfish_merkle::node_type::NodeDecodeError","",9,null],[12,"leaves","","",9,null],[11,"new","diem_jellyfish_merkle::node_type","Creates a new `NodeKey`.",10,[[["nibblepath",3],["version",6]]]],[11,"new_empty_path","","A shortcut to generate a node key consisting of a version…",10,[[["version",6]]]],[11,"version","","Gets the version.",10,[[],["version",6]]],[11,"nibble_path","","Gets the nibble path.",10,[[],["nibblepath",3]]],[11,"gen_child_node_key","","Generates a child node key based on this node key.",10,[[["version",6],["nibble",3]]]],[11,"gen_parent_node_key","","Generates parent node key at the same version based on…",10,[[]]],[11,"set_version","","Sets the version to the given version.",10,[[["version",6]]]],[11,"encode","","Serializes to bytes for physical storage enforcing the…",10,[[],[["result",6],["vec",3]]]],[11,"decode","","Recovers from serialized bytes in physical storage.",10,[[],[["result",6],["nodekey",3]]]],[11,"new","","",5,[[["hashvalue",3],["version",6]]]],[11,"new","","Creates a new Internal node.",11,[[["hashmap",3],["nibble",3],["child",3]]]],[11,"hash","","",11,[[],["hashvalue",3]]],[11,"serialize","","",11,[[["vec",3]],["result",6]]],[11,"deserialize","","",11,[[],["result",6]]],[11,"child","","Gets the `n`-th child.",11,[[["nibble",3]],[["child",3],["option",4]]]],[11,"generate_bitmaps","","Generates `existence_bitmap` and `leaf_bitmap` as a pair…",11,[[]]],[11,"get_child_with_siblings","","Gets the child and its corresponding siblings that are…",11,[[["nibble",3],["nodekey",3]]]],[11,"new","","Creates a new leaf node.",12,[[["hashvalue",3],["accountstateblob",3]]]],[11,"account_key","","Gets the account key, the hashed account address.",12,[[],["hashvalue",3]]],[11,"blob","","Gets the associated blob itself.",12,[[],["accountstateblob",3]]],[11,"hash","","",12,[[],["hashvalue",3]]],[11,"new_null","","Creates the `Null` variant.",6,[[]]],[11,"new_internal","","Creates the `Internal` variant.",6,[[["hashmap",3],["nibble",3],["child",3]]]],[11,"new_leaf","","Creates the `Leaf` variant.",6,[[["hashvalue",3],["accountstateblob",3]]]],[11,"is_leaf","","Returns `true` if the node is a leaf node.",6,[[]]],[11,"encode","","Serializes to bytes for physical storage.",6,[[],[["result",6],["vec",3]]]],[11,"hash","","Computes the hash of nodes.",6,[[],["hashvalue",3]]],[11,"decode","","Recovers from serialized bytes in physical storage.",6,[[],[["node",4],["result",6]]]],[0,"restore","diem_jellyfish_merkle","This module implements the functionality to restore a…",null,null],[3,"JellyfishMerkleRestore","diem_jellyfish_merkle::restore","",null,null],[11,"new","","",13,[[["version",6],["treewriter",8],["arc",3],["hashvalue",3],["treereader",8]],["result",6]]],[11,"new_overwrite","","",13,[[["version",6],["treewriter",8],["arc",3],["hashvalue",3]],["result",6]]],[11,"add_chunk","","Restores a chunk of accounts. This function will verify…",13,[[["sparsemerklerangeproof",3],["vec",3]],["result",6]]],[11,"finish","","Finishes the restoration process. This tells the code that…",13,[[],["result",6]]],[0,"test_helper","diem_jellyfish_merkle","",null,null],[5,"plus_one","diem_jellyfish_merkle::test_helper","Computes the key immediately after `key`.",null,[[["hashvalue",3]],["hashvalue",3]]],[5,"init_mock_db","","Initializes a DB with a set of key-value pairs by…",null,[[["hashmap",3]]]],[5,"arb_existent_kvs_and_nonexistent_keys","","",null,[[]]],[5,"test_get_with_proof","","",null,[[]]],[5,"arb_kv_pair_with_distinct_last_nibble","","",null,[[]]],[5,"test_get_with_proof_with_distinct_last_nibble","","",null,[[]]],[5,"arb_tree_with_index","","",null,[[]]],[5,"test_get_range_proof","","",null,[[]]],[6,"NodeBatch","diem_jellyfish_merkle","Node batch that will be written into db atomically with…",null,null],[6,"StaleNodeIndexBatch","","`StaleNodeIndex` batch that will be written into db…",null,null],[17,"ROOT_NIBBLE_HEIGHT","","The hardcoded maximum height of a [`JellyfishMerkleTree`]…",null,null],[8,"TreeReader","","`TreeReader` defines the interface between…",null,null],[11,"get_node","","Gets node given a node key. Returns error if the node does…",14,[[["nodekey",3]],[["node",4],["result",6]]]],[10,"get_node_option","","Gets node given a node key. Returns `None` if the node…",14,[[["nodekey",3]],[["result",6],["option",4]]]],[10,"get_rightmost_leaf","","Gets the rightmost leaf. Note that this assumes we are in…",14,[[],[["result",6],["option",4]]]],[8,"TreeWriter","","",null,null],[10,"write_node_batch","","Writes a node batch into storage.",15,[[["nodebatch",6]],["result",6]]],[11,"new","","Creates a `JellyfishMerkleTree` backed by the given…",16,[[]]],[11,"put_blob_set","","This is a convenient function that calls `put_blob_sets`…",16,[[["version",6],["vec",3]],["result",6]]],[11,"put_blob_sets","","Returns the new nodes and account state blobs in a batch…",16,[[["vec",3],["version",6],["vec",3]],["result",6]]],[11,"get_with_proof","","Returns the account state blob (if applicable) and the…",16,[[["hashvalue",3],["version",6]],["result",6]]],[11,"get_range_proof","","Gets the proof that shows a list of keys up to…",16,[[["hashvalue",3],["version",6]],[["result",6],["sparsemerklerangeproof",3]]]],[11,"get_root_hash","","",16,[[["version",6]],[["hashvalue",3],["result",6]]]],[11,"get_root_hash_option","","",16,[[["version",6]],[["option",4],["result",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"equivalent","","",3,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","diem_jellyfish_merkle::iterator","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","diem_jellyfish_merkle::node_type","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"equivalent","","",10,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"equivalent","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"equivalent","","",12,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"equivalent","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"equivalent","","",7,[[]]],[11,"from","diem_jellyfish_merkle::restore","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","diem_jellyfish_merkle::node_type","",6,[[["internalnode",3]]]],[11,"from","","",6,[[["leafnode",3]]]],[11,"next","diem_jellyfish_merkle::iterator","",4,[[],["option",4]]],[11,"clone","diem_jellyfish_merkle::node_type","",10,[[],["nodekey",3]]],[11,"clone","","",5,[[],["child",3]]],[11,"clone","","",11,[[],["internalnode",3]]],[11,"clone","","",12,[[],["leafnode",3]]],[11,"clone","","",6,[[],["node",4]]],[11,"clone","diem_jellyfish_merkle","",1,[[],["nodestats",3]]],[11,"clone","","",2,[[],["stalenodeindex",3]]],[11,"clone","","",3,[[],["treeupdatebatch",3]]],[11,"default","","",1,[[],["nodestats",3]]],[11,"default","","",3,[[],["treeupdatebatch",3]]],[11,"cmp","diem_jellyfish_merkle::node_type","",10,[[["nodekey",3]],["ordering",4]]],[11,"cmp","diem_jellyfish_merkle","",2,[[["stalenodeindex",3]],["ordering",4]]],[11,"eq","diem_jellyfish_merkle::node_type","",10,[[["nodekey",3]]]],[11,"ne","","",10,[[["nodekey",3]]]],[11,"eq","","",5,[[["child",3]]]],[11,"ne","","",5,[[["child",3]]]],[11,"eq","","",11,[[["internalnode",3]]]],[11,"ne","","",11,[[["internalnode",3]]]],[11,"eq","","",12,[[["leafnode",3]]]],[11,"ne","","",12,[[["leafnode",3]]]],[11,"eq","","",6,[[["node",4]]]],[11,"ne","","",6,[[["node",4]]]],[11,"eq","","",7,[[["nodedecodeerror",4]]]],[11,"ne","","",7,[[["nodedecodeerror",4]]]],[11,"eq","diem_jellyfish_merkle","",1,[[["nodestats",3]]]],[11,"ne","","",1,[[["nodestats",3]]]],[11,"eq","","",2,[[["stalenodeindex",3]]]],[11,"ne","","",2,[[["stalenodeindex",3]]]],[11,"eq","","",3,[[["treeupdatebatch",3]]]],[11,"ne","","",3,[[["treeupdatebatch",3]]]],[11,"partial_cmp","diem_jellyfish_merkle::node_type","",10,[[["nodekey",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["nodekey",3]]]],[11,"le","","",10,[[["nodekey",3]]]],[11,"gt","","",10,[[["nodekey",3]]]],[11,"ge","","",10,[[["nodekey",3]]]],[11,"partial_cmp","diem_jellyfish_merkle","",2,[[["stalenodeindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["stalenodeindex",3]]]],[11,"le","","",2,[[["stalenodeindex",3]]]],[11,"gt","","",2,[[["stalenodeindex",3]]]],[11,"ge","","",2,[[["stalenodeindex",3]]]],[11,"fmt","diem_jellyfish_merkle::node_type","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","diem_jellyfish_merkle","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","diem_jellyfish_merkle::node_type","",7,[[["formatter",3]],["result",6]]],[11,"fmt","diem_jellyfish_merkle","",0,[[["formatter",3]],["result",6]]],[11,"hash","diem_jellyfish_merkle::node_type","",10,[[]]],[11,"hash","diem_jellyfish_merkle","",2,[[]]],[11,"serialize","diem_jellyfish_merkle::node_type","",12,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"arbitrary_with","","",10,[[]]],[11,"arbitrary_with","","",5,[[]]],[11,"arbitrary_with","","",11,[[]]],[11,"arbitrary_with","diem_jellyfish_merkle","",2,[[]]]],"p":[[3,"MissingRootError"],[3,"NodeStats"],[3,"StaleNodeIndex"],[3,"TreeUpdateBatch"],[3,"JellyfishMerkleIterator"],[3,"Child"],[4,"Node"],[4,"NodeDecodeError"],[13,"UnknownTag"],[13,"ExtraLeaves"],[3,"NodeKey"],[3,"InternalNode"],[3,"LeafNode"],[3,"JellyfishMerkleRestore"],[8,"TreeReader"],[8,"TreeWriter"],[3,"JellyfishMerkleTree"]]},\
"diem_json_rpc":{"doc":"JSON RPC endpoint","i":[[0,"errors","diem_json_rpc","",null,null],[7,"INTERNAL_ERRORS","diem_json_rpc::errors","list of server internal errors",null,null],[5,"is_internal_error","","",null,[[]]],[4,"ServerCode","","Custom JSON RPC server error codes Ranges from -32000 to…",null,null],[13,"DefaultServerError","","",0,null],[13,"VmValidationError","","",0,null],[13,"VmVerificationError","","",0,null],[13,"VmInvariantViolationError","","",0,null],[13,"VmDeserializationError","","",0,null],[13,"VmExecutionError","","",0,null],[13,"VmUnknownError","","",0,null],[13,"MempoolInvalidSeqNumber","","",0,null],[13,"MempoolIsFull","","",0,null],[13,"MempoolTooManyTransactions","","",0,null],[13,"MempoolInvalidUpdate","","",0,null],[13,"MempoolVmError","","",0,null],[13,"MempoolUnknownError","","",0,null],[4,"InvalidRequestCode","","JSON RPC server error codes for invalid request",null,null],[13,"InvalidRequest","","",1,null],[13,"MethodNotFound","","",1,null],[13,"InvalidParams","","",1,null],[13,"InvalidFormat","","",1,null],[4,"ErrorData","","",null,null],[13,"StatusCode","","",2,null],[3,"JsonRpcError","","",null,null],[12,"code","","",3,null],[12,"message","","",3,null],[12,"data","","",3,null],[0,"response","diem_json_rpc","",null,null],[17,"X_DIEM_CHAIN_ID","diem_json_rpc::response","",null,null],[17,"X_DIEM_VERSION_ID","","",null,null],[17,"X_DIEM_TIMESTAMP_USEC_ID","","",null,null],[3,"JsonRpcResponse","","",null,null],[12,"diem_chain_id","","",4,null],[12,"diem_ledger_version","","",4,null],[12,"diem_ledger_timestampusec","","",4,null],[12,"jsonrpc","","",4,null],[12,"id","","",4,null],[12,"result","","",4,null],[12,"error","","",4,null],[0,"views","diem_json_rpc","",null,null],[3,"AmountView","diem_json_rpc::views","",null,null],[12,"amount","","",5,null],[12,"currency","","",5,null],[4,"AccountRoleView","","",null,null],[13,"Unknown","","",6,null],[13,"ChildVASP","","",6,null],[12,"parent_vasp_address","diem_json_rpc::views::AccountRoleView","",7,null],[13,"ParentVASP","diem_json_rpc::views","",6,null],[12,"human_name","diem_json_rpc::views::AccountRoleView","",8,null],[12,"base_url","","",8,null],[12,"expiration_time","","",8,null],[12,"compliance_key","","",8,null],[12,"num_children","","",8,null],[12,"compliance_key_rotation_events_key","","",8,null],[12,"base_url_rotation_events_key","","",8,null],[13,"DesignatedDealer","diem_json_rpc::views","",6,null],[12,"human_name","diem_json_rpc::views::AccountRoleView","",9,null],[12,"base_url","","",9,null],[12,"expiration_time","","",9,null],[12,"compliance_key","","",9,null],[12,"preburn_balances","","",9,null],[12,"received_mint_events_key","","",9,null],[12,"compliance_key_rotation_events_key","","",9,null],[12,"base_url_rotation_events_key","","",9,null],[3,"AccountView","diem_json_rpc::views","",null,null],[12,"address","","",10,null],[12,"balances","","",10,null],[12,"sequence_number","","",10,null],[12,"authentication_key","","",10,null],[12,"sent_events_key","","",10,null],[12,"received_events_key","","",10,null],[12,"delegated_key_rotation_capability","","",10,null],[12,"delegated_withdrawal_capability","","",10,null],[12,"is_frozen","","",10,null],[12,"role","","",10,null],[3,"EventView","","",null,null],[12,"key","","",11,null],[12,"sequence_number","","",11,null],[12,"transaction_version","","",11,null],[12,"data","","",11,null],[3,"EventWithProofView","","",null,null],[12,"event_with_proof","","",12,null],[4,"EventDataView","","",null,null],[13,"Burn","","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",14,null],[12,"preburn_address","","",14,null],[13,"CancelBurn","diem_json_rpc::views","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",15,null],[12,"preburn_address","","",15,null],[13,"Mint","diem_json_rpc::views","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",16,null],[13,"ToXDXExchangeRateUpdate","diem_json_rpc::views","",13,null],[12,"currency_code","diem_json_rpc::views::EventDataView","",17,null],[12,"new_to_xdx_exchange_rate","","",17,null],[13,"Preburn","diem_json_rpc::views","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",18,null],[12,"preburn_address","","",18,null],[13,"ReceivedPayment","diem_json_rpc::views","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",19,null],[12,"sender","","",19,null],[12,"receiver","","",19,null],[12,"metadata","","",19,null],[13,"SentPayment","diem_json_rpc::views","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",20,null],[12,"receiver","","",20,null],[12,"sender","","",20,null],[12,"metadata","","",20,null],[13,"AdminTransaction","diem_json_rpc::views","",13,null],[12,"committed_timestamp_secs","diem_json_rpc::views::EventDataView","",21,null],[13,"NewEpoch","diem_json_rpc::views","",13,null],[12,"epoch","diem_json_rpc::views::EventDataView","",22,null],[13,"NewBlock","diem_json_rpc::views","",13,null],[12,"round","diem_json_rpc::views::EventDataView","",23,null],[12,"proposer","","",23,null],[12,"proposed_time","","",23,null],[13,"ReceivedMint","diem_json_rpc::views","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",24,null],[12,"destination_address","","",24,null],[13,"ComplianceKeyRotation","diem_json_rpc::views","",13,null],[12,"new_compliance_public_key","diem_json_rpc::views::EventDataView","",25,null],[12,"time_rotated_seconds","","",25,null],[13,"BaseUrlRotation","diem_json_rpc::views","",13,null],[12,"new_base_url","diem_json_rpc::views::EventDataView","",26,null],[12,"time_rotated_seconds","","",26,null],[13,"CreateAccount","diem_json_rpc::views","",13,null],[12,"created_address","diem_json_rpc::views::EventDataView","",27,null],[12,"role_id","","",27,null],[13,"Unknown","diem_json_rpc::views","",13,null],[3,"MetadataView","","",null,null],[12,"version","","",28,null],[12,"accumulator_root_hash","","",28,null],[12,"timestamp","","",28,null],[12,"chain_id","","",28,null],[12,"script_hash_allow_list","","",28,null],[12,"module_publishing_allowed","","",28,null],[12,"diem_version","","",28,null],[12,"dual_attestation_limit","","",28,null],[3,"BytesView","","",null,null],[12,"0","","",29,null],[3,"MoveAbortExplanationView","","",null,null],[4,"VMStatusView","","",null,null],[13,"Executed","","",30,null],[13,"OutOfGas","","",30,null],[13,"MoveAbort","","",30,null],[12,"location","diem_json_rpc::views::VMStatusView","",31,null],[12,"abort_code","","",31,null],[12,"explanation","","",31,null],[13,"ExecutionFailure","diem_json_rpc::views","",30,null],[12,"location","diem_json_rpc::views::VMStatusView","",32,null],[12,"function_index","","",32,null],[12,"code_offset","","",32,null],[13,"MiscellaneousError","diem_json_rpc::views","",30,null],[3,"TransactionView","","",null,null],[12,"version","","",33,null],[12,"transaction","","",33,null],[12,"hash","","",33,null],[12,"bytes","","",33,null],[12,"events","","",33,null],[12,"vm_status","","",33,null],[12,"gas_used","","",33,null],[3,"TransactionsWithProofsView","","",null,null],[12,"serialized_transactions","","",34,null],[12,"proofs","","",34,null],[3,"TransactionsProofsView","","",null,null],[12,"ledger_info_to_transaction_infos_proof","","",35,null],[12,"transaction_infos","","",35,null],[4,"TransactionDataView","","",null,null],[13,"BlockMetadata","","",36,null],[12,"timestamp_usecs","diem_json_rpc::views::TransactionDataView","",37,null],[13,"WriteSet","diem_json_rpc::views","",36,null],[13,"UserTransaction","","",36,null],[12,"sender","diem_json_rpc::views::TransactionDataView","",38,null],[12,"signature_scheme","","",38,null],[12,"signature","","",38,null],[12,"public_key","","",38,null],[12,"sequence_number","","",38,null],[12,"chain_id","","",38,null],[12,"max_gas_amount","","",38,null],[12,"gas_unit_price","","",38,null],[12,"gas_currency","","",38,null],[12,"expiration_timestamp_secs","","",38,null],[12,"script_hash","","",38,null],[12,"script_bytes","","",38,null],[12,"script","","",38,null],[13,"UnknownTransaction","diem_json_rpc::views","",36,null],[3,"ScriptView","","",null,null],[12,"type","","",39,null],[12,"code","","",39,null],[12,"arguments","","",39,null],[12,"type_arguments","","",39,null],[12,"receiver","","",39,null],[12,"amount","","",39,null],[12,"currency","","",39,null],[12,"metadata","","",39,null],[12,"metadata_signature","","",39,null],[3,"CurrencyInfoView","","",null,null],[12,"code","","",40,null],[12,"scaling_factor","","",40,null],[12,"fractional_part","","",40,null],[12,"to_xdx_exchange_rate","","",40,null],[12,"mint_events_key","","",40,null],[12,"burn_events_key","","",40,null],[12,"preburn_events_key","","",40,null],[12,"cancel_burn_events_key","","",40,null],[12,"exchange_rate_update_events_key","","",40,null],[3,"StateProofView","","",null,null],[12,"ledger_info_with_signatures","","",41,null],[12,"epoch_change_proof","","",41,null],[12,"ledger_consistency_proof","","",41,null],[3,"AccountStateWithProofView","","",null,null],[12,"version","","",42,null],[12,"blob","","",42,null],[12,"proof","","",42,null],[3,"AccountStateProofView","","",null,null],[12,"ledger_info_to_transaction_info_proof","","",43,null],[12,"transaction_info","","",43,null],[12,"transaction_info_to_account_proof","","",43,null],[5,"bootstrap","diem_json_rpc","Creates HTTP server (warp-based) that serves JSON RPC…",null,[[["socketaddr",4],["dbreader",8],["arc",3],["mempoolclientsender",6],["roletype",4],["chainid",3],["option",4]],["runtime",3]]],[5,"bootstrap_from_config","","Creates JSON RPC endpoint by given node config",null,[[["dbreader",8],["chainid",3],["mempoolclientsender",6],["nodeconfig",3],["arc",3]],["runtime",3]]],[5,"test_bootstrap","","Creates JSON RPC server for a Validator node Should only…",null,[[["socketaddr",4],["dbreader",8],["mempoolclientsender",6],["arc",3]],["runtime",3]]],[0,"fuzzing","","Fuzzer for JSON RPC service",null,null],[5,"method_fuzzer","diem_json_rpc::fuzzing","",null,[[]]],[5,"generate_corpus","","generate_corpus produces an arbitrary transaction to…",null,[[["valuegenerator",3]],["vec",3]]],[5,"fuzzer","","",null,[[]]],[5,"request_fuzzer","","",null,[[["value",4]]]],[14,"log_response","diem_json_rpc","",null,null],[14,"gen_request_params","","",null,null],[11,"from","diem_json_rpc::errors","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",2,[[]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",3,[[]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diem_json_rpc::response","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",4,[[]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","diem_json_rpc::views","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",5,[[]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"erased_serialize","","",6,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",6,[[]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"erased_serialize","","",10,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",10,[[]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"erased_serialize","","",11,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",11,[[]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"erased_serialize","","",12,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",12,[[]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"erased_serialize","","",13,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",13,[[]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"erased_serialize","","",28,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",28,[[]]],[11,"test_only_hash","","",28,[[],["hashvalue",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"erased_serialize","","",29,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",29,[[]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"erased_serialize","","",44,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",44,[[]]],[11,"test_only_hash","","",44,[[],["hashvalue",3]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"erased_serialize","","",30,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",30,[[]]],[11,"test_only_hash","","",30,[[],["hashvalue",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"erased_serialize","","",33,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",33,[[]]],[11,"test_only_hash","","",33,[[],["hashvalue",3]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"erased_serialize","","",34,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",34,[[]]],[11,"test_only_hash","","",34,[[],["hashvalue",3]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"erased_serialize","","",35,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",35,[[]]],[11,"test_only_hash","","",35,[[],["hashvalue",3]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"erased_serialize","","",36,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",36,[[]]],[11,"test_only_hash","","",36,[[],["hashvalue",3]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"erased_serialize","","",39,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",39,[[]]],[11,"test_only_hash","","",39,[[],["hashvalue",3]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"erased_serialize","","",40,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",40,[[]]],[11,"test_only_hash","","",40,[[],["hashvalue",3]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"erased_serialize","","",41,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",41,[[]]],[11,"test_only_hash","","",41,[[],["hashvalue",3]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"erased_serialize","","",42,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",42,[[]]],[11,"test_only_hash","","",42,[[],["hashvalue",3]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"erased_serialize","","",43,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"vzip","","",43,[[]]],[11,"test_only_hash","","",43,[[],["hashvalue",3]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"try_from","","",13,[[["contractevent",4]],[["eventdataview",4],["error",3],["result",4]]]],[11,"try_from","","",42,[[["accountstatewithproof",3]],[["result",4],["accountstatewithproofview",3],["error",3]]]],[11,"try_from","","",41,[[],[["result",4],["stateproofview",3]]]],[11,"try_from","","",44,[[["keptvmstatus",4]],[["result",4],["moveabortexplanationview",3]]]],[11,"try_from","","",11,[[],[["result",4],["error",3],["eventview",3]]]],[11,"try_from","","",43,[[["accountstateproof",3]],[["result",4],["accountstateproofview",3],["error",3]]]],[11,"fmt","diem_json_rpc::errors","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc::views","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc::response","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc::views","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc::errors","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","diem_json_rpc::views","",42,[[],["accountstatewithproofview",3]]],[11,"clone","","",43,[[],["accountstateproofview",3]]],[11,"clone","diem_json_rpc::response","",4,[[],["jsonrpcresponse",3]]],[11,"clone","diem_json_rpc::views","",10,[[],["accountview",3]]],[11,"clone","","",40,[[],["currencyinfoview",3]]],[11,"clone","","",11,[[],["eventview",3]]],[11,"clone","","",34,[[],["transactionswithproofsview",3]]],[11,"clone","","",12,[[],["eventwithproofview",3]]],[11,"clone","diem_json_rpc::errors","",3,[[],["jsonrpcerror",3]]],[11,"clone","diem_json_rpc::views","",44,[[],["moveabortexplanationview",3]]],[11,"clone","","",35,[[],["transactionsproofsview",3]]],[11,"clone","","",39,[[],["scriptview",3]]],[11,"clone","diem_json_rpc::errors","",2,[[],["errordata",4]]],[11,"clone","diem_json_rpc::views","",5,[[],["amountview",3]]],[11,"clone","","",41,[[],["stateproofview",3]]],[11,"clone","","",28,[[],["metadataview",3]]],[11,"clone","","",13,[[],["eventdataview",4]]],[11,"clone","","",29,[[],["bytesview",3]]],[11,"clone","","",33,[[],["transactionview",3]]],[11,"clone","","",30,[[],["vmstatusview",4]]],[11,"clone","","",6,[[],["accountroleview",4]]],[11,"clone","","",36,[[],["transactiondataview",4]]],[11,"eq","","",6,[[["accountroleview",4]]]],[11,"ne","","",6,[[["accountroleview",4]]]],[11,"eq","","",34,[[["transactionswithproofsview",3]]]],[11,"ne","","",34,[[["transactionswithproofsview",3]]]],[11,"eq","","",13,[[["eventdataview",4]]]],[11,"ne","","",13,[[["eventdataview",4]]]],[11,"eq","","",35,[[["transactionsproofsview",3]]]],[11,"ne","","",35,[[["transactionsproofsview",3]]]],[11,"eq","","",41,[[["stateproofview",3]]]],[11,"ne","","",41,[[["stateproofview",3]]]],[11,"eq","","",5,[[["amountview",3]]]],[11,"ne","","",5,[[["amountview",3]]]],[11,"eq","","",10,[[["accountview",3]]]],[11,"ne","","",10,[[["accountview",3]]]],[11,"eq","","",44,[[["moveabortexplanationview",3]]]],[11,"ne","","",44,[[["moveabortexplanationview",3]]]],[11,"eq","","",28,[[["metadataview",3]]]],[11,"ne","","",28,[[["metadataview",3]]]],[11,"eq","","",39,[[["scriptview",3]]]],[11,"ne","","",39,[[["scriptview",3]]]],[11,"eq","","",30,[[["vmstatusview",4]]]],[11,"ne","","",30,[[["vmstatusview",4]]]],[11,"eq","","",43,[[["accountstateproofview",3]]]],[11,"ne","","",43,[[["accountstateproofview",3]]]],[11,"eq","","",36,[[["transactiondataview",4]]]],[11,"ne","","",36,[[["transactiondataview",4]]]],[11,"eq","","",11,[[["eventview",3]]]],[11,"ne","","",11,[[["eventview",3]]]],[11,"eq","","",33,[[["transactionview",3]]]],[11,"ne","","",33,[[["transactionview",3]]]],[11,"eq","","",42,[[["accountstatewithproofview",3]]]],[11,"ne","","",42,[[["accountstatewithproofview",3]]]],[11,"eq","","",29,[[["bytesview",3]]]],[11,"ne","","",29,[[["bytesview",3]]]],[11,"eq","","",12,[[["eventwithproofview",3]]]],[11,"ne","","",12,[[["eventwithproofview",3]]]],[11,"eq","","",40,[[["currencyinfoview",3]]]],[11,"ne","","",40,[[["currencyinfoview",3]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc::errors","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","diem_json_rpc::views","",39,[[],["scriptview",3]]],[11,"from","","",40,[[["currencyinforesource",3]],["currencyinfoview",3]]],[11,"from","","",29,[[["vec",3]],["bytesview",3]]],[11,"from","","",36,[[["transaction",4]],["transactiondataview",4]]],[11,"from","","",6,[[["accountrole",4]],["accountroleview",4]]],[11,"from","","",39,[[["script",3]],["scriptview",3]]],[11,"from","","",29,[[["hashvalue",3]],["bytesview",3]]],[11,"from","","",30,[[["keptvmstatus",4]],["vmstatusview",4]]],[11,"from","","",29,[[["vec",3]],["bytesview",3]]],[11,"from","","",29,[[],["bytesview",3]]],[11,"from","diem_json_rpc::errors","",3,[[["error",3]],["jsonrpcerror",3]]],[11,"from","","",3,[[["error",3]],["jsonrpcerror",3]]],[11,"from","diem_json_rpc::views","",29,[[["accountaddress",3]],["bytesview",3]]],[11,"from","","",29,[[["accountaddress",3]],["bytesview",3]]],[11,"deserialize","","",42,[[],[["result",4],["accountstatewithproofview",3]]]],[11,"deserialize","","",13,[[],[["result",4],["eventdataview",4]]]],[11,"deserialize","","",28,[[],[["metadataview",3],["result",4]]]],[11,"deserialize","","",40,[[],[["result",4],["currencyinfoview",3]]]],[11,"deserialize","diem_json_rpc::response","",4,[[],[["result",4],["jsonrpcresponse",3]]]],[11,"deserialize","diem_json_rpc::views","",35,[[],[["transactionsproofsview",3],["result",4]]]],[11,"deserialize","","",41,[[],[["result",4],["stateproofview",3]]]],[11,"deserialize","diem_json_rpc::errors","",2,[[],[["result",4],["errordata",4]]]],[11,"deserialize","","",3,[[],[["result",4],["jsonrpcerror",3]]]],[11,"deserialize","diem_json_rpc::views","",5,[[],[["amountview",3],["result",4]]]],[11,"deserialize","","",44,[[],[["moveabortexplanationview",3],["result",4]]]],[11,"deserialize","","",39,[[],[["scriptview",3],["result",4]]]],[11,"deserialize","","",33,[[],[["result",4],["transactionview",3]]]],[11,"deserialize","","",43,[[],[["result",4],["accountstateproofview",3]]]],[11,"deserialize","","",6,[[],[["result",4],["accountroleview",4]]]],[11,"deserialize","","",12,[[],[["eventwithproofview",3],["result",4]]]],[11,"deserialize","","",29,[[],[["result",4],["bytesview",3]]]],[11,"deserialize","","",10,[[],[["result",4],["accountview",3]]]],[11,"deserialize","","",34,[[],[["transactionswithproofsview",3],["result",4]]]],[11,"deserialize","","",11,[[],[["result",4],["eventview",3]]]],[11,"deserialize","","",36,[[],[["transactiondataview",4],["result",4]]]],[11,"deserialize","","",30,[[],[["vmstatusview",4],["result",4]]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","diem_json_rpc::errors","",3,[[],["result",4]]],[11,"serialize","diem_json_rpc::views","",35,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",40,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","diem_json_rpc::response","",4,[[],["result",4]]],[11,"serialize","diem_json_rpc::views","",30,[[],["result",4]]],[11,"serialize","diem_json_rpc::errors","",2,[[],["result",4]]],[11,"serialize","diem_json_rpc::views","",44,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","diem_json_rpc::errors","",3,[[],["value",4]]],[11,"invalid_request","","",3,[[],["jsonrpcerror",3]]],[11,"invalid_request_with_data","","",3,[[["option",4],["errordata",4]],["jsonrpcerror",3]]],[11,"invalid_request_with_msg","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"invalid_format","","",3,[[],["jsonrpcerror",3]]],[11,"invalid_params","","",3,[[["option",4],["errordata",4]],["jsonrpcerror",3]]],[11,"invalid_params_size","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"invalid_param","","",3,[[],["jsonrpcerror",3]]],[11,"method_not_found","","",3,[[],["jsonrpcerror",3]]],[11,"internal_error","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"mempool_error","","",3,[[["mempoolstatus",3]],[["error",3],["result",4],["jsonrpcerror",3]]]],[11,"vm_status","","",3,[[["statuscode",4]],["jsonrpcerror",3]]],[11,"as_status_code","","",3,[[],[["option",4],["statuscode",4]]]],[11,"new","diem_json_rpc::response","",4,[[["chainid",3]],["jsonrpcresponse",3]]],[11,"new","diem_json_rpc::views","",10,[[["accountresource",3],["accountrole",4],["freezingbit",3],["accountaddress",3],["btreemap",3],["balanceresource",3],["identifier",3]],["accountview",3]]],[11,"into_bytes","","",29,[[],[["result",4],["error",3],["vec",3]]]]],"p":[[4,"ServerCode"],[4,"InvalidRequestCode"],[4,"ErrorData"],[3,"JsonRpcError"],[3,"JsonRpcResponse"],[3,"AmountView"],[4,"AccountRoleView"],[13,"ChildVASP"],[13,"ParentVASP"],[13,"DesignatedDealer"],[3,"AccountView"],[3,"EventView"],[3,"EventWithProofView"],[4,"EventDataView"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"ToXDXExchangeRateUpdate"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[13,"AdminTransaction"],[13,"NewEpoch"],[13,"NewBlock"],[13,"ReceivedMint"],[13,"ComplianceKeyRotation"],[13,"BaseUrlRotation"],[13,"CreateAccount"],[3,"MetadataView"],[3,"BytesView"],[4,"VMStatusView"],[13,"MoveAbort"],[13,"ExecutionFailure"],[3,"TransactionView"],[3,"TransactionsWithProofsView"],[3,"TransactionsProofsView"],[4,"TransactionDataView"],[13,"BlockMetadata"],[13,"UserTransaction"],[3,"ScriptView"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccountStateWithProofView"],[3,"AccountStateProofView"],[3,"MoveAbortExplanationView"]]},\
"diem_json_rpc_client":{"doc":"","i":[[0,"errors","diem_json_rpc_client","",null,null],[7,"INTERNAL_ERRORS","diem_json_rpc_client::errors","list of server internal errors",null,null],[5,"is_internal_error","","",null,[[]]],[4,"ServerCode","","Custom JSON RPC server error codes Ranges from -32000 to…",null,null],[13,"DefaultServerError","","",0,null],[13,"VmValidationError","","",0,null],[13,"VmVerificationError","","",0,null],[13,"VmInvariantViolationError","","",0,null],[13,"VmDeserializationError","","",0,null],[13,"VmExecutionError","","",0,null],[13,"VmUnknownError","","",0,null],[13,"MempoolInvalidSeqNumber","","",0,null],[13,"MempoolIsFull","","",0,null],[13,"MempoolTooManyTransactions","","",0,null],[13,"MempoolInvalidUpdate","","",0,null],[13,"MempoolVmError","","",0,null],[13,"MempoolUnknownError","","",0,null],[4,"InvalidRequestCode","","JSON RPC server error codes for invalid request",null,null],[13,"InvalidRequest","","",1,null],[13,"MethodNotFound","","",1,null],[13,"InvalidParams","","",1,null],[13,"InvalidFormat","","",1,null],[4,"ErrorData","","",null,null],[13,"StatusCode","","",2,null],[3,"JsonRpcError","","",null,null],[12,"code","","",3,null],[12,"message","","",3,null],[12,"data","","",3,null],[0,"views","diem_json_rpc_client","",null,null],[3,"AmountView","diem_json_rpc_client::views","",null,null],[12,"amount","","",4,null],[12,"currency","","",4,null],[4,"AccountRoleView","","",null,null],[13,"Unknown","","",5,null],[13,"ChildVASP","","",5,null],[12,"parent_vasp_address","diem_json_rpc_client::views::AccountRoleView","",6,null],[13,"ParentVASP","diem_json_rpc_client::views","",5,null],[12,"human_name","diem_json_rpc_client::views::AccountRoleView","",7,null],[12,"base_url","","",7,null],[12,"expiration_time","","",7,null],[12,"compliance_key","","",7,null],[12,"num_children","","",7,null],[12,"compliance_key_rotation_events_key","","",7,null],[12,"base_url_rotation_events_key","","",7,null],[13,"DesignatedDealer","diem_json_rpc_client::views","",5,null],[12,"human_name","diem_json_rpc_client::views::AccountRoleView","",8,null],[12,"base_url","","",8,null],[12,"expiration_time","","",8,null],[12,"compliance_key","","",8,null],[12,"preburn_balances","","",8,null],[12,"received_mint_events_key","","",8,null],[12,"compliance_key_rotation_events_key","","",8,null],[12,"base_url_rotation_events_key","","",8,null],[3,"AccountView","diem_json_rpc_client::views","",null,null],[12,"address","","",9,null],[12,"balances","","",9,null],[12,"sequence_number","","",9,null],[12,"authentication_key","","",9,null],[12,"sent_events_key","","",9,null],[12,"received_events_key","","",9,null],[12,"delegated_key_rotation_capability","","",9,null],[12,"delegated_withdrawal_capability","","",9,null],[12,"is_frozen","","",9,null],[12,"role","","",9,null],[3,"EventView","","",null,null],[12,"key","","",10,null],[12,"sequence_number","","",10,null],[12,"transaction_version","","",10,null],[12,"data","","",10,null],[3,"EventWithProofView","","",null,null],[12,"event_with_proof","","",11,null],[4,"EventDataView","","",null,null],[13,"Burn","","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",13,null],[12,"preburn_address","","",13,null],[13,"CancelBurn","diem_json_rpc_client::views","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",14,null],[12,"preburn_address","","",14,null],[13,"Mint","diem_json_rpc_client::views","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",15,null],[13,"ToXDXExchangeRateUpdate","diem_json_rpc_client::views","",12,null],[12,"currency_code","diem_json_rpc_client::views::EventDataView","",16,null],[12,"new_to_xdx_exchange_rate","","",16,null],[13,"Preburn","diem_json_rpc_client::views","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",17,null],[12,"preburn_address","","",17,null],[13,"ReceivedPayment","diem_json_rpc_client::views","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",18,null],[12,"sender","","",18,null],[12,"receiver","","",18,null],[12,"metadata","","",18,null],[13,"SentPayment","diem_json_rpc_client::views","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",19,null],[12,"receiver","","",19,null],[12,"sender","","",19,null],[12,"metadata","","",19,null],[13,"AdminTransaction","diem_json_rpc_client::views","",12,null],[12,"committed_timestamp_secs","diem_json_rpc_client::views::EventDataView","",20,null],[13,"NewEpoch","diem_json_rpc_client::views","",12,null],[12,"epoch","diem_json_rpc_client::views::EventDataView","",21,null],[13,"NewBlock","diem_json_rpc_client::views","",12,null],[12,"round","diem_json_rpc_client::views::EventDataView","",22,null],[12,"proposer","","",22,null],[12,"proposed_time","","",22,null],[13,"ReceivedMint","diem_json_rpc_client::views","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",23,null],[12,"destination_address","","",23,null],[13,"ComplianceKeyRotation","diem_json_rpc_client::views","",12,null],[12,"new_compliance_public_key","diem_json_rpc_client::views::EventDataView","",24,null],[12,"time_rotated_seconds","","",24,null],[13,"BaseUrlRotation","diem_json_rpc_client::views","",12,null],[12,"new_base_url","diem_json_rpc_client::views::EventDataView","",25,null],[12,"time_rotated_seconds","","",25,null],[13,"CreateAccount","diem_json_rpc_client::views","",12,null],[12,"created_address","diem_json_rpc_client::views::EventDataView","",26,null],[12,"role_id","","",26,null],[13,"Unknown","diem_json_rpc_client::views","",12,null],[3,"MetadataView","","",null,null],[12,"version","","",27,null],[12,"accumulator_root_hash","","",27,null],[12,"timestamp","","",27,null],[12,"chain_id","","",27,null],[12,"script_hash_allow_list","","",27,null],[12,"module_publishing_allowed","","",27,null],[12,"diem_version","","",27,null],[12,"dual_attestation_limit","","",27,null],[3,"BytesView","","",null,null],[12,"0","","",28,null],[3,"MoveAbortExplanationView","","",null,null],[4,"VMStatusView","","",null,null],[13,"Executed","","",29,null],[13,"OutOfGas","","",29,null],[13,"MoveAbort","","",29,null],[12,"location","diem_json_rpc_client::views::VMStatusView","",30,null],[12,"abort_code","","",30,null],[12,"explanation","","",30,null],[13,"ExecutionFailure","diem_json_rpc_client::views","",29,null],[12,"location","diem_json_rpc_client::views::VMStatusView","",31,null],[12,"function_index","","",31,null],[12,"code_offset","","",31,null],[13,"MiscellaneousError","diem_json_rpc_client::views","",29,null],[3,"TransactionView","","",null,null],[12,"version","","",32,null],[12,"transaction","","",32,null],[12,"hash","","",32,null],[12,"bytes","","",32,null],[12,"events","","",32,null],[12,"vm_status","","",32,null],[12,"gas_used","","",32,null],[3,"TransactionsWithProofsView","","",null,null],[12,"serialized_transactions","","",33,null],[12,"proofs","","",33,null],[3,"TransactionsProofsView","","",null,null],[12,"ledger_info_to_transaction_infos_proof","","",34,null],[12,"transaction_infos","","",34,null],[4,"TransactionDataView","","",null,null],[13,"BlockMetadata","","",35,null],[12,"timestamp_usecs","diem_json_rpc_client::views::TransactionDataView","",36,null],[13,"WriteSet","diem_json_rpc_client::views","",35,null],[13,"UserTransaction","","",35,null],[12,"sender","diem_json_rpc_client::views::TransactionDataView","",37,null],[12,"signature_scheme","","",37,null],[12,"signature","","",37,null],[12,"public_key","","",37,null],[12,"sequence_number","","",37,null],[12,"chain_id","","",37,null],[12,"max_gas_amount","","",37,null],[12,"gas_unit_price","","",37,null],[12,"gas_currency","","",37,null],[12,"expiration_timestamp_secs","","",37,null],[12,"script_hash","","",37,null],[12,"script_bytes","","",37,null],[12,"script","","",37,null],[13,"UnknownTransaction","diem_json_rpc_client::views","",35,null],[3,"ScriptView","","",null,null],[12,"type","","",38,null],[12,"code","","",38,null],[12,"arguments","","",38,null],[12,"type_arguments","","",38,null],[12,"receiver","","",38,null],[12,"amount","","",38,null],[12,"currency","","",38,null],[12,"metadata","","",38,null],[12,"metadata_signature","","",38,null],[3,"CurrencyInfoView","","",null,null],[12,"code","","",39,null],[12,"scaling_factor","","",39,null],[12,"fractional_part","","",39,null],[12,"to_xdx_exchange_rate","","",39,null],[12,"mint_events_key","","",39,null],[12,"burn_events_key","","",39,null],[12,"preburn_events_key","","",39,null],[12,"cancel_burn_events_key","","",39,null],[12,"exchange_rate_update_events_key","","",39,null],[3,"StateProofView","","",null,null],[12,"ledger_info_with_signatures","","",40,null],[12,"epoch_change_proof","","",40,null],[12,"ledger_consistency_proof","","",40,null],[3,"AccountStateWithProofView","","",null,null],[12,"version","","",41,null],[12,"blob","","",41,null],[12,"proof","","",41,null],[3,"AccountStateProofView","","",null,null],[12,"ledger_info_to_transaction_info_proof","","",42,null],[12,"transaction_info","","",42,null],[12,"transaction_info_to_account_proof","","",42,null],[3,"AccountAddress","diem_json_rpc_client","A struct that represents an account address.",null,null],[3,"SignedTransaction","","A transaction that has been signed.",null,null],[3,"JsonRpcClient","","",null,null],[3,"JsonRpcAsyncClient","","",null,null],[3,"JsonRpcBatch","","",null,null],[12,"requests","","",43,null],[4,"JsonRpcAsyncClientError","","",null,null],[13,"ClientError","","",44,null],[13,"InvalidArgument","","",44,null],[13,"InvalidServerResponse","","",44,null],[13,"HTTPError","","",44,null],[13,"JsonRpcError","","",44,null],[4,"JsonRpcResponse","","",null,null],[13,"SubmissionResponse","","",45,null],[13,"AccountResponse","","",45,null],[13,"StateProofResponse","","",45,null],[13,"AccountTransactionResponse","","",45,null],[13,"TransactionsResponse","","",45,null],[13,"EventsResponse","","",45,null],[13,"MetadataViewResponse","","",45,null],[13,"CurrenciesResponse","","",45,null],[13,"AccountStateWithProofResponse","","",45,null],[13,"NetworkStatusResponse","","",45,null],[13,"UnknownResponse","","",45,null],[5,"get_response_from_batch","","",null,[[],[["result",6],["result",6]]]],[5,"process_batch_response","","Helper methods for basic payload processing ///",null,[[["value",4],["vec",3],["jsonrpcbatch",3]],[["result",6],["vec",3]]]],[11,"new","","",46,[[["url",3]],["result",6]]],[11,"execute","","Sends a JSON RPC batched request. Returns a vector of…",46,[[["jsonrpcbatch",3]],[["result",6],["vec",3]]]],[11,"send_with_retry","","",46,[[["value",4]],[["result",6],["response",3]]]],[11,"new","","",43,[[]]],[11,"json_request","","",43,[[],["value",4]]],[11,"add_request","","",43,[[["value",4],["vec",3],["string",3]]]],[11,"add_submit_request","","",43,[[["signedtransaction",3]],["result",6]]],[11,"add_get_account_request","","",43,[[["accountaddress",3]]]],[11,"add_get_metadata_request","","",43,[[["option",4]]]],[11,"add_get_currencies_info","","",43,[[]]],[11,"add_get_transactions_request","","",43,[[]]],[11,"add_get_account_transaction_request","","",43,[[["accountaddress",3]]]],[11,"add_get_account_transactions_request","","",43,[[["accountaddress",3]]]],[11,"add_get_events_request","","",43,[[["string",3]]]],[11,"add_get_state_proof_request","","",43,[[]]],[11,"add_get_account_state_with_proof_request","","",43,[[["option",4],["accountaddress",3]]]],[11,"add_get_network_status_request","","",43,[[]]],[11,"is_retriable","","",44,[[]]],[11,"new","","Pass in full url for endpoint, supports HTTPS",47,[[["url",3]]]],[11,"new_with_client","","",47,[[["url",3],["client",3]]]],[11,"get_accounts","","",47,[[]]],[11,"submit_transaction","","",47,[[["signedtransaction",3]]]],[11,"execute","","",47,[[["jsonrpcbatch",3]]]],[0,"async_client","","",null,null],[3,"JsonRpcError","diem_json_rpc_client::async_client","",null,null],[12,"code","","",3,null],[12,"message","","",3,null],[12,"data","","",3,null],[0,"types","","",null,null],[3,"Amount","diem_json_rpc_client::async_client::types","",null,null],[12,"amount","","",48,null],[12,"currency","","",48,null],[3,"Account","","",null,null],[12,"address","","hex-encoded bytes",49,null],[12,"balances","","",49,null],[12,"sequence_number","","",49,null],[12,"authentication_key","","hex-encoded bytes",49,null],[12,"sent_events_key","","hex-encoded bytes",49,null],[12,"received_events_key","","hex-encoded bytes",49,null],[12,"delegated_key_rotation_capability","","",49,null],[12,"delegated_withdrawal_capability","","",49,null],[12,"is_frozen","","",49,null],[12,"role","","",49,null],[3,"AccountRole","","",null,null],[12,"type","","",50,null],[12,"parent_vasp_address","","",50,null],[12,"human_name","","",50,null],[12,"base_url","","",50,null],[12,"expiration_time","","",50,null],[12,"compliance_key","","hex-encoded bytes",50,null],[12,"compliance_key_rotation_events_key","","hex-encoded bytes",50,null],[12,"base_url_rotation_events_key","","hex-encoded bytes",50,null],[12,"num_children","","",50,null],[12,"received_mint_events_key","","hex-encoded bytes",50,null],[12,"preburn_balances","","",50,null],[3,"Event","","",null,null],[12,"key","","",51,null],[12,"sequence_number","","",51,null],[12,"transaction_version","","",51,null],[12,"data","","",51,null],[3,"EventData","","",null,null],[12,"type","","",52,null],[12,"amount","","burn, cancelburn, mint, preburn, receivedpayment,…",52,null],[12,"preburn_address","","burn, cancelburn, preburn events hex-encoded bytes",52,null],[12,"currency_code","","to_xdx_exchange_rate_update event only",52,null],[12,"new_to_xdx_exchange_rate","","",52,null],[12,"sender","","receivedpayment and sentpayment events hex-encoded bytes",52,null],[12,"receiver","","hex-encoded bytes",52,null],[12,"metadata","","hex-encoded bytes",52,null],[12,"epoch","","newepoch event only",52,null],[12,"round","","newblock event only",52,null],[12,"proposer","","hex-encoded bytes",52,null],[12,"proposed_time","","",52,null],[12,"destination_address","","receivedmint event only hex-encoded bytes",52,null],[12,"new_compliance_public_key","","compliancekeyrotation event only hex-encoded bytes",52,null],[12,"new_base_url","","baseurlrotation event only",52,null],[12,"time_rotated_seconds","","compliancekeyrotation and baseurlrotation events",52,null],[12,"created_address","","createaccount event field. Hex-encoded account address…",52,null],[12,"role_id","","createaccount event field. Role id of the created account,…",52,null],[12,"committed_timestamp_secs","","admintransaction event field. The block time when this…",52,null],[3,"Metadata","","",null,null],[12,"version","","The block (ledger) version",53,null],[12,"timestamp","","The block (ledger) timestamp, unit is microsecond",53,null],[12,"chain_id","","Chain ID of the Diem network",53,null],[12,"script_hash_allow_list","","List of allowed scripts hex-encoded hash bytes, server may…",53,null],[12,"module_publishing_allowed","","True for allowing publishing customized script, server may…",53,null],[12,"diem_version","","Diem chain major version number.",53,null],[12,"accumulator_root_hash","","accumulator root hash of the ledger version requested",53,null],[12,"dual_attestation_limit","","The dual attestation limit on-chain. Defined in terms of…",53,null],[3,"Transaction","","",null,null],[12,"version","","",54,null],[12,"transaction","","",54,null],[12,"hash","","",54,null],[12,"bytes","","hex-encoded bcs bytes",54,null],[12,"events","","",54,null],[12,"vm_status","","",54,null],[12,"gas_used","","",54,null],[3,"MoveAbortExplaination","","",null,null],[12,"category","","",55,null],[12,"category_description","","",55,null],[12,"reason","","",55,null],[12,"reason_description","","",55,null],[3,"VmStatus","","",null,null],[12,"type","","",56,null],[12,"location","","move_abort, execution_failure",56,null],[12,"abort_code","","move_abort only",56,null],[12,"function_index","","execution_failure only",56,null],[12,"code_offset","","",56,null],[12,"explanation","","move_abort only",56,null],[3,"TransactionData","","",null,null],[12,"type","","",57,null],[12,"timestamp_usecs","","blockmetadata",57,null],[12,"sender","","user",57,null],[12,"signature_scheme","","",57,null],[12,"signature","","",57,null],[12,"public_key","","hex-encoded bytes",57,null],[12,"sequence_number","","",57,null],[12,"chain_id","","",57,null],[12,"max_gas_amount","","",57,null],[12,"gas_unit_price","","",57,null],[12,"gas_currency","","",57,null],[12,"expiration_timestamp_secs","","",57,null],[12,"script_hash","","",57,null],[12,"script_bytes","","hex-encoded bytes",57,null],[12,"script","","",57,null],[3,"Script","","",null,null],[12,"type","","Name of the script code, see…",58,null],[12,"code","","Hex-encoded compiled move script bytes.",58,null],[12,"arguments","","List of string value of the script arguments. Contains…",58,null],[12,"type_arguments","","List of type arguments, converted into string.",58,null],[12,"receiver","","hex-encoded receiver account address bytes",58,null],[12,"amount","","peer to peer transfer amount.",58,null],[12,"currency","","peer to peer transfer currency code.",58,null],[12,"metadata","","Metadata of the transaction, LCS serialized hex-encoded…",58,null],[12,"metadata_signature","","Hex-encoded metadata signature, use this to validate…",58,null],[3,"CurrencyInfo","","",null,null],[12,"code","","",59,null],[12,"scaling_factor","","",59,null],[12,"fractional_part","","",59,null],[12,"to_xdx_exchange_rate","","",59,null],[12,"mint_events_key","","hex-encoded bytes",59,null],[12,"burn_events_key","","hex-encoded bytes",59,null],[12,"preburn_events_key","","HEX-encoded bytes",59,null],[12,"cancel_burn_events_key","","hex-encoded bytes",59,null],[12,"exchange_rate_update_events_key","","hex-encoded bytes",59,null],[3,"StateProof","","This is for experimental API get_state_proof response. It…",null,null],[12,"ledger_info_with_signatures","","hex-encoded bcs bytes",60,null],[12,"epoch_change_proof","","hex-encoded bcs bytes",60,null],[12,"ledger_consistency_proof","","hex-encoded bcs bytes",60,null],[3,"AccountStateWithProof","","This is for experimental API get_account_state_with_proof…",null,null],[12,"version","","",61,null],[12,"blob","","hex-encoded bcs bytes",61,null],[12,"proof","","hex-encoded bcs bytes",61,null],[3,"AccountStateProof","","This is for experimental API get_account_state_with_proof…",null,null],[12,"ledger_info_to_transaction_info_proof","","hex-encoded bcs bytes",62,null],[12,"transaction_info","","hex-encoded bcs bytes",62,null],[12,"transaction_info_to_account_proof","","hex-encoded bcs bytes",62,null],[17,"ACCOUNT_ROLE_UNKNOWN","","",null,null],[17,"ACCOUNT_ROLE_CHILD_VASP","","",null,null],[17,"ACCOUNT_ROLE_PARENT_VASP","","",null,null],[17,"ACCOUNT_ROLE_DESIGNATED_DEALER","","",null,null],[17,"EVENT_DATA_UNKNOWN","","",null,null],[17,"EVENT_DATA_BURN","","",null,null],[17,"EVENT_DATA_CANCEL_BURN","","",null,null],[17,"EVENT_DATA_MINT","","",null,null],[17,"EVENT_DATA_TO_XDX_EXCHANGE_RATE_UPDATE","","",null,null],[17,"EVENT_DATA_PREBURN","","",null,null],[17,"EVENT_DATA_RECEIVED_PAYMENT","","",null,null],[17,"EVENT_DATA_SENT_PAYMENT","","",null,null],[17,"EVENT_DATA_NEW_EPOCH","","",null,null],[17,"EVENT_DATA_NEW_BLOCK","","",null,null],[17,"EVENT_DATA_RECEIVED_MINT","","",null,null],[17,"EVENT_DATA_COMPLIANCE_KEY_ROTATION","","",null,null],[17,"EVENT_DATA_BASE_URL_ROTATION","","",null,null],[17,"EVENT_DATA_CREATE_ACCOUNT","","",null,null],[17,"EVENT_DATA_ADMIN_TRANSACTION","","",null,null],[17,"VM_STATUS_EXECUTED","","",null,null],[17,"VM_STATUS_OUT_OF_GAS","","",null,null],[17,"VM_STATUS_MOVE_ABORT","","",null,null],[17,"VM_STATUS_EXECUTION_FAILURE","","",null,null],[17,"VM_STATUS_MISC_ERROR","","",null,null],[17,"TRANSACTION_DATA_BLOCK_METADATA","","",null,null],[17,"TRANSACTION_DATA_WRITE_SET","","",null,null],[17,"TRANSACTION_DATA_USER","","",null,null],[17,"TRANSACTION_DATA_UNKNOWN","","",null,null],[17,"SCRIPT_UNKNOWN","","",null,null],[3,"JsonRpcResponse","diem_json_rpc_client::async_client","",null,null],[12,"diem_chain_id","","",63,null],[12,"diem_ledger_version","","",63,null],[12,"diem_ledger_timestampusec","","",63,null],[12,"jsonrpc","","",63,null],[12,"id","","",63,null],[12,"result","","",63,null],[12,"error","","",63,null],[3,"Client","","",null,null],[12,"http_client","","",64,null],[12,"retry","","",64,null],[3,"BroadcastHttpClient","","",null,null],[12,"http_client","","",65,null],[12,"urls","","",65,null],[12,"num_parallel_requests","","",65,null],[12,"state_manager","","",65,null],[3,"Request","","",null,null],[12,"method","","",66,null],[12,"params","","",66,null],[3,"Response","","",null,null],[12,"result","","",67,null],[12,"state","","",67,null],[3,"SimpleHttpClient","","",null,null],[12,"http_client","","",68,null],[12,"url","","",68,null],[12,"state_manager","","",68,null],[3,"Retry","","",null,null],[12,"max_retries","","",69,null],[12,"delay","","",69,null],[3,"State","","",null,null],[12,"chain_id","","",70,null],[12,"version","","",70,null],[12,"timestamp_usecs","","",70,null],[3,"StateManager","","",null,null],[4,"Error","","",null,null],[13,"NetworkError","","",71,null],[13,"InvalidHTTPStatus","","",71,null],[13,"InvalidHTTPResponse","","",71,null],[13,"InvalidRpcResponse","","",71,null],[13,"DeserializeResponseJsonError","","",71,null],[13,"JsonRpcError","","",71,null],[13,"ResultNotFound","","",71,null],[13,"StaleResponseError","","",71,null],[13,"ChainIdMismatch","","",71,null],[13,"ResponseTimeout","","",71,null],[13,"UnexpectedError","","",71,null],[4,"UnexpectedError","","",null,null],[13,"BCSError","","",72,null],[13,"InvalidResponseId","","",72,null],[13,"InvalidResponseIdType","","",72,null],[13,"ResponseIdNotFound","","",72,null],[13,"InvalidBatchResponse","","",72,null],[13,"DuplicatedResponseId","","",72,null],[13,"NoResponse","","",72,null],[13,"Uncategorized","","",72,null],[4,"WaitForTransactionError","","",null,null],[13,"GetTransactionError","","",73,null],[13,"TransactionHashMismatchError","","",73,null],[13,"TransactionExecutionFailed","","",73,null],[13,"Timeout","","",73,null],[13,"TransactionExpired","","",73,null],[11,"from_url","","",64,[[["intourl",8]],[["error",3],["result",4]]]],[11,"from_url_list","","",64,[[["vec",3],["intourl",8]],[["string",3],["result",4]]]],[11,"wait_for_signed_transaction","","",64,[[["signedtransaction",3],["duration",3],["option",4]]]],[11,"wait_for_transaction","","",64,[[["accountaddress",3],["duration",3],["option",4]]]],[11,"last_known_state","","",64,[[],[["option",4],["state",3]]]],[11,"get_metadata","","",64,[[]]],[11,"get_metadata_by_version","","",64,[[]]],[11,"get_account","","",64,[[["accountaddress",3]]]],[11,"get_account_transaction","","",64,[[["accountaddress",3]]]],[11,"get_account_transactions","","",64,[[["accountaddress",3]]]],[11,"get_transactions","","",64,[[]]],[11,"get_events","","",64,[[]]],[11,"get_events_with_proofs","","",64,[[]]],[11,"get_currencies","","",64,[[]]],[11,"get_state_proof","","",64,[[]]],[11,"get_account_state_with_proof","","",64,[[["option",4],["accountaddress",3]]]],[11,"submit","","",64,[[["signedtransaction",3]]]],[11,"send","","",64,[[["request",3]]]],[11,"send_opt","","",64,[[["request",3]]]],[11,"send_with_retry","","",64,[[["request",3]]]],[11,"batch_send","","Batch requests into one JSON-RPC batch request. To keep…",64,[[["vec",3],["request",3]]]],[11,"batch_send_with_retry","","",64,[[]]],[11,"unexpected_bcs_error","","",71,[[["error",4]]]],[11,"unexpected_invalid_response_id","","",71,[[["jsonrpcresponse",3]]]],[11,"unexpected_invalid_response_id_type","","",71,[[["jsonrpcresponse",3]]]],[11,"unexpected_response_id_not_found","","",71,[[["jsonrpcresponse",3]]]],[11,"unexpected_invalid_batch_response","","",71,[[["vec",3],["jsonrpcresponse",3]]]],[11,"unexpected_duplicated_response_id","","",71,[[["jsonrpcresponse",3]]]],[11,"unexpected_no_response","","",71,[[["value",4]]]],[11,"unexpected_uncategorized","","",71,[[["string",3]]]],[11,"new","","",66,[[["value",4]]]],[11,"submit","","",66,[[["signedtransaction",3]],[["error",4],["result",4]]]],[11,"get_account_state_with_proof","","",66,[[["option",4],["accountaddress",3]]]],[11,"get_state_proof","","",66,[[]]],[11,"get_currencies","","",66,[[]]],[11,"get_events","","",66,[[]]],[11,"get_events_with_proofs","","",66,[[]]],[11,"get_transactions","","",66,[[]]],[11,"get_account_transactions","","",66,[[["accountaddress",3]]]],[11,"get_account_transaction","","",66,[[["accountaddress",3]]]],[11,"get_account","","",66,[[["accountaddress",3]]]],[11,"get_metadata_by_version","","",66,[[]]],[11,"get_metadata","","",66,[[]]],[11,"to_json","","",66,[[],["value",4]]],[11,"new","","",68,[[["intourl",8]],[["error",3],["result",4]]]],[11,"new","","",65,[[["vec",3],["intourl",8]],[["string",3],["result",4]]]],[11,"select_highest_ledger_version_response","","Select the JsonRpcResponse which has the the highest diem…",65,[[["vec",3],["jsonrpcresponse",3]],[["jsonrpcresponse",3],["error",4],["result",4]]]],[11,"select_highest_ledger_version_response_batch","","Select the Vec which has the the highest diem ledger version",65,[[["vec",3],["vec",3],["value",4],["vec",3]],[["result",4],["error",4],["vec",3]]]],[11,"default","","",69,[[]]],[11,"from_response","","",70,[[["jsonrpcresponse",3]]]],[11,"new","","",74,[[]]],[11,"last_known_state","","",74,[[],[["option",4],["state",3]]]],[11,"update_state","","",74,[[["state",3]]]],[0,"defaults","","",null,null],[17,"MAX_RETRIES","diem_json_rpc_client::async_client::defaults","",null,null],[17,"WAIT_DELAY","","",null,null],[17,"TIMEOUT","","",null,null],[17,"HTTP_REQUEST_TIMEOUT","","",null,null],[8,"HttpClient","diem_json_rpc_client::async_client","",null,null],[10,"single_request","","",75,[[["request",3]],[["pin",3],["box",3]]]],[10,"batch_request","","",75,[[],[["box",3],["pin",3]]]],[10,"update_state","","",75,[[["state",3]]]],[10,"last_known_state","","",75,[[],[["option",4],["state",3]]]],[11,"validate","","",75,[[["jsonrpcresponse",3]],[["error",4],["result",4]]]],[8,"RetryStrategy","","",null,null],[10,"max_retries","","",76,[[["error",4]]]],[10,"delay","","",76,[[["error",4]],["duration",3]]],[10,"is_retriable","","",76,[[["error",4]]]],[8,"ResponseAsView","diem_json_rpc_client","For JSON RPC views that are returned as part of a…",null,null],[11,"unexpected_response_error","","",77,[[["jsonrpcresponse",4]],["result",6]]],[11,"from_response","","",77,[[["jsonrpcresponse",4]],["result",6]]],[11,"optional_from_response","","",77,[[["jsonrpcresponse",4]],[["option",4],["result",6]]]],[11,"vec_from_response","","",77,[[["jsonrpcresponse",4]],[["result",6],["vec",3]]]],[11,"from","diem_json_rpc_client::errors","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","diem_json_rpc_client::async_client","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diem_json_rpc_client::views","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"test_only_hash","","",27,[[],["hashvalue",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"test_only_hash","","",28,[[],["hashvalue",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"test_only_hash","","",78,[[],["hashvalue",3]]],[11,"vzip","","",78,[[]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"test_only_hash","","",32,[[],["hashvalue",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"test_only_hash","","",33,[[],["hashvalue",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"test_only_hash","","",34,[[],["hashvalue",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"test_only_hash","","",35,[[],["hashvalue",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"test_only_hash","","",38,[[],["hashvalue",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"test_only_hash","","",39,[[],["hashvalue",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"test_only_hash","","",40,[[],["hashvalue",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"test_only_hash","","",41,[[],["hashvalue",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"test_only_hash","","",42,[[],["hashvalue",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","diem_json_rpc_client","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"equivalent","","",79,[[]]],[11,"test_only_hash","","",79,[[],["hashvalue",3]]],[11,"vzip","","",79,[[]]],[11,"encode_hex","","",79,[[]]],[11,"encode_hex_upper","","",79,[[]]],[11,"init","","",79,[[]]],[11,"deref","","",79,[[]]],[11,"deref_mut","","",79,[[]]],[11,"drop","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"equivalent","","",80,[[]]],[11,"test_only_hash","","",80,[[],["hashvalue",3]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[]]],[11,"deref","","",80,[[]]],[11,"deref_mut","","",80,[[]]],[11,"drop","","",80,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","diem_json_rpc_client::async_client::types","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"test_only_hash","","",48,[[],["hashvalue",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"test_only_hash","","",49,[[],["hashvalue",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"test_only_hash","","",50,[[],["hashvalue",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"test_only_hash","","",51,[[],["hashvalue",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"test_only_hash","","",52,[[],["hashvalue",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"test_only_hash","","",53,[[],["hashvalue",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"test_only_hash","","",54,[[],["hashvalue",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"test_only_hash","","",55,[[],["hashvalue",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"test_only_hash","","",56,[[],["hashvalue",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"test_only_hash","","",57,[[],["hashvalue",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"test_only_hash","","",58,[[],["hashvalue",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"test_only_hash","","",59,[[],["hashvalue",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"test_only_hash","","",60,[[],["hashvalue",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"test_only_hash","","",61,[[],["hashvalue",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"test_only_hash","","",62,[[],["hashvalue",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"from","diem_json_rpc_client::async_client","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"test_only_hash","","",63,[[],["hashvalue",3]]],[11,"vzip","","",63,[[]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"init","","",74,[[]]],[11,"deref","","",74,[[]]],[11,"deref_mut","","",74,[[]]],[11,"drop","","",74,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_string","","",71,[[],["string",3]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_string","","",72,[[],["string",3]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_string","","",73,[[],["string",3]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"fmt","diem_json_rpc_client","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",80,[[],[["result",4],["signedtransaction",3]]]],[11,"eq","","",80,[[["signedtransaction",3]]]],[11,"ne","","",80,[[["signedtransaction",3]]]],[11,"try_from","","",80,[[["transaction",4]],[["error",3],["result",4],["signedtransaction",3]]]],[11,"clone","","",80,[[],["signedtransaction",3]]],[11,"hash","","",80,[[]]],[11,"serialize","","",80,[[],["result",4]]],[11,"arbitrary_with","","",80,[[]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"cmp","","",79,[[["accountaddress",3]],["ordering",4]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",79,[[],[["result",4],["accountaddress",3]]]],[11,"eq","","",79,[[["accountaddress",3]]]],[11,"ne","","",79,[[["accountaddress",3]]]],[11,"hash","","",79,[[],["hashvalue",3]]],[11,"from_str","","",79,[[],[["error",3],["result",4],["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",79,[[],[["error",3],["result",4],["accountaddress",3]]]],[11,"try_from","","",79,[[["string",3]],[["error",3],["result",4],["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",79,[[],[["error",3],["result",4],["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte buffer into Address.",79,[[["vec",3]],[["error",3],["result",4],["accountaddress",3]]]],[11,"clone","","",79,[[],["accountaddress",3]]],[11,"hash","","",79,[[]]],[11,"serialize","","",79,[[],["result",4]]],[11,"arbitrary_with","","",79,[[]]],[11,"as_ref","","",79,[[]]],[11,"partial_cmp","","",79,[[["accountaddress",3]],[["ordering",4],["option",4]]]],[11,"lt","","",79,[[["accountaddress",3]]]],[11,"le","","",79,[[["accountaddress",3]]]],[11,"gt","","",79,[[["accountaddress",3]]]],[11,"ge","","",79,[[["accountaddress",3]]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","diem_json_rpc_client::views","",12,[[["contractevent",4]],[["error",3],["eventdataview",4],["result",4]]]],[11,"try_from","","",41,[[["accountstatewithproof",3]],[["result",4],["error",3],["accountstatewithproofview",3]]]],[11,"try_from","","",40,[[],[["result",4],["stateproofview",3]]]],[11,"try_from","","",78,[[["keptvmstatus",4]],[["result",4],["moveabortexplanationview",3]]]],[11,"try_from","","",10,[[],[["error",3],["eventview",3],["result",4]]]],[11,"try_from","","",42,[[["accountstateproof",3]],[["result",4],["accountstateproofview",3],["error",3]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::errors","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::views","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::views","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::async_client","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::views","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::views","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::views","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::views","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::views","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::views","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::async_client","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","diem_json_rpc_client::views","",41,[[],["accountstatewithproofview",3]]],[11,"clone","","",42,[[],["accountstateproofview",3]]],[11,"clone","diem_json_rpc_client::async_client","",63,[[],["jsonrpcresponse",3]]],[11,"clone","diem_json_rpc_client::views","",9,[[],["accountview",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",61,[[],["accountstatewithproof",3]]],[11,"clone","diem_json_rpc_client::views","",39,[[],["currencyinfoview",3]]],[11,"clone","","",10,[[],["eventview",3]]],[11,"clone","","",33,[[],["transactionswithproofsview",3]]],[11,"clone","","",11,[[],["eventwithproofview",3]]],[11,"clone","diem_json_rpc_client::async_client","",3,[[],["jsonrpcerror",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",54,[[],["transaction",3]]],[11,"clone","","",50,[[],["accountrole",3]]],[11,"clone","","",52,[[],["eventdata",3]]],[11,"clone","","",60,[[],["stateproof",3]]],[11,"clone","","",58,[[],["script",3]]],[11,"clone","diem_json_rpc_client::views","",78,[[],["moveabortexplanationview",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",57,[[],["transactiondata",3]]],[11,"clone","","",53,[[],["metadata",3]]],[11,"clone","diem_json_rpc_client::views","",34,[[],["transactionsproofsview",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",62,[[],["accountstateproof",3]]],[11,"clone","","",56,[[],["vmstatus",3]]],[11,"clone","diem_json_rpc_client::views","",38,[[],["scriptview",3]]],[11,"clone","diem_json_rpc_client::errors","",2,[[],["errordata",4]]],[11,"clone","diem_json_rpc_client::views","",4,[[],["amountview",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",49,[[],["account",3]]],[11,"clone","diem_json_rpc_client::views","",40,[[],["stateproofview",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",59,[[],["currencyinfo",3]]],[11,"clone","","",48,[[],["amount",3]]],[11,"clone","diem_json_rpc_client::views","",27,[[],["metadataview",3]]],[11,"clone","","",12,[[],["eventdataview",4]]],[11,"clone","","",28,[[],["bytesview",3]]],[11,"clone","","",32,[[],["transactionview",3]]],[11,"clone","","",29,[[],["vmstatusview",4]]],[11,"clone","diem_json_rpc_client::async_client::types","",51,[[],["event",3]]],[11,"clone","diem_json_rpc_client::views","",5,[[],["accountroleview",4]]],[11,"clone","","",35,[[],["transactiondataview",4]]],[11,"clone","diem_json_rpc_client::async_client::types","",55,[[],["moveabortexplaination",3]]],[11,"eq","","",52,[[["eventdata",3]]]],[11,"ne","","",52,[[["eventdata",3]]]],[11,"eq","","",58,[[["script",3]]]],[11,"ne","","",58,[[["script",3]]]],[11,"eq","diem_json_rpc_client::views","",5,[[["accountroleview",4]]]],[11,"ne","","",5,[[["accountroleview",4]]]],[11,"eq","diem_json_rpc_client::async_client::types","",59,[[["currencyinfo",3]]]],[11,"ne","","",59,[[["currencyinfo",3]]]],[11,"eq","","",53,[[["metadata",3]]]],[11,"ne","","",53,[[["metadata",3]]]],[11,"eq","","",60,[[["stateproof",3]]]],[11,"ne","","",60,[[["stateproof",3]]]],[11,"eq","diem_json_rpc_client::views","",33,[[["transactionswithproofsview",3]]]],[11,"ne","","",33,[[["transactionswithproofsview",3]]]],[11,"eq","","",12,[[["eventdataview",4]]]],[11,"ne","","",12,[[["eventdataview",4]]]],[11,"eq","","",34,[[["transactionsproofsview",3]]]],[11,"ne","","",34,[[["transactionsproofsview",3]]]],[11,"eq","","",40,[[["stateproofview",3]]]],[11,"ne","","",40,[[["stateproofview",3]]]],[11,"eq","","",4,[[["amountview",3]]]],[11,"ne","","",4,[[["amountview",3]]]],[11,"eq","diem_json_rpc_client::async_client::types","",54,[[["transaction",3]]]],[11,"ne","","",54,[[["transaction",3]]]],[11,"eq","diem_json_rpc_client::views","",9,[[["accountview",3]]]],[11,"ne","","",9,[[["accountview",3]]]],[11,"eq","diem_json_rpc_client::async_client::types","",55,[[["moveabortexplaination",3]]]],[11,"ne","","",55,[[["moveabortexplaination",3]]]],[11,"eq","","",61,[[["accountstatewithproof",3]]]],[11,"ne","","",61,[[["accountstatewithproof",3]]]],[11,"eq","diem_json_rpc_client::views","",78,[[["moveabortexplanationview",3]]]],[11,"ne","","",78,[[["moveabortexplanationview",3]]]],[11,"eq","","",27,[[["metadataview",3]]]],[11,"ne","","",27,[[["metadataview",3]]]],[11,"eq","diem_json_rpc_client::async_client::types","",48,[[["amount",3]]]],[11,"ne","","",48,[[["amount",3]]]],[11,"eq","","",56,[[["vmstatus",3]]]],[11,"ne","","",56,[[["vmstatus",3]]]],[11,"eq","","",50,[[["accountrole",3]]]],[11,"ne","","",50,[[["accountrole",3]]]],[11,"eq","","",51,[[["event",3]]]],[11,"ne","","",51,[[["event",3]]]],[11,"eq","","",49,[[["account",3]]]],[11,"ne","","",49,[[["account",3]]]],[11,"eq","diem_json_rpc_client::views","",38,[[["scriptview",3]]]],[11,"ne","","",38,[[["scriptview",3]]]],[11,"eq","","",29,[[["vmstatusview",4]]]],[11,"ne","","",29,[[["vmstatusview",4]]]],[11,"eq","","",42,[[["accountstateproofview",3]]]],[11,"ne","","",42,[[["accountstateproofview",3]]]],[11,"eq","","",35,[[["transactiondataview",4]]]],[11,"ne","","",35,[[["transactiondataview",4]]]],[11,"eq","diem_json_rpc_client::async_client::types","",57,[[["transactiondata",3]]]],[11,"ne","","",57,[[["transactiondata",3]]]],[11,"eq","diem_json_rpc_client::views","",10,[[["eventview",3]]]],[11,"ne","","",10,[[["eventview",3]]]],[11,"eq","","",32,[[["transactionview",3]]]],[11,"ne","","",32,[[["transactionview",3]]]],[11,"eq","","",41,[[["accountstatewithproofview",3]]]],[11,"ne","","",41,[[["accountstatewithproofview",3]]]],[11,"eq","","",28,[[["bytesview",3]]]],[11,"ne","","",28,[[["bytesview",3]]]],[11,"eq","diem_json_rpc_client::async_client::types","",62,[[["accountstateproof",3]]]],[11,"ne","","",62,[[["accountstateproof",3]]]],[11,"eq","diem_json_rpc_client::views","",11,[[["eventwithproofview",3]]]],[11,"ne","","",11,[[["eventwithproofview",3]]]],[11,"eq","","",39,[[["currencyinfoview",3]]]],[11,"ne","","",39,[[["currencyinfoview",3]]]],[11,"encode_raw","diem_json_rpc_client::async_client::types","",49,[[]]],[11,"merge_field","","",49,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",49,[[]]],[11,"clear","","",49,[[]]],[11,"encode_raw","","",60,[[]]],[11,"merge_field","","",60,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",60,[[]]],[11,"clear","","",60,[[]]],[11,"encode_raw","","",53,[[]]],[11,"merge_field","","",53,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",53,[[]]],[11,"clear","","",53,[[]]],[11,"encode_raw","","",58,[[]]],[11,"merge_field","","",58,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",58,[[]]],[11,"clear","","",58,[[]]],[11,"encode_raw","","",57,[[]]],[11,"merge_field","","",57,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",57,[[]]],[11,"clear","","",57,[[]]],[11,"encode_raw","","",59,[[]]],[11,"merge_field","","",59,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",59,[[]]],[11,"clear","","",59,[[]]],[11,"encode_raw","","",61,[[]]],[11,"merge_field","","",61,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",61,[[]]],[11,"clear","","",61,[[]]],[11,"encode_raw","","",56,[[]]],[11,"merge_field","","",56,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",56,[[]]],[11,"clear","","",56,[[]]],[11,"encode_raw","","",52,[[]]],[11,"merge_field","","",52,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",52,[[]]],[11,"clear","","",52,[[]]],[11,"encode_raw","","",48,[[]]],[11,"merge_field","","",48,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",48,[[]]],[11,"clear","","",48,[[]]],[11,"encode_raw","","",50,[[]]],[11,"merge_field","","",50,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",50,[[]]],[11,"clear","","",50,[[]]],[11,"encode_raw","","",54,[[]]],[11,"merge_field","","",54,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",54,[[]]],[11,"clear","","",54,[[]]],[11,"encode_raw","","",55,[[]]],[11,"merge_field","","",55,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",55,[[]]],[11,"clear","","",55,[[]]],[11,"encode_raw","","",51,[[]]],[11,"merge_field","","",51,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",51,[[]]],[11,"clear","","",51,[[]]],[11,"encode_raw","","",62,[[]]],[11,"merge_field","","",62,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",62,[[]]],[11,"clear","","",62,[[]]],[11,"fmt","diem_json_rpc_client::views","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_json_rpc_client::async_client","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","diem_json_rpc_client::async_client::types","",61,[[],["accountstatewithproof",3]]],[11,"default","","",62,[[],["accountstateproof",3]]],[11,"default","","",59,[[],["currencyinfo",3]]],[11,"default","","",48,[[],["amount",3]]],[11,"default","","",58,[[],["script",3]]],[11,"default","diem_json_rpc_client::views","",38,[[],["scriptview",3]]],[11,"default","diem_json_rpc_client::async_client::types","",50,[[],["accountrole",3]]],[11,"default","","",49,[[],["account",3]]],[11,"default","","",54,[[],["transaction",3]]],[11,"default","","",60,[[],["stateproof",3]]],[11,"default","","",53,[[],["metadata",3]]],[11,"default","","",57,[[],["transactiondata",3]]],[11,"default","","",52,[[],["eventdata",3]]],[11,"default","","",56,[[],["vmstatus",3]]],[11,"default","","",55,[[],["moveabortexplaination",3]]],[11,"default","","",51,[[],["event",3]]],[11,"from","diem_json_rpc_client::views","",39,[[["currencyinforesource",3]],["currencyinfoview",3]]],[11,"from","","",28,[[["vec",3]],["bytesview",3]]],[11,"from","","",35,[[["transaction",4]],["transactiondataview",4]]],[11,"from","","",5,[[["accountrole",4]],["accountroleview",4]]],[11,"from","","",38,[[["script",3]],["scriptview",3]]],[11,"from","","",28,[[["hashvalue",3]],["bytesview",3]]],[11,"from","","",29,[[["keptvmstatus",4]],["vmstatusview",4]]],[11,"from","","",28,[[["vec",3]],["bytesview",3]]],[11,"from","","",28,[[],["bytesview",3]]],[11,"from","diem_json_rpc_client::async_client","",3,[[["error",3]],["jsonrpcerror",3]]],[11,"from","","",3,[[["error",3]],["jsonrpcerror",3]]],[11,"from","diem_json_rpc_client::views","",28,[[["accountaddress",3]],["bytesview",3]]],[11,"from","","",28,[[["accountaddress",3]],["bytesview",3]]],[11,"deserialize","","",41,[[],[["result",4],["accountstatewithproofview",3]]]],[11,"deserialize","","",12,[[],[["result",4],["eventdataview",4]]]],[11,"deserialize","","",27,[[],[["metadataview",3],["result",4]]]],[11,"deserialize","","",39,[[],[["currencyinfoview",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",53,[[],[["metadata",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client","",63,[[],[["jsonrpcresponse",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",48,[[],[["amount",3],["result",4]]]],[11,"deserialize","","",60,[[],[["result",4],["stateproof",3]]]],[11,"deserialize","diem_json_rpc_client::views","",34,[[],[["transactionsproofsview",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",52,[[],[["eventdata",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::views","",40,[[],[["stateproofview",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::errors","",2,[[],[["errordata",4],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client","",3,[[],[["result",4],["jsonrpcerror",3]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",50,[[],[["accountrole",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::views","",4,[[],[["result",4],["amountview",3]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",59,[[],[["result",4],["currencyinfo",3]]]],[11,"deserialize","diem_json_rpc_client::views","",78,[[],[["result",4],["moveabortexplanationview",3]]]],[11,"deserialize","","",38,[[],[["result",4],["scriptview",3]]]],[11,"deserialize","","",32,[[],[["transactionview",3],["result",4]]]],[11,"deserialize","","",42,[[],[["accountstateproofview",3],["result",4]]]],[11,"deserialize","","",5,[[],[["accountroleview",4],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",51,[[],[["event",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::views","",11,[[],[["result",4],["eventwithproofview",3]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",58,[[],[["script",3],["result",4]]]],[11,"deserialize","","",55,[[],[["result",4],["moveabortexplaination",3]]]],[11,"deserialize","diem_json_rpc_client::views","",28,[[],[["result",4],["bytesview",3]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",56,[[],[["result",4],["vmstatus",3]]]],[11,"deserialize","diem_json_rpc_client::views","",9,[[],[["accountview",3],["result",4]]]],[11,"deserialize","","",33,[[],[["result",4],["transactionswithproofsview",3]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",54,[[],[["result",4],["transaction",3]]]],[11,"deserialize","diem_json_rpc_client::views","",10,[[],[["result",4],["eventview",3]]]],[11,"deserialize","","",35,[[],[["result",4],["transactiondataview",4]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",57,[[],[["result",4],["transactiondata",3]]]],[11,"deserialize","","",61,[[],[["accountstatewithproof",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::views","",29,[[],[["vmstatusview",4],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",62,[[],[["accountstateproof",3],["result",4]]]],[11,"deserialize","","",49,[[],[["result",4],["account",3]]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",41,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client","",3,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",34,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",52,[[],["result",4]]],[11,"serialize","","",56,[[],["result",4]]],[11,"serialize","","",57,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",4,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",50,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",12,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",58,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",9,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client","",63,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",29,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",59,[[],["result",4]]],[11,"serialize","","",55,[[],["result",4]]],[11,"serialize","","",54,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::errors","",2,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",78,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",51,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",5,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",60,[[],["result",4]]],[11,"serialize","","",53,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",38,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",40,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",61,[[],["result",4]]],[11,"serialize","","",62,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"optional_from_response","diem_json_rpc_client::views","",9,[[["jsonrpcresponse",4]],[["option",4],["result",6]]]],[11,"vec_from_response","","",10,[[["jsonrpcresponse",4]],[["result",6],["vec",3]]]],[11,"from_response","","",27,[[["jsonrpcresponse",4]],["result",6]]],[11,"vec_from_response","","",39,[[["jsonrpcresponse",4]],[["result",6],["vec",3]]]],[11,"optional_from_response","","",32,[[["jsonrpcresponse",4]],[["option",4],["result",6]]]],[11,"vec_from_response","","",32,[[["jsonrpcresponse",4]],[["result",6],["vec",3]]]],[11,"from_response","","",40,[[["jsonrpcresponse",4]],["result",6]]],[11,"from_response","","",41,[[["jsonrpcresponse",4]],["result",6]]],[11,"max_retries","diem_json_rpc_client::async_client","",69,[[["error",4]]]],[11,"delay","","",69,[[["error",4]],["duration",3]]],[11,"is_retriable","","",69,[[["error",4]]]],[11,"single_request","","",68,[[["request",3]],[["pin",3],["box",3]]]],[11,"batch_request","","",68,[[],[["box",3],["pin",3]]]],[11,"update_state","","",68,[[["state",3]]]],[11,"last_known_state","","",68,[[],[["option",4],["state",3]]]],[11,"single_request","","",65,[[["request",3]],[["pin",3],["box",3]]]],[11,"batch_request","","",65,[[],[["box",3],["pin",3]]]],[11,"update_state","","",65,[[["state",3]]]],[11,"last_known_state","","",65,[[],[["option",4],["state",3]]]],[11,"clone","diem_json_rpc_client","",43,[[],["jsonrpcbatch",3]]],[11,"clone","","",47,[[],["jsonrpcasyncclient",3]]],[11,"clone","","",45,[[],["jsonrpcresponse",4]]],[11,"clone","diem_json_rpc_client::async_client","",70,[[],["state",3]]],[11,"default","diem_json_rpc_client","",43,[[],["jsonrpcbatch",3]]],[11,"default","diem_json_rpc_client::async_client","",74,[[]]],[11,"eq","diem_json_rpc_client","",45,[[["jsonrpcresponse",4]]]],[11,"ne","","",45,[[["jsonrpcresponse",4]]]],[11,"eq","diem_json_rpc_client::async_client","",70,[[["state",3]]]],[11,"ne","","",70,[[["state",3]]]],[11,"partial_cmp","","",70,[[["state",3]],[["ordering",4],["option",4]]]],[11,"lt","","",70,[[["state",3]]]],[11,"le","","",70,[[["state",3]]]],[11,"gt","","",70,[[["state",3]]]],[11,"ge","","",70,[[["state",3]]]],[11,"deref","","",67,[[]]],[11,"fmt","diem_json_rpc_client","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","diem_json_rpc_client::async_client","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","diem_json_rpc_client","",44,[[["formatter",3]],["result",6]]],[11,"fmt","diem_json_rpc_client::async_client","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"try_from","diem_json_rpc_client","",45,[[],[["result",6],["jsonrpcresponse",4]]]],[11,"try_from","diem_json_rpc_client::async_client","",67,[[["jsonrpcresponse",3]],[["error",4],["result",4]]]],[11,"source","","",71,[[],[["option",4],["error",8]]]],[11,"source","","",72,[[],[["option",4],["error",8]]]],[11,"source","","",73,[[],[["option",4],["error",8]]]],[11,"serialize","","",3,[[],["value",4]]],[11,"invalid_request","","",3,[[],["jsonrpcerror",3]]],[11,"invalid_request_with_data","","",3,[[["option",4],["errordata",4]],["jsonrpcerror",3]]],[11,"invalid_request_with_msg","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"invalid_format","","",3,[[],["jsonrpcerror",3]]],[11,"invalid_params","","",3,[[["option",4],["errordata",4]],["jsonrpcerror",3]]],[11,"invalid_params_size","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"invalid_param","","",3,[[],["jsonrpcerror",3]]],[11,"method_not_found","","",3,[[],["jsonrpcerror",3]]],[11,"internal_error","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"mempool_error","","",3,[[["mempoolstatus",3]],[["error",3],["result",4],["jsonrpcerror",3]]]],[11,"vm_status","","",3,[[["statuscode",4]],["jsonrpcerror",3]]],[11,"as_status_code","","",3,[[],[["statuscode",4],["option",4]]]],[11,"new","diem_json_rpc_client::views","",9,[[["accountrole",4],["accountaddress",3],["btreemap",3],["accountresource",3],["balanceresource",3],["freezingbit",3],["identifier",3]],["accountview",3]]],[11,"into_bytes","","",28,[[],[["vec",3],["error",3],["result",4]]]],[11,"new","diem_json_rpc_client","",79,[[],["accountaddress",3]]],[18,"LENGTH","","The number of bytes in an address.",79,null],[18,"ZERO","","Hex address: 0x0",79,null],[11,"random","","",79,[[],["accountaddress",3]]],[11,"short_str","","",79,[[],["shorthexstr",3]]],[11,"short_str_lossless","","",79,[[],["string",3]]],[11,"to_vec","","",79,[[],["vec",3]]],[11,"to_u8","","",79,[[]]],[11,"from_hex_literal","","",79,[[],[["error",3],["result",4],["accountaddress",3]]]],[11,"from_identity_public_key","","",79,[[["publickey",3]],["accountaddress",3]]],[11,"new","","",80,[[["ed25519publickey",3],["rawtransaction",3],["ed25519signature",3]],["signedtransaction",3]]],[11,"new_multisig","","",80,[[["multied25519signature",3],["rawtransaction",3],["multied25519publickey",3]],["signedtransaction",3]]],[11,"authenticator","","",80,[[],["transactionauthenticator",4]]],[11,"sender","","",80,[[],["accountaddress",3]]],[11,"into_raw_transaction","","",80,[[],["rawtransaction",3]]],[11,"sequence_number","","",80,[[]]],[11,"chain_id","","",80,[[],["chainid",3]]],[11,"payload","","",80,[[],["transactionpayload",4]]],[11,"max_gas_amount","","",80,[[]]],[11,"gas_unit_price","","",80,[[]]],[11,"gas_currency_code","","",80,[[]]],[11,"expiration_timestamp_secs","","",80,[[]]],[11,"raw_txn_bytes_len","","",80,[[]]],[11,"check_signature","","Checks that the signature of given transaction. Returns…",80,[[],[["signaturecheckedtransaction",3],["error",3],["result",4]]]],[11,"format_for_client","","",80,[[],["string",3]]],[11,"unexpected_response_error","","",77,[[["jsonrpcresponse",4]],["result",6]]],[11,"from_response","","",77,[[["jsonrpcresponse",4]],["result",6]]],[11,"optional_from_response","","",77,[[["jsonrpcresponse",4]],[["option",4],["result",6]]]],[11,"vec_from_response","","",77,[[["jsonrpcresponse",4]],[["result",6],["vec",3]]]],[11,"new","diem_json_rpc_client::async_client","",63,[[["chainid",3]],["jsonrpcresponse",3]]],[11,"validate","","",75,[[["jsonrpcresponse",3]],[["error",4],["result",4]]]]],"p":[[4,"ServerCode"],[4,"InvalidRequestCode"],[4,"ErrorData"],[3,"JsonRpcError"],[3,"AmountView"],[4,"AccountRoleView"],[13,"ChildVASP"],[13,"ParentVASP"],[13,"DesignatedDealer"],[3,"AccountView"],[3,"EventView"],[3,"EventWithProofView"],[4,"EventDataView"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"ToXDXExchangeRateUpdate"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[13,"AdminTransaction"],[13,"NewEpoch"],[13,"NewBlock"],[13,"ReceivedMint"],[13,"ComplianceKeyRotation"],[13,"BaseUrlRotation"],[13,"CreateAccount"],[3,"MetadataView"],[3,"BytesView"],[4,"VMStatusView"],[13,"MoveAbort"],[13,"ExecutionFailure"],[3,"TransactionView"],[3,"TransactionsWithProofsView"],[3,"TransactionsProofsView"],[4,"TransactionDataView"],[13,"BlockMetadata"],[13,"UserTransaction"],[3,"ScriptView"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccountStateWithProofView"],[3,"AccountStateProofView"],[3,"JsonRpcBatch"],[4,"JsonRpcAsyncClientError"],[4,"JsonRpcResponse"],[3,"JsonRpcClient"],[3,"JsonRpcAsyncClient"],[3,"Amount"],[3,"Account"],[3,"AccountRole"],[3,"Event"],[3,"EventData"],[3,"Metadata"],[3,"Transaction"],[3,"MoveAbortExplaination"],[3,"VmStatus"],[3,"TransactionData"],[3,"Script"],[3,"CurrencyInfo"],[3,"StateProof"],[3,"AccountStateWithProof"],[3,"AccountStateProof"],[3,"JsonRpcResponse"],[3,"Client"],[3,"BroadcastHttpClient"],[3,"Request"],[3,"Response"],[3,"SimpleHttpClient"],[3,"Retry"],[3,"State"],[4,"Error"],[4,"UnexpectedError"],[4,"WaitForTransactionError"],[3,"StateManager"],[8,"HttpClient"],[8,"RetryStrategy"],[8,"ResponseAsView"],[3,"MoveAbortExplanationView"],[3,"AccountAddress"],[3,"SignedTransaction"]]},\
"diem_json_rpc_types":{"doc":"","i":[[0,"errors","diem_json_rpc_types","",null,null],[3,"JsonRpcError","diem_json_rpc_types::errors","",null,null],[12,"code","","",0,null],[12,"message","","",0,null],[12,"data","","",0,null],[4,"ServerCode","","Custom JSON RPC server error codes Ranges from -32000 to…",null,null],[13,"DefaultServerError","","",1,null],[13,"VmValidationError","","",1,null],[13,"VmVerificationError","","",1,null],[13,"VmInvariantViolationError","","",1,null],[13,"VmDeserializationError","","",1,null],[13,"VmExecutionError","","",1,null],[13,"VmUnknownError","","",1,null],[13,"MempoolInvalidSeqNumber","","",1,null],[13,"MempoolIsFull","","",1,null],[13,"MempoolTooManyTransactions","","",1,null],[13,"MempoolInvalidUpdate","","",1,null],[13,"MempoolVmError","","",1,null],[13,"MempoolUnknownError","","",1,null],[4,"InvalidRequestCode","","JSON RPC server error codes for invalid request",null,null],[13,"InvalidRequest","","",2,null],[13,"MethodNotFound","","",2,null],[13,"InvalidParams","","",2,null],[13,"InvalidFormat","","",2,null],[4,"ErrorData","","",null,null],[13,"StatusCode","","",3,null],[5,"is_internal_error","","",null,[[]]],[7,"INTERNAL_ERRORS","","list of server internal errors",null,null],[11,"serialize","","",0,[[],["value",4]]],[11,"invalid_request","","",0,[[]]],[11,"invalid_request_with_data","","",0,[[["errordata",4],["option",4]]]],[11,"invalid_request_with_msg","","",0,[[["string",3]]]],[11,"invalid_format","","",0,[[]]],[11,"invalid_params","","",0,[[["errordata",4],["option",4]]]],[11,"invalid_params_size","","",0,[[["string",3]]]],[11,"invalid_param","","",0,[[]]],[11,"method_not_found","","",0,[[]]],[11,"internal_error","","",0,[[["string",3]]]],[11,"mempool_error","","",0,[[["mempoolstatus",3]],["result",6]]],[11,"vm_status","","",0,[[["statuscode",4]]]],[11,"as_status_code","","",0,[[],[["option",4],["statuscode",4]]]],[0,"response","diem_json_rpc_types","",null,null],[3,"JsonRpcResponse","diem_json_rpc_types::response","",null,null],[12,"diem_chain_id","","",4,null],[12,"diem_ledger_version","","",4,null],[12,"diem_ledger_timestampusec","","",4,null],[12,"jsonrpc","","",4,null],[12,"id","","",4,null],[12,"result","","",4,null],[12,"error","","",4,null],[17,"X_DIEM_CHAIN_ID","","",null,null],[17,"X_DIEM_VERSION_ID","","",null,null],[17,"X_DIEM_TIMESTAMP_USEC_ID","","",null,null],[11,"new","","",4,[[["chainid",3]]]],[0,"views","diem_json_rpc_types","",null,null],[3,"AmountView","diem_json_rpc_types::views","",null,null],[12,"amount","","",5,null],[12,"currency","","",5,null],[3,"AccountView","","",null,null],[12,"address","","",6,null],[12,"balances","","",6,null],[12,"sequence_number","","",6,null],[12,"authentication_key","","",6,null],[12,"sent_events_key","","",6,null],[12,"received_events_key","","",6,null],[12,"delegated_key_rotation_capability","","",6,null],[12,"delegated_withdrawal_capability","","",6,null],[12,"is_frozen","","",6,null],[12,"role","","",6,null],[3,"EventView","","",null,null],[12,"key","","",7,null],[12,"sequence_number","","",7,null],[12,"transaction_version","","",7,null],[12,"data","","",7,null],[3,"EventWithProofView","","",null,null],[12,"event_with_proof","","",8,null],[3,"MetadataView","","",null,null],[12,"version","","",9,null],[12,"accumulator_root_hash","","",9,null],[12,"timestamp","","",9,null],[12,"chain_id","","",9,null],[12,"script_hash_allow_list","","",9,null],[12,"module_publishing_allowed","","",9,null],[12,"diem_version","","",9,null],[12,"dual_attestation_limit","","",9,null],[3,"BytesView","","",null,null],[12,"0","","",10,null],[3,"MoveAbortExplanationView","","",null,null],[3,"TransactionView","","",null,null],[12,"version","","",11,null],[12,"transaction","","",11,null],[12,"hash","","",11,null],[12,"bytes","","",11,null],[12,"events","","",11,null],[12,"vm_status","","",11,null],[12,"gas_used","","",11,null],[3,"TransactionsWithProofsView","","",null,null],[12,"serialized_transactions","","",12,null],[12,"proofs","","",12,null],[3,"TransactionsProofsView","","",null,null],[12,"ledger_info_to_transaction_infos_proof","","",13,null],[12,"transaction_infos","","",13,null],[3,"ScriptView","","",null,null],[12,"type","","",14,null],[12,"code","","",14,null],[12,"arguments","","",14,null],[12,"type_arguments","","",14,null],[12,"receiver","","",14,null],[12,"amount","","",14,null],[12,"currency","","",14,null],[12,"metadata","","",14,null],[12,"metadata_signature","","",14,null],[3,"CurrencyInfoView","","",null,null],[12,"code","","",15,null],[12,"scaling_factor","","",15,null],[12,"fractional_part","","",15,null],[12,"to_xdx_exchange_rate","","",15,null],[12,"mint_events_key","","",15,null],[12,"burn_events_key","","",15,null],[12,"preburn_events_key","","",15,null],[12,"cancel_burn_events_key","","",15,null],[12,"exchange_rate_update_events_key","","",15,null],[3,"StateProofView","","",null,null],[12,"ledger_info_with_signatures","","",16,null],[12,"epoch_change_proof","","",16,null],[12,"ledger_consistency_proof","","",16,null],[3,"AccountStateWithProofView","","",null,null],[12,"version","","",17,null],[12,"blob","","",17,null],[12,"proof","","",17,null],[3,"AccountStateProofView","","",null,null],[12,"ledger_info_to_transaction_info_proof","","",18,null],[12,"transaction_info","","",18,null],[12,"transaction_info_to_account_proof","","",18,null],[4,"AccountRoleView","","",null,null],[13,"Unknown","","",19,null],[13,"ChildVASP","","",19,null],[12,"parent_vasp_address","diem_json_rpc_types::views::AccountRoleView","",20,null],[13,"ParentVASP","diem_json_rpc_types::views","",19,null],[12,"human_name","diem_json_rpc_types::views::AccountRoleView","",21,null],[12,"base_url","","",21,null],[12,"expiration_time","","",21,null],[12,"compliance_key","","",21,null],[12,"num_children","","",21,null],[12,"compliance_key_rotation_events_key","","",21,null],[12,"base_url_rotation_events_key","","",21,null],[13,"DesignatedDealer","diem_json_rpc_types::views","",19,null],[12,"human_name","diem_json_rpc_types::views::AccountRoleView","",22,null],[12,"base_url","","",22,null],[12,"expiration_time","","",22,null],[12,"compliance_key","","",22,null],[12,"preburn_balances","","",22,null],[12,"received_mint_events_key","","",22,null],[12,"compliance_key_rotation_events_key","","",22,null],[12,"base_url_rotation_events_key","","",22,null],[4,"EventDataView","diem_json_rpc_types::views","",null,null],[13,"Burn","","",23,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",24,null],[12,"preburn_address","","",24,null],[13,"CancelBurn","diem_json_rpc_types::views","",23,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",25,null],[12,"preburn_address","","",25,null],[13,"Mint","diem_json_rpc_types::views","",23,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",26,null],[13,"ToXDXExchangeRateUpdate","diem_json_rpc_types::views","",23,null],[12,"currency_code","diem_json_rpc_types::views::EventDataView","",27,null],[12,"new_to_xdx_exchange_rate","","",27,null],[13,"Preburn","diem_json_rpc_types::views","",23,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",28,null],[12,"preburn_address","","",28,null],[13,"ReceivedPayment","diem_json_rpc_types::views","",23,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",29,null],[12,"sender","","",29,null],[12,"receiver","","",29,null],[12,"metadata","","",29,null],[13,"SentPayment","diem_json_rpc_types::views","",23,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",30,null],[12,"receiver","","",30,null],[12,"sender","","",30,null],[12,"metadata","","",30,null],[13,"AdminTransaction","diem_json_rpc_types::views","",23,null],[12,"committed_timestamp_secs","diem_json_rpc_types::views::EventDataView","",31,null],[13,"NewEpoch","diem_json_rpc_types::views","",23,null],[12,"epoch","diem_json_rpc_types::views::EventDataView","",32,null],[13,"NewBlock","diem_json_rpc_types::views","",23,null],[12,"round","diem_json_rpc_types::views::EventDataView","",33,null],[12,"proposer","","",33,null],[12,"proposed_time","","",33,null],[13,"ReceivedMint","diem_json_rpc_types::views","",23,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",34,null],[12,"destination_address","","",34,null],[13,"ComplianceKeyRotation","diem_json_rpc_types::views","",23,null],[12,"new_compliance_public_key","diem_json_rpc_types::views::EventDataView","",35,null],[12,"time_rotated_seconds","","",35,null],[13,"BaseUrlRotation","diem_json_rpc_types::views","",23,null],[12,"new_base_url","diem_json_rpc_types::views::EventDataView","",36,null],[12,"time_rotated_seconds","","",36,null],[13,"CreateAccount","diem_json_rpc_types::views","",23,null],[12,"created_address","diem_json_rpc_types::views::EventDataView","",37,null],[12,"role_id","","",37,null],[13,"Unknown","diem_json_rpc_types::views","",23,null],[4,"VMStatusView","","",null,null],[13,"Executed","","",38,null],[13,"OutOfGas","","",38,null],[13,"MoveAbort","","",38,null],[12,"location","diem_json_rpc_types::views::VMStatusView","",39,null],[12,"abort_code","","",39,null],[12,"explanation","","",39,null],[13,"ExecutionFailure","diem_json_rpc_types::views","",38,null],[12,"location","diem_json_rpc_types::views::VMStatusView","",40,null],[12,"function_index","","",40,null],[12,"code_offset","","",40,null],[13,"MiscellaneousError","diem_json_rpc_types::views","",38,null],[4,"TransactionDataView","","",null,null],[13,"BlockMetadata","","",41,null],[12,"timestamp_usecs","diem_json_rpc_types::views::TransactionDataView","",42,null],[13,"WriteSet","diem_json_rpc_types::views","",41,null],[13,"UserTransaction","","",41,null],[12,"sender","diem_json_rpc_types::views::TransactionDataView","",43,null],[12,"signature_scheme","","",43,null],[12,"signature","","",43,null],[12,"public_key","","",43,null],[12,"sequence_number","","",43,null],[12,"chain_id","","",43,null],[12,"max_gas_amount","","",43,null],[12,"gas_unit_price","","",43,null],[12,"gas_currency","","",43,null],[12,"expiration_timestamp_secs","","",43,null],[12,"script_hash","","",43,null],[12,"script_bytes","","",43,null],[12,"script","","",43,null],[13,"UnknownTransaction","diem_json_rpc_types::views","",41,null],[11,"new","","",6,[[["identifier",3],["btreemap",3],["balanceresource",3],["accountaddress",3],["accountrole",4],["freezingbit",3],["accountresource",3]]]],[11,"into_bytes","","",10,[[],[["error",3],["result",6],["vec",3]]]],[0,"constants","diem_json_rpc_types","Defines constants for enum type values See the following…",null,null],[17,"ACCOUNT_ROLE_UNKNOWN","diem_json_rpc_types::constants","",null,null],[17,"ACCOUNT_ROLE_CHILD_VASP","","",null,null],[17,"ACCOUNT_ROLE_PARENT_VASP","","",null,null],[17,"ACCOUNT_ROLE_DESIGNATED_DEALER","","",null,null],[17,"EVENT_DATA_UNKNOWN","","",null,null],[17,"EVENT_DATA_BURN","","",null,null],[17,"EVENT_DATA_CANCEL_BURN","","",null,null],[17,"EVENT_DATA_MINT","","",null,null],[17,"EVENT_DATA_TO_XDX_EXCHANGE_RATE_UPDATE","","",null,null],[17,"EVENT_DATA_PREBURN","","",null,null],[17,"EVENT_DATA_RECEIVED_PAYMENT","","",null,null],[17,"EVENT_DATA_SENT_PAYMENT","","",null,null],[17,"EVENT_DATA_NEW_EPOCH","","",null,null],[17,"EVENT_DATA_NEW_BLOCK","","",null,null],[17,"EVENT_DATA_RECEIVED_MINT","","",null,null],[17,"EVENT_DATA_COMPLIANCE_KEY_ROTATION","","",null,null],[17,"EVENT_DATA_BASE_URL_ROTATION","","",null,null],[17,"EVENT_DATA_CREATE_ACCOUNT","","",null,null],[17,"EVENT_DATA_ADMIN_TRANSACTION","","",null,null],[17,"VM_STATUS_EXECUTED","","",null,null],[17,"VM_STATUS_OUT_OF_GAS","","",null,null],[17,"VM_STATUS_MOVE_ABORT","","",null,null],[17,"VM_STATUS_EXECUTION_FAILURE","","",null,null],[17,"VM_STATUS_MISC_ERROR","","",null,null],[17,"TRANSACTION_DATA_BLOCK_METADATA","","",null,null],[17,"TRANSACTION_DATA_WRITE_SET","","",null,null],[17,"TRANSACTION_DATA_USER","","",null,null],[17,"TRANSACTION_DATA_UNKNOWN","","",null,null],[17,"SCRIPT_UNKNOWN","","",null,null],[0,"proto","diem_json_rpc_types","",null,null],[0,"types","diem_json_rpc_types::proto","",null,null],[3,"Amount","diem_json_rpc_types::proto::types","",null,null],[12,"amount","","",44,null],[12,"currency","","",44,null],[3,"Account","","",null,null],[12,"address","","hex-encoded bytes",45,null],[12,"balances","","",45,null],[12,"sequence_number","","",45,null],[12,"authentication_key","","hex-encoded bytes",45,null],[12,"sent_events_key","","hex-encoded bytes",45,null],[12,"received_events_key","","hex-encoded bytes",45,null],[12,"delegated_key_rotation_capability","","",45,null],[12,"delegated_withdrawal_capability","","",45,null],[12,"is_frozen","","",45,null],[12,"role","","",45,null],[3,"AccountRole","","",null,null],[12,"type","","",46,null],[12,"parent_vasp_address","","",46,null],[12,"human_name","","",46,null],[12,"base_url","","",46,null],[12,"expiration_time","","",46,null],[12,"compliance_key","","hex-encoded bytes",46,null],[12,"compliance_key_rotation_events_key","","hex-encoded bytes",46,null],[12,"base_url_rotation_events_key","","hex-encoded bytes",46,null],[12,"num_children","","",46,null],[12,"received_mint_events_key","","hex-encoded bytes",46,null],[12,"preburn_balances","","",46,null],[3,"Event","","",null,null],[12,"key","","",47,null],[12,"sequence_number","","",47,null],[12,"transaction_version","","",47,null],[12,"data","","",47,null],[3,"EventData","","",null,null],[12,"type","","",48,null],[12,"amount","","burn, cancelburn, mint, preburn, receivedpayment,…",48,null],[12,"preburn_address","","burn, cancelburn, preburn events hex-encoded bytes",48,null],[12,"currency_code","","to_xdx_exchange_rate_update event only",48,null],[12,"new_to_xdx_exchange_rate","","",48,null],[12,"sender","","receivedpayment and sentpayment events hex-encoded bytes",48,null],[12,"receiver","","hex-encoded bytes",48,null],[12,"metadata","","hex-encoded bytes",48,null],[12,"epoch","","newepoch event only",48,null],[12,"round","","newblock event only",48,null],[12,"proposer","","hex-encoded bytes",48,null],[12,"proposed_time","","",48,null],[12,"destination_address","","receivedmint event only hex-encoded bytes",48,null],[12,"new_compliance_public_key","","compliancekeyrotation event only hex-encoded bytes",48,null],[12,"new_base_url","","baseurlrotation event only",48,null],[12,"time_rotated_seconds","","compliancekeyrotation and baseurlrotation events",48,null],[12,"created_address","","createaccount event field. Hex-encoded account address…",48,null],[12,"role_id","","createaccount event field. Role id of the created account,…",48,null],[12,"committed_timestamp_secs","","admintransaction event field. The block time when this…",48,null],[3,"Metadata","","",null,null],[12,"version","","The block (ledger) version",49,null],[12,"timestamp","","The block (ledger) timestamp, unit is microsecond",49,null],[12,"chain_id","","Chain ID of the Diem network",49,null],[12,"script_hash_allow_list","","List of allowed scripts hex-encoded hash bytes, server may…",49,null],[12,"module_publishing_allowed","","True for allowing publishing customized script, server may…",49,null],[12,"diem_version","","Diem chain major version number.",49,null],[12,"accumulator_root_hash","","accumulator root hash of the ledger version requested",49,null],[12,"dual_attestation_limit","","The dual attestation limit on-chain. Defined in terms of…",49,null],[3,"Transaction","","",null,null],[12,"version","","",50,null],[12,"transaction","","",50,null],[12,"hash","","",50,null],[12,"bytes","","hex-encoded bcs bytes",50,null],[12,"events","","",50,null],[12,"vm_status","","",50,null],[12,"gas_used","","",50,null],[3,"MoveAbortExplaination","","",null,null],[12,"category","","",51,null],[12,"category_description","","",51,null],[12,"reason","","",51,null],[12,"reason_description","","",51,null],[3,"VmStatus","","",null,null],[12,"type","","",52,null],[12,"location","","move_abort, execution_failure",52,null],[12,"abort_code","","move_abort only",52,null],[12,"function_index","","execution_failure only",52,null],[12,"code_offset","","",52,null],[12,"explanation","","move_abort only",52,null],[3,"TransactionData","","",null,null],[12,"type","","",53,null],[12,"timestamp_usecs","","blockmetadata",53,null],[12,"sender","","user",53,null],[12,"signature_scheme","","",53,null],[12,"signature","","",53,null],[12,"public_key","","hex-encoded bytes",53,null],[12,"sequence_number","","",53,null],[12,"chain_id","","",53,null],[12,"max_gas_amount","","",53,null],[12,"gas_unit_price","","",53,null],[12,"gas_currency","","",53,null],[12,"expiration_timestamp_secs","","",53,null],[12,"script_hash","","",53,null],[12,"script_bytes","","hex-encoded bytes",53,null],[12,"script","","",53,null],[3,"Script","","",null,null],[12,"type","","Name of the script code, see…",54,null],[12,"code","","Hex-encoded compiled move script bytes.",54,null],[12,"arguments","","List of string value of the script arguments. Contains…",54,null],[12,"type_arguments","","List of type arguments, converted into string.",54,null],[12,"receiver","","hex-encoded receiver account address bytes",54,null],[12,"amount","","peer to peer transfer amount.",54,null],[12,"currency","","peer to peer transfer currency code.",54,null],[12,"metadata","","Metadata of the transaction, LCS serialized hex-encoded…",54,null],[12,"metadata_signature","","Hex-encoded metadata signature, use this to validate…",54,null],[3,"CurrencyInfo","","",null,null],[12,"code","","",55,null],[12,"scaling_factor","","",55,null],[12,"fractional_part","","",55,null],[12,"to_xdx_exchange_rate","","",55,null],[12,"mint_events_key","","hex-encoded bytes",55,null],[12,"burn_events_key","","hex-encoded bytes",55,null],[12,"preburn_events_key","","HEX-encoded bytes",55,null],[12,"cancel_burn_events_key","","hex-encoded bytes",55,null],[12,"exchange_rate_update_events_key","","hex-encoded bytes",55,null],[3,"StateProof","","This is for experimental API get_state_proof response. It…",null,null],[12,"ledger_info_with_signatures","","hex-encoded bcs bytes",56,null],[12,"epoch_change_proof","","hex-encoded bcs bytes",56,null],[12,"ledger_consistency_proof","","hex-encoded bcs bytes",56,null],[3,"AccountStateWithProof","","This is for experimental API get_account_state_with_proof…",null,null],[12,"version","","",57,null],[12,"blob","","hex-encoded bcs bytes",57,null],[12,"proof","","hex-encoded bcs bytes",57,null],[3,"AccountStateProof","","This is for experimental API get_account_state_with_proof…",null,null],[12,"ledger_info_to_transaction_info_proof","","hex-encoded bcs bytes",58,null],[12,"transaction_info","","hex-encoded bcs bytes",58,null],[12,"transaction_info_to_account_proof","","hex-encoded bcs bytes",58,null],[11,"from","diem_json_rpc_types::errors","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diem_json_rpc_types::response","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","diem_json_rpc_types::views","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"test_only_hash","","",8,[[],["hashvalue",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"test_only_hash","","",59,[[],["hashvalue",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"test_only_hash","","",15,[[],["hashvalue",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"test_only_hash","","",16,[[],["hashvalue",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"test_only_hash","","",17,[[],["hashvalue",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"test_only_hash","","",18,[[],["hashvalue",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"test_only_hash","","",19,[[],["hashvalue",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"test_only_hash","","",23,[[],["hashvalue",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"test_only_hash","","",38,[[],["hashvalue",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"test_only_hash","","",41,[[],["hashvalue",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","diem_json_rpc_types::proto::types","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"test_only_hash","","",44,[[],["hashvalue",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"test_only_hash","","",45,[[],["hashvalue",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"test_only_hash","","",46,[[],["hashvalue",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"test_only_hash","","",47,[[],["hashvalue",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"test_only_hash","","",48,[[],["hashvalue",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"test_only_hash","","",49,[[],["hashvalue",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"test_only_hash","","",50,[[],["hashvalue",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"test_only_hash","","",51,[[],["hashvalue",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"test_only_hash","","",52,[[],["hashvalue",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"test_only_hash","","",53,[[],["hashvalue",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"test_only_hash","","",54,[[],["hashvalue",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"test_only_hash","","",55,[[],["hashvalue",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"test_only_hash","","",56,[[],["hashvalue",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"test_only_hash","","",57,[[],["hashvalue",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"test_only_hash","","",58,[[],["hashvalue",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"from","diem_json_rpc_types::errors","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","diem_json_rpc_types::views","",10,[[]]],[11,"from","","",10,[[["vec",3]]]],[11,"from","","",10,[[["vec",3]]]],[11,"from","","",10,[[["accountaddress",3]]]],[11,"from","","",10,[[["accountaddress",3]]]],[11,"from","","",10,[[["hashvalue",3]]]],[11,"from","","",38,[[["keptvmstatus",4]]]],[11,"from","","",41,[[["transaction",4]]]],[11,"from","","",19,[[["accountrole",4]]]],[11,"from","","",14,[[["script",3]]]],[11,"from","","",15,[[["currencyinforesource",3]],["currencyinfoview",3]]],[11,"clone","diem_json_rpc_types::errors","",3,[[],["errordata",4]]],[11,"clone","","",0,[[],["jsonrpcerror",3]]],[11,"clone","diem_json_rpc_types::response","",4,[[],["jsonrpcresponse",3]]],[11,"clone","diem_json_rpc_types::views","",5,[[],["amountview",3]]],[11,"clone","","",19,[[],["accountroleview",4]]],[11,"clone","","",6,[[],["accountview",3]]],[11,"clone","","",7,[[],["eventview",3]]],[11,"clone","","",8,[[],["eventwithproofview",3]]],[11,"clone","","",23,[[],["eventdataview",4]]],[11,"clone","","",9,[[],["metadataview",3]]],[11,"clone","","",10,[[],["bytesview",3]]],[11,"clone","","",59,[[],["moveabortexplanationview",3]]],[11,"clone","","",38,[[],["vmstatusview",4]]],[11,"clone","","",11,[[],["transactionview",3]]],[11,"clone","","",12,[[],["transactionswithproofsview",3]]],[11,"clone","","",13,[[],["transactionsproofsview",3]]],[11,"clone","","",41,[[],["transactiondataview",4]]],[11,"clone","","",14,[[],["scriptview",3]]],[11,"clone","","",15,[[],["currencyinfoview",3]]],[11,"clone","","",16,[[],["stateproofview",3]]],[11,"clone","","",17,[[],["accountstatewithproofview",3]]],[11,"clone","","",18,[[],["accountstateproofview",3]]],[11,"clone","diem_json_rpc_types::proto::types","",44,[[],["amount",3]]],[11,"clone","","",45,[[],["account",3]]],[11,"clone","","",46,[[],["accountrole",3]]],[11,"clone","","",47,[[],["event",3]]],[11,"clone","","",48,[[],["eventdata",3]]],[11,"clone","","",49,[[],["metadata",3]]],[11,"clone","","",50,[[],["transaction",3]]],[11,"clone","","",51,[[],["moveabortexplaination",3]]],[11,"clone","","",52,[[],["vmstatus",3]]],[11,"clone","","",53,[[],["transactiondata",3]]],[11,"clone","","",54,[[],["script",3]]],[11,"clone","","",55,[[],["currencyinfo",3]]],[11,"clone","","",56,[[],["stateproof",3]]],[11,"clone","","",57,[[],["accountstatewithproof",3]]],[11,"clone","","",58,[[],["accountstateproof",3]]],[11,"default","diem_json_rpc_types::views","",14,[[],["scriptview",3]]],[11,"default","diem_json_rpc_types::proto::types","",44,[[]]],[11,"default","","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","","",47,[[]]],[11,"default","","",48,[[]]],[11,"default","","",49,[[]]],[11,"default","","",50,[[]]],[11,"default","","",51,[[]]],[11,"default","","",52,[[]]],[11,"default","","",53,[[]]],[11,"default","","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[]]],[11,"eq","diem_json_rpc_types::views","",5,[[["amountview",3]]]],[11,"ne","","",5,[[["amountview",3]]]],[11,"eq","","",19,[[["accountroleview",4]]]],[11,"ne","","",19,[[["accountroleview",4]]]],[11,"eq","","",6,[[["accountview",3]]]],[11,"ne","","",6,[[["accountview",3]]]],[11,"eq","","",7,[[["eventview",3]]]],[11,"ne","","",7,[[["eventview",3]]]],[11,"eq","","",8,[[["eventwithproofview",3]]]],[11,"ne","","",8,[[["eventwithproofview",3]]]],[11,"eq","","",23,[[["eventdataview",4]]]],[11,"ne","","",23,[[["eventdataview",4]]]],[11,"eq","","",9,[[["metadataview",3]]]],[11,"ne","","",9,[[["metadataview",3]]]],[11,"eq","","",10,[[["bytesview",3]]]],[11,"ne","","",10,[[["bytesview",3]]]],[11,"eq","","",59,[[["moveabortexplanationview",3]]]],[11,"ne","","",59,[[["moveabortexplanationview",3]]]],[11,"eq","","",38,[[["vmstatusview",4]]]],[11,"ne","","",38,[[["vmstatusview",4]]]],[11,"eq","","",11,[[["transactionview",3]]]],[11,"ne","","",11,[[["transactionview",3]]]],[11,"eq","","",12,[[["transactionswithproofsview",3]]]],[11,"ne","","",12,[[["transactionswithproofsview",3]]]],[11,"eq","","",13,[[["transactionsproofsview",3]]]],[11,"ne","","",13,[[["transactionsproofsview",3]]]],[11,"eq","","",41,[[["transactiondataview",4]]]],[11,"ne","","",41,[[["transactiondataview",4]]]],[11,"eq","","",14,[[["scriptview",3]]]],[11,"ne","","",14,[[["scriptview",3]]]],[11,"eq","","",15,[[["currencyinfoview",3]]]],[11,"ne","","",15,[[["currencyinfoview",3]]]],[11,"eq","","",16,[[["stateproofview",3]]]],[11,"ne","","",16,[[["stateproofview",3]]]],[11,"eq","","",17,[[["accountstatewithproofview",3]]]],[11,"ne","","",17,[[["accountstatewithproofview",3]]]],[11,"eq","","",18,[[["accountstateproofview",3]]]],[11,"ne","","",18,[[["accountstateproofview",3]]]],[11,"eq","diem_json_rpc_types::proto::types","",44,[[["amount",3]]]],[11,"ne","","",44,[[["amount",3]]]],[11,"eq","","",45,[[["account",3]]]],[11,"ne","","",45,[[["account",3]]]],[11,"eq","","",46,[[["accountrole",3]]]],[11,"ne","","",46,[[["accountrole",3]]]],[11,"eq","","",47,[[["event",3]]]],[11,"ne","","",47,[[["event",3]]]],[11,"eq","","",48,[[["eventdata",3]]]],[11,"ne","","",48,[[["eventdata",3]]]],[11,"eq","","",49,[[["metadata",3]]]],[11,"ne","","",49,[[["metadata",3]]]],[11,"eq","","",50,[[["transaction",3]]]],[11,"ne","","",50,[[["transaction",3]]]],[11,"eq","","",51,[[["moveabortexplaination",3]]]],[11,"ne","","",51,[[["moveabortexplaination",3]]]],[11,"eq","","",52,[[["vmstatus",3]]]],[11,"ne","","",52,[[["vmstatus",3]]]],[11,"eq","","",53,[[["transactiondata",3]]]],[11,"ne","","",53,[[["transactiondata",3]]]],[11,"eq","","",54,[[["script",3]]]],[11,"ne","","",54,[[["script",3]]]],[11,"eq","","",55,[[["currencyinfo",3]]]],[11,"ne","","",55,[[["currencyinfo",3]]]],[11,"eq","","",56,[[["stateproof",3]]]],[11,"ne","","",56,[[["stateproof",3]]]],[11,"eq","","",57,[[["accountstatewithproof",3]]]],[11,"ne","","",57,[[["accountstatewithproof",3]]]],[11,"eq","","",58,[[["accountstateproof",3]]]],[11,"ne","","",58,[[["accountstateproof",3]]]],[11,"fmt","diem_json_rpc_types::errors","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","diem_json_rpc_types::response","",4,[[["formatter",3]],["result",6]]],[11,"fmt","diem_json_rpc_types::views","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","diem_json_rpc_types::proto::types","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","diem_json_rpc_types::errors","",0,[[["formatter",3]],["result",6]]],[11,"fmt","diem_json_rpc_types::views","",10,[[["formatter",3]],["result",6]]],[11,"try_from","","",23,[[["contractevent",4]],["result",6]]],[11,"try_from","","",7,[[],["result",6]]],[11,"try_from","","",59,[[["keptvmstatus",4]],[["result",6],["moveabortexplanationview",3]]]],[11,"try_from","","",16,[[],[["result",6],["stateproofview",3]]]],[11,"try_from","","",17,[[["accountstatewithproof",3]],[["result",6],["accountstatewithproofview",3],["error",3]]]],[11,"try_from","","",18,[[["accountstateproof",3]],[["accountstateproofview",3],["result",6],["error",3]]]],[11,"deserialize","diem_json_rpc_types::errors","",3,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","diem_json_rpc_types::response","",4,[[],["result",4]]],[11,"deserialize","diem_json_rpc_types::views","",5,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",59,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","diem_json_rpc_types::proto::types","",44,[[],["result",4]]],[11,"deserialize","","",45,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]],[11,"deserialize","","",47,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","","",50,[[],["result",4]]],[11,"deserialize","","",51,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","","",53,[[],["result",4]]],[11,"deserialize","","",54,[[],["result",4]]],[11,"deserialize","","",55,[[],["result",4]]],[11,"deserialize","","",56,[[],["result",4]]],[11,"deserialize","","",57,[[],["result",4]]],[11,"deserialize","","",58,[[],["result",4]]],[11,"serialize","diem_json_rpc_types::errors","",3,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","diem_json_rpc_types::response","",4,[[],["result",4]]],[11,"serialize","diem_json_rpc_types::views","",5,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",59,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","diem_json_rpc_types::proto::types","",44,[[],["result",4]]],[11,"serialize","","",45,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",50,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","","",52,[[],["result",4]]],[11,"serialize","","",53,[[],["result",4]]],[11,"serialize","","",54,[[],["result",4]]],[11,"serialize","","",55,[[],["result",4]]],[11,"serialize","","",56,[[],["result",4]]],[11,"serialize","","",57,[[],["result",4]]],[11,"serialize","","",58,[[],["result",4]]],[11,"encode_raw","","",44,[[]]],[11,"merge_field","","",44,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",44,[[]]],[11,"clear","","",44,[[]]],[11,"encode_raw","","",45,[[]]],[11,"merge_field","","",45,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",45,[[]]],[11,"clear","","",45,[[]]],[11,"encode_raw","","",46,[[]]],[11,"merge_field","","",46,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",46,[[]]],[11,"clear","","",46,[[]]],[11,"encode_raw","","",47,[[]]],[11,"merge_field","","",47,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",47,[[]]],[11,"clear","","",47,[[]]],[11,"encode_raw","","",48,[[]]],[11,"merge_field","","",48,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",48,[[]]],[11,"clear","","",48,[[]]],[11,"encode_raw","","",49,[[]]],[11,"merge_field","","",49,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",49,[[]]],[11,"clear","","",49,[[]]],[11,"encode_raw","","",50,[[]]],[11,"merge_field","","",50,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",50,[[]]],[11,"clear","","",50,[[]]],[11,"encode_raw","","",51,[[]]],[11,"merge_field","","",51,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",51,[[]]],[11,"clear","","",51,[[]]],[11,"encode_raw","","",52,[[]]],[11,"merge_field","","",52,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",52,[[]]],[11,"clear","","",52,[[]]],[11,"encode_raw","","",53,[[]]],[11,"merge_field","","",53,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",53,[[]]],[11,"clear","","",53,[[]]],[11,"encode_raw","","",54,[[]]],[11,"merge_field","","",54,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",54,[[]]],[11,"clear","","",54,[[]]],[11,"encode_raw","","",55,[[]]],[11,"merge_field","","",55,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",55,[[]]],[11,"clear","","",55,[[]]],[11,"encode_raw","","",56,[[]]],[11,"merge_field","","",56,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",56,[[]]],[11,"clear","","",56,[[]]],[11,"encode_raw","","",57,[[]]],[11,"merge_field","","",57,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",57,[[]]],[11,"clear","","",57,[[]]],[11,"encode_raw","","",58,[[]]],[11,"merge_field","","",58,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",58,[[]]],[11,"clear","","",58,[[]]]],"p":[[3,"JsonRpcError"],[4,"ServerCode"],[4,"InvalidRequestCode"],[4,"ErrorData"],[3,"JsonRpcResponse"],[3,"AmountView"],[3,"AccountView"],[3,"EventView"],[3,"EventWithProofView"],[3,"MetadataView"],[3,"BytesView"],[3,"TransactionView"],[3,"TransactionsWithProofsView"],[3,"TransactionsProofsView"],[3,"ScriptView"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccountStateWithProofView"],[3,"AccountStateProofView"],[4,"AccountRoleView"],[13,"ChildVASP"],[13,"ParentVASP"],[13,"DesignatedDealer"],[4,"EventDataView"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"ToXDXExchangeRateUpdate"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[13,"AdminTransaction"],[13,"NewEpoch"],[13,"NewBlock"],[13,"ReceivedMint"],[13,"ComplianceKeyRotation"],[13,"BaseUrlRotation"],[13,"CreateAccount"],[4,"VMStatusView"],[13,"MoveAbort"],[13,"ExecutionFailure"],[4,"TransactionDataView"],[13,"BlockMetadata"],[13,"UserTransaction"],[3,"Amount"],[3,"Account"],[3,"AccountRole"],[3,"Event"],[3,"EventData"],[3,"Metadata"],[3,"Transaction"],[3,"MoveAbortExplaination"],[3,"VmStatus"],[3,"TransactionData"],[3,"Script"],[3,"CurrencyInfo"],[3,"StateProof"],[3,"AccountStateWithProof"],[3,"AccountStateProof"],[3,"MoveAbortExplanationView"]]},\
"diem_key_manager":{"doc":"The purpose of KeyManager is to rotate consensus key (and…","i":[[3,"KeyManager","diem_key_manager","",null,null],[4,"Action","","Defines actions that KeyManager should perform after a…",null,null],[13,"NoAction","","There is no need to perform a rotation (keys are still…",0,null],[13,"FullKeyRotation","","Sufficient time has passed for another key rotation (keys…",0,null],[13,"SubmitKeyRotationTransaction","","Storage and the blockchain are inconsistent, submit a new…",0,null],[13,"WaitForReconfiguration","","The validator config and the validator set are…",0,null],[13,"WaitForTransactionExecution","","Storage and the blockchain are inconsistent, wait for…",0,null],[4,"Error","","",null,null],[13,"ConfigInfoKeyMismatch","","",1,null],[13,"ConfigStorageKeyMismatch","","",1,null],[13,"DataDoesNotExist","","",1,null],[13,"LivenessError","","",1,null],[13,"MissingAccountAddress","","",1,null],[13,"StorageError","","",1,null],[13,"ValidatorInfoNotFound","","",1,null],[13,"UnknownError","","",1,null],[5,"build_rotation_transaction","","",null,[[["vec",3],["accountaddress",3],["chainid",3],["ed25519publickey",3]],["rawtransaction",3]]],[0,"counters","","",null,null],[5,"initialize_all_metric_counters","diem_key_manager::counters","Initializes all metric counter states.",null,[[]]],[5,"increment_metric_counter","","Increments a metric counter state.",null,[[]]],[17,"KEYS_STILL_FRESH","","Metric counter states.",null,null],[17,"LIVENESS_ERROR_ENCOUNTERED","","",null,null],[17,"ROTATED_IN_STORAGE","","",null,null],[17,"SUBMITTED_ROTATION_TRANSACTION","","",null,null],[17,"WAITING_ON_RECONFIGURATION","","",null,null],[17,"WAITING_ON_TRANSACTION_EXECUTION","","",null,null],[17,"UNEXPECTED_ERROR_ENCOUNTERED","","",null,null],[0,"diem_interface","diem_key_manager","",null,null],[3,"JsonRpcDiemInterface","diem_key_manager::diem_interface","This implements the DiemInterface by talking directly to…",null,null],[8,"DiemInterface","","This defines a generic trait used to interact with the…",null,null],[10,"diem_timestamp","","Retrieves the current time from the blockchain, this is…",2,[[],[["result",4],["error",4]]]],[10,"last_reconfiguration","","Retrieves the last reconfiguration time from the…",2,[[],[["result",4],["error",4]]]],[10,"retrieve_sequence_number","","Retrieve current sequence number for the provided account.",2,[[["accountaddress",3]],[["result",4],["error",4]]]],[10,"submit_transaction","","Submits a transaction to the block chain and returns…",2,[[["transaction",4]],[["error",4],["result",4]]]],[10,"retrieve_validator_config","","Retrieves the ValidatorConfig at the specified…",2,[[["accountaddress",3]],[["validatorconfig",3],["error",4],["result",4]]]],[10,"retrieve_validator_info","","Retrieves the ValidatorInfo for the specified account from…",2,[[["accountaddress",3]],[["result",4],["error",4],["validatorinfo",3]]]],[10,"retrieve_account_state","","Fetches the AccountState associated with a specific…",2,[[["accountaddress",3]],[["result",4],["accountstate",3],["error",4]]]],[11,"new","","",3,[[["string",3]]]],[0,"logging","diem_key_manager","",null,null],[3,"LogSchema","diem_key_manager::logging","",null,null],[4,"LogEntry","","",null,null],[13,"CheckKeyStatus","","",4,null],[13,"FullKeyRotation","","",4,null],[13,"Initialized","","",4,null],[13,"KeyRotatedInStorage","","",4,null],[13,"KeyStillFresh","","",4,null],[13,"Sleep","","",4,null],[13,"TransactionResubmission","","",4,null],[13,"TransactionSubmitted","","",4,null],[13,"WaitForReconfiguration","","",4,null],[13,"WaitForTransactionExecution","","",4,null],[4,"LogEvent","","",null,null],[13,"Error","","",5,null],[13,"Pending","","",5,null],[13,"Success","","",5,null],[11,"name","","",6,[[["logentry",4]]]],[11,"event","","",6,[[["logevent",4]]]],[11,"consensus_key","","",6,[[["ed25519publickey",3]]]],[11,"json_rpc_endpoint","","",6,[[]]],[11,"liveness_error","","",6,[[["error",4]]]],[11,"sleep_duration","","",6,[[]]],[11,"unexpected_error","","",6,[[["error",4]]]],[11,"new","","",6,[[["logentry",4]]]],[11,"new","diem_key_manager","",7,[[["timeservice",4],["chainid",3]]]],[11,"execute","","Begins execution of the key manager by running an infinite…",7,[[],[["error",4],["result",4]]]],[11,"execute_once","","Checks the current state of the validator keys and…",7,[[],[["error",4],["result",4]]]],[11,"compare_storage_to_config","","",7,[[],[["error",4],["result",4]]]],[11,"compare_info_to_config","","",7,[[],[["error",4],["result",4]]]],[11,"last_reconfiguration","","",7,[[],[["result",4],["error",4]]]],[11,"last_rotation","","",7,[[],[["result",4],["error",4]]]],[11,"diem_timestamp","","",7,[[],[["result",4],["error",4]]]],[11,"resubmit_consensus_key_transaction","","",7,[[],[["error",4],["result",4]]]],[11,"rotate_consensus_key","","",7,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"submit_key_rotation_transaction","","",7,[[["ed25519publickey",3]],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"evaluate_status","","Evaluates the current status of the key manager by…",7,[[],[["result",4],["error",4],["action",4]]]],[11,"perform_action","","",7,[[["action",4]],[["error",4],["result",4]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","diem_key_manager::diem_interface","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diem_key_manager::logging","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"diem_timestamp","diem_key_manager::diem_interface","",3,[[],[["result",4],["error",4]]]],[11,"last_reconfiguration","","",3,[[],[["result",4],["error",4]]]],[11,"retrieve_sequence_number","","",3,[[["accountaddress",3]],[["result",4],["error",4]]]],[11,"submit_transaction","","",3,[[["transaction",4]],[["error",4],["result",4]]]],[11,"retrieve_validator_config","","",3,[[["accountaddress",3]],[["validatorconfig",3],["error",4],["result",4]]]],[11,"retrieve_validator_info","","",3,[[["accountaddress",3]],[["result",4],["error",4],["validatorinfo",3]]]],[11,"retrieve_account_state","","",3,[[["accountaddress",3]],[["result",4],["accountstate",3],["error",4]]]],[11,"from","diem_key_manager","",1,[[["error",4]]]],[11,"clone","diem_key_manager::diem_interface","",3,[[],["jsonrpcdieminterface",3]]],[11,"clone","diem_key_manager::logging","",4,[[],["logentry",4]]],[11,"clone","","",5,[[],["logevent",4]]],[11,"eq","diem_key_manager","",0,[[["action",4]]]],[11,"eq","","",1,[[["error",4]]]],[11,"ne","","",1,[[["error",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"serialize","diem_key_manager::logging","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"visit","","",6,[[["visitor",8]]]]],"p":[[4,"Action"],[4,"Error"],[8,"DiemInterface"],[3,"JsonRpcDiemInterface"],[4,"LogEntry"],[4,"LogEvent"],[3,"LogSchema"],[3,"KeyManager"]]},\
"diem_log_derive":{"doc":"","i":[[24,"Schema","diem_log_derive","",null,null]],"p":[]},\
"diem_logger":{"doc":"This crates provides an API for logging in diem.","i":[[24,"Schema","diem_logger","",null,null],[3,"DiemLogger","","",null,null],[3,"Logger","","",null,null],[3,"DiemLoggerBuilder","","",null,null],[3,"Event","","",null,null],[3,"Filter","","",null,null],[3,"Metadata","","",null,null],[3,"Key","","",null,null],[3,"KeyValue","","",null,null],[4,"LevelFilter","","",null,null],[13,"Off","","",0,null],[13,"Error","","",0,null],[13,"Warn","","",0,null],[13,"Info","","",0,null],[13,"Debug","","",0,null],[13,"Trace","","",0,null],[4,"Level","","",null,null],[13,"Error","","The \\\"error\\\" level.",1,null],[13,"Warn","","The \\\"warn\\\" level.",1,null],[13,"Info","","The \\\"info\\\" level.",1,null],[13,"Debug","","The \\\"debug\\\" level.",1,null],[13,"Trace","","The \\\"trace\\\" level.",1,null],[4,"Value","","",null,null],[13,"Debug","","",2,null],[13,"Display","","",2,null],[13,"Serde","","",2,null],[4,"SecurityEvent","","",null,null],[13,"InvalidTransactionMempool","","Mempool received a transaction from another peer with an…",3,null],[13,"InvalidNetworkEventMempool","","Mempool received an invalid network event",3,null],[13,"ConsensusInvalidMessage","","Consensus received an invalid message (not well-formed,…",3,null],[13,"ConsensusEquivocatingVote","","Consensus received an equivocating vote",3,null],[13,"InvalidConsensusProposal","","Consensus received an invalid proposal",3,null],[13,"InvalidConsensusRound","","Consensus received an invalid new round message",3,null],[13,"InvalidSyncInfoMsg","","Consensus received an invalid sync info message",3,null],[13,"InvalidRetrievedBlock","","A received block is invalid",3,null],[13,"InvalidBlock","","A block being committed or executed is invalid",3,null],[13,"StateSyncInvalidChunk","","Invalid chunk of transactions received",3,null],[13,"InvalidNetworkEventHC","","HealthChecker received an invalid network event",3,null],[13,"InvalidHealthCheckerMsg","","HealthChecker received an invalid message",3,null],[13,"InvalidNetworkEvent","","Network received an invalid message from a remote peer",3,null],[13,"NoiseHandshake","","A failed noise handshake that\'s either a clear bug or…",3,null],[0,"prelude","","",null,null],[3,"FileWriter","diem_logger::prelude","A struct for writing logs to a file",null,null],[4,"SecurityEvent","","",null,null],[13,"InvalidTransactionMempool","","Mempool received a transaction from another peer with an…",3,null],[13,"InvalidNetworkEventMempool","","Mempool received an invalid network event",3,null],[13,"ConsensusInvalidMessage","","Consensus received an invalid message (not well-formed,…",3,null],[13,"ConsensusEquivocatingVote","","Consensus received an equivocating vote",3,null],[13,"InvalidConsensusProposal","","Consensus received an invalid proposal",3,null],[13,"InvalidConsensusRound","","Consensus received an invalid new round message",3,null],[13,"InvalidSyncInfoMsg","","Consensus received an invalid sync info message",3,null],[13,"InvalidRetrievedBlock","","A received block is invalid",3,null],[13,"InvalidBlock","","A block being committed or executed is invalid",3,null],[13,"StateSyncInvalidChunk","","Invalid chunk of transactions received",3,null],[13,"InvalidNetworkEventHC","","HealthChecker received an invalid network event",3,null],[13,"InvalidHealthCheckerMsg","","HealthChecker received an invalid message",3,null],[13,"InvalidNetworkEvent","","Network received an invalid message from a remote peer",3,null],[13,"NoiseHandshake","","A failed noise handshake that\'s either a clear bug or…",3,null],[0,"json_log","diem_logger","",null,null],[3,"JsonLogEntry","diem_logger::json_log","",null,null],[12,"name","","",4,null],[12,"timestamp","","",4,null],[12,"json","","",4,null],[5,"send_json_log","","Sends event to event stream.",null,[[["jsonlogentry",3]]]],[5,"pop_last_entries","","Get up to MAX_EVENTS_IN_QUEUE last events and clears the…",null,[[],[["vec",3],["jsonlogentry",3]]]],[11,"new","","",4,[[["value",4]]]],[11,"new","diem_logger","",5,[[]]],[11,"address","","",5,[[["string",3]]]],[11,"read_env","","",5,[[]]],[11,"level","","",5,[[["level",4]]]],[11,"remote_level","","",5,[[["level",4]]]],[11,"channel_size","","",5,[[]]],[11,"printer","","",5,[[["writer",8],["box",3]]]],[11,"is_async","","",5,[[]]],[11,"init","","",5,[[]]],[11,"build","","",5,[[],[["diemlogger",3],["arc",3]]]],[11,"builder","","",6,[[],["diemloggerbuilder",3]]],[11,"new","","",6,[[],["diemloggerbuilder",3]]],[11,"init_for_testing","","",6,[[]]],[11,"set_filter","","",6,[[["filter",3]]]],[11,"set_remote_filter","","",6,[[["filter",3]]]],[11,"new","diem_logger::prelude","",7,[[["pathbuf",3]]]],[11,"dispatch","diem_logger","",8,[[["metadata",3],["arguments",3],["option",4]]]],[11,"metadata","","",8,[[],["metadata",3]]],[11,"message","","",8,[[],[["arguments",3],["option",4]]]],[11,"keys_and_values","","",8,[[]]],[11,"max","","Returns the most verbose logging level filter.",0,[[]]],[11,"builder","","",9,[[],["builder",3]]],[11,"enabled","","",9,[[["metadata",3]]]],[11,"new","","",10,[[]]],[11,"as_str","","",10,[[]]],[11,"from_serde","","Get a value from a debuggable type.",2,[[]]],[11,"from_debug","","Get a value from a debuggable type.",2,[[]]],[11,"from_display","","Get a value from a displayable type.",2,[[]]],[11,"new","","",11,[[["value",4]]]],[11,"new","","",12,[[["level",4]]]],[11,"enabled","","",12,[[]]],[11,"level","","",12,[[],["level",4]]],[11,"target","","",12,[[]]],[11,"module_path","","",12,[[]]],[11,"file","","",12,[[]]],[11,"line","","",12,[[]]],[11,"location","","",12,[[]]],[0,"sample","","Implement periodic sampling for logs",null,null],[3,"Sampling","diem_logger::sample","",null,null],[4,"SampleRate","","",null,null],[13,"Duration","","Only sample a single time during a window of time. This…",13,null],[13,"Frequency","","Sample based on the frequency of the event. The provided…",13,null],[13,"Always","","Always Sample",13,null],[11,"new","","",14,[[["samplerate",4]]]],[11,"sample","","",14,[[]]],[17,"CHANNEL_SIZE","diem_logger","",null,null],[8,"Writer","","An trait encapsulating the operations required for writing…",null,null],[10,"write","","Write the log.",15,[[["string",3]]]],[8,"Schema","","A schema of key-value pairs.",null,null],[10,"visit","","Visit key-value pairs.",16,[[["visitor",8]]]],[8,"Visitor","","A visitor for the key-value pairs in a `Schema`.",null,null],[10,"visit_pair","","Visit a key-value pair.",17,[[["key",3],["value",4]]]],[14,"event","","Writes event to event stream Example: event!(\\\"committed\\\",…",null,null],[14,"log","","",null,null],[14,"trace","","",null,null],[14,"debug","","",null,null],[14,"info","","",null,null],[14,"warn","","",null,null],[14,"error","","",null,null],[14,"sample","","",null,null],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"erased_serialize","","",12,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"erased_serialize","","",10,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","diem_logger::prelude","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","diem_logger::json_log","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","diem_logger::sample","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"write","diem_logger::prelude","Write to file",7,[[["string",3]]]],[11,"visit","diem_logger","",11,[[["visitor",8]]]],[11,"visit","","",3,[[["visitor",8]]]],[11,"from","","",0,[[["level",4]]]],[11,"clone","diem_logger::json_log","",4,[[],["jsonlogentry",3]]],[11,"clone","diem_logger","",0,[[],["levelfilter",4]]],[11,"clone","","",10,[[],["key",3]]],[11,"clone","","",2,[[],["value",4]]],[11,"clone","","",11,[[],["keyvalue",3]]],[11,"clone","","",12,[[],["metadata",3]]],[11,"clone","","",1,[[],["level",4]]],[11,"clone","","",3,[[],["securityevent",4]]],[11,"cmp","","",0,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",10,[[["key",3]],["ordering",4]]],[11,"cmp","","",1,[[["level",4]],["ordering",4]]],[11,"eq","","",0,[[["levelfilter",4]]]],[11,"eq","","",10,[[["key",3]]]],[11,"ne","","",10,[[["key",3]]]],[11,"eq","","",1,[[["level",4]]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",10,[[["key",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["key",3]]]],[11,"le","","",10,[[["key",3]]]],[11,"gt","","",10,[[["key",3]]]],[11,"ge","","",10,[[["key",3]]]],[11,"partial_cmp","","",1,[[["level",4]],[["ordering",4],["option",4]]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","diem_logger::sample","",13,[[["formatter",3]],["result",6]]],[11,"fmt","diem_logger","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",10,[[]]],[11,"hash","","",1,[[]]],[11,"from_str","","",0,[[],["result",4]]],[11,"from_str","","",1,[[],[["level",4],["result",4]]]],[11,"serialize","diem_logger::json_log","",4,[[],["result",4]]],[11,"serialize","diem_logger","",10,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"deserialize","diem_logger::json_log","",4,[[],["result",4]]],[11,"deserialize","diem_logger","",12,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]]],"p":[[4,"LevelFilter"],[4,"Level"],[4,"Value"],[4,"SecurityEvent"],[3,"JsonLogEntry"],[3,"DiemLoggerBuilder"],[3,"DiemLogger"],[3,"FileWriter"],[3,"Event"],[3,"Filter"],[3,"Key"],[3,"KeyValue"],[3,"Metadata"],[4,"SampleRate"],[3,"Sampling"],[8,"Writer"],[8,"Schema"],[8,"Visitor"]]},\
"diem_management":{"doc":"","i":[[5,"read_key_from_file","diem_management","Reads a given ed25519 public key from file. Attempts to…",null,[[["pathbuf",3]],[["ed25519publickey",3],["string",3],["result",4]]]],[0,"config","","",null,null],[3,"Config","diem_management::config","A config file for working with management tooling.",null,null],[12,"chain_id","","",0,null],[12,"json_server","","",0,null],[12,"shared_backend","","",0,null],[12,"validator_backend","","",0,null],[3,"ConfigPath","","",null,null],[11,"load","","",0,[[["pathbuf",3]],[["result",4],["error",4],["config",3]]]],[11,"override_chain_id","","",0,[[["chainid",3],["option",4]]]],[11,"override_json_server","","",0,[[["option",4]]]],[11,"override_shared_backend","","",0,[[["option",4]],[["error",4],["result",4]]]],[11,"override_validator_backend","","",0,[[["option",4]],[["error",4],["result",4]]]],[11,"shared_backend","","",0,[[],["storagewrapper",3]]],[11,"shared_backend_with_namespace","","",0,[[["string",3]],["storagewrapper",3]]],[11,"validator_backend","","",0,[[],["storagewrapper",3]]],[11,"load","","",1,[[],[["result",4],["error",4],["config",3]]]],[0,"error","diem_management","",null,null],[4,"Error","diem_management::error","",null,null],[13,"BackendInvalidKeyValue","","",2,null],[13,"BackendMissingBackendKey","","",2,null],[13,"BackendParsingError","","",2,null],[13,"CommandArgumentError","","",2,null],[13,"ConfigError","","",2,null],[13,"IO","","",2,null],[13,"BCS","","",2,null],[13,"JsonRpcReadError","","",2,null],[13,"JsonRpcWriteError","","",2,null],[13,"NetworkAddressDecodeError","","",2,null],[13,"StorageUnavailable","","",2,null],[13,"StorageReadError","","",2,null],[13,"StorageSigningError","","",2,null],[13,"StorageWriteError","","",2,null],[13,"UnableToParse","","",2,null],[13,"UnableToParseFile","","",2,null],[13,"UnableToReadFile","","",2,null],[13,"UnexpectedCommand","","",2,null],[13,"UnexpectedError","","",2,null],[0,"secure_backend","diem_management","",null,null],[3,"SecureBackend","diem_management::secure_backend","SecureBackend is a parameter that is stored as set of…",null,null],[12,"backend","","",3,null],[12,"parameters","","",3,null],[3,"ValidatorBackend","","",null,null],[12,"validator_backend","","",4,null],[3,"SharedBackend","","",null,null],[12,"shared_backend","","",5,null],[17,"BACKEND","","",null,null],[17,"DISK","","",null,null],[17,"GITHUB","","",null,null],[17,"MEMORY","","",null,null],[17,"VAULT","","",null,null],[0,"storage","diem_management","",null,null],[3,"StorageWrapper","diem_management::storage","A helper to handle common error handling and functionality…",null,null],[5,"to_x25519","","",null,[[["ed25519publickey",3]],[["result",4],["error",4],["publickey",3]]]],[11,"encryptor","","",6,[[],["encryptor",3]]],[11,"value","","",6,[[],[["result",4],["deserializeowned",8],["error",4]]]],[11,"account_address","","",6,[[],[["result",4],["accountaddress",3],["error",4]]]],[11,"string","","",6,[[],[["result",4],["error",4],["string",3]]]],[11,"transaction","","",6,[[],[["transaction",4],["error",4],["result",4]]]],[11,"u64","","",6,[[],[["error",4],["result",4]]]],[11,"waypoint","","",6,[[],[["result",4],["error",4],["waypoint",3]]]],[11,"ed25519_key","","Retrieves the Public key, that is stored as a public key",6,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"x25519_key","","Retrieves the Public key that is stored as a public key",6,[[],[["result",4],["error",4],["publickey",3]]]],[11,"rotate_key","","",6,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"ed25519_public_from_private","","Retrieves public key from the stored private key",6,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"ed25519_public_from_private_previous_version","","Retrieves the previous public key from the stored private…",6,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"ed25519_private","","Retrieves public key from the stored private key",6,[[],[["ed25519privatekey",3],["error",4],["result",4]]]],[11,"x25519_public_from_private","","Retrieves public key from the stored private key",6,[[],[["result",4],["error",4],["publickey",3]]]],[11,"set","","",6,[[["serialize",8]],[["error",4],["result",4]]]],[11,"sign","","Sign a transaction",6,[[["rawtransaction",3]],[["result",4],["error",4],["signedtransaction",3]]]],[11,"sign_using_version","","Sign a transaction with the given version",6,[[["rawtransaction",3],["ed25519publickey",3]],[["result",4],["error",4],["signedtransaction",3]]]],[0,"transaction","diem_management","",null,null],[5,"build_raw_transaction","diem_management::transaction","Builds a `RawTransaction` to handle common transaction…",null,[[["chainid",3],["accountaddress",3],["script",3]],["rawtransaction",3]]],[0,"validator_config","diem_management","",null,null],[3,"ValidatorConfig","diem_management::validator_config","",null,null],[12,"config","","",7,null],[12,"chain_id","","",7,null],[12,"validator_backend","","",7,null],[5,"validate_address","","Validates an address to have a DNS/IP and a port, as well…",null,[[["networkaddress",3]],[["error",4],["result",4]]]],[11,"config","","",7,[[],[["result",4],["error",4],["config",3]]]],[11,"build_transaction","","",7,[[["networkaddress",3]],[["transaction",4],["error",4],["result",4]]]],[0,"waypoint","diem_management","",null,null],[3,"InsertWaypoint","diem_management::waypoint","",null,null],[12,"config","","",8,null],[11,"execute","","",8,[[],[["error",4],["result",4]]]],[0,"constants","diem_management","",null,null],[17,"COMMON_NS","diem_management::constants","",null,null],[17,"LAYOUT","","",null,null],[17,"VALIDATOR_CONFIG","","",null,null],[17,"VALIDATOR_OPERATOR","","",null,null],[17,"GAS_UNIT_PRICE","","",null,null],[17,"MAX_GAS_AMOUNT","","",null,null],[17,"GAS_CURRENCY_CODE","","",null,null],[17,"TXN_EXPIRATION_SECS","","",null,null],[14,"secure_backend","diem_management","",null,null],[14,"execute_command","","",null,null],[11,"from","diem_management::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","diem_management::error","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","diem_management::secure_backend","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","diem_management::storage","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","diem_management::validator_config","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","diem_management::waypoint","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"clone","diem_management::config","",0,[[],["config",3]]],[11,"clone","","",1,[[],["configpath",3]]],[11,"clone","diem_management::secure_backend","",3,[[],["securebackend",3]]],[11,"clone","","",4,[[],["validatorbackend",3]]],[11,"clone","","",5,[[],["sharedbackend",3]]],[11,"clone","diem_management::validator_config","",7,[[],["validatorconfig",3]]],[11,"default","diem_management::config","",0,[[]]],[11,"default","","",1,[[],["configpath",3]]],[11,"eq","","",0,[[["config",3]]]],[11,"ne","","",0,[[["config",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","diem_management::error","",2,[[["formatter",3]],["result",6]]],[11,"fmt","diem_management::secure_backend","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","diem_management::validator_config","",7,[[["formatter",3]],["result",6]]],[11,"fmt","diem_management::waypoint","",8,[[["formatter",3]],["result",6]]],[11,"fmt","diem_management::error","",2,[[["formatter",3]],["result",6]]],[11,"try_from","diem_management::secure_backend","",3,[[],[["error",4],["result",4]]]],[11,"from_str","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],[["securebackend",4],["error",4],["result",4]]]],[11,"source","diem_management::error","",2,[[],[["option",4],["error",8]]]],[11,"deserialize","diem_management::config","",0,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"clap","","",1,[[],["app",3]]],[11,"from_clap","","",1,[[["argmatches",3]]]],[11,"clap","diem_management::secure_backend","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"clap","","",5,[[],["app",3]]],[11,"from_clap","","",5,[[["argmatches",3]]]],[11,"clap","diem_management::validator_config","",7,[[],["app",3]]],[11,"from_clap","","",7,[[["argmatches",3]]]],[11,"clap","diem_management::waypoint","",8,[[],["app",3]]],[11,"from_clap","","",8,[[["argmatches",3]]]],[11,"augment_clap","diem_management::config","",1,[[["app",3]],["app",3]]],[11,"is_subcommand","","",1,[[]]],[11,"augment_clap","diem_management::secure_backend","",4,[[["app",3]],["app",3]]],[11,"is_subcommand","","",4,[[]]],[11,"augment_clap","","",5,[[["app",3]],["app",3]]],[11,"is_subcommand","","",5,[[]]],[11,"augment_clap","diem_management::validator_config","",7,[[["app",3]],["app",3]]],[11,"is_subcommand","","",7,[[]]],[11,"augment_clap","diem_management::waypoint","",8,[[["app",3]],["app",3]]],[11,"is_subcommand","","",8,[[]]]],"p":[[3,"Config"],[3,"ConfigPath"],[4,"Error"],[3,"SecureBackend"],[3,"ValidatorBackend"],[3,"SharedBackend"],[3,"StorageWrapper"],[3,"ValidatorConfig"],[3,"InsertWaypoint"]]},\
"diem_mempool":{"doc":"Mempool is used to hold transactions that have been…","i":[[3,"CommitNotification","diem_mempool","Notification from state sync to mempool of commit event.…",null,null],[12,"transactions","","",0,null],[12,"block_timestamp_usecs","","Timestamp of committed block.",0,null],[12,"callback","","",0,null],[3,"CommitResponse","","",null,null],[12,"msg","","error msg if applicable - empty string if commit was…",1,null],[3,"CommittedTransaction","","Successfully executed and committed txn",null,null],[12,"sender","","",2,null],[12,"sequence_number","","",2,null],[3,"TransactionExclusion","","",null,null],[12,"sender","","",3,null],[12,"sequence_number","","",3,null],[4,"ConsensusRequest","","Message sent from consensus to mempool.",null,null],[13,"GetBlockRequest","","Request to pull block to submit to consensus.",4,null],[13,"RejectNotification","","Notifications about rejected committed txns.",4,null],[4,"ConsensusResponse","","Response sent from mempool to consensus.",null,null],[13,"GetBlockResponse","","Block to submit to consensus",5,null],[13,"CommitResponse","","",5,null],[5,"bootstrap","","",null,[[["receiver",3],["dbreader",8],["receiver",3],["onchainconfigpayload",3],["vec",3],["nodeconfig",3],["arc",3],["consensusrequest",4],["commitnotification",3],["receiver",3],["receiver",3]],["runtime",3]]],[5,"gen_mempool_reconfig_subscription","","",null,[[]]],[0,"network","","Interface between Mempool and Network layers.",null,null],[3,"MempoolNetworkSender","diem_mempool::network","The interface from Mempool to Networking layer.",null,null],[4,"MempoolSyncMsg","","Container for exchanging transactions with other Mempools.",null,null],[13,"BroadcastTransactionsRequest","","Broadcast request issued by the sender.",6,null],[12,"request_id","diem_mempool::network::MempoolSyncMsg","Unique id of sync request. Can be used by sender for…",7,null],[12,"transactions","","",7,null],[13,"BroadcastTransactionsResponse","diem_mempool::network","Broadcast ack issued by the receiver.",6,null],[12,"request_id","diem_mempool::network::MempoolSyncMsg","",8,null],[12,"retry","","Retry signal from recipient if there are txns in…",8,null],[12,"backoff","","A backpressure signal from the recipient when it is…",8,null],[5,"network_endpoint_config","diem_mempool::network","Create a new Sender that only sends for the…",null,[[]]],[6,"MempoolNetworkEvents","","The interface from Network to Mempool layer.",null,null],[17,"MEMPOOL_DIRECT_SEND_PROTOCOL","","Protocol id for mempool direct-send calls.",null,null],[0,"fuzzing","diem_mempool","",null,null],[5,"mempool_incoming_transactions_strategy","diem_mempool::fuzzing","",null,[[]]],[5,"test_mempool_process_incoming_transactions_impl","","",null,[[["timelinestate",4],["vec",3],["signedtransaction",3]]]],[0,"mocks","diem_mempool","",null,null],[3,"MockSharedMempool","diem_mempool::mocks","Mock of a running instance of shared mempool.",null,null],[12,"ac_client","","",9,null],[12,"mempool","","",9,null],[12,"consensus_sender","","",9,null],[12,"state_sync_sender","","",9,null],[11,"send_to","diem_mempool::network","",10,[[["peerid",3],["mempoolsyncmsg",4]],[["result",4],["networkerror",3]]]],[6,"MempoolClientSender","diem_mempool","",null,null],[6,"SubmissionStatus","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","diem_mempool::mocks","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","diem_mempool::network","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"erased_serialize","","",6,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"clone","","",6,[[],["mempoolsyncmsg",4]]],[11,"clone","","",10,[[],["mempoolnetworksender",3]]],[11,"clone","diem_mempool","",3,[[],["transactionexclusion",3]]],[11,"fmt","diem_mempool::network","",6,[[["formatter",3]],["result",6]]],[11,"fmt","diem_mempool","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"deserialize","diem_mempool::network","",6,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"new","","",10,[[["peermanagerrequestsender",3],["connectionrequestsender",3]]]],[11,"new","diem_mempool::mocks","Creates a mock of a running instance of shared mempool.…",9,[[["option",4],["receiver",3]]]],[11,"add_txns","","",9,[[["vec",3],["signedtransaction",3]],["result",6]]],[11,"read_timeline","","True if all the given txns are in mempool, else false.",9,[[],[["vec",3],["signedtransaction",3]]]]],"p":[[3,"CommitNotification"],[3,"CommitResponse"],[3,"CommittedTransaction"],[3,"TransactionExclusion"],[4,"ConsensusRequest"],[4,"ConsensusResponse"],[4,"MempoolSyncMsg"],[13,"BroadcastTransactionsRequest"],[13,"BroadcastTransactionsResponse"],[3,"MockSharedMempool"],[3,"MempoolNetworkSender"]]},\
"diem_metrics":{"doc":"MetricsCountersUsed to measure values that are added to…","i":[[14,"register_histogram","diem_metrics","Create a [`Histogram`] and registers to default registry.",null,null],[14,"register_histogram_vec","","Create a [`HistogramVec`] and registers to default registry.",null,null],[14,"register_int_counter","","Create an [`IntCounter`] and registers to default registry.",null,null],[14,"register_int_counter_vec","","Create an [`IntCounterVec`] and registers to default…",null,null],[14,"register_int_gauge","","Create an [`IntGauge`] and registers to default registry.",null,null],[14,"register_int_gauge_vec","","Create an [`IntGaugeVec`] and registers to default registry.",null,null],[3,"Histogram","","A [`Metric`] counts individual observations from an event…",null,null],[3,"HistogramTimer","","Timer to measure and record the duration of an event.",null,null],[6,"HistogramVec","","A [`Collector`] that bundles a set of Histograms that all…",null,null],[6,"IntCounter","","The integer version of [`Counter`]. Provides better…",null,null],[6,"IntCounterVec","","The integer version of [`CounterVec`]. Provides better…",null,null],[6,"IntGauge","","The integer version of [`Gauge`]. Provides better…",null,null],[6,"IntGaugeVec","","The integer version of [`GaugeVec`]. Provides better…",null,null],[3,"DurationHistogram","","A small wrapper around Histogram to handle the special…",null,null],[3,"OpMetrics","","",null,null],[5,"gather_metrics","","",null,[[],[["vec",3],["metricfamily",3]]]],[5,"get_all_metrics","","",null,[[],[["hashmap",3],["string",3]]]],[5,"dump_all_metrics_to_file_periodically","","",null,[[]]],[0,"metric_server","","",null,null],[5,"start_server","diem_metrics::metric_server","",null,[[["string",3]]]],[11,"new","diem_metrics","",0,[[["histogram",3]],["durationhistogram",3]]],[11,"observe_duration","","",0,[[["duration",3]]]],[11,"start_timer","","",0,[[],["histogramtimer",3]]],[11,"new","","",1,[[["string",3],["into",8]],["opmetrics",3]]],[11,"new_and_registered","","",1,[[["string",3],["into",8]],["opmetrics",3]]],[11,"gauge","","",1,[[],["intgauge",6]]],[11,"peer_gauge","","",1,[[],["intgauge",6]]],[11,"inc","","",1,[[]]],[11,"inc_by","","",1,[[]]],[11,"set","","",1,[[]]],[11,"observe","","",1,[[]]],[11,"observe_duration","","",1,[[["duration",3]]]],[11,"timer","","",1,[[],["histogramtimer",3]]],[7,"NUM_METRICS","","",null,null],[14,"monitor","","Helper function to record metrics for external calls.…",null,null],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",2,[[],["histogram",3]]],[11,"drop","","",3,[[]]],[11,"metric","","",2,[[],["metric",3]]],[11,"desc","","",2,[[],[["vec",3],["desc",3]]]],[11,"collect","","",2,[[],[["metricfamily",3],["vec",3]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",1,[[],["opmetrics",3]]],[11,"desc","","",1,[[],[["desc",3],["vec",3]]]],[11,"collect","","",1,[[],[["vec",3],["metricfamily",3]]]],[11,"with_opts","","`with_opts` creates a [`Histogram`] with the `opts` options.",2,[[["histogramopts",3]],[["result",4],["histogram",3],["error",4]]]],[11,"observe","","Add a single observation to the [`Histogram`].",2,[[]]],[11,"start_timer","","Return a [`HistogramTimer`] to track a duration.",2,[[],["histogramtimer",3]]],[11,"observe_closure_duration","","Observe execution time of a closure, in second.",2,[[]]],[11,"local","","Return a [`LocalHistogram`] for single thread usage.",2,[[],["localhistogram",3]]],[11,"get_sample_sum","","Return accumulated sum of all samples.",2,[[]]],[11,"get_sample_count","","Return count of all samples.",2,[[]]],[11,"observe_duration","","Observe and record timer duration (in seconds).",3,[[]]],[11,"stop_and_record","","Observe, record and return timer duration (in seconds).",3,[[]]],[11,"stop_and_discard","","Observe and return timer duration (in seconds).",3,[[]]]],"p":[[3,"DurationHistogram"],[3,"OpMetrics"],[3,"Histogram"],[3,"HistogramTimer"]]},\
"diem_metrics_core":{"doc":"","i":[[5,"gather","diem_metrics_core","Return all `MetricFamily` of `DEFAULT_REGISTRY`.",null,[[],[["metricfamily",3],["vec",3]]]],[14,"register_histogram","","Create a [`Histogram`] and registers to default registry.",null,null],[14,"register_histogram_vec","","Create a [`HistogramVec`] and registers to default registry.",null,null],[14,"register_int_counter","","Create an [`IntCounter`] and registers to default registry.",null,null],[14,"register_int_counter_vec","","Create an [`IntCounterVec`] and registers to default…",null,null],[14,"register_int_gauge","","Create an [`IntGauge`] and registers to default registry.",null,null],[14,"register_int_gauge_vec","","Create an [`IntGaugeVec`] and registers to default registry.",null,null],[8,"Encoder","","An interface for encoding metric families into an…",null,null],[10,"encode","","`encode` converts a slice of MetricFamily proto messages…",0,[[],[["result",4],["error",4]]]],[10,"format_type","","`format_type` returns target format.",0,[[]]],[3,"Histogram","","A [`Metric`] counts individual observations from an event…",null,null],[3,"HistogramTimer","","Timer to measure and record the duration of an event.",null,null],[6,"HistogramVec","","A [`Collector`] that bundles a set of Histograms that all…",null,null],[6,"IntCounter","","The integer version of [`Counter`]. Provides better…",null,null],[6,"IntCounterVec","","The integer version of [`CounterVec`]. Provides better…",null,null],[6,"IntGauge","","The integer version of [`Gauge`]. Provides better…",null,null],[6,"IntGaugeVec","","The integer version of [`GaugeVec`]. Provides better…",null,null],[3,"TextEncoder","","An implementation of an [`Encoder`] that converts a…",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"clone","","",1,[[],["histogram",3]]],[11,"drop","","",2,[[]]],[11,"encode","","",3,[[],[["result",4],["error",4]]]],[11,"format_type","","",3,[[]]],[11,"default","","",3,[[],["textencoder",3]]],[11,"metric","","",1,[[],["metric",3]]],[11,"desc","","",1,[[],[["vec",3],["desc",3]]]],[11,"collect","","",1,[[],[["metricfamily",3],["vec",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"with_opts","","`with_opts` creates a [`Histogram`] with the `opts` options.",1,[[["histogramopts",3]],[["result",4],["histogram",3],["error",4]]]],[11,"observe","","Add a single observation to the [`Histogram`].",1,[[]]],[11,"start_timer","","Return a [`HistogramTimer`] to track a duration.",1,[[],["histogramtimer",3]]],[11,"observe_closure_duration","","Observe execution time of a closure, in second.",1,[[]]],[11,"local","","Return a [`LocalHistogram`] for single thread usage.",1,[[],["localhistogram",3]]],[11,"get_sample_sum","","Return accumulated sum of all samples.",1,[[]]],[11,"get_sample_count","","Return count of all samples.",1,[[]]],[11,"observe_duration","","Observe and record timer duration (in seconds).",2,[[]]],[11,"stop_and_record","","Observe, record and return timer duration (in seconds).",2,[[]]],[11,"stop_and_discard","","Observe and return timer duration (in seconds).",2,[[]]],[11,"new","","Create a new text encoder.",3,[[],["textencoder",3]]]],"p":[[8,"Encoder"],[3,"Histogram"],[3,"HistogramTimer"],[3,"TextEncoder"]]},\
"diem_network_address":{"doc":"","i":[[3,"NetworkAddress","diem_network_address","OverviewDiem `NetworkAddress` is a compact, efficient,…",null,null],[3,"DnsName","","A minimally parsed DNS name. We don\'t really do any…",null,null],[3,"EmptyError","","",null,null],[4,"Protocol","","A single protocol in the [`NetworkAddress`] protocol stack.",null,null],[13,"Ip4","","",0,null],[13,"Ip6","","",0,null],[13,"Dns","","",0,null],[13,"Dns4","","",0,null],[13,"Dns6","","",0,null],[13,"Tcp","","",0,null],[13,"Memory","","",0,null],[13,"NoiseIK","","",0,null],[13,"Handshake","","",0,null],[4,"ParseError","","Possible errors when parsing a human-readable…",null,null],[13,"UnknownProtocolType","","",1,null],[13,"UnexpectedEnd","","",1,null],[13,"ParseAddrError","","",1,null],[13,"ParseIntError","","",1,null],[13,"ParseX25519PubkeyError","","",1,null],[13,"EmptyProtocolString","","",1,null],[13,"InvalidProtocolString","","",1,null],[13,"EmptyDnsNameString","","",1,null],[13,"InvalidDnsNameCharacter","","",1,null],[13,"DnsNameTooLong","","",1,null],[13,"DecryptError","","",1,null],[13,"BCSError","","",1,null],[4,"IpFilter","","",null,null],[13,"Any","","",2,null],[13,"OnlyIp4","","",2,null],[13,"OnlyIp6","","",2,null],[5,"arb_diemnet_addr","","",null,[[]]],[5,"parse_memory","","parse the `&[Protocol]` into the `\\\"/memory/<port>\\\"` prefix…",null,[[],["option",4]]],[5,"parse_ip_tcp","","parse the `&[Protocol]` into the…",null,[[],["option",4]]],[5,"parse_dns_tcp","","parse the `&[Protocol]` into the…",null,[[],["option",4]]],[5,"parse_tcp","","",null,[[],["option",4]]],[5,"parse_noise_ik","","parse the `&[Protocol]` into the `\\\"/ln-noise-ik/<pubkey>\\\"`…",null,[[],["option",4]]],[5,"parse_handshake","","parse the `&[Protocol]` into the…",null,[[],["option",4]]],[0,"encrypted","","",null,null],[3,"EncNetworkAddress","diem_network_address::encrypted","An encrypted [`NetworkAddress`].",null,null],[6,"Key","","Convenient type alias for the `shared_val_netaddr_key` as…",null,null],[6,"KeyVersion","","",null,null],[17,"AES_GCM_TAG_LEN","","The length in bytes of the AES-256-GCM authentication tag.",null,null],[17,"AES_GCM_NONCE_LEN","","The length in bytes of the AES-256-GCM nonce.",null,null],[17,"KEY_LEN","","The length in bytes of the `shared_val_netaddr_key` and…",null,null],[17,"TEST_SHARED_VAL_NETADDR_KEY","","Constant key + version so we can push `EncNetworkAddress`…",null,null],[17,"TEST_SHARED_VAL_NETADDR_KEY_VERSION","","",null,null],[17,"HKDF_SALT","","We salt the HKDF for deriving the account keys to provide…",null,null],[11,"encrypt","","Panicsencrypt will panic if `addr` length > 64 GiB.",3,[[["keyversion",6],["networkaddress",3],["accountaddress",3],["key",6]],[["result",4],["parseerror",4]]]],[11,"decrypt","","",3,[[["accountaddress",3],["key",6]],[["networkaddress",3],["parseerror",4],["result",4]]]],[11,"key_version","","",3,[[],["keyversion",6]]],[11,"seq_num","","",3,[[]]],[11,"as_slice","diem_network_address","",4,[[]]],[11,"push","","",4,[[["protocol",4]]]],[11,"extend_from_slice","","",4,[[]]],[11,"encrypt","","See [`EncNetworkAddress::encrypt`].",4,[[["keyversion",6],["key",6],["accountaddress",3]],[["encnetworkaddress",3],["parseerror",4],["result",4]]]],[11,"append_prod_protos","","Given a base `NetworkAddress`, append production protocols…",4,[[["publickey",3]]]],[11,"is_diemnet_addr","","Check that a `NetworkAddress` looks like a typical DiemNet…",4,[[]]],[11,"find_ip_addr","","Retrieves the IP address from the network address",4,[[],[["ipaddr",4],["option",4]]]],[11,"find_noise_proto","","A temporary, hacky function to parse out the first…",4,[[],[["option",4],["publickey",3]]]],[11,"rotate_noise_public_key","","A function to rotate public keys for `NoiseIK` protocols",4,[[["publickey",3]]]],[11,"mock","","",4,[[]]],[11,"matches","","",2,[[["ipaddr",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","diem_network_address::encrypted","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"as_ref","diem_network_address","",5,[[]]],[11,"from","","",1,[[["addrparseerror",3]]]],[11,"from","","",1,[[["parseinterror",3]]]],[11,"from","","",1,[[["cryptomaterialerror",4]]]],[11,"from","","",1,[[["error",4]]]],[11,"from","","",4,[[["protocol",4]],["networkaddress",3]]],[11,"from","","",4,[[["socketaddr",4]],["networkaddress",3]]],[11,"from","","",0,[[["ipaddr",4]],["protocol",4]]],[11,"into","","",5,[[],["string",3]]],[11,"into_iter","","",4,[[]]],[11,"clone","diem_network_address::encrypted","",3,[[],["encnetworkaddress",3]]],[11,"clone","diem_network_address","",4,[[],["networkaddress",3]]],[11,"clone","","",0,[[],["protocol",4]]],[11,"clone","","",5,[[],["dnsname",3]]],[11,"clone","","",2,[[],["ipfilter",4]]],[11,"eq","diem_network_address::encrypted","",3,[[["encnetworkaddress",3]]]],[11,"ne","","",3,[[["encnetworkaddress",3]]]],[11,"eq","diem_network_address","",4,[[["networkaddress",3]]]],[11,"ne","","",4,[[["networkaddress",3]]]],[11,"eq","","",0,[[["protocol",4]]]],[11,"ne","","",0,[[["protocol",4]]]],[11,"eq","","",5,[[["dnsname",3]]]],[11,"ne","","",5,[[["dnsname",3]]]],[11,"eq","","",2,[[["ipfilter",4]]]],[11,"fmt","diem_network_address::encrypted","",3,[[["formatter",3]],["result",6]]],[11,"fmt","diem_network_address","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"try_from","","",4,[[["protocol",4],["vec",3]],["result",4]]],[11,"try_from","","",5,[[["string",3]],["result",4]]],[11,"from_str","","",4,[[],["result",4]]],[11,"from_str","","",5,[[],["result",4]]],[11,"source","","",1,[[],[["option",4],["error",8]]]],[11,"to_socket_addrs","","",4,[[],[["error",3],["result",4]]]],[11,"serialize","diem_network_address::encrypted","",3,[[],["result",4]]],[11,"serialize","diem_network_address","",0,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"deserialize","diem_network_address::encrypted","",3,[[],["result",4]]],[11,"deserialize","diem_network_address","",0,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"arbitrary_with","diem_network_address::encrypted","",3,[[]]],[11,"arbitrary_with","diem_network_address","",0,[[]]],[11,"arbitrary_with","","",4,[[]]],[11,"arbitrary_with","","",5,[[]]]],"p":[[4,"Protocol"],[4,"ParseError"],[4,"IpFilter"],[3,"EncNetworkAddress"],[3,"NetworkAddress"],[3,"DnsName"],[3,"EmptyError"]]},\
"diem_network_address_encryption":{"doc":"","i":[[3,"Encryptor","diem_network_address_encryption","",null,null],[3,"ValidatorKeys","","",null,null],[4,"Error","","",null,null],[13,"AddressDeserialization","","",0,null],[13,"DecryptionError","","",0,null],[13,"BCSError","","",0,null],[13,"ParseError","","",0,null],[13,"StorageError","","",0,null],[13,"VersionNotFound","","",0,null],[5,"to_base64","","",null,[[],["result",4]]],[5,"from_base64","","",null,[[],[["result",4],["key",6]]]],[11,"new","","",1,[[["storage",4]]]],[11,"for_testing","","This generates an Encryptor for use in default / testing…",1,[[]]],[11,"add_key","","",1,[[["keyversion",6],["key",6]],[["result",4],["error",4]]]],[11,"set_current_version","","",1,[[["keyversion",6]],[["result",4],["error",4]]]],[11,"current_version","","",1,[[],[["keyversion",6],["result",4],["error",4]]]],[11,"encrypt","","",1,[[["accountaddress",3]],[["result",4],["vec",3],["error",4]]]],[11,"decrypt","","",1,[[["accountaddress",3]],[["error",4],["vec",3],["result",4]]]],[11,"initialize","","",1,[[],[["result",4],["error",4]]]],[11,"initialize_for_testing","","",1,[[],[["result",4],["error",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["parseerror",4]]]],[11,"from","","",0,[[["storageerror",4]]]],[11,"clone","","",2,[[],["validatorkeys",3]]],[11,"default","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]]],"p":[[4,"Error"],[3,"Encryptor"],[3,"ValidatorKeys"]]},\
"diem_nibble":{"doc":"`Nibble` represents a four-bit unsigned integer.","i":[[3,"Nibble","diem_nibble","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",0,[[]]],[11,"clone","","",0,[[],["nibble",3]]],[11,"cmp","","",0,[[["nibble",3]],["ordering",4]]],[11,"eq","","",0,[[["nibble",3]]]],[11,"ne","","",0,[[["nibble",3]]]],[11,"partial_cmp","","",0,[[["nibble",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["nibble",3]]]],[11,"le","","",0,[[["nibble",3]]]],[11,"gt","","",0,[[["nibble",3]]]],[11,"ge","","",0,[[["nibble",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"arbitrary_with","","",0,[[]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Nibble"]]},\
"diem_node":{"doc":"","i":[[3,"DiemHandle","diem_node","",null,null],[5,"start","","",null,[[["option",4],["pathbuf",3],["nodeconfig",3]]]],[5,"load_test_environment","","",null,[[["option",4],["pathbuf",3]]]],[5,"setup_environment","","",null,[[["option",4],["arc",3],["nodeconfig",3]],["diemhandle",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]]],"p":[[3,"DiemHandle"]]},\
"diem_operational_tool":{"doc":"","i":[[3,"TransactionContext","diem_operational_tool","Information for validating a transaction after it\'s been…",null,null],[12,"address","","",0,null],[12,"sequence_number","","",0,null],[12,"execution_result","","",0,null],[0,"command","","",null,null],[4,"Command","diem_operational_tool::command","",null,null],[13,"AccountResource","","",1,null],[13,"AddValidator","","",1,null],[13,"CheckEndpoint","","",1,null],[13,"CheckValidatorSetEndpoints","","",1,null],[13,"CreateValidator","","",1,null],[13,"CreateValidatorOperator","","",1,null],[13,"ExtractPrivateKey","","",1,null],[13,"ExtractPublicKey","","",1,null],[13,"InsertWaypoint","","",1,null],[13,"PrintAccount","","",1,null],[13,"PrintKey","","",1,null],[13,"PrintWaypoint","","",1,null],[13,"RemoveValidator","","",1,null],[13,"RotateConsensusKey","","",1,null],[13,"RotateFullNodeNetworkKey","","",1,null],[13,"RotateOperatorKey","","",1,null],[13,"RotateValidatorNetworkKey","","",1,null],[13,"SetValidatorConfig","","",1,null],[13,"SetValidatorOperator","","",1,null],[13,"ValidateTransaction","","",1,null],[13,"ValidatorConfig","","",1,null],[13,"ValidatorSet","","",1,null],[4,"CommandName","","",null,null],[13,"AccountResource","","",2,null],[13,"AddValidator","","",2,null],[13,"CheckEndpoint","","",2,null],[13,"CheckValidatorSetEndpoints","","",2,null],[13,"CreateValidator","","",2,null],[13,"CreateValidatorOperator","","",2,null],[13,"ExtractPrivateKey","","",2,null],[13,"ExtractPublicKey","","",2,null],[13,"InsertWaypoint","","",2,null],[13,"PrintAccount","","",2,null],[13,"PrintKey","","",2,null],[13,"PrintWaypoint","","",2,null],[13,"RemoveValidator","","",2,null],[13,"RotateConsensusKey","","",2,null],[13,"RotateOperatorKey","","",2,null],[13,"RotateFullNodeNetworkKey","","",2,null],[13,"RotateValidatorNetworkKey","","",2,null],[13,"SetValidatorConfig","","",2,null],[13,"SetValidatorOperator","","",2,null],[13,"ValidateTransaction","","",2,null],[13,"ValidatorConfig","","",2,null],[13,"ValidatorSet","","",2,null],[4,"ResultWrapper","","A result wrapper for displaying either a correct execution…",null,null],[13,"Result","","",3,null],[13,"Error","","",3,null],[11,"execute","","",1,[[],[["string",3],["error",4],["result",4]]]],[11,"print_transaction_context","","Show the transaction context and validation result in a…",1,[[["result",4],["transactioncontext",3],["error",4]],[["string",3],["error",4],["result",4]]]],[11,"account_resource","","",1,[[],[["simplifiedaccountresource",3],["result",4],["error",4]]]],[11,"add_validator","","",1,[[],[["result",4],["transactioncontext",3],["error",4]]]],[11,"check_endpoint","","",1,[[],[["string",3],["error",4],["result",4]]]],[11,"check_validator_set_endpoints","","",1,[[],[["string",3],["error",4],["result",4]]]],[11,"create_validator","","",1,[[],[["error",4],["result",4]]]],[11,"create_validator_operator","","",1,[[],[["error",4],["result",4]]]],[11,"extract_private_key","","",1,[[],[["result",4],["error",4]]]],[11,"extract_public_key","","",1,[[],[["result",4],["error",4]]]],[11,"insert_waypoint","","",1,[[],[["result",4],["error",4]]]],[11,"print_account","","",1,[[],[["error",4],["result",4],["accountaddress",3]]]],[11,"print_key","","",1,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"print_waypoint","","",1,[[],[["error",4],["result",4],["waypoint",3]]]],[11,"remove_validator","","",1,[[],[["result",4],["transactioncontext",3],["error",4]]]],[11,"rotate_consensus_key","","",1,[[],[["result",4],["error",4]]]],[11,"rotate_operator_key","","",1,[[],[["result",4],["error",4]]]],[11,"rotate_fullnode_network_key","","",1,[[],[["result",4],["error",4]]]],[11,"rotate_validator_network_key","","",1,[[],[["result",4],["error",4]]]],[11,"set_validator_config","","",1,[[],[["result",4],["transactioncontext",3],["error",4]]]],[11,"set_validator_operator","","",1,[[],[["result",4],["transactioncontext",3],["error",4]]]],[11,"validate_transaction","","",1,[[],[["result",4],["transactioncontext",3],["error",4]]]],[11,"validator_config","","",1,[[],[["decryptedvalidatorconfig",3],["error",4],["result",4]]]],[11,"validator_set","","",1,[[],[["vec",3],["result",4],["error",4]]]],[0,"json_rpc","diem_operational_tool","",null,null],[3,"JsonRpcClientWrapper","diem_operational_tool::json_rpc","A wrapper around JSON RPC for error handling",null,null],[11,"new","","",4,[[["string",3]],["jsonrpcclientwrapper",3]]],[11,"submit_transaction","","",4,[[["signedtransaction",3]],[["result",4],["transactioncontext",3],["error",4]]]],[11,"account_state","","",4,[[["accountaddress",3]],[["accountstate",3],["result",4],["error",4]]]],[11,"validator_config","","",4,[[["accountaddress",3]],[["result",4],["error",4],["validatorconfigresource",3]]]],[11,"validator_set","","This method returns all validator infos currently…",4,[[["option",4],["accountaddress",3]],[["vec",3],["error",4],["result",4]]]],[11,"account_resource","","",4,[[["accountaddress",3]],[["accountresource",3],["result",4],["error",4]]]],[11,"sequence_number","","",4,[[["accountaddress",3]],[["result",4],["error",4]]]],[11,"transaction_status","","",4,[[["accountaddress",3]],[["option",4],["result",4],["error",4]]]],[0,"test_helper","diem_operational_tool","",null,null],[3,"OperationalTool","diem_operational_tool::test_helper","A helper to test the operational tool in tests",null,null],[11,"new","","",5,[[["chainid",3],["string",3]],["operationaltool",3]]],[11,"account_resource","","",5,[[["accountaddress",3]],[["simplifiedaccountresource",3],["result",4],["error",4]]]],[11,"check_endpoint","","",5,[[["networkaddress",3]],[["string",3],["error",4],["result",4]]]],[11,"create_account","","",5,[[["commandname",4],["securebackend",4]],[["error",4],["result",4]]]],[11,"create_validator","","",5,[[["securebackend",4]],[["error",4],["result",4]]]],[11,"create_validator_operator","","",5,[[["securebackend",4]],[["error",4],["result",4]]]],[11,"extract_public_key","","",5,[[["securebackend",4]],[["result",4],["error",4]]]],[11,"extract_private_key","","",5,[[["securebackend",4]],[["result",4],["error",4]]]],[11,"insert_waypoint","","",5,[[["waypoint",3],["securebackend",4]],[["result",4],["error",4]]]],[11,"print_account","","",5,[[["securebackend",4]],[["error",4],["result",4],["accountaddress",3]]]],[11,"print_key","","",5,[[["securebackend",4]],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"print_waypoint","","",5,[[["securebackend",4]],[["error",4],["result",4],["waypoint",3]]]],[11,"set_validator_config","","",5,[[["option",4],["networkaddress",3],["securebackend",4]],[["result",4],["transactioncontext",3],["error",4]]]],[11,"rotate_consensus_key","","",5,[[["securebackend",4]],[["result",4],["error",4]]]],[11,"rotate_operator_key","","",5,[[["securebackend",4]],[["result",4],["error",4]]]],[11,"rotate_operator_key_with_custom_validation","","",5,[[["option",4],["securebackend",4]],[["result",4],["error",4]]]],[11,"rotate_validator_network_key","","",5,[[["securebackend",4]],[["result",4],["error",4]]]],[11,"rotate_fullnode_network_key","","",5,[[["securebackend",4]],[["result",4],["error",4]]]],[11,"validate_transaction","","",5,[[["accountaddress",3]],[["result",4],["transactioncontext",3],["error",4]]]],[11,"set_validator_operator","","",5,[[["accountaddress",3],["securebackend",4]],[["result",4],["transactioncontext",3],["error",4]]]],[11,"validator_config","","",5,[[["accountaddress",3],["securebackend",4]],[["decryptedvalidatorconfig",3],["error",4],["result",4]]]],[11,"validator_set","","",5,[[["option",4],["accountaddress",3],["securebackend",4]],[["vec",3],["result",4],["error",4]]]],[11,"add_validator","","",5,[[["accountaddress",3],["securebackend",4]],[["result",4],["transactioncontext",3],["error",4]]]],[11,"remove_validator","","",5,[[["accountaddress",3],["securebackend",4]],[["result",4],["transactioncontext",3],["error",4]]]],[11,"new","diem_operational_tool","",0,[[["accountaddress",3]],["transactioncontext",3]]],[11,"new_with_validation","","",0,[[["vmstatusview",4],["option",4],["accountaddress",3]],["transactioncontext",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","diem_operational_tool::command","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","diem_operational_tool::json_rpc","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","diem_operational_tool::test_helper","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","diem_operational_tool::command","",2,[[["command",4]]]],[11,"eq","","",2,[[["commandname",4]]]],[11,"eq","diem_operational_tool","",0,[[["transactioncontext",3]]]],[11,"ne","","",0,[[["transactioncontext",3]]]],[11,"fmt","diem_operational_tool::command","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","diem_operational_tool","",0,[[["formatter",3]],["result",6]]],[11,"fmt","diem_operational_tool::command","",2,[[["formatter",3]],["result",6]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","diem_operational_tool","",0,[[],["result",4]]],[11,"clap","diem_operational_tool::command","",1,[[],["app",3]]],[11,"from_clap","","",1,[[["argmatches",3]]]],[11,"augment_clap","","",1,[[["app",3]],["app",3]]],[11,"from_subcommand","","",1,[[],["option",4]]],[11,"is_subcommand","","",1,[[]]]],"p":[[3,"TransactionContext"],[4,"Command"],[4,"CommandName"],[4,"ResultWrapper"],[3,"JsonRpcClientWrapper"],[3,"OperationalTool"]]},\
"diem_proptest_helpers":{"doc":"","i":[[3,"GrowingSubset","diem_proptest_helpers","A set of elements, each with an associated key, that grows…",null,null],[3,"RepeatVec","","An efficient representation of a vector with repeated…",null,null],[3,"ValueGenerator","","Context for generating single values out of strategies.",null,null],[3,"Index","","Wrapper for `proptest`\'s…",null,null],[5,"with_stack_size","","Creates a new thread with a larger stack size.",null,[[],[["result",4],["box",3]]]],[5,"pick_idxs","","Given a maximum value `max` and a list of `Index`…",null,[[],["vec",3]]],[5,"pick_slice_idxs","","Given a maximum value `max` and a slice of `Index`…",null,[[],["vec",3]]],[11,"len","","Returns the number of elements in the current subset.",0,[[]]],[11,"is_empty","","Returns `true` if the current subset contains no elements.",0,[[]]],[11,"total_len","","Returns the total number of elements in the universal set.",0,[[]]],[11,"current","","Returns a slice containing the items in the current subset.",0,[[]]],[11,"pick_item","","Chooses an (index, value) pair from the current subset…",0,[[["index",3]]]],[11,"pick_value","","Chooses a value from the current subset using the provided…",0,[[["index",3]]]],[11,"advance_to","","Advances the valid subset to the provided index. After the…",0,[[]]],[11,"new","","Creates a new, empty `RepeatVec`.",1,[[]]],[11,"with_capacity","","Creates a new, empty `RepeatVec` with the specified…",1,[[]]],[11,"len","","Returns the logical number of elements in this `RepeatVec`.",1,[[]]],[11,"is_empty","","Returns `true` if this `RepeatVec` has no logical elements.",1,[[]]],[11,"extend","","Extends this `RepeatVec` by logically adding `size` copies…",1,[[]]],[11,"remove","","Removes the item specified by the given logical index,…",1,[[]]],[11,"remove_all","","Removes the items specified by the given logical indexes,…",1,[[]]],[11,"get","","Returns the item at location `at`. The return value is a…",1,[[],["option",4]]],[11,"pick_uniform_indexes","","Picks out indexes uniformly randomly from this…",1,[[],["vec",3]]],[11,"pick_uniform","","Picks out elements uniformly randomly from this…",1,[[],["vec",3]]],[11,"new","","Creates a new value generator with the default RNG.",2,[[]]],[11,"new_with_rng","","Creates a new value generator with provided RNG",2,[[["testrng",3]]]],[11,"deterministic","","Creates a new value generator with a deterministic RNG.",2,[[]]],[11,"generate","","Generates a single value for this strategy.",2,[[["strategy",8]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"as_ref","","",3,[[],["propindex",3]]],[11,"clone","","",0,[[],["growingsubset",3]]],[11,"clone","","",1,[[],["repeatvec",3]]],[11,"clone","","",3,[[],["index",3]]],[11,"default","","",1,[[],["repeatvec",3]]],[11,"default","","",2,[[],["valuegenerator",3]]],[11,"eq","","",1,[[["repeatvec",3]]]],[11,"ne","","",1,[[["repeatvec",3]]]],[11,"deref","","",3,[[],["propindex",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"from_iter","","",0,[[]]],[11,"arbitrary_with","","",3,[[]]]],"p":[[3,"GrowingSubset"],[3,"RepeatVec"],[3,"ValueGenerator"],[3,"Index"]]},\
"diem_rate_limiter":{"doc":"","i":[[0,"async_lib","diem_rate_limiter","",null,null],[3,"AsyncRateLimiter","diem_rate_limiter::async_lib","A rate limiter for `AsyncRead` or `AsyncWrite` interfaces…",null,null],[11,"new","","",0,[[["option",4],["sharedbucket",6]]]],[0,"rate_limit","diem_rate_limiter","",null,null],[3,"TokenBucketRateLimiter","diem_rate_limiter::rate_limit","A generic token bucket filter",null,null],[3,"Bucket","","A token bucket object that keeps track of everything…",null,null],[6,"SharedBucket","","",null,null],[11,"new","","",1,[[["option",4],["histogramvec",6],["string",3]]]],[11,"test","","",1,[[]]],[11,"open","","Used for testing and to not have a rate limiter",1,[[]]],[11,"bucket","","Retrieve bucket, or create a new one",1,[[],["sharedbucket",6]]],[11,"try_garbage_collect_key","","Garbage collects a single key, if we know what it is",1,[[]]],[11,"new","","",2,[[["option",4],["histogramvec",6],["string",3]]]],[11,"open","","A fully open rate limiter, to allow for ignoring rate…",2,[[["string",3]]]],[11,"acquire_all_tokens","","Determine if an entire batch can be passed through This is…",2,[[],[["option",4],["result",4]]]],[11,"acquire_tokens","","Returns `usize` of tokens allowed. May be less than…",2,[[],[["result",4],["instant",3]]]],[11,"time_of_next_refill","","Tells us when the next refill is",2,[[],["instant",3]]],[11,"time_of_tokens_needed","","Tells us when an entire batch will make it through. Useful…",2,[[],[["option",4],["instant",3]]]],[11,"return_tokens","","Returns tokens that were unused",2,[[]]],[11,"from","diem_rate_limiter::async_lib","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","diem_rate_limiter::rate_limit","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"poll_read","diem_rate_limiter::async_lib","",0,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",0,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",0,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",0,[[["context",3],["pin",3]],[["result",6],["poll",4]]]]],"p":[[3,"AsyncRateLimiter"],[3,"TokenBucketRateLimiter"],[3,"Bucket"]]},\
"diem_retrier":{"doc":"","i":[[3,"FixedDelay","diem_retrier","An iterator which uses a fixed delay",null,null],[3,"ExponentWithLimitDelay","","",null,null],[5,"retry","","Given an operation retries it successfully sleeping…",null,[[],["result",4]]],[5,"retry_async","","",null,[[]]],[5,"fixed_retry_strategy","","",null,[[]]],[5,"exp_retry_strategy","","",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"next","","",0,[[],[["duration",3],["option",4]]]],[11,"next","","",1,[[],[["duration",3],["option",4]]]]],"p":[[3,"FixedDelay"],[3,"ExponentWithLimitDelay"]]},\
"diem_secure_json_rpc":{"doc":"The purpose of the JsonRpcClient presented here is to…","i":[[3,"JsonRpcClient","diem_secure_json_rpc","Provides a lightweight JsonRpcClient implementation.",null,null],[3,"TransactionView","","",null,null],[12,"vm_status","","",0,null],[3,"MoveAbortExplanationView","","",null,null],[12,"category","","",1,null],[12,"category_description","","",1,null],[12,"reason","","",1,null],[12,"reason_description","","",1,null],[3,"Bytes","","Represents a vector of bytes using hex encoding.",null,null],[12,"0","","",2,null],[4,"Error","","",null,null],[13,"InternalRPCError","","",3,null],[13,"MissingData","","",3,null],[13,"RPCFailure","","",3,null],[13,"SerializationError","","",3,null],[13,"UnknownError","","",3,null],[4,"VMStatusView","","",null,null],[13,"Executed","","",4,null],[13,"OutOfGas","","",4,null],[13,"MoveAbort","","",4,null],[12,"location","diem_secure_json_rpc::VMStatusView","",5,null],[12,"abort_code","","",5,null],[12,"explanation","","",5,null],[13,"ExecutionFailure","diem_secure_json_rpc","",4,null],[12,"location","diem_secure_json_rpc::VMStatusView","",6,null],[12,"function_index","","",6,null],[12,"code_offset","","",6,null],[13,"VerificationError","diem_secure_json_rpc","",4,null],[13,"DeserializationError","","",4,null],[13,"PublishingFailure","","",4,null],[5,"process_submit_transaction_response","","Processes the response from a submit_transaction() JSON…",null,[[["response",3]],[["result",4],["error",4]]]],[5,"process_account_state_response","","Processes the response from a…",null,[[["response",3]],[["error",4],["result",4],["accountstate",3]]]],[5,"process_transaction_status_response","","Processes the response from a get_transaction_status()…",null,[[["response",3]],[["option",4],["error",4],["result",4]]]],[0,"fuzzing","","This module provides all the functionality necessary to…",null,null],[5,"arb_account_state_response","diem_secure_json_rpc::fuzzing","",null,[[]]],[5,"arb_submit_transaction_response","","",null,[[]]],[5,"arb_transaction_status_response","","",null,[[]]],[11,"new","diem_secure_json_rpc","",7,[[["string",3]]]],[11,"submit_transaction","","Submits a signed transaction to the Diem blockchain. This…",7,[[["signedtransaction",3]],[["result",4],["error",4]]]],[11,"get_account_state","","Returns the associated AccountState for a specific account…",7,[[["option",4],["accountaddress",3]],[["error",4],["result",4],["accountstate",3]]]],[11,"get_transaction_status","","Retrieves the status of a transaction on a given account.",7,[[["accountaddress",3]],[["option",4],["error",4],["result",4]]]],[11,"into_bytes","","",2,[[],[["error",4],["result",4],["vec",3]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",3,[[["error",3]]]],[11,"from","","",3,[[["error",4]]]],[11,"from","","",3,[[["error",3]]]],[11,"from","","",3,[[["fromhexerror",4]]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[["vec",3]]]],[11,"clone","","",7,[[],["jsonrpcclient",3]]],[11,"clone","","",4,[[],["vmstatusview",4]]],[11,"clone","","",1,[[],["moveabortexplanationview",3]]],[11,"clone","","",2,[[],["bytes",3]]],[11,"eq","","",3,[[["error",4]]]],[11,"ne","","",3,[[["error",4]]]],[11,"eq","","",0,[[["transactionview",3]]]],[11,"ne","","",0,[[["transactionview",3]]]],[11,"eq","","",4,[[["vmstatusview",4]]]],[11,"ne","","",4,[[["vmstatusview",4]]]],[11,"eq","","",1,[[["moveabortexplanationview",3]]]],[11,"ne","","",1,[[["moveabortexplanationview",3]]]],[11,"eq","","",2,[[["bytes",3]]]],[11,"ne","","",2,[[["bytes",3]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]]],"p":[[3,"TransactionView"],[3,"MoveAbortExplanationView"],[3,"Bytes"],[4,"Error"],[4,"VMStatusView"],[13,"MoveAbort"],[13,"ExecutionFailure"],[3,"JsonRpcClient"]]},\
"diem_secure_net":{"doc":"This provides a simple networking substrate between a…","i":[[3,"NetworkClient","diem_secure_net","",null,null],[3,"NetworkServer","","",null,null],[4,"Error","","",null,null],[13,"AlreadyShutdown","","",0,null],[13,"DataTooLarge","","",0,null],[13,"NetworkError","","",0,null],[13,"NoActiveStream","","",0,null],[13,"RemoteStreamClosed","","",0,null],[11,"new","","",1,[[["socketaddr",4]]]],[11,"read","","Blocking read until able to successfully read an entire…",1,[[],[["result",4],["vec",3],["error",4]]]],[11,"shutdown","","Shutdown the internal network stream",1,[[],[["result",4],["error",4]]]],[11,"write","","Blocking write until able to successfully send an entire…",1,[[],[["result",4],["error",4]]]],[11,"new","","",2,[[["socketaddr",4]]]],[11,"read","","If there isn\'t already a downstream client, it accepts.…",2,[[],[["result",4],["vec",3],["error",4]]]],[11,"shutdown","","Shutdown the internal network stream",2,[[],[["result",4],["error",4]]]],[11,"write","","If there isn\'t already a downstream client, it accepts.…",2,[[],[["result",4],["error",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",0,[[["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]]],"p":[[4,"Error"],[3,"NetworkClient"],[3,"NetworkServer"]]},\
"diem_secure_push_metrics":{"doc":"","i":[[14,"register_histogram","diem_secure_push_metrics","Create a [`Histogram`] and registers to default registry.",null,null],[14,"register_histogram_vec","","Create a [`HistogramVec`] and registers to default registry.",null,null],[14,"register_int_counter","","Create an [`IntCounter`] and registers to default registry.",null,null],[14,"register_int_counter_vec","","Create an [`IntCounterVec`] and registers to default…",null,null],[14,"register_int_gauge","","Create an [`IntGauge`] and registers to default registry.",null,null],[14,"register_int_gauge_vec","","Create an [`IntGaugeVec`] and registers to default registry.",null,null],[3,"Histogram","","A [`Metric`] counts individual observations from an event…",null,null],[3,"HistogramTimer","","Timer to measure and record the duration of an event.",null,null],[6,"HistogramVec","","A [`Collector`] that bundles a set of Histograms that all…",null,null],[6,"IntCounter","","The integer version of [`Counter`]. Provides better…",null,null],[6,"IntCounterVec","","The integer version of [`CounterVec`]. Provides better…",null,null],[6,"IntGauge","","The integer version of [`Gauge`]. Provides better…",null,null],[6,"IntGaugeVec","","The integer version of [`GaugeVec`]. Provides better…",null,null],[3,"MetricsPusher","","MetricsPusher provides a function to push a list of…",null,null],[11,"start","","start starts a new thread and periodically pushes the…",0,[[]]],[11,"join","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",1,[[],["histogram",3]]],[11,"drop","","",2,[[]]],[11,"metric","","",1,[[],["metric",3]]],[11,"desc","","",1,[[],[["desc",3],["vec",3]]]],[11,"collect","","",1,[[],[["metricfamily",3],["vec",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"drop","","",0,[[]]],[11,"with_opts","","`with_opts` creates a [`Histogram`] with the `opts` options.",1,[[["histogramopts",3]],[["result",4],["histogram",3],["error",4]]]],[11,"observe","","Add a single observation to the [`Histogram`].",1,[[]]],[11,"start_timer","","Return a [`HistogramTimer`] to track a duration.",1,[[],["histogramtimer",3]]],[11,"observe_closure_duration","","Observe execution time of a closure, in second.",1,[[]]],[11,"local","","Return a [`LocalHistogram`] for single thread usage.",1,[[],["localhistogram",3]]],[11,"get_sample_sum","","Return accumulated sum of all samples.",1,[[]]],[11,"get_sample_count","","Return count of all samples.",1,[[]]],[11,"observe_duration","","Observe and record timer duration (in seconds).",2,[[]]],[11,"stop_and_record","","Observe, record and return timer duration (in seconds).",2,[[]]],[11,"stop_and_discard","","Observe and return timer duration (in seconds).",2,[[]]]],"p":[[3,"MetricsPusher"],[3,"Histogram"],[3,"HistogramTimer"]]},\
"diem_secure_storage":{"doc":"","i":[[3,"PublicKeyResponse","diem_secure_storage","",null,null],[12,"last_update","","Time since Unix Epoch in seconds.",0,null],[12,"public_key","","Ed25519PublicKey stored at the provided key",0,null],[3,"GitHubStorage","","GitHubStorage leverages a GitHub repository to provide a…",null,null],[3,"InMemoryStorage","","InMemoryStorage represents a key value store that is…",null,null],[3,"GetResponse","","A container for a get response that contains relevant…",null,null],[12,"last_update","","Time since Unix Epoch in seconds.",1,null],[12,"value","","Value stored at the provided key",1,null],[3,"NamespacedStorage","","This provides a light wrapper around KV storages to…",null,null],[3,"OnDiskStorage","","OnDiskStorage represents a key value store that is…",null,null],[3,"Permission","","Maps an identity to a set of capabilities",null,null],[12,"id","","",2,null],[12,"capabilities","","",2,null],[3,"Policy","","Dictates a set of permissions",null,null],[12,"permissions","","",3,null],[3,"VaultStorage","","VaultStorage utilizes Vault for maintaining encrypted,…",null,null],[4,"Error","","",null,null],[13,"EntropyError","","",4,null],[13,"InternalError","","",4,null],[13,"KeyAlreadyExists","","",4,null],[13,"KeyNotSet","","",4,null],[13,"PermissionDenied","","",4,null],[13,"SerializationError","","",4,null],[13,"KeyVersionNotFound","","",4,null],[4,"Capability","","Represents actions",null,null],[13,"Export","","",5,null],[13,"Read","","",5,null],[13,"Rotate","","",5,null],[13,"Sign","","",5,null],[13,"Write","","",5,null],[4,"Identity","","Id represents a Diem internal identifier for a given…",null,null],[13,"User","","",6,null],[13,"Anyone","","",6,null],[13,"NoOne","","",6,null],[4,"Storage","","This is the Diem interface into secure storage. Any…",null,null],[13,"GitHubStorage","","",7,null],[13,"VaultStorage","","",7,null],[13,"InMemoryStorage","","",7,null],[13,"NamespacedStorage","","",7,null],[13,"OnDiskStorage","","",7,null],[5,"to_base64","","",null,[[],["result",4]]],[5,"from_base64","","",null,[[],[["result",4],["vec",3]]]],[11,"new","","",8,[[["string",3]]]],[11,"new","","",9,[[]]],[11,"new_with_time_service","","",9,[[["timeservice",4]]]],[11,"new","","Creates a GetResponse",1,[[]]],[11,"new","","",10,[[["string",3],["storage",4]]]],[11,"new","","",11,[[["pathbuf",3]]]],[11,"new","","",3,[[["vec",3],["permission",3]]]],[11,"public","","",3,[[]]],[11,"new","","",2,[[["identity",4],["vec",3],["capability",4]]]],[11,"new","","",12,[[["option",4],["option",4],["string",3]]]],[11,"revoke_token_self","","",12,[[],[["result",4],["error",4]]]],[11,"get_all_key_versions","","",12,[[],[["error",4],["vec",3],["result",4]]]],[11,"create_token","","Creates a token but uses the namespace for policies",12,[[["vec",3]],[["error",4],["result",4],["string",3]]]],[11,"set_policy","","Create a new policy in Vault, see the explanation for…",12,[[["vaultengine",4]],[["result",4],["error",4]]]],[11,"set_policies","","",12,[[["policy",3],["vaultengine",4]],[["result",4],["error",4]]]],[8,"CryptoKVStorage","","CryptoKVStorage offers a CryptoStorage implementation by…",null,null],[8,"CryptoStorage","","CryptoStorage provides an abstraction for secure…",null,null],[10,"create_key","","Securely generates a new named Ed25519 private key. The…",13,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[10,"export_private_key","","Returns the Ed25519 private key stored at \'name\'.",13,[[],[["error",4],["result",4],["ed25519privatekey",3]]]],[10,"import_private_key","","An optional API that allows importing private keys and…",13,[[["ed25519privatekey",3]],[["result",4],["error",4]]]],[10,"export_private_key_for_version","","Returns the Ed25519 private key stored at \'name\' and…",13,[[["ed25519publickey",3]],[["error",4],["result",4],["ed25519privatekey",3]]]],[10,"get_public_key","","Returns the Ed25519 public key stored at \'name\'.",13,[[],[["error",4],["result",4],["publickeyresponse",3]]]],[10,"get_public_key_previous_version","","Returns the previous version of the Ed25519 public key…",13,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[10,"rotate_key","","Rotates an Ed25519 private key. Future calls without…",13,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[10,"sign","","Signs the provided securely-hashable struct, using the…",13,[[],[["result",4],["ed25519signature",3],["error",4]]]],[10,"sign_using_version","","Signs the provided securely-hashable struct, using the…",13,[[["ed25519publickey",3]],[["result",4],["ed25519signature",3],["error",4]]]],[8,"KVStorage","","A secure key/value storage engine. Create takes a policy…",null,null],[10,"available","","Returns an error if the backend service is not online and…",14,[[],[["result",4],["error",4]]]],[10,"get","","Retrieves a value from storage and fails if the backend is…",14,[[],[["result",4],["getresponse",3],["error",4]]]],[10,"set","","Sets a value in storage and fails if the backend is…",14,[[["serialize",8]],[["result",4],["error",4]]]],[10,"reset_and_clear","","Resets and clears all data held in the storage engine.…",14,[[],[["result",4],["error",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"erased_serialize","","",6,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"create_key","","Securely generates a new named Ed25519 private key. The…",7,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"export_private_key","","Returns the Ed25519 private key stored at \'name\'.",7,[[],[["error",4],["result",4],["ed25519privatekey",3]]]],[11,"import_private_key","","An optional API that allows importing private keys and…",7,[[["ed25519privatekey",3]],[["result",4],["error",4]]]],[11,"export_private_key_for_version","","Returns the Ed25519 private key stored at \'name\' and…",7,[[["ed25519publickey",3]],[["error",4],["result",4],["ed25519privatekey",3]]]],[11,"get_public_key","","Returns the Ed25519 public key stored at \'name\'.",7,[[],[["error",4],["result",4],["publickeyresponse",3]]]],[11,"get_public_key_previous_version","","Returns the previous version of the Ed25519 public key…",7,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"rotate_key","","Rotates an Ed25519 private key. Future calls without…",7,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"sign","","Signs the provided securely-hashable struct, using the…",7,[[],[["result",4],["ed25519signature",3],["error",4]]]],[11,"sign_using_version","","Signs the provided securely-hashable struct, using the…",7,[[["ed25519publickey",3]],[["result",4],["ed25519signature",3],["error",4]]]],[11,"create_key","","",12,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"export_private_key","","",12,[[],[["error",4],["result",4],["ed25519privatekey",3]]]],[11,"export_private_key_for_version","","",12,[[["ed25519publickey",3]],[["error",4],["result",4],["ed25519privatekey",3]]]],[11,"import_private_key","","",12,[[["ed25519privatekey",3]],[["result",4],["error",4]]]],[11,"get_public_key","","",12,[[],[["error",4],["result",4],["publickeyresponse",3]]]],[11,"get_public_key_previous_version","","",12,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"rotate_key","","",12,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"sign","","",12,[[],[["result",4],["ed25519signature",3],["error",4]]]],[11,"sign_using_version","","",12,[[["ed25519publickey",3]],[["result",4],["ed25519signature",3],["error",4]]]],[11,"available","","",8,[[],[["result",4],["error",4]]]],[11,"get","","",8,[[],[["result",4],["getresponse",3],["error",4]]]],[11,"set","","",8,[[["serialize",8]],[["result",4],["error",4]]]],[11,"reset_and_clear","","",8,[[],[["result",4],["error",4]]]],[11,"available","","",9,[[],[["result",4],["error",4]]]],[11,"get","","",9,[[],[["error",4],["result",4],["getresponse",3]]]],[11,"set","","",9,[[["serialize",8]],[["result",4],["error",4]]]],[11,"reset_and_clear","","",9,[[],[["result",4],["error",4]]]],[11,"available","","",10,[[],[["result",4],["error",4]]]],[11,"get","","",10,[[],[["result",4],["getresponse",3],["error",4]]]],[11,"set","","",10,[[["serialize",8]],[["result",4],["error",4]]]],[11,"reset_and_clear","","Note: This is not a namespace function",10,[[],[["result",4],["error",4]]]],[11,"available","","",11,[[],[["result",4],["error",4]]]],[11,"get","","",11,[[],[["error",4],["result",4],["getresponse",3]]]],[11,"set","","",11,[[["serialize",8]],[["result",4],["error",4]]]],[11,"reset_and_clear","","",11,[[],[["result",4],["error",4]]]],[11,"available","","Returns an error if the backend service is not online and…",7,[[],[["result",4],["error",4]]]],[11,"get","","Retrieves a value from storage and fails if the backend is…",7,[[],[["result",4],["getresponse",3],["error",4]]]],[11,"set","","Sets a value in storage and fails if the backend is…",7,[[["serialize",8]],[["result",4],["error",4]]]],[11,"reset_and_clear","","Resets and clears all data held in the storage engine.…",7,[[],[["result",4],["error",4]]]],[11,"available","","",12,[[],[["result",4],["error",4]]]],[11,"get","","",12,[[],[["result",4],["getresponse",3],["error",4]]]],[11,"set","","",12,[[["serialize",8]],[["result",4],["error",4]]]],[11,"reset_and_clear","","",12,[[],[["result",4],["error",4]]]],[11,"from","","",4,[[["decodeerror",4]]]],[11,"from","","",4,[[["parseerror",3]]]],[11,"from","","",4,[[["error",3]]]],[11,"from","","",4,[[["error",4]]]],[11,"from","","",4,[[["error",3]]]],[11,"from","","",4,[[["error",4]]]],[11,"from","","",4,[[["error",4]]]],[11,"from","","",7,[[["githubstorage",3]],["storage",4]]],[11,"from","","",7,[[["vaultstorage",3]],["storage",4]]],[11,"from","","",7,[[["inmemorystorage",3]],["storage",4]]],[11,"from","","",7,[[["namespacedstorage",3]],["storage",4]]],[11,"from","","",7,[[["ondiskstorage",3]],["storage",4]]],[11,"default","","",9,[[],["inmemorystorage",3]]],[11,"default","","",3,[[],["policy",3]]],[11,"eq","","",0,[[["publickeyresponse",3]]]],[11,"ne","","",0,[[["publickeyresponse",3]]]],[11,"eq","","",4,[[["error",4]]]],[11,"ne","","",4,[[["error",4]]]],[11,"eq","","",1,[[["getresponse",3]]]],[11,"ne","","",1,[[["getresponse",3]]]],[11,"eq","","",3,[[["policy",3]]]],[11,"ne","","",3,[[["policy",3]]]],[11,"eq","","",2,[[["permission",3]]]],[11,"ne","","",2,[[["permission",3]]]],[11,"eq","","",6,[[["identity",4]]]],[11,"ne","","",6,[[["identity",4]]]],[11,"eq","","",5,[[["capability",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"try_into","","",7,[[],[["githubstorage",3],["result",4]]]],[11,"try_into","","",7,[[],[["result",4],["vaultstorage",3]]]],[11,"try_into","","",7,[[],[["inmemorystorage",3],["result",4]]]],[11,"try_into","","",7,[[],[["namespacedstorage",3],["result",4]]]],[11,"try_into","","",7,[[],[["result",4],["ondiskstorage",3]]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]]],"p":[[3,"PublicKeyResponse"],[3,"GetResponse"],[3,"Permission"],[3,"Policy"],[4,"Error"],[4,"Capability"],[4,"Identity"],[4,"Storage"],[3,"GitHubStorage"],[3,"InMemoryStorage"],[3,"NamespacedStorage"],[3,"OnDiskStorage"],[3,"VaultStorage"],[8,"CryptoStorage"],[8,"KVStorage"]]},\
"diem_smoke_test_attribute":{"doc":"","i":[[23,"smoke_test","diem_smoke_test_attribute","This macro allows tests to be defined using the…",null,null]],"p":[]},\
"diem_state_view":{"doc":"This crate defines `trait StateView`.","i":[[4,"StateViewId","diem_state_view","",null,null],[13,"ChunkExecution","","State-sync applying a chunk of transactions.",0,null],[12,"first_version","diem_state_view::StateViewId","",1,null],[13,"BlockExecution","diem_state_view","LEC applying a block.",0,null],[12,"block_id","diem_state_view::StateViewId","",2,null],[13,"TransactionValidation","diem_state_view","VmValidator verifying incoming transaction.",0,null],[12,"base_version","diem_state_view::StateViewId","",3,null],[13,"Miscellaneous","diem_state_view","For test, db-bootstrapper, etc. Usually not aimed to pass…",0,null],[8,"StateView","","`StateView` is a trait that defines a read-only snapshot…",null,null],[11,"id","","For logging and debugging purpose, identifies what this…",4,[[],["stateviewid",4]]],[10,"get","","Gets the state for a single access path.",4,[[["accesspath",3]],[["result",6],["option",4]]]],[10,"multi_get","","Gets states for a list of access paths.",4,[[],[["result",6],["vec",3]]]],[10,"is_genesis","","VM needs this method to know whether the current state…",4,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"clone","","",0,[[],["stateviewid",4]]]],"p":[[4,"StateViewId"],[13,"ChunkExecution"],[13,"BlockExecution"],[13,"TransactionValidation"],[8,"StateView"]]},\
"diem_swarm":{"doc":"","i":[[0,"client","diem_swarm","",null,null],[3,"InteractiveClient","diem_swarm::client","",null,null],[11,"new_with_inherit_io","","",0,[[["path",3],["waypoint",3]]]],[11,"new_with_inherit_io_faucet","","",0,[[["waypoint",3],["path",3],["string",3]]]],[11,"output","","",0,[[],[["output",3],["result",6]]]],[0,"faucet","diem_swarm","",null,null],[3,"Process","diem_swarm::faucet","",null,null],[11,"start","","",1,[[["path",3]]]],[11,"mint_url","","",1,[[],["string",3]]],[11,"health_check_url","","",1,[[],["url",3]]],[11,"wait_for_connectivity","","",1,[[],["result",6]]],[0,"swarm","diem_swarm","",null,null],[3,"DiemNode","diem_swarm::swarm","",null,null],[12,"log","","",2,null],[3,"DiemSwarm","","Struct holding instances and information of Diem Swarm",null,null],[12,"dir","","",3,null],[12,"nodes","","",3,null],[12,"config","","",3,null],[12,"role","","",3,null],[4,"HealthStatus","","",null,null],[13,"Healthy","","",4,null],[13,"Crashed","","",4,null],[13,"RpcFailure","","",4,null],[4,"DiemSwarmDir","","A wrapper that unifies PathBuf and TempPath.",null,null],[13,"Persistent","","",5,null],[13,"Temporary","","",5,null],[4,"SwarmLaunchFailure","","",null,null],[13,"LaunchTimeout","","Timeout while waiting for nodes to start",6,null],[13,"NodeCrash","","Node return status indicates a crash",6,null],[13,"ConnectivityTimeout","","Timeout while waiting for the nodes to report that they\'re…",6,null],[13,"IoError","","",6,null],[11,"launch","","",2,[[["pathbuf",3],["roletype",4],["string",3],["path",3]],["result",6]]],[11,"validator_peer_id","","",2,[[],[["accountaddress",3],["option",4]]]],[11,"port","","",2,[[]]],[11,"get_log_contents","","",2,[[],[["result",6],["string",3]]]],[11,"get_metric","","",2,[[],["option",4]]],[11,"check_connectivity","","",2,[[]]],[11,"health_check","","",2,[[],["healthstatus",4]]],[11,"configure_fn_swarm","","",3,[[["fullnodetype",4],["option",4],["string",3],["option",4],["nodeconfig",3],["path",3],["swarmconfig",3]],[["diemswarm",3],["result",6]]]],[11,"configure_validator_swarm","","",3,[[["option",4],["string",3],["option",4],["nodeconfig",3],["path",3]],[["diemswarm",3],["result",6]]]],[11,"launch","","",3,[[]]],[11,"launch_attempt","","",3,[[],[["swarmlaunchfailure",4],["result",6]]]],[11,"wait_for_all_nodes_to_catchup","","This function first checks the last committed round of all…",3,[[]]],[11,"get_client_port","","A specific public JSON RPC port of a validator or a full…",3,[[]]],[11,"get_validators_ids","","Vector with the peer ids of the validators in the swarm.",3,[[],[["vec",3],["string",3]]]],[11,"get_validators_debug_ports","","Vector with the debug ports of all the validators in the…",3,[[],["vec",3]]],[11,"get_validator","","",3,[[],[["diemnode",3],["option",4]]]],[11,"kill_node","","",3,[[]]],[11,"add_node","","",3,[[],[["swarmlaunchfailure",4],["result",6]]]],[11,"from","diem_swarm::client","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","diem_swarm::faucet","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","diem_swarm::swarm","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"drop","diem_swarm::client","",0,[[]]],[11,"drop","diem_swarm::faucet","",1,[[]]],[11,"drop","diem_swarm::swarm","",2,[[]]],[11,"drop","","",3,[[]]],[11,"as_ref","","",5,[[],["path",3]]],[11,"from","","",6,[[["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"source","","",6,[[],[["option",4],["error",8]]]]],"p":[[3,"InteractiveClient"],[3,"Process"],[3,"DiemNode"],[3,"DiemSwarm"],[4,"HealthStatus"],[4,"DiemSwarmDir"],[4,"SwarmLaunchFailure"]]},\
"diem_temppath":{"doc":"","i":[[3,"TempPath","diem_temppath","A simple wrapper for creating a temporary directory that…",null,null],[11,"new","","Create new, uninitialized temporary path in the system…",0,[[]]],[11,"new_with_temp_dir","","Create new, uninitialized temporary path in the specified…",0,[[["pathbuf",3]]]],[11,"path","","Return the underlying path to this temporary directory.",0,[[],["path",3]]],[11,"persist","","Keep the temp path",0,[[]]],[11,"create_as_file","","",0,[[],["result",6]]],[11,"create_as_dir","","",0,[[],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"as_ref","","",0,[[],["path",3]]],[11,"default","","",0,[[]]],[11,"eq","","",0,[[["temppath",3]]]],[11,"ne","","",0,[[["temppath",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"TempPath"]]},\
"diem_time_service":{"doc":"Abstract time service","i":[[4,"TimeService","diem_time_service","`TimeService` abstracts all time-related operations in one…",null,null],[13,"RealTimeService","","",0,null],[13,"MockTimeService","","",0,null],[4,"Sleep","","A [`Future`] that resolves after some time has elapsed…",null,null],[13,"RealSleep","","",1,null],[13,"MockSleep","","",1,null],[0,"interval","","",null,null],[3,"Interval","diem_time_service::interval","Stream returned by `TimeService::interval`.",null,null],[11,"new","","",2,[[["sleep",4],["duration",3]]]],[0,"mock","diem_time_service","",null,null],[3,"MockTimeService","diem_time_service::mock","A `TimeService` that simulates time and allows for…",null,null],[3,"MockSleep","","A [`Future`] that resolves when the simulated time in the…",null,null],[11,"new","","Create a new `MockTimeService` with no auto advance. Time…",3,[[]]],[11,"new_auto_advance","","Create a new `MockTimeService` that will auto advance…",3,[[]]],[11,"new_auto_advance_for","","Create a new `MockTimeService` that will auto advance…",3,[[["duration",3]]]],[11,"num_waiters","","Return the number of pending `Sleep` waiters.",3,[[]]],[11,"advance_next","","Advance time to the next pending waiter, wake it up, and…",3,[[],[["duration",3],["option",4]]]],[11,"advance","","Advance time by `duration` and wake any pending waiters…",3,[[["duration",3]]]],[11,"advance_secs","","Advance time by `duration` seconds. See `advance`.",3,[[]]],[11,"advance_ms","","Advance time by `duration` milliseconds. See `advance`.",3,[[]]],[11,"advance_next_async","","Advance time to the next pending waiter, wake it up, and…",3,[[]]],[11,"advance_async","","Advance time by `duration` and wake any pending waiters…",3,[[["duration",3]]]],[11,"advance_secs_async","","Advance time by `duration` seconds. See `advance_async`.",3,[[]]],[11,"advance_ms_async","","Advance time by `duration` milliseconds. See…",3,[[]]],[0,"real","diem_time_service","",null,null],[3,"RealTimeService","diem_time_service::real","The real production tokio `TimeService`.",null,null],[6,"RealSleep","","",null,null],[11,"new","","",4,[[]]],[0,"timeout","diem_time_service","",null,null],[3,"Elapsed","diem_time_service::timeout","Error returned by [`Timeout`].",null,null],[3,"Timeout","","Future returned by `TimeService::timeout`.",null,null],[11,"new","","",5,[[["sleep",4]]]],[11,"into_inner","","Consumes this timeout, returning the underlying value.",5,[[]]],[8,"TimeServiceTrait","diem_time_service","",null,null],[10,"now","","Query the current unix timestamp as a `Duration`.",6,[[],["duration",3]]],[11,"now_secs","","Query the current unix timestamp in seconds.",6,[[]]],[10,"sleep","","Return a [`Future`] that waits until `duration` has passed.",6,[[["duration",3]],["sleep",4]]],[10,"sleep_blocking","","Blocks the current thread until `duration` time has passed.",6,[[["duration",3]]]],[11,"interval","","Creates new [`Interval`] that yields with interval of…",6,[[["duration",3]],["interval",3]]],[11,"timeout","","Require a [`Future`] to complete before the specified…",6,[[["duration",3],["future",8]],[["timeout",3],["future",8]]]],[8,"SleepTrait","","",null,null],[10,"is_elapsed","","Returns `true` if this `Sleep`\'s requested wait duration…",7,[[]]],[10,"reset","","Resets this `Sleep`\'s wait duration.",7,[[["duration",3],["pin",3]]]],[11,"real","","Create a new real, production time service that actually…",0,[[]]],[11,"mock","","Create a mock, simulated time service that does not query…",0,[[]]],[11,"into_mock","","",0,[[],["mocktimeservice",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_future","","",1,[[]]],[11,"from","diem_time_service::interval","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","diem_time_service::mock","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_future","","",8,[[]]],[11,"from","diem_time_service::real","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","diem_time_service::timeout","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_future","","",5,[[]]],[11,"try_poll","","",5,[[["context",3],["pin",3]],["poll",4]]],[11,"is_elapsed","diem_time_service::mock","",8,[[]]],[11,"reset","","",8,[[["duration",3],["pin",3]]]],[11,"is_elapsed","diem_time_service","",10,[[]]],[11,"reset","","",10,[[["duration",3],["pin",3]]]],[11,"is_elapsed","","",1,[[]]],[11,"reset","","",1,[[["duration",3],["pin",3]]]],[11,"now","diem_time_service::mock","",3,[[],["duration",3]]],[11,"sleep","","",3,[[["duration",3]],["sleep",4]]],[11,"sleep_blocking","","",3,[[["duration",3]]]],[11,"now","diem_time_service::real","",4,[[],["duration",3]]],[11,"sleep","","",4,[[["duration",3]],["sleep",4]]],[11,"sleep_blocking","","",4,[[["duration",3]]]],[11,"now","diem_time_service","Query the current unix timestamp as a `Duration`.",0,[[],["duration",3]]],[11,"now_secs","","Query the current unix timestamp in seconds.",0,[[]]],[11,"sleep","","Return a [`Future`] that waits until `duration` has passed.",0,[[["duration",3]],["sleep",4]]],[11,"sleep_blocking","","Blocks the current thread until `duration` time has passed.",0,[[["duration",3]]]],[11,"interval","","Creates new [`Interval`] that yields with interval of…",0,[[["duration",3]],["interval",3]]],[11,"timeout","","Require a [`Future`] to complete before the specified…",0,[[["duration",3],["future",8]],[["timeout",3],["future",8]]]],[11,"drop","diem_time_service::mock","",8,[[]]],[11,"from","diem_time_service","",0,[[["realtimeservice",3]],["timeservice",4]]],[11,"from","","",0,[[["mocktimeservice",3]],["timeservice",4]]],[11,"from","","",1,[[["realsleep",6]]]],[11,"from","","",1,[[["mocksleep",3]]]],[11,"clone","diem_time_service::mock","",3,[[],["mocktimeservice",3]]],[11,"clone","diem_time_service::real","",4,[[],["realtimeservice",3]]],[11,"clone","diem_time_service","",0,[[],["timeservice",4]]],[11,"default","diem_time_service::real","",4,[[],["realtimeservice",3]]],[11,"default","diem_time_service","",0,[[]]],[11,"eq","diem_time_service::timeout","",9,[[["elapsed",3]]]],[11,"fmt","diem_time_service::interval","",2,[[["formatter",3]],["result",6]]],[11,"fmt","diem_time_service::mock","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","diem_time_service::real","",4,[[["formatter",3]],["result",6]]],[11,"fmt","diem_time_service::timeout","",9,[[["formatter",3]],["result",6]]],[11,"fmt","diem_time_service","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","diem_time_service::timeout","",9,[[["formatter",3]],["result",6]]],[11,"try_into","diem_time_service","",0,[[],[["result",4],["realtimeservice",3]]]],[11,"try_into","","",0,[[],[["mocktimeservice",3],["result",4]]]],[11,"poll","diem_time_service::mock","",8,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","diem_time_service::timeout","",5,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","diem_time_service","",1,[[["context",3],["pin",3]],["poll",4]]],[11,"poll_next","diem_time_service::interval","",2,[[["context",3],["pin",3]],[["option",4],["poll",4]]]]],"p":[[4,"TimeService"],[4,"Sleep"],[3,"Interval"],[3,"MockTimeService"],[3,"RealTimeService"],[3,"Timeout"],[8,"TimeServiceTrait"],[8,"SleepTrait"],[3,"MockSleep"],[3,"Elapsed"],[6,"RealSleep"]]},\
"diem_trace":{"doc":"","i":[[3,"DiemTraceClient","diem_trace","",null,null],[0,"counters","","",null,null],[7,"TRACE_EVENT_COUNT","diem_trace::counters","Count of the trace_event logged.",null,null],[0,"trace","diem_trace","",null,null],[3,"TraceBlockGuard","diem_trace::trace","",null,null],[5,"random_node","","",null,[[],[["option",4],["string",3]]]],[5,"collect_all_nodes","","",null,[[],["vec",3]]],[5,"find_peer_with_stage","","",null,[[],["option",4]]],[5,"trace_node","","",null,[[]]],[5,"set_diem_trace","","Sets diem trace config",null,[[["hashmap",3]],["result",6]]],[5,"diem_trace_set","","Checks if diem trace is enabled",null,[[]]],[5,"is_selected","","",null,[[]]],[17,"TRACE_EVENT","","",null,null],[17,"TRACE_EDGE","","",null,null],[17,"DIEM_TRACE","","",null,null],[11,"new_entered","","",0,[[["string",3]],["traceblockguard",3]]],[0,"prelude","diem_trace","",null,null],[11,"new","","Create DiemTraceClient from a valid socket address.",1,[[["asref",8]]]],[11,"get_diem_trace","","",1,[[["utc",3],["datetime",3],["duration",3]]]],[14,"trace_event","","",null,null],[14,"node_sampling_data","","",null,null],[14,"send_logs","","",null,null],[14,"trace_code_block","","",null,null],[14,"end_trace","","",null,null],[14,"trace_edge","","",null,null],[14,"format_node","","",null,null],[14,"__trace_fmt_gen","","",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","diem_trace::trace","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"drop","","",0,[[]]]],"p":[[3,"TraceBlockGuard"],[3,"DiemTraceClient"]]},\
"diem_transaction_replay":{"doc":"","i":[[3,"DiemDebugger","diem_transaction_replay","",null,null],[11,"new","","",0,[[["diemvalidatorinterface",8],["box",3]]]],[11,"json_rpc","","",0,[[],["result",6]]],[11,"db","","",0,[[["clone",8],["asref",8],["path",3]],["result",6]]],[11,"execute_transactions_at_version","","",0,[[["vec",3],["transaction",4],["version",6]],[["vec",3],["result",6]]]],[11,"execute_past_transactions","","",0,[[["version",6]],[["vec",3],["result",6]]]],[11,"execute_transactions_by_epoch","","",0,[[["vec",3],["transaction",4],["version",6]],[["vec",3],["result",6]]]],[11,"execute_writeset_at_version","","",0,[[["writesetpayload",4],["version",6]],[["result",6],["transactionoutput",3]]]],[11,"get_diem_framework_modules_at_version","","",0,[[["version",6]],[["result",6],["vec",3]]]],[11,"annotate_account_state_at_version","","",0,[[["accountaddress",3],["version",6]],[["option",4],["result",6]]]],[11,"annotate_key_accounts_at_version","","",0,[[["version",6]],[["result",6],["vec",3]]]],[11,"get_latest_version","","",0,[[],[["result",6],["version",6]]]],[11,"get_version_by_account_sequence","","",0,[[["accountaddress",3]],[["option",4],["result",6]]]],[11,"run_session_at_version","","",0,[[["movechanges",3],["option",4],["version",6]],[["result",6],["changeset",3]]]],[11,"bisect_transactions_by_script","","",0,[[["accountaddress",3],["version",6],["option",4],["movechanges",3]],[["option",4],["result",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]]],"p":[[3,"DiemDebugger"]]},\
"diem_types":{"doc":"","i":[[3,"PeerId","diem_types","A struct that represents an account address.",null,null],[0,"access_path","","Suppose we have the following data structure in a smart…",null,null],[3,"AccessPath","diem_types::access_path","",null,null],[12,"address","","",0,null],[12,"path","","",0,null],[4,"Path","","",null,null],[13,"Code","","",1,null],[13,"Resource","","",1,null],[11,"new","","",0,[[["accountaddress",3],["vec",3]]]],[11,"resource_access_vec","","",0,[[["structtag",3]],["vec",3]]],[11,"resource_access_path","","Convert Accesses into a byte offset which would be used by…",0,[[["resourcekey",3]],["accesspath",3]]],[11,"code_access_path","","",0,[[["moduleid",3]],["accesspath",3]]],[11,"get_path","","Extract the structured resource or module `Path` from `self`",0,[[],["path",4]]],[11,"get_struct_tag","","Extract a StructTag from `self`. Returns Some if this is a…",0,[[],[["option",4],["structtag",3]]]],[0,"account_address","diem_types","",null,null],[3,"AccountAddress","diem_types::account_address","A struct that represents an account address.",null,null],[5,"from_public_key","","",null,[[["ed25519publickey",3]],["accountaddress",3]]],[0,"account_config","diem_types","",null,null],[0,"constants","diem_types::account_config","",null,null],[0,"account","diem_types::account_config::constants","",null,null],[7,"ACCOUNT_MODULE","diem_types::account_config::constants::account","The ModuleId for the Account module.",null,null],[7,"ACCOUNT_MODULE_IDENTIFIER","","The Identifier for the Account module.",null,null],[17,"ACCOUNT_MODULE_NAME","","The name of the Account module.",null,null],[0,"addresses","diem_types::account_config::constants","",null,null],[17,"CORE_CODE_ADDRESS","diem_types::account_config::constants::addresses","",null,null],[5,"diem_root_address","","",null,[[],["accountaddress",3]]],[5,"validator_set_address","","",null,[[],["accountaddress",3]]],[5,"treasury_compliance_account_address","","",null,[[],["accountaddress",3]]],[5,"reserved_vm_address","","",null,[[],["accountaddress",3]]],[5,"testnet_dd_account_address","","",null,[[],["accountaddress",3]]],[0,"coins","diem_types::account_config::constants","",null,null],[5,"xus_tag","diem_types::account_config::constants::coins","",null,[[],["typetag",4]]],[5,"xdx_type_tag","","",null,[[],["typetag",4]]],[5,"coin_name","","Return `Some(struct_name)` if `t` is a `StructTag`…",null,[[["typetag",4]],[["option",4],["string",3]]]],[7,"XDX_MODULE","","",null,null],[7,"XDX_STRUCT_NAME","","",null,null],[17,"XDX_NAME","","",null,null],[17,"XUS_NAME","","",null,null],[0,"diem","diem_types::account_config::constants","",null,null],[5,"type_tag_for_currency_code","diem_types::account_config::constants::diem","",null,[[["identifier",3]],["typetag",4]]],[5,"allowed_currency_code_string","","In addition to the constraints for valid Move identifiers,…",null,[[]]],[5,"from_currency_code_string","","",null,[[],[["result",6],["identifier",3]]]],[7,"COIN_MODULE","","",null,null],[17,"DIEM_MODULE_NAME","","",null,null],[0,"event","diem_types::account_config::constants","",null,null],[5,"event_module_name","diem_types::account_config::constants::event","",null,[[],["identstr",3]]],[5,"event_handle_generator_struct_name","","",null,[[],["identstr",3]]],[5,"event_handle_struct_name","","",null,[[],["identstr",3]]],[5,"event_handle_generator_struct_tag","","",null,[[],["structtag",3]]],[7,"EVENT_MODULE","","",null,null],[0,"events","diem_types::account_config","",null,null],[0,"admin_transaction","diem_types::account_config::events","",null,null],[3,"AdminTransactionEvent","diem_types::account_config::events::admin_transaction","Struct that represents a AdminEvent.",null,null],[11,"committed_timestamp_secs","","Get the applied writeset.",2,[[]]],[11,"try_from_bytes","","",2,[[],["result",6]]],[0,"base_url_rotation","diem_types::account_config::events","",null,null],[3,"BaseUrlRotationEvent","diem_types::account_config::events::base_url_rotation","Struct that represents a BaseUrlRotationEvent.",null,null],[11,"new_base_url","","Get the new base url",3,[[]]],[11,"time_rotated_seconds","","Get the (blockchain) time in seconds when the url was…",3,[[]]],[11,"try_from_bytes","","",3,[[],["result",6]]],[0,"burn","diem_types::account_config::events","",null,null],[3,"BurnEvent","diem_types::account_config::events::burn","Struct that represents a BurnEvent.",null,null],[11,"amount","","Get the amount burned",4,[[]]],[11,"currency_code","","Return the code for the currency that was burned",4,[[],["identstr",3]]],[11,"preburn_address","","Return the address whose Preburn resource formerly held…",4,[[],["accountaddress",3]]],[11,"try_from_bytes","","",4,[[],["result",6]]],[0,"cancel_burn","diem_types::account_config::events","",null,null],[3,"CancelBurnEvent","diem_types::account_config::events::cancel_burn","Struct that represents a CancelBurnEvent.",null,null],[11,"amount","","Get the amount canceled",5,[[]]],[11,"currency_code","","Return the code for the currency that was returned",5,[[],["identstr",3]]],[11,"preburn_address","","Return the address whose Preburn resource formerly held…",5,[[],["accountaddress",3]]],[11,"try_from_bytes","","",5,[[],["result",6]]],[0,"compliance_key_rotation","diem_types::account_config::events","",null,null],[3,"ComplianceKeyRotationEvent","diem_types::account_config::events::compliance_key_rotation","Struct that represents a ComplianceKeyRotationEvent.",null,null],[11,"new_compliance_public_key","","Get the new compliance public key",6,[[]]],[11,"time_rotated_seconds","","Get the (blockchain) time in seconds when the url was…",6,[[]]],[11,"try_from_bytes","","",6,[[],["result",6]]],[0,"create_account","diem_types::account_config::events","",null,null],[3,"CreateAccountEvent","diem_types::account_config::events::create_account","",null,null],[11,"created","","",7,[[],["accountaddress",3]]],[11,"role_id","","",7,[[]]],[11,"try_from_bytes","","",7,[[],["result",6]]],[11,"event_key","","",7,[[],["eventkey",3]]],[0,"exchange_rate_update","diem_types::account_config::events","",null,null],[3,"ToXDXExchangeRateUpdateEvent","diem_types::account_config::events::exchange_rate_update","Struct that represents a ToXDXExchangeRateUpdateEvent",null,null],[11,"new_to_xdx_exchange_rate","","Exchange rates are represented as 32|32 fixed-point…",8,[[]]],[11,"currency_code","","Return the code for the currency whose exchange rate was…",8,[[],["identstr",3]]],[11,"try_from_bytes","","",8,[[],["result",6]]],[0,"mint","diem_types::account_config::events","",null,null],[3,"MintEvent","diem_types::account_config::events::mint","Struct that represents a MintEvent.",null,null],[11,"amount","","Get the amount minted",9,[[]]],[11,"currency_code","","Return the code for the currency that was minted",9,[[],["identstr",3]]],[11,"try_from_bytes","","",9,[[],["result",6]]],[0,"new_block","diem_types::account_config::events","",null,null],[3,"NewBlockEvent","diem_types::account_config::events::new_block","Struct that represents a NewBlockEvent.",null,null],[11,"round","","",10,[[]]],[11,"proposer","","",10,[[],["accountaddress",3]]],[11,"proposed_time","","",10,[[]]],[11,"try_from_bytes","","",10,[[],["result",6]]],[0,"new_epoch","diem_types::account_config::events","",null,null],[3,"NewEpochEvent","diem_types::account_config::events::new_epoch","Struct that represents a NewEpochEvent.",null,null],[11,"epoch","","",11,[[]]],[11,"try_from_bytes","","",11,[[],["result",6]]],[11,"event_key","","",11,[[],["eventkey",3]]],[0,"preburn","diem_types::account_config::events","",null,null],[3,"PreburnEvent","diem_types::account_config::events::preburn","Struct that represents a PreburnEvent.",null,null],[11,"amount","","Get the amount preburned",12,[[]]],[11,"currency_code","","Return the code for the currency that was preburned",12,[[],["identstr",3]]],[11,"preburn_address","","Return the address whose Preburn now holds the funds",12,[[],["accountaddress",3]]],[11,"try_from_bytes","","",12,[[],["result",6]]],[0,"received_mint","diem_types::account_config::events","",null,null],[3,"ReceivedMintEvent","diem_types::account_config::events::received_mint","Struct that represents a ReceivedMintEvent.",null,null],[11,"amount","","Get the amount minted",13,[[]]],[11,"destination_address","","Return the address who received the mint",13,[[],["accountaddress",3]]],[11,"currency_code","","Return the code for the currency that was minted",13,[[],["identstr",3]]],[11,"try_from_bytes","","",13,[[],["result",6]]],[0,"received_payment","diem_types::account_config::events","",null,null],[3,"ReceivedPaymentEvent","diem_types::account_config::events::received_payment","Struct that represents a ReceivedPaymentEvent.",null,null],[7,"ACCOUNT_RECEIVED_EVENT_PATH","","Returns the path to the received event counter for an…",null,null],[11,"try_from_bytes","","",14,[[],["result",6]]],[11,"sender","","Get the receiver of this transaction event.",14,[[],["accountaddress",3]]],[11,"amount","","Get the amount sent or received",14,[[]]],[11,"metadata","","Get the metadata associated with this event",14,[[],["vec",3]]],[11,"currency_code","","Return the currency code that the payment was made in.",14,[[],["identstr",3]]],[0,"sent_payment","diem_types::account_config::events","",null,null],[3,"SentPaymentEvent","diem_types::account_config::events::sent_payment","Struct that represents a SentPaymentEvent.",null,null],[7,"ACCOUNT_SENT_EVENT_PATH","","The path to the sent event counter for an Account…",null,null],[11,"new","","",15,[[["accountaddress",3],["vec",3],["identifier",3]]]],[11,"try_from_bytes","","",15,[[],["result",6]]],[11,"receiver","","Get the sender of this transaction event.",15,[[],["accountaddress",3]]],[11,"amount","","Get the amount sent or received",15,[[]]],[11,"metadata","","Get the metadata associated with this event",15,[[],["vec",3]]],[11,"currency_code","","Return the currency currency_code symbol that the payment…",15,[[],["identstr",3]]],[0,"resources","diem_types::account_config","",null,null],[0,"account","diem_types::account_config::resources","",null,null],[3,"AccountResource","diem_types::account_config::resources::account","A Rust representation of an Account resource. This is not…",null,null],[11,"new","","Constructs an Account resource.",16,[[["vec",3],["option",4],["keyrotationcapabilityresource",3],["withdrawcapabilityresource",3],["option",4],["eventhandle",3]]]],[11,"sequence_number","","Return the sequence_number field for the given…",16,[[]]],[11,"has_delegated_withdrawal_capability","","Returns if this account has delegated its withdrawal…",16,[[]]],[11,"has_delegated_key_rotation_capability","","Returns if this account has delegated its key rotation…",16,[[]]],[11,"authentication_key","","Return the authentication_key field for the given…",16,[[]]],[11,"sent_events","","Return the sent_events handle for the given AccountResource",16,[[],["eventhandle",3]]],[11,"received_events","","Return the received_events handle for the given…",16,[[],["eventhandle",3]]],[0,"balance","diem_types::account_config::resources","",null,null],[3,"BalanceResource","diem_types::account_config::resources::balance","The balance resource held under an account.",null,null],[11,"new","","",17,[[]]],[11,"coin","","",17,[[]]],[11,"struct_tag_for_currency","","",17,[[["typetag",4]],["structtag",3]]],[11,"access_path_for","","",17,[[["typetag",4]],["vec",3]]],[0,"chain_id","diem_types::account_config::resources","",null,null],[3,"ChainIdResource","diem_types::account_config::resources::chain_id","",null,null],[11,"chain_id","","",18,[[],["chainid",3]]],[0,"currency_info","diem_types::account_config::resources","",null,null],[3,"CurrencyInfoResource","diem_types::account_config::resources::currency_info","Struct that represents a CurrencyInfo resource",null,null],[11,"new","","",19,[[["eventhandle",3],["identifier",3]]]],[11,"currency_code","","",19,[[],["identstr",3]]],[11,"scaling_factor","","",19,[[]]],[11,"total_value","","",19,[[]]],[11,"preburn_value","","",19,[[]]],[11,"fractional_part","","",19,[[]]],[11,"exchange_rate","","",19,[[]]],[11,"convert_to_xdx","","",19,[[]]],[11,"struct_tag_for","","",19,[[["identifier",3]],["structtag",3]]],[11,"resource_path_for","","",19,[[["identifier",3]],["accesspath",3]]],[11,"try_from_bytes","","",19,[[],["result",6]]],[11,"mint_events","","",19,[[],["eventhandle",3]]],[11,"burn_events","","",19,[[],["eventhandle",3]]],[11,"preburn_events","","",19,[[],["eventhandle",3]]],[11,"cancel_burn_events","","",19,[[],["eventhandle",3]]],[11,"exchange_rate_update_events","","",19,[[],["eventhandle",3]]],[0,"designated_dealer","diem_types::account_config::resources","",null,null],[3,"DesignatedDealer","diem_types::account_config::resources::designated_dealer","",null,null],[11,"received_mint_events","","Return the received_mint_events handle for the given…",20,[[],["eventhandle",3]]],[0,"dual_attestation","diem_types::account_config::resources","",null,null],[3,"Credential","diem_types::account_config::resources::dual_attestation","",null,null],[3,"Limit","","Defines the dual attest limit in microDiem XDX",null,null],[12,"micro_xdx_limit","","",21,null],[11,"human_name","","",22,[[]]],[11,"base_url","","",22,[[]]],[11,"expiration_date","","",22,[[]]],[11,"compliance_public_key","","",22,[[]]],[11,"compliance_key_rotation_events","","",22,[[],["eventhandle",3]]],[11,"base_url_rotation_events","","",22,[[],["eventhandle",3]]],[0,"freezing_bit","diem_types::account_config::resources","",null,null],[3,"FreezingBit","diem_types::account_config::resources::freezing_bit","",null,null],[11,"is_frozen","","",23,[[]]],[0,"key_rotation_capability","diem_types::account_config::resources","",null,null],[3,"KeyRotationCapabilityResource","diem_types::account_config::resources::key_rotation_capability","",null,null],[0,"preburn_balance","diem_types::account_config::resources","",null,null],[3,"PreburnResource","diem_types::account_config::resources::preburn_balance","The preburn balance held under an account.",null,null],[11,"new","","",24,[[]]],[11,"coin","","",24,[[]]],[11,"struct_tag_for_currency","","",24,[[["typetag",4]],["structtag",3]]],[11,"access_path_for","","",24,[[["typetag",4]],["vec",3]]],[0,"role","diem_types::account_config::resources","",null,null],[4,"AccountRole","diem_types::account_config::resources::role","A enum that captures the collection of role-specific…",null,null],[13,"ParentVASP","","",25,null],[12,"vasp","diem_types::account_config::resources::role::AccountRole","",26,null],[12,"credential","","",26,null],[13,"ChildVASP","diem_types::account_config::resources::role","",25,null],[13,"DesignatedDealer","","",25,null],[12,"dd_credential","diem_types::account_config::resources::role::AccountRole","",27,null],[12,"preburn_balances","","",27,null],[12,"designated_dealer","","",27,null],[13,"Unknown","diem_types::account_config::resources::role","",25,null],[0,"role_id","diem_types::account_config::resources","",null,null],[3,"RoleId","diem_types::account_config::resources::role_id","",null,null],[11,"role_id","","",28,[[]]],[0,"vasp","diem_types::account_config::resources","",null,null],[3,"ParentVASP","diem_types::account_config::resources::vasp","",null,null],[3,"ChildVASP","","",null,null],[11,"num_children","","",29,[[]]],[11,"parent_vasp_addr","","",30,[[],["accountaddress",3]]],[0,"withdraw_capability","diem_types::account_config::resources","",null,null],[3,"WithdrawCapabilityResource","diem_types::account_config::resources::withdraw_capability","",null,null],[0,"account_state","diem_types","",null,null],[3,"AccountState","diem_types::account_state","",null,null],[11,"get_account_address","","",31,[[],[["result",6],["option",4]]]],[11,"get_account_resource","","",31,[[],[["result",6],["option",4]]]],[11,"get_balance_resources","","",31,[[],[["btreemap",3],["result",6]]]],[11,"get_preburn_balances","","",31,[[],[["btreemap",3],["result",6]]]],[11,"get_chain_id_resource","","",31,[[],[["option",4],["result",6]]]],[11,"get_configuration_resource","","",31,[[],[["option",4],["result",6]]]],[11,"get_diem_timestamp_resource","","",31,[[],[["option",4],["result",6]]]],[11,"get_validator_config_resource","","",31,[[],[["result",6],["option",4]]]],[11,"get_validator_operator_config_resource","","",31,[[],[["result",6],["option",4]]]],[11,"get_freezing_bit","","",31,[[],[["result",6],["option",4]]]],[11,"get_account_role","","",31,[[],[["option",4],["result",6]]]],[11,"get_validator_set","","",31,[[],[["result",6],["option",4]]]],[11,"get_diem_version","","",31,[[],[["result",6],["option",4]]]],[11,"get_vm_publishing_option","","",31,[[],[["result",6],["option",4]]]],[11,"get_registered_currency_info_resources","","",31,[[],[["vec",3],["result",6]]]],[11,"get_diem_block_resource","","",31,[[],[["result",6],["option",4]]]],[11,"get","","",31,[[],[["option",4],["vec",3]]]],[11,"get_resource_impl","","",31,[[],[["option",4],["result",6]]]],[11,"insert","","",31,[[["vec",3]],[["vec",3],["option",4]]]],[11,"remove","","",31,[[],[["vec",3],["option",4]]]],[11,"iter","","",31,[[]]],[11,"get_config","","",31,[[],[["option",4],["result",6]]]],[11,"get_resource","","",31,[[],[["option",4],["result",6]]]],[11,"get_modules","","Return an iterator over the module values stored under…",31,[[]]],[0,"account_state_blob","diem_types","",null,null],[3,"AccountStateBlob","diem_types::account_state_blob","",null,null],[3,"AccountStateBlobHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[3,"AccountStateWithProof","","",null,null],[12,"version","","The transaction version at which this account state is seen.",32,null],[12,"blob","","Blob value representing the account state. If this field…",32,null],[12,"proof","","The proof the client can use to authenticate the value.",32,null],[11,"new","","Constructor.",32,[[["option",4],["accountstateblob",3],["version",6],["accountstateproof",3]]]],[11,"verify","","Verifies the the account state blob with the proof, both…",32,[[["accountaddress",3],["version",6],["ledgerinfo",3]],["result",6]]],[0,"block_info","diem_types","",null,null],[3,"BlockInfo","diem_types::block_info","This structure contains all the information needed for…",null,null],[6,"Round","","The round of a block is a consensus-internal counter,…",null,null],[17,"GENESIS_EPOCH","","",null,null],[17,"GENESIS_ROUND","","",null,null],[17,"GENESIS_VERSION","","",null,null],[17,"GENESIS_TIMESTAMP_USECS","","",null,null],[11,"new","","",33,[[["epochstate",3],["hashvalue",3],["round",6],["option",4],["version",6]]]],[11,"empty","","",33,[[]]],[11,"random","","",33,[[["round",6]]]],[11,"genesis","","Create a new genesis block. The genesis block is…",33,[[["validatorset",3],["hashvalue",3]]]],[11,"mock_genesis","","Create a mock genesis `BlockInfo` with an empty state tree…",33,[[["option",4],["validatorset",3]]]],[11,"next_block_epoch","","The epoch after this block committed",33,[[]]],[11,"epoch","","",33,[[]]],[11,"executed_state_id","","",33,[[],["hashvalue",3]]],[11,"has_reconfiguration","","",33,[[]]],[11,"id","","",33,[[],["hashvalue",3]]],[11,"next_epoch_state","","",33,[[],[["epochstate",3],["option",4]]]],[11,"round","","",33,[[],["round",6]]],[11,"timestamp_usecs","","",33,[[]]],[11,"version","","",33,[[],["version",6]]],[0,"block_metadata","diem_types","",null,null],[3,"BlockMetadata","diem_types::block_metadata","Struct that will be persisted on chain to store the…",null,null],[3,"DiemBlockResource","","",null,null],[3,"NewBlockEvent","","",null,null],[5,"new_block_event_key","","",null,[[],["eventkey",3]]],[7,"NEW_BLOCK_EVENT_PATH","","The path to the new block event handle under a…",null,null],[11,"new","","",34,[[["vec",3],["hashvalue",3],["accountaddress",3]]]],[11,"id","","",34,[[],["hashvalue",3]]],[11,"into_inner","","",34,[[]]],[11,"timestamp_usec","","",34,[[]]],[11,"proposer","","",34,[[],["accountaddress",3]]],[11,"new_block_events","","",35,[[],["eventhandle",3]]],[11,"new","","",36,[[["accountaddress",3],["vec",3]]]],[11,"round","","",36,[[]]],[11,"proposer","","",36,[[],["accountaddress",3]]],[11,"votes","","",36,[[],[["vec",3],["accountaddress",3]]]],[0,"chain_id","diem_types","",null,null],[3,"ChainId","diem_types::chain_id","Note: u7 in a u8 is uleb-compatible, and any usage of this…",null,null],[4,"NamedChain","","A registry of named chain IDs Its main purpose is to…",null,null],[13,"MAINNET","","Users might accidentally initialize the ChainId field to…",37,null],[13,"TESTNET","","",37,null],[13,"DEVNET","","",37,null],[13,"TESTING","","",37,null],[13,"PREMAINNET","","",37,null],[5,"deserialize_config_chain_id","","",null,[[],[["chainid",3],["result",4]]]],[11,"id","","",37,[[]]],[11,"from_chain_id","","",37,[[["chainid",3]],[["result",6],["namedchain",4],["string",3]]]],[11,"new","","",38,[[]]],[11,"id","","",38,[[]]],[11,"test","","",38,[[]]],[0,"contract_event","diem_types","",null,null],[3,"ContractEventHasher","diem_types::contract_event","Cryptographic hasher for an BCS-serializable #item",null,null],[3,"ContractEventV0","","Entry produced via a call to the `emit_event` builtin.",null,null],[3,"ContractEventV0Hasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[3,"EventWithProof","","",null,null],[12,"transaction_version","","",39,null],[12,"event_index","","",39,null],[12,"event","","",39,null],[12,"proof","","",39,null],[4,"ContractEvent","","Support versioning of the data structure.",null,null],[13,"V0","","",40,null],[11,"new","","",40,[[["vec",3],["eventkey",3],["typetag",4]]]],[11,"new","","",41,[[["vec",3],["eventkey",3],["typetag",4]]]],[11,"key","","",41,[[],["eventkey",3]]],[11,"sequence_number","","",41,[[]]],[11,"event_data","","",41,[[]]],[11,"type_tag","","",41,[[],["typetag",4]]],[11,"new","","Constructor.",39,[[["eventproof",3],["version",6],["contractevent",4]]]],[11,"verify","","Verifies the event with the proof, both carried by `self`.",39,[[["version",6],["eventkey",3],["ledgerinfo",3]],["result",6]]],[0,"diem_timestamp","diem_types","",null,null],[3,"DiemTimestampResource","diem_types::diem_timestamp","",null,null],[12,"diem_timestamp","","",42,null],[3,"DiemTimestamp","","",null,null],[12,"microseconds","","",43,null],[0,"epoch_change","diem_types","",null,null],[3,"EpochChangeProof","diem_types::epoch_change","A vector of LedgerInfo with contiguous increasing epoch…",null,null],[12,"ledger_info_with_sigs","","",44,null],[12,"more","","",44,null],[8,"Verifier","","The verification of the epoch change proof starts with…",null,null],[10,"verify","","Verify if the ledger_info is trust worthy.",45,[[["ledgerinfowithsignatures",4]],["result",6]]],[10,"epoch_change_verification_required","","Returns true in case the given epoch is larger than the…",45,[[]]],[10,"is_ledger_info_stale","","Returns true if the given [`LedgerInfo`] is stale and…",45,[[["ledgerinfo",3]]]],[11,"new","","",44,[[["ledgerinfowithsignatures",4],["vec",3]]]],[11,"epoch","","The first/lowest epoch of the proof to indicate which…",44,[[],["result",6]]],[11,"verify","","Verify the proof is correctly chained with known epoch and…",44,[[["verifier",8]],[["ledgerinfowithsignatures",4],["result",6]]]],[0,"epoch_state","diem_types","",null,null],[3,"EpochState","diem_types::epoch_state","EpochState represents a trusted validator set to validate…",null,null],[12,"epoch","","",46,null],[12,"verifier","","",46,null],[11,"empty","","",46,[[]]],[0,"event","diem_types","",null,null],[3,"EventKey","diem_types::event","A struct that represents a globally unique id for an Event…",null,null],[3,"EventHandle","","A Rust representation of an Event Handle Resource.",null,null],[11,"new","","Construct a new EventKey from a byte array slice.",47,[[]]],[18,"LENGTH","","The number of bytes in an EventKey.",47,null],[11,"as_bytes","","Get the byte representation of the event key.",47,[[]]],[11,"to_vec","","Convert event key into a byte array.",47,[[],["vec",3]]],[11,"get_creator_address","","Get the account address part in this event key",47,[[],["accountaddress",3]]],[11,"get_creation_number","","If this is the `ith` EventKey`created…",47,[[]]],[11,"random","","Create a random event key for testing",47,[[]]],[11,"new_from_address","","Create a unique handle by using an AccountAddress and a…",47,[[["accountaddress",3]]]],[11,"new","","Constructs a new Event Handle",48,[[["eventkey",3]]]],[11,"key","","Return the key to where this event is stored in EventStore.",48,[[],["eventkey",3]]],[11,"count","","Return the counter for the handle",48,[[]]],[11,"count_mut","","",48,[[]]],[11,"random_handle","","Create a random event handle for testing",48,[[]]],[11,"new_from_address","","Derive a unique handle by using an AccountAddress and a…",48,[[["accountaddress",3]]]],[0,"ledger_info","diem_types","",null,null],[3,"LedgerInfo","diem_types::ledger_info","This structure serves a dual purpose.",null,null],[3,"LedgerInfoHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[3,"LedgerInfoWithV0","","The validator node returns this structure which includes…",null,null],[4,"LedgerInfoWithSignatures","","Wrapper around LedgerInfoWithScheme to support future…",null,null],[13,"V0","","",49,null],[11,"new","","Constructs a `LedgerInfo` object based on the given commit…",50,[[["blockinfo",3],["hashvalue",3]]]],[11,"genesis","","Create a new LedgerInfo at genesis with the given genesis…",50,[[["validatorset",3],["hashvalue",3]]]],[11,"mock_genesis","","",50,[[["option",4],["validatorset",3]]]],[11,"commit_info","","The `BlockInfo` of a committed block.",50,[[],["blockinfo",3]]],[11,"epoch","","A series of wrapper functions for the data stored in the…",50,[[]]],[11,"next_block_epoch","","",50,[[]]],[11,"round","","",50,[[],["round",6]]],[11,"consensus_block_id","","",50,[[],["hashvalue",3]]],[11,"transaction_accumulator_hash","","",50,[[],["hashvalue",3]]],[11,"version","","",50,[[],["version",6]]],[11,"timestamp_usecs","","",50,[[]]],[11,"next_epoch_state","","",50,[[],[["epochstate",3],["option",4]]]],[11,"ends_epoch","","",50,[[]]],[11,"consensus_data_hash","","Returns hash of consensus voting data in this `LedgerInfo`.",50,[[],["hashvalue",3]]],[11,"set_consensus_data_hash","","",50,[[["hashvalue",3]]]],[11,"new","","",49,[[["ed25519signature",3],["ledgerinfo",3],["accountaddress",3],["btreemap",3]]]],[11,"genesis","","",49,[[["validatorset",3],["hashvalue",3]]]],[11,"new","","",51,[[["ed25519signature",3],["ledgerinfo",3],["accountaddress",3],["btreemap",3]]]],[11,"genesis","","Create a new `LedgerInfoWithEd25519` at genesis with the…",51,[[["validatorset",3],["hashvalue",3]]]],[11,"ledger_info","","",51,[[],["ledgerinfo",3]]],[11,"add_signature","","",51,[[["accountaddress",3],["ed25519signature",3]]]],[11,"remove_signature","","",51,[[["accountaddress",3]]]],[11,"signatures","","",51,[[],["btreemap",3]]],[11,"verify_signatures","","",51,[[["validatorverifier",3]],[["result",4],["verifyerror",4]]]],[0,"mempool_status","diem_types","",null,null],[3,"MempoolStatus","diem_types::mempool_status","A `MempoolStatus` is represented as a required status code…",null,null],[12,"code","","insertion status code",52,null],[12,"message","","optional message",52,null],[4,"MempoolStatusCode","","",null,null],[13,"Accepted","","",53,null],[13,"InvalidSeqNumber","","",53,null],[13,"MempoolIsFull","","",53,null],[13,"TooManyTransactions","","",53,null],[13,"InvalidUpdate","","",53,null],[13,"VmError","","",53,null],[13,"UnknownStatus","","",53,null],[11,"new","","",52,[[["mempoolstatuscode",4]]]],[11,"with_message","","Adds a message to the Mempool status.",52,[[["string",3]]]],[0,"move_resource","diem_types","",null,null],[8,"MoveStorage","diem_types::move_resource","",null,null],[10,"batch_fetch_resources","","Returns a vector of Move resources as serialized byte…",54,[[["accesspath",3],["vec",3]],[["result",6],["vec",3]]]],[10,"batch_fetch_resources_by_version","","Returns a vector of Move resources as serialized byte…",54,[[["accesspath",3],["version",6],["vec",3]],[["result",6],["vec",3]]]],[10,"fetch_synced_version","","Get the version on the latest transaction info.",54,[[],[["version",6],["result",6]]]],[0,"on_chain_config","diem_types","",null,null],[3,"DiemVersion","diem_types::on_chain_config","Defines the version of Diem Validator software.",null,null],[12,"major","","",55,null],[3,"RegisteredCurrencies","","",null,null],[3,"ValidatorSet","","",null,null],[3,"VMConfig","","Defines all the on chain configuration data needed by VM.",null,null],[12,"gas_schedule","","",56,null],[3,"VMPublishingOption","","Defines and holds the publishing policies for the VM.…",null,null],[12,"script_allow_list","","",57,null],[12,"is_open_module","","",57,null],[3,"ConfigID","","To register an on-chain config in Rust:",null,null],[3,"OnChainConfigPayload","","",null,null],[3,"ConfigurationResource","","",null,null],[5,"config_address","","",null,[[],["accountaddress",3]]],[5,"new_epoch_event_key","","",null,[[],["eventkey",3]]],[5,"access_path_for_config","","",null,[[["accountaddress",3],["identifier",3]],["accesspath",3]]],[11,"currency_codes","","",58,[[]]],[11,"from_bytes","","",58,[[],["result",6]]],[11,"new","","Constructs a ValidatorSet resource.",59,[[["validatorinfo",3],["vec",3]]]],[11,"payload","","",59,[[]]],[11,"empty","","",59,[[]]],[11,"locked","","",57,[[["vec",3]]]],[11,"custom_scripts","","",57,[[]]],[11,"open","","",57,[[]]],[11,"is_open_module","","",57,[[]]],[11,"is_open_script","","",57,[[]]],[17,"ON_CHAIN_CONFIG_REGISTRY","","State sync will panic if the value of any config in this…",null,null],[8,"ConfigStorage","","Trait to be implemented by a storage type from which to…",null,null],[10,"fetch_config","","",60,[[["accesspath",3]],[["vec",3],["option",4]]]],[8,"OnChainConfig","","Trait to be implemented by a Rust struct representation of…",null,null],[18,"ADDRESS","","",61,null],[18,"IDENTIFIER","","",61,null],[18,"CONFIG_ID","","",61,null],[11,"deserialize_default_impl","","",61,[[],["result",6]]],[11,"deserialize_into_config","","",61,[[],["result",6]]],[11,"fetch_config","","",61,[[],["option",4]]],[11,"access_path","","",62,[[],["accesspath",3]]],[11,"new","","",63,[[["arc",3],["hashmap",3]]]],[11,"epoch","","",63,[[]]],[11,"get","","",63,[[],[["onchainconfig",8],["result",6]]]],[11,"configs","","",63,[[],["hashmap",3]]],[11,"epoch","","",64,[[]]],[11,"last_reconfiguration_time","","",64,[[]]],[11,"events","","",64,[[],["eventhandle",3]]],[11,"bump_epoch_for_test","","",64,[[]]],[0,"proof","diem_types","",null,null],[3,"MerkleTreeInternalNode","diem_types::proof","",null,null],[3,"SparseMerkleLeafNode","","",null,null],[3,"SparseMerkleLeafNodeHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[0,"accumulator","","This module implements an in-memory Merkle Accumulator…",null,null],[3,"InMemoryAccumulator","diem_types::proof::accumulator","The Accumulator implementation.",null,null],[11,"new","","Constructs a new accumulator with roots of existing frozen…",65,[[["leafcount",6],["hashvalue",3],["vec",3]],["result",6]]],[11,"from_leaves","","Constructs a new accumulator with given leaves.",65,[[]]],[11,"append","","Appends a list of new leaves to an existing accumulator.…",65,[[]]],[11,"append_subtrees","","Appends a list of new subtrees to the existing…",65,[[["leafcount",6]],["result",6]]],[11,"root_hash","","Returns the root hash of the accumulator.",65,[[],["hashvalue",3]]],[11,"version","","",65,[[]]],[11,"frozen_subtree_roots","","Returns the set of frozen subtree roots in this accumulator",65,[[],["vec",3]]],[11,"num_leaves","","Returns the total number of leaves in this accumulator.",65,[[],["leafcount",6]]],[0,"definition","diem_types::proof","This module has definition of various proofs.",null,null],[3,"AccumulatorProof","diem_types::proof::definition","A proof that can be used authenticate an element in an…",null,null],[3,"SparseMerkleProof","","A proof that can be used to authenticate an element in a…",null,null],[3,"AccumulatorConsistencyProof","","A proof that can be used to show that two Merkle…",null,null],[3,"AccumulatorRangeProof","","A proof that is similar to `AccumulatorProof`, but can be…",null,null],[3,"SparseMerkleRangeProof","","A proof that can be used authenticate a range of…",null,null],[3,"TransactionInfoWithProof","","`TransactionInfo` and a `TransactionAccumulatorProof`…",null,null],[3,"AccountStateProof","","The complete proof used to authenticate the state of an…",null,null],[3,"EventProof","","The complete proof used to authenticate a contract event.…",null,null],[3,"TransactionListProof","","The complete proof used to authenticate a list of…",null,null],[3,"AccumulatorExtensionProof","","A proof that first verifies that establishes correct…",null,null],[6,"LeafCount","","Because leaves can only take half the space in the tree,…",null,null],[6,"TransactionAccumulatorProof","","",null,null],[6,"EventAccumulatorProof","","",null,null],[6,"TestAccumulatorProof","","",null,null],[6,"TransactionAccumulatorRangeProof","","",null,null],[6,"TestAccumulatorRangeProof","","",null,null],[17,"MAX_ACCUMULATOR_PROOF_DEPTH","","",null,null],[17,"MAX_ACCUMULATOR_LEAVES","","",null,null],[11,"new","","Constructs a new `AccumulatorProof` using a list of…",66,[[["hashvalue",3],["vec",3]]]],[11,"siblings","","Returns the list of siblings in this proof.",66,[[]]],[11,"verify","","Verifies an element whose hash is `element_hash` and…",66,[[["hashvalue",3]],["result",6]]],[11,"new","","Constructs a new `SparseMerkleProof` using leaf and a list…",67,[[["sparsemerkleleafnode",3],["vec",3],["hashvalue",3],["option",4]]]],[11,"leaf","","Returns the leaf node in this proof.",67,[[],[["sparsemerkleleafnode",3],["option",4]]]],[11,"siblings","","Returns the list of siblings in this proof.",67,[[]]],[11,"verify","","If `element_value` is present, verifies an element whose…",67,[[["hashvalue",3],["option",4]],["result",6]]],[11,"new","","Constructs a new `AccumulatorConsistencyProof` using given…",68,[[["hashvalue",3],["vec",3]]]],[11,"subtrees","","Returns the subtrees.",68,[[]]],[11,"new","","Constructs a new `AccumulatorRangeProof` using…",69,[[["hashvalue",3],["vec",3]]]],[11,"new_empty","","Constructs a new `AccumulatorRangeProof` for an empty list…",69,[[]]],[11,"left_siblings","","Get all the left siblngs.",69,[[],["vec",3]]],[11,"right_siblings","","Get all the right siblngs.",69,[[],["vec",3]]],[11,"verify","","Verifies the proof is correct. The verifier needs to have…",69,[[["option",4],["hashvalue",3]],["result",6]]],[11,"new","","Constructs a new `SparseMerkleRangeProof`.",70,[[["hashvalue",3],["vec",3]]]],[11,"right_siblings","","Returns the siblings.",70,[[]]],[11,"new","","Constructs a new `TransactionWithProof` object using given…",71,[[["transactionaccumulatorproof",6],["transactioninfo",3]]]],[11,"ledger_info_to_transaction_info_proof","","Returns the `ledger_info_to_transaction_info_proof` object…",71,[[],["transactionaccumulatorproof",6]]],[11,"transaction_info","","Returns the `transaction_info` object in this proof.",71,[[],["transactioninfo",3]]],[11,"verify","","Verifies that the `TransactionInfo` exists in the ledger…",71,[[["version",6],["ledgerinfo",3]],["result",6]]],[11,"new","","Constructs a new `AccountStateProof` using given…",72,[[["accountstateblob",3],["transactioninfowithproof",3],["sparsemerkleproof",3]]]],[11,"transaction_info_with_proof","","Returns the `transaction_info_with_proof` object in this…",72,[[],["transactioninfowithproof",3]]],[11,"transaction_info_to_account_proof","","Returns the `transaction_info_to_account_proof` object in…",72,[[],["sparsemerkleproof",3]]],[11,"verify","","Verifies that the state of an account at version…",72,[[["hashvalue",3],["option",4],["version",6],["accountstateblob",3],["ledgerinfo",3]],["result",6]]],[11,"new","","Constructs a new `EventProof` using given…",73,[[["transactioninfowithproof",3],["eventaccumulatorproof",6]]]],[11,"transaction_info_with_proof","","Returns the `transaction_info_with_proof` object in this…",73,[[],["transactioninfowithproof",3]]],[11,"verify","","Verifies that a given event is correct using provided proof.",73,[[["hashvalue",3],["version",6],["ledgerinfo",3]],["result",6]]],[11,"new","","Constructs a new `TransactionListProof` using…",74,[[["transactionaccumulatorrangeproof",6],["transactioninfo",3],["vec",3]]]],[11,"new_empty","","Constructs a proof for an empty list of transactions.",74,[[]]],[11,"transaction_infos","","Returns the list of `TransactionInfo` objects.",74,[[]]],[11,"left_siblings","","",74,[[],["vec",3]]],[11,"unpack","","",74,[[]]],[11,"verify","","Verifies the list of transactions are correct using the…",74,[[["version",6],["option",4],["ledgerinfo",3]],["result",6]]],[11,"new","","",75,[[["leafcount",6],["hashvalue",3],["vec",3]]]],[11,"verify","","",75,[[["hashvalue",3]],[["inmemoryaccumulator",3],["result",6]]]],[0,"position","diem_types::proof","This module provides an abstraction for positioning a node…",null,null],[3,"Position","diem_types::proof::position","",null,null],[3,"AncestorSiblingIterator","","`AncestorSiblingIterator` generates current sibling…",null,null],[3,"AncestorIterator","","`AncestorIterator` generates current position and moves…",null,null],[3,"FrozenSubTreeIterator","","Traverse leaves from left to right in groups that forms…",null,null],[3,"FrozenSubtreeSiblingIterator","","Given an accumulator of size `current_num_leaves`,…",null,null],[4,"NodeDirection","","",null,null],[13,"Left","","",76,null],[13,"Right","","",76,null],[5,"inorder_to_postorder","","Given `node`, an index in an in-order traversal of a…",null,[[]]],[5,"postorder_to_inorder","","",null,[[]]],[11,"level","","What level is this node in the tree, 0 if the node is a…",77,[[]]],[11,"from_level_and_pos","","pos count start from 0 on each level",77,[[]]],[11,"from_inorder_index","","",77,[[]]],[11,"to_inorder_index","","",77,[[]]],[11,"from_postorder_index","","",77,[[],["result",6]]],[11,"to_postorder_index","","",77,[[]]],[11,"parent","","What is the parent of this node?",77,[[]]],[11,"left_child","","What is the left node of this node? Will overflow if the…",77,[[]]],[11,"right_child","","What is the right node of this node? Will overflow if the…",77,[[]]],[11,"is_left_child","","Whether this position is a left child of its parent. The…",77,[[]]],[11,"is_right_child","","",77,[[]]],[11,"from_leaf_index","","",77,[[]]],[11,"sibling","","This method takes in a node position and return its…",77,[[]]],[11,"root_from_leaf_index","","This method calculates the index of the smallest root…",77,[[]]],[11,"root_from_leaf_count","","",77,[[["leafcount",6]]]],[11,"root_level_from_leaf_count","","",77,[[["leafcount",6]]]],[11,"right_most_child","","Given a node, find its right most child in its subtree.…",77,[[]]],[11,"left_most_child","","Given a node, find its left most child in its subtree Left…",77,[[]]],[11,"is_freezable","","",77,[[]]],[11,"is_placeholder","","",77,[[]]],[11,"iter_ancestor","","Creates an `AncestorIterator` using this position.",77,[[],["ancestoriterator",3]]],[11,"iter_ancestor_sibling","","Creates an `AncestorSiblingIterator` using this position.",77,[[],["ancestorsiblingiterator",3]]],[11,"new","","",78,[[["leafcount",6]]]],[11,"new","","Constructs a new `FrozenSubtreeSiblingIterator` given the…",79,[[["leafcount",6]]]],[0,"proptest_proof","diem_types::proof","All proofs generated in this module are not valid proofs.…",null,null],[6,"SparseMerkleInternalNode","","",null,null],[6,"TransactionAccumulatorInternalNode","","",null,null],[6,"EventAccumulatorInternalNode","","",null,null],[6,"TestAccumulatorInternalNode","","",null,null],[11,"new","","",80,[[["hashvalue",3]]]],[11,"new","","",81,[[["hashvalue",3]]]],[11,"key","","",81,[[],["hashvalue",3]]],[11,"value_hash","","",81,[[],["hashvalue",3]]],[0,"proptest_types","diem_types","",null,null],[3,"AccountInfoUniverse","diem_types::proptest_types","",null,null],[3,"RawTransactionGen","","",null,null],[3,"SignatureCheckedTransactionGen","","",null,null],[3,"ContractEventGen","","",null,null],[3,"AccountResourceGen","","",null,null],[3,"BalanceResourceGen","","",null,null],[3,"AccountStateBlobGen","","",null,null],[3,"TransactionToCommitGen","","Represents information already determined for generating a…",null,null],[3,"BlockInfoGen","","",null,null],[3,"LedgerInfoGen","","",null,null],[3,"LedgerInfoWithSignaturesGen","","",null,null],[5,"arb_json_value","","",null,[[]]],[11,"get_validator_set","","",82,[[]]],[11,"materialize","","",83,[[["accountinfouniverse",3],["index",3]],["rawtransaction",3]]],[11,"materialize","","",84,[[["accountinfouniverse",3],["index",3]],["signaturecheckedtransaction",3]]],[11,"materialize","","",85,[[["accountinfouniverse",3],["index",3]],["contractevent",4]]],[11,"materialize","","",86,[[["accountinfouniverse",3],["index",3]],["accountresource",3]]],[11,"materialize","","",87,[[],["balanceresource",3]]],[11,"materialize","","",88,[[["accountinfouniverse",3],["index",3]],["accountstateblob",3]]],[11,"strategy_impl","diem_types::event","",48,[[]]],[11,"strategy_impl","diem_types::contract_event","",40,[[]]],[11,"materialize","diem_types::proptest_types","Materialize considering current states in the universe.",89,[[["accountinfouniverse",3]],["transactiontocommit",3]]],[11,"materialize","","",90,[[["accountinfouniverse",3]],["blockinfo",3]]],[11,"materialize","","",91,[[["accountinfouniverse",3]],["ledgerinfo",3]]],[11,"materialize","","",92,[[["accountinfouniverse",3]],["ledgerinfowithsignatures",4]]],[0,"test_helpers","diem_types","",null,null],[0,"transaction_test_helpers","diem_types::test_helpers","",null,null],[5,"get_test_signed_module_publishing_transaction","diem_types::test_helpers::transaction_test_helpers","",null,[[["module",3],["accountaddress",3],["ed25519privatekey",3],["ed25519publickey",3]],["signedtransaction",3]]],[5,"get_test_signed_transaction","","",null,[[["option",4],["option",4],["string",3],["accountaddress",3],["script",3],["ed25519privatekey",3],["ed25519publickey",3]],["signedtransaction",3]]],[5,"get_test_unchecked_transaction","","",null,[[["option",4],["option",4],["string",3],["accountaddress",3],["script",3],["ed25519privatekey",3],["ed25519publickey",3]],["signedtransaction",3]]],[5,"get_test_signed_txn","","",null,[[["option",4],["accountaddress",3],["script",3],["ed25519privatekey",3],["ed25519publickey",3]],["signedtransaction",3]]],[5,"get_test_unchecked_txn","","",null,[[["option",4],["accountaddress",3],["script",3],["ed25519privatekey",3],["ed25519publickey",3]],["signedtransaction",3]]],[5,"get_test_txn_with_chain_id","","",null,[[["chainid",3],["accountaddress",3],["ed25519privatekey",3],["ed25519publickey",3]],["signedtransaction",3]]],[5,"get_write_set_txn","","",null,[[["writeset",3],["accountaddress",3],["option",4],["ed25519privatekey",3],["ed25519publickey",3]],["signaturecheckedtransaction",3]]],[0,"transaction","diem_types","",null,null],[5,"parse_transaction_argument","diem_types::transaction","",null,[[],[["transactionargument",4],["error",3],["result",4]]]],[4,"TransactionArgument","","",null,null],[13,"U8","","",93,null],[13,"U64","","",93,null],[13,"U128","","",93,null],[13,"Address","","",93,null],[13,"U8Vector","","",93,null],[13,"Bool","","",93,null],[3,"ChangeSet","","",null,null],[3,"Module","","",null,null],[3,"ArgumentABI","","The description of a (regular) argument in a script.",null,null],[3,"Script","","Call a Move script.",null,null],[3,"ScriptABI","","How to call a particular Move script (aka. an \\\"ABI\\\").",null,null],[3,"TypeArgumentABI","","The description of a type argument in a script.",null,null],[3,"RawTransaction","","RawTransaction is the portion of a transaction that a…",null,null],[3,"RawTransactionHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[3,"SignedTransaction","","A transaction that has been signed.",null,null],[3,"SignatureCheckedTransaction","","A transaction for which the signature has been verified.…",null,null],[3,"TransactionWithProof","","",null,null],[12,"version","","",94,null],[12,"transaction","","",94,null],[12,"events","","",94,null],[12,"proof","","",94,null],[3,"VMValidatorResult","","The result of running the transaction through the VM…",null,null],[3,"TransactionOutput","","The output of executing a transaction.",null,null],[3,"TransactionInfo","","`TransactionInfo` is the object we store in the…",null,null],[3,"TransactionInfoHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[3,"TransactionToCommit","","",null,null],[3,"TransactionListWithProof","","The list may have three states:",null,null],[12,"transactions","","",95,null],[12,"events","","",95,null],[12,"first_transaction_version","","",95,null],[12,"proof","","",95,null],[3,"TransactionHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[4,"TransactionPayload","","Different kinds of transactions.",null,null],[13,"WriteSet","","A system maintenance transaction.",96,null],[13,"Script","","A transaction that executes code.",96,null],[13,"Module","","A transaction that publishes code.",96,null],[4,"WriteSetPayload","","Two different kinds of WriteSet transactions.",null,null],[13,"Direct","","Directly passing in the WriteSet.",97,null],[13,"Script","","Generate the WriteSet by running a script.",97,null],[12,"execute_as","diem_types::transaction::WriteSetPayload","Execute the script as the designated signer.",98,null],[12,"script","","Script body that gets executed.",98,null],[4,"TransactionStatus","diem_types::transaction","The status of executing a transaction. The VM decides…",null,null],[13,"Discard","","Discard the transaction output",99,null],[13,"Keep","","Keep the transaction output",99,null],[13,"Retry","","Retry the transaction, e.g., after a reconfiguration",99,null],[4,"GovernanceRole","","",null,null],[13,"DiemRoot","","",100,null],[13,"TreasuryCompliance","","",100,null],[13,"Validator","","",100,null],[13,"ValidatorOperator","","",100,null],[13,"DesignatedDealer","","",100,null],[13,"NonGovernanceRole","","",100,null],[4,"Transaction","","`Transaction` will be the transaction type used internally…",null,null],[13,"UserTransaction","","Transaction submitted by the user. e.g: P2P payment…",101,null],[13,"GenesisTransaction","","Transaction that applies a WriteSet to the current…",101,null],[13,"BlockMetadata","","Transaction to update the block metadata resource at the…",101,null],[0,"authenticator","","",null,null],[3,"AuthenticationKey","diem_types::transaction::authenticator","A struct that represents an account authentication key. An…",null,null],[3,"AuthenticationKeyHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[3,"AuthenticationKeyPreimage","","A value that can be hashed to produce an authentication key",null,null],[4,"Scheme","","A `TransactionAuthenticator` is an an abstraction of a…",null,null],[13,"Ed25519","","",102,null],[13,"MultiEd25519","","",102,null],[4,"TransactionAuthenticator","","",null,null],[13,"Ed25519","","Single signature",103,null],[12,"public_key","diem_types::transaction::authenticator::TransactionAuthenticator","",104,null],[12,"signature","","",104,null],[13,"MultiEd25519","diem_types::transaction::authenticator","K-of-N multisignature",103,null],[12,"public_key","diem_types::transaction::authenticator::TransactionAuthenticator","",105,null],[12,"signature","","",105,null],[11,"scheme","diem_types::transaction::authenticator","Unique identifier for the signature scheme",103,[[],["scheme",4]]],[11,"ed25519","","Create a single-signature ed25519 authenticator",103,[[["ed25519signature",3],["ed25519publickey",3]]]],[11,"multi_ed25519","","Create a multisignature ed25519 authenticator",103,[[["multied25519signature",3],["multied25519publickey",3]]]],[11,"verify","","Return Ok if the authenticator\'s public key matches its…",103,[[],["result",6]]],[11,"public_key_bytes","","Return the raw bytes of `self.public_key`",103,[[],["vec",3]]],[11,"signature_bytes","","Return the raw bytes of `self.signature`",103,[[],["vec",3]]],[11,"authentication_key_preimage","","Return an authentication key preimage derived from…",103,[[],["authenticationkeypreimage",3]]],[11,"authentication_key","","Return an authentication key derived from `self`\'s public…",103,[[],["authenticationkey",3]]],[11,"new","","Create an authentication key from `bytes`",106,[[]]],[18,"LENGTH","","The number of bytes in an authentication key.",106,null],[11,"from_preimage","","Create an authentication key from a preimage by taking its…",106,[[["authenticationkeypreimage",3]],["authenticationkey",3]]],[11,"ed25519","","Create an authentication key from an Ed25519 public key",106,[[["ed25519publickey",3]],["authenticationkey",3]]],[11,"multi_ed25519","","Create an authentication key from a MultiEd25519 public key",106,[[["multied25519publickey",3]]]],[11,"derived_address","","Return an address derived from the last…",106,[[],["accountaddress",3]]],[11,"prefix","","Return the first AccountAddress::LENGTH bytes of this…",106,[[]]],[11,"to_vec","","Construct a vector from this authentication key",106,[[],["vec",3]]],[11,"random","","Create a random authentication key. For testing only",106,[[]]],[11,"ed25519","","Construct a preimage from an Ed25519 public key",107,[[["ed25519publickey",3]],["authenticationkeypreimage",3]]],[11,"multi_ed25519","","Construct a preimage from a MultiEd25519 public key",107,[[["multied25519publickey",3]],["authenticationkeypreimage",3]]],[11,"into_vec","","Construct a vector from this authentication key",107,[[],["vec",3]]],[11,"new","diem_types::transaction","",108,[[["contractevent",4],["vec",3],["writeset",3]]]],[11,"into_inner","","",108,[[]]],[11,"write_set","","",108,[[],["writeset",3]]],[11,"events","","",108,[[]]],[0,"helpers","","",null,null],[5,"create_unsigned_txn","diem_types::transaction::helpers","",null,[[["chainid",3],["string",3],["accountaddress",3],["transactionpayload",4]],["rawtransaction",3]]],[5,"create_user_txn","","Craft a transaction request.",null,[[["chainid",3],["string",3],["accountaddress",3],["transactionpayload",4]],[["result",6],["signedtransaction",3]]]],[8,"TransactionSigner","","",null,null],[10,"sign_txn","","",109,[[["rawtransaction",3]],[["result",6],["signedtransaction",3]]]],[0,"metadata","diem_types::transaction","This file implements Diem transaction metadata types to…",null,null],[3,"GeneralMetadataV0","diem_types::transaction::metadata","Transaction metadata for regular addressing with optional…",null,null],[3,"TravelRuleMetadataV0","","Transaction metadata format for transactions subject to…",null,null],[3,"UnstructuredBytesMetadata","","Opaque binary transaction metadata",null,null],[4,"Metadata","","List of all supported metadata types",null,null],[13,"Undefined","","",110,null],[13,"GeneralMetadata","","",110,null],[13,"TravelRuleMetadata","","",110,null],[13,"UnstructuredBytesMetadata","","",110,null],[4,"GeneralMetadata","","List of supported transaction metadata format versions for…",null,null],[13,"GeneralMetadataVersion0","","",111,null],[4,"TravelRuleMetadata","","List of supported transaction metadata format versions for…",null,null],[13,"TravelRuleMetadataVersion0","","",112,null],[11,"new","","",113,[[["option",4],["vec",3],["option",4]]]],[11,"to_subaddress","","",113,[[],["option",4]]],[11,"from_subaddress","","",113,[[],["option",4]]],[11,"referenced_event","","",113,[[],["option",4]]],[11,"new","diem_types::transaction","",114,[[["vec",3]],["module",3]]],[11,"code","","",114,[[]]],[11,"new","","",115,[[["typetag",4],["vec",3],["vec",3],["vec",3],["transactionargument",4]]]],[11,"code","","",115,[[]]],[11,"ty_args","","",115,[[]]],[11,"args","","",115,[[]]],[11,"into_inner","","",115,[[]]],[11,"new","","",116,[[["vec",3],["vec",3],["string",3],["argumentabi",3],["vec",3],["typeargumentabi",3]]]],[11,"name","","",116,[[]]],[11,"doc","","",116,[[]]],[11,"code","","",116,[[]]],[11,"ty_args","","",116,[[]]],[11,"args","","",116,[[]]],[11,"new","","",117,[[["typetag",4],["string",3]]]],[11,"name","","",117,[[]]],[11,"type_tag","","",117,[[],["typetag",4]]],[11,"new","","",118,[[["string",3]]]],[11,"name","","",118,[[]]],[6,"Version","","",null,null],[17,"SCRIPT_HASH_LENGTH","","",null,null],[17,"PRE_GENESIS_VERSION","","",null,null],[11,"new","","Create a new `RawTransaction` with a payload.",119,[[["chainid",3],["string",3],["accountaddress",3],["transactionpayload",4]]]],[11,"new_script","","Create a new `RawTransaction` with a script.",119,[[["string",3],["accountaddress",3],["script",3],["chainid",3]]]],[11,"new_module","","Create a new `RawTransaction` with a module to publish.",119,[[["string",3],["accountaddress",3],["module",3],["chainid",3]]]],[11,"new_write_set","","",119,[[["accountaddress",3],["chainid",3],["writeset",3]]]],[11,"new_change_set","","",119,[[["accountaddress",3],["chainid",3],["changeset",3]]]],[11,"new_writeset_script","","",119,[[["accountaddress",3],["script",3],["chainid",3]]]],[11,"sign","","Signs the given `RawTransaction`. Note that this consumes…",119,[[["ed25519privatekey",3],["ed25519publickey",3]],[["result",6],["signaturecheckedtransaction",3]]]],[11,"multi_sign_for_testing","","",119,[[["ed25519privatekey",3],["ed25519publickey",3]],[["result",6],["signaturecheckedtransaction",3]]]],[11,"into_payload","","",119,[[],["transactionpayload",4]]],[11,"format_for_client","","",119,[[],["string",3]]],[11,"sender","","Return the sender of this transaction.",119,[[],["accountaddress",3]]],[11,"should_trigger_reconfiguration_by_default","","",96,[[]]],[11,"should_trigger_reconfiguration_by_default","","",97,[[]]],[11,"into_inner","","Returns the `SignedTransaction` within.",120,[[],["signedtransaction",3]]],[11,"into_raw_transaction","","Returns the `RawTransaction` within.",120,[[],["rawtransaction",3]]],[11,"new","","",121,[[["ed25519signature",3],["ed25519publickey",3],["rawtransaction",3]],["signedtransaction",3]]],[11,"new_multisig","","",121,[[["multied25519publickey",3],["multied25519signature",3],["rawtransaction",3]],["signedtransaction",3]]],[11,"authenticator","","",121,[[],["transactionauthenticator",4]]],[11,"sender","","",121,[[],["accountaddress",3]]],[11,"into_raw_transaction","","",121,[[],["rawtransaction",3]]],[11,"sequence_number","","",121,[[]]],[11,"chain_id","","",121,[[],["chainid",3]]],[11,"payload","","",121,[[],["transactionpayload",4]]],[11,"max_gas_amount","","",121,[[]]],[11,"gas_unit_price","","",121,[[]]],[11,"gas_currency_code","","",121,[[]]],[11,"expiration_timestamp_secs","","",121,[[]]],[11,"raw_txn_bytes_len","","",121,[[]]],[11,"check_signature","","Checks that the signature of given transaction. Returns…",121,[[],[["result",6],["signaturecheckedtransaction",3]]]],[11,"format_for_client","","",121,[[],["string",3]]],[11,"new","","",94,[[["transactioninfowithproof",3],["option",4],["version",6],["transaction",4],["vec",3]]]],[11,"verify_user_txn","","Verifies the transaction with the proof, both carried by…",94,[[["accountaddress",3],["version",6],["ledgerinfo",3]],["result",6]]],[11,"status","","",99,[[],[["keptvmstatus",4],["result",6],["statuscode",4]]]],[11,"is_discarded","","",99,[[]]],[11,"from_role_id","","",100,[[]]],[11,"priority","","The higher the number that is returned, the greater…",100,[[]]],[11,"new","","",122,[[["discardedvmstatus",6],["option",4],["governancerole",4]]]],[11,"status","","",122,[[],[["discardedvmstatus",6],["option",4]]]],[11,"score","","",122,[[]]],[11,"governance_role","","",122,[[],["governancerole",4]]],[11,"new","","",123,[[["writeset",3],["contractevent",4],["vec",3],["transactionstatus",4]]]],[11,"into","","",123,[[]]],[11,"write_set","","",123,[[],["writeset",3]]],[11,"events","","",123,[[]]],[11,"gas_used","","",123,[[]]],[11,"status","","",123,[[],["transactionstatus",4]]],[11,"new","","Constructs a new `TransactionInfo` object using…",124,[[["keptvmstatus",4],["hashvalue",3]],["transactioninfo",3]]],[11,"transaction_hash","","Returns the hash of this transaction.",124,[[],["hashvalue",3]]],[11,"state_root_hash","","Returns root hash of Sparse Merkle Tree describing the…",124,[[],["hashvalue",3]]],[11,"event_root_hash","","Returns the root hash of Merkle Accumulator storing all…",124,[[],["hashvalue",3]]],[11,"gas_used","","Returns the amount of gas used by this transaction.",124,[[]]],[11,"status","","",124,[[],["keptvmstatus",4]]],[11,"new","","",125,[[["contractevent",4],["vec",3],["keptvmstatus",4],["hashmap",3],["transaction",4],["accountaddress",3],["accountstateblob",3]]]],[11,"transaction","","",125,[[],["transaction",4]]],[11,"account_states","","",125,[[],["hashmap",3]]],[11,"events","","",125,[[]]],[11,"gas_used","","",125,[[]]],[11,"status","","",125,[[],["keptvmstatus",4]]],[11,"new","","Constructor.",95,[[["vec",3],["option",4],["option",4],["transactionlistproof",3],["transaction",4],["version",6],["vec",3]]]],[11,"new_empty","","Creates an empty transaction list.",95,[[]]],[11,"verify","","Verifies the transaction list with the proofs, both…",95,[[["version",6],["option",4],["ledgerinfo",3]],["result",6]]],[11,"is_empty","","",95,[[]]],[11,"len","","",95,[[]]],[11,"as_signed_user_txn","","",101,[[],[["result",6],["signedtransaction",3]]]],[11,"format_for_client","","",101,[[],["string",3]]],[0,"trusted_state","diem_types","",null,null],[3,"TrustedState","diem_types::trusted_state","`TrustedState` keeps track of our latest trusted state,…",null,null],[4,"TrustedStateChange","","`TrustedStateChange` is the result of attempting to…",null,null],[13,"Version","","We have a newer `TrustedState` but it\'s still in the same…",126,null],[12,"new_state","diem_types::trusted_state::TrustedStateChange","",127,null],[13,"Epoch","diem_types::trusted_state","We have a newer `TrustedState` and there was at least one…",126,null],[12,"new_state","diem_types::trusted_state::TrustedStateChange","",128,null],[12,"latest_epoch_change_li","","",128,null],[13,"NoChange","diem_types::trusted_state","The latest ledger info is at the same version as the…",126,null],[11,"verify_and_ratchet","","Verify and ratchet forward our trusted state using a…",129,[[["epochchangeproof",3],["ledgerinfowithsignatures",4]],[["trustedstatechange",4],["result",6]]]],[11,"latest_version","","",129,[[],["version",6]]],[0,"validator_config","diem_types","",null,null],[3,"ValidatorConfigResource","diem_types::validator_config","",null,null],[12,"validator_config","","",130,null],[12,"delegated_account","","",130,null],[12,"human_name","","",130,null],[3,"ValidatorOperatorConfigResource","","",null,null],[12,"human_name","","",131,null],[3,"ValidatorConfig","","",null,null],[12,"consensus_public_key","","",132,null],[12,"validator_network_addresses","","This is an bcs serialized Vec",132,null],[12,"fullnode_network_addresses","","This is an bcs serialized Vec",132,null],[11,"new","","",132,[[["ed25519publickey",3],["vec",3]]]],[11,"fullnode_network_addresses","","",132,[[],[["error",4],["result",4],["vec",3]]]],[11,"validator_network_addresses","","",132,[[],[["vec",3],["result",4],["error",4]]]],[0,"validator_info","diem_types","",null,null],[3,"ValidatorInfo","diem_types::validator_info","After executing a special transaction indicates a change…",null,null],[11,"new","","",133,[[["accountaddress",3],["validatorconfig",3]]]],[11,"new_with_test_network_keys","","",133,[[["accountaddress",3],["ed25519publickey",3]]]],[11,"account_address","","Returns the id of this validator (hash of the current…",133,[[],["accountaddress",3]]],[11,"consensus_public_key","","Returns the key for validating signed messages from this…",133,[[],["ed25519publickey",3]]],[11,"consensus_voting_power","","Returns the voting power for this validator",133,[[]]],[11,"config","","Returns the validator\'s config",133,[[],["validatorconfig",3]]],[11,"into_config","","Returns the validator\'s config, consuming self",133,[[],["validatorconfig",3]]],[0,"validator_signer","diem_types","",null,null],[3,"ValidatorSigner","diem_types::validator_signer","ValidatorSigner associates an author with public and…",null,null],[0,"proptests","","",null,null],[5,"arb_signing_key","diem_types::validator_signer::proptests","",null,[[]]],[5,"signer_strategy","","",null,[[]]],[5,"rand_signer","","",null,[[]]],[5,"arb_signer","","",null,[[]]],[5,"mostly_in_keypair_pool","","",null,[[["vec",3],["ed25519privatekey",3]]]],[11,"new","diem_types::validator_signer","",134,[[["accountaddress",3],["ed25519privatekey",3]]]],[11,"sign","","Constructs a signature for `message` using `private_key`.",134,[[],["ed25519signature",3]]],[11,"author","","Returns the author associated with this signer.",134,[[],["accountaddress",3]]],[11,"public_key","","Returns the public key associated with this signer.",134,[[],["ed25519publickey",3]]],[11,"private_key","","Returns the private key associated with this signer. Only…",134,[[],["ed25519privatekey",3]]],[11,"random","","Generate a random set of public and private keys and…",134,[[]]],[11,"from_int","","For test only - makes signer with nicely looking account…",134,[[]]],[0,"validator_verifier","diem_types","",null,null],[3,"ValidatorConsensusInfo","diem_types::validator_verifier","Helper struct to manage validator information for validation",null,null],[3,"ValidatorVerifier","","Supports validation of signatures for known authors with…",null,null],[4,"VerifyError","","Errors possible during signature verification.",null,null],[13,"UnknownAuthor","","The author for this signature is unknown by this validator.",135,null],[13,"TooLittleVotingPower","","",135,null],[12,"voting_power","diem_types::validator_verifier::VerifyError","",136,null],[12,"quorum_voting_power","","",136,null],[13,"TooManySignatures","diem_types::validator_verifier","",135,null],[12,"num_of_signatures","diem_types::validator_verifier::VerifyError","",137,null],[12,"num_of_authors","","",137,null],[13,"InvalidSignature","diem_types::validator_verifier","The signature does not match the hash.",135,null],[5,"random_validator_verifier","","Helper function to get random validator signers and a…",null,[[["option",4]]]],[11,"new","","",138,[[["ed25519publickey",3]]]],[11,"new","","Initialize with a map of account address to validator info…",139,[[["accountaddress",3],["btreemap",3],["validatorconsensusinfo",3]]]],[11,"new_with_quorum_voting_power","","Initializes a validator verifier with a specified quorum…",139,[[["accountaddress",3],["btreemap",3],["validatorconsensusinfo",3]],["result",6]]],[11,"new_for_testing","","Initializes a validator verifier with a specified quorum…",139,[[["accountaddress",3],["btreemap",3],["validatorconsensusinfo",3]]]],[11,"new_single","","Helper method to initialize with a single author and…",139,[[["accountaddress",3],["ed25519publickey",3]]]],[11,"verify","","Verify the correctness of a signature of a message by a…",139,[[["accountaddress",3],["ed25519signature",3]],[["result",4],["verifyerror",4]]]],[11,"verify_aggregated_struct_signature","","This function will successfully return when at least…",139,[[["btreemap",3]],[["result",4],["verifyerror",4]]]],[11,"batch_verify_aggregated_signatures","","This function will try batch signature verification and…",139,[[["btreemap",3]],[["result",4],["verifyerror",4]]]],[11,"check_voting_power","","Ensure there is at least quorum_voting_power in the…",139,[[],[["result",4],["verifyerror",4]]]],[11,"get_public_key","","Returns the public key for this address.",139,[[["accountaddress",3]],[["option",4],["ed25519publickey",3]]]],[11,"get_voting_power","","Returns the voting power for this address.",139,[[["accountaddress",3]],["option",4]]],[11,"get_ordered_account_addresses_iter","","Returns an ordered list of account addresses as an…",139,[[]]],[11,"len","","Returns the number of authors to be validated.",139,[[]]],[11,"is_empty","","Is there at least one author?",139,[[]]],[11,"quorum_voting_power","","Returns quorum voting power.",139,[[]]],[0,"vm_status","diem_types","",null,null],[0,"known_locations","diem_types::vm_status","",null,null],[17,"ACCOUNT_MODULE_NAME","diem_types::vm_status::known_locations","The name of the Account module.",null,null],[7,"ACCOUNT_MODULE_IDENTIFIER","","The Identifier for the Account module.",null,null],[7,"ACCOUNT_MODULE","","The ModuleId for the Account module.",null,null],[5,"account_module_abort","","Location for an abort in the Account module",null,[[],["abortlocation",4]]],[17,"DIEM_MODULE_NAME","","The name of the Diem module.",null,null],[7,"DIEM_MODULE_IDENTIFIER","","The Identifier for the Diem module.",null,null],[7,"DIEM_MODULE","","The ModuleId for the Diem module.",null,null],[5,"diem_module_abort","","",null,[[],["abortlocation",4]]],[17,"DESIGNATED_DEALER_MODULE_NAME","","The name of the Designated Dealer module.",null,null],[7,"DESIGNATED_DEALER_MODULE_IDENTIFIER","","The Identifier for the Designated Dealer module.",null,null],[7,"DESIGNATED_DEALER_MODULE","","The ModuleId for the Designated Dealer module.",null,null],[5,"designated_dealer_module_abort","","",null,[[],["abortlocation",4]]],[0,"sub_status","diem_types::vm_status","",null,null],[17,"NFE_VECTOR_ERROR_BASE","diem_types::vm_status::sub_status","",null,null],[17,"NFE_BCS_SERIALIZATION_FAILURE","","",null,null],[4,"AbortLocation","diem_types::vm_status","An `AbortLocation` specifies where a Move program `abort`…",null,null],[13,"Module","","Indicates `abort` occurred in the specified module",140,null],[13,"Script","","Indicates the `abort` occurred in a script",140,null],[6,"DiscardedVMStatus","","",null,null],[4,"KeptVMStatus","","",null,null],[13,"Executed","","",141,null],[13,"OutOfGas","","",141,null],[13,"MoveAbort","","",141,null],[13,"ExecutionFailure","","",141,null],[12,"location","diem_types::vm_status::KeptVMStatus","",142,null],[12,"function","","",142,null],[12,"code_offset","","",142,null],[13,"MiscellaneousError","diem_types::vm_status","",141,null],[4,"StatusCode","","We don\'t derive Arbitrary on this enum because it is too…",null,null],[13,"UNKNOWN_VALIDATION_STATUS","","",143,null],[13,"INVALID_SIGNATURE","","",143,null],[13,"INVALID_AUTH_KEY","","",143,null],[13,"SEQUENCE_NUMBER_TOO_OLD","","",143,null],[13,"SEQUENCE_NUMBER_TOO_NEW","","",143,null],[13,"INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","","",143,null],[13,"TRANSACTION_EXPIRED","","",143,null],[13,"SENDING_ACCOUNT_DOES_NOT_EXIST","","",143,null],[13,"REJECTED_WRITE_SET","","",143,null],[13,"INVALID_WRITE_SET","","",143,null],[13,"EXCEEDED_MAX_TRANSACTION_SIZE","","",143,null],[13,"UNKNOWN_SCRIPT","","",143,null],[13,"UNKNOWN_MODULE","","",143,null],[13,"MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","","",143,null],[13,"MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","","",143,null],[13,"GAS_UNIT_PRICE_BELOW_MIN_BOUND","","",143,null],[13,"GAS_UNIT_PRICE_ABOVE_MAX_BOUND","","",143,null],[13,"INVALID_GAS_SPECIFIER","","",143,null],[13,"SENDING_ACCOUNT_FROZEN","","",143,null],[13,"UNABLE_TO_DESERIALIZE_ACCOUNT","","",143,null],[13,"CURRENCY_INFO_DOES_NOT_EXIST","","",143,null],[13,"INVALID_MODULE_PUBLISHER","","",143,null],[13,"NO_ACCOUNT_ROLE","","",143,null],[13,"BAD_CHAIN_ID","","",143,null],[13,"SEQUENCE_NUMBER_TOO_BIG","","",143,null],[13,"BAD_TRANSACTION_FEE_CURRENCY","","",143,null],[13,"UNKNOWN_VERIFICATION_ERROR","","",143,null],[13,"INDEX_OUT_OF_BOUNDS","","",143,null],[13,"INVALID_SIGNATURE_TOKEN","","",143,null],[13,"RECURSIVE_STRUCT_DEFINITION","","",143,null],[13,"INVALID_RESOURCE_FIELD","","",143,null],[13,"INVALID_FALL_THROUGH","","",143,null],[13,"NEGATIVE_STACK_SIZE_WITHIN_BLOCK","","",143,null],[13,"INVALID_MAIN_FUNCTION_SIGNATURE","","",143,null],[13,"DUPLICATE_ELEMENT","","",143,null],[13,"INVALID_MODULE_HANDLE","","",143,null],[13,"UNIMPLEMENTED_HANDLE","","",143,null],[13,"LOOKUP_FAILED","","",143,null],[13,"TYPE_MISMATCH","","",143,null],[13,"MISSING_DEPENDENCY","","",143,null],[13,"POP_RESOURCE_ERROR","","",143,null],[13,"BR_TYPE_MISMATCH_ERROR","","",143,null],[13,"ABORT_TYPE_MISMATCH_ERROR","","",143,null],[13,"STLOC_TYPE_MISMATCH_ERROR","","",143,null],[13,"STLOC_UNSAFE_TO_DESTROY_ERROR","","",143,null],[13,"UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","","",143,null],[13,"RET_TYPE_MISMATCH_ERROR","","",143,null],[13,"RET_BORROWED_MUTABLE_REFERENCE_ERROR","","",143,null],[13,"FREEZEREF_TYPE_MISMATCH_ERROR","","",143,null],[13,"FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","","",143,null],[13,"BORROWFIELD_TYPE_MISMATCH_ERROR","","",143,null],[13,"BORROWFIELD_BAD_FIELD_ERROR","","",143,null],[13,"BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","","",143,null],[13,"COPYLOC_UNAVAILABLE_ERROR","","",143,null],[13,"COPYLOC_RESOURCE_ERROR","","",143,null],[13,"COPYLOC_EXISTS_BORROW_ERROR","","",143,null],[13,"MOVELOC_UNAVAILABLE_ERROR","","",143,null],[13,"MOVELOC_EXISTS_BORROW_ERROR","","",143,null],[13,"BORROWLOC_REFERENCE_ERROR","","",143,null],[13,"BORROWLOC_UNAVAILABLE_ERROR","","",143,null],[13,"BORROWLOC_EXISTS_BORROW_ERROR","","",143,null],[13,"CALL_TYPE_MISMATCH_ERROR","","",143,null],[13,"CALL_BORROWED_MUTABLE_REFERENCE_ERROR","","",143,null],[13,"PACK_TYPE_MISMATCH_ERROR","","",143,null],[13,"UNPACK_TYPE_MISMATCH_ERROR","","",143,null],[13,"READREF_TYPE_MISMATCH_ERROR","","",143,null],[13,"READREF_RESOURCE_ERROR","","",143,null],[13,"READREF_EXISTS_MUTABLE_BORROW_ERROR","","",143,null],[13,"WRITEREF_TYPE_MISMATCH_ERROR","","",143,null],[13,"WRITEREF_RESOURCE_ERROR","","",143,null],[13,"WRITEREF_EXISTS_BORROW_ERROR","","",143,null],[13,"WRITEREF_NO_MUTABLE_REFERENCE_ERROR","","",143,null],[13,"INTEGER_OP_TYPE_MISMATCH_ERROR","","",143,null],[13,"BOOLEAN_OP_TYPE_MISMATCH_ERROR","","",143,null],[13,"EQUALITY_OP_TYPE_MISMATCH_ERROR","","",143,null],[13,"EXISTS_RESOURCE_TYPE_MISMATCH_ERROR","","",143,null],[13,"BORROWGLOBAL_TYPE_MISMATCH_ERROR","","",143,null],[13,"BORROWGLOBAL_NO_RESOURCE_ERROR","","",143,null],[13,"MOVEFROM_TYPE_MISMATCH_ERROR","","",143,null],[13,"MOVEFROM_NO_RESOURCE_ERROR","","",143,null],[13,"MOVETO_TYPE_MISMATCH_ERROR","","",143,null],[13,"MOVETO_NO_RESOURCE_ERROR","","",143,null],[13,"MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","","",143,null],[13,"NO_MODULE_HANDLES","","",143,null],[13,"POSITIVE_STACK_SIZE_AT_BLOCK_END","","",143,null],[13,"MISSING_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",143,null],[13,"EXTRANEOUS_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",143,null],[13,"DUPLICATE_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",143,null],[13,"INVALID_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",143,null],[13,"GLOBAL_REFERENCE_ERROR","","",143,null],[13,"CONSTRAINT_KIND_MISMATCH","","",143,null],[13,"NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","","",143,null],[13,"LOOP_IN_INSTANTIATION_GRAPH","","",143,null],[13,"ZERO_SIZED_STRUCT","","",143,null],[13,"LINKER_ERROR","","",143,null],[13,"INVALID_CONSTANT_TYPE","","",143,null],[13,"MALFORMED_CONSTANT_DATA","","",143,null],[13,"EMPTY_CODE_UNIT","","",143,null],[13,"INVALID_LOOP_SPLIT","","",143,null],[13,"INVALID_LOOP_BREAK","","",143,null],[13,"INVALID_LOOP_CONTINUE","","",143,null],[13,"UNSAFE_RET_UNUSED_RESOURCES","","",143,null],[13,"TOO_MANY_LOCALS","","",143,null],[13,"GENERIC_MEMBER_OPCODE_MISMATCH","","",143,null],[13,"FUNCTION_RESOLUTION_FAILURE","","",143,null],[13,"INVALID_OPERATION_IN_SCRIPT","","",143,null],[13,"DUPLICATE_MODULE_NAME","","",143,null],[13,"BACKWARD_INCOMPATIBLE_MODULE_UPDATE","","",143,null],[13,"CYCLIC_MODULE_DEPENDENCY","","",143,null],[13,"UNKNOWN_INVARIANT_VIOLATION_ERROR","","",143,null],[13,"EMPTY_VALUE_STACK","","",143,null],[13,"PC_OVERFLOW","","",143,null],[13,"VERIFICATION_ERROR","","",143,null],[13,"STORAGE_ERROR","","",143,null],[13,"INTERNAL_TYPE_ERROR","","",143,null],[13,"EVENT_KEY_MISMATCH","","",143,null],[13,"UNREACHABLE","","",143,null],[13,"VM_STARTUP_FAILURE","","",143,null],[13,"UNEXPECTED_ERROR_FROM_KNOWN_MOVE_FUNCTION","","",143,null],[13,"VERIFIER_INVARIANT_VIOLATION","","",143,null],[13,"UNEXPECTED_VERIFIER_ERROR","","",143,null],[13,"UNEXPECTED_DESERIALIZATION_ERROR","","",143,null],[13,"FAILED_TO_SERIALIZE_WRITE_SET_CHANGES","","",143,null],[13,"FAILED_TO_DESERIALIZE_RESOURCE","","",143,null],[13,"TYPE_RESOLUTION_FAILURE","","",143,null],[13,"UNKNOWN_BINARY_ERROR","","",143,null],[13,"MALFORMED","","",143,null],[13,"BAD_MAGIC","","",143,null],[13,"UNKNOWN_VERSION","","",143,null],[13,"UNKNOWN_TABLE_TYPE","","",143,null],[13,"UNKNOWN_SIGNATURE_TYPE","","",143,null],[13,"UNKNOWN_SERIALIZED_TYPE","","",143,null],[13,"UNKNOWN_OPCODE","","",143,null],[13,"BAD_HEADER_TABLE","","",143,null],[13,"UNEXPECTED_SIGNATURE_TYPE","","",143,null],[13,"DUPLICATE_TABLE","","",143,null],[13,"UNKNOWN_NOMINAL_RESOURCE","","",143,null],[13,"UNKNOWN_KIND","","",143,null],[13,"UNKNOWN_NATIVE_STRUCT_FLAG","","",143,null],[13,"BAD_U64","","",143,null],[13,"BAD_U128","","",143,null],[13,"VALUE_SERIALIZATION_ERROR","","",143,null],[13,"VALUE_DESERIALIZATION_ERROR","","",143,null],[13,"CODE_DESERIALIZATION_ERROR","","",143,null],[13,"UNKNOWN_RUNTIME_STATUS","","",143,null],[13,"EXECUTED","","",143,null],[13,"OUT_OF_GAS","","",143,null],[13,"RESOURCE_DOES_NOT_EXIST","","",143,null],[13,"RESOURCE_ALREADY_EXISTS","","",143,null],[13,"MISSING_DATA","","",143,null],[13,"DATA_FORMAT_ERROR","","",143,null],[13,"ABORTED","","",143,null],[13,"ARITHMETIC_ERROR","","",143,null],[13,"EXECUTION_STACK_OVERFLOW","","",143,null],[13,"CALL_STACK_OVERFLOW","","",143,null],[13,"VM_MAX_TYPE_DEPTH_REACHED","","",143,null],[13,"VM_MAX_VALUE_DEPTH_REACHED","","",143,null],[13,"UNKNOWN_STATUS","","",143,null],[4,"StatusType","","A status type is one of 5 different variants, along with a…",null,null],[13,"Validation","","",144,null],[13,"Verification","","",144,null],[13,"InvariantViolation","","",144,null],[13,"Deserialization","","",144,null],[13,"Execution","","",144,null],[13,"Unknown","","",144,null],[4,"VMStatus","","A `VMStatus` is represented as either",null,null],[13,"Executed","","The VM status corresponding to an EXECUTED status code",145,null],[13,"Error","","Indicates an error from the VM, e.g. OUT_OF_GAS,…",145,null],[13,"MoveAbort","","Indicates an `abort` from inside Move code. Contains the…",145,null],[13,"ExecutionFailure","","Indicates an failure from inside Move code, where the VM…",145,null],[12,"status_code","diem_types::vm_status::VMStatus","",146,null],[12,"location","","",146,null],[12,"function","","",146,null],[12,"code_offset","","",146,null],[0,"waypoint","diem_types","",null,null],[3,"Waypoint","diem_types::waypoint","Waypoint keeps information about the LedgerInfo on a given…",null,null],[3,"Ledger2WaypointConverterHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new_any","","Generate a new waypoint given any LedgerInfo.",147,[[["ledgerinfo",3]]]],[11,"new_epoch_boundary","","Generates a new waypoint given the epoch change LedgerInfo.",147,[[["ledgerinfo",3]],["result",6]]],[11,"version","","",147,[[],["version",6]]],[11,"value","","",147,[[],["hashvalue",3]]],[11,"verify","","Errors in case the given ledger info does not match the…",147,[[["ledgerinfo",3]],["result",6]]],[0,"write_set","diem_types","For each transaction the VM executes, the VM will output a…",null,null],[3,"WriteSet","diem_types::write_set","`WriteSet` contains all access paths that one transaction…",null,null],[3,"WriteSetMut","","A mutable version of `WriteSet`.",null,null],[4,"WriteOp","","",null,null],[13,"Deletion","","",148,null],[13,"Value","","",148,null],[11,"is_deletion","","",148,[[]]],[11,"is_empty","","",149,[[]]],[11,"iter","","",149,[[],["iter",3]]],[11,"into_mut","","",149,[[],["writesetmut",3]]],[11,"new","","",150,[[["vec",3]]]],[11,"push","","",150,[[]]],[11,"is_empty","","",150,[[]]],[11,"freeze","","",150,[[],[["result",6],["writeset",3]]]],[11,"from","diem_types::account_address","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"to_string","","",151,[[],["string",3]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"test_only_hash","","",151,[[],["hashvalue",3]]],[11,"vzip","","",151,[[]]],[11,"encode_hex","","",151,[[]]],[11,"encode_hex_upper","","",151,[[]]],[11,"init","","",151,[[]]],[11,"deref","","",151,[[]]],[11,"deref_mut","","",151,[[]]],[11,"drop","","",151,[[]]],[11,"equivalent","","",151,[[]]],[11,"from","diem_types::access_path","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"from","diem_types::account_config::events::admin_transaction","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","diem_types::account_config::events::base_url_rotation","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diem_types::account_config::events::burn","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","diem_types::account_config::events::cancel_burn","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","diem_types::account_config::events::compliance_key_rotation","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","diem_types::account_config::events::create_account","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","diem_types::account_config::events::exchange_rate_update","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"test_only_hash","","",8,[[],["hashvalue",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","diem_types::account_config::events::mint","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","diem_types::account_config::events::new_block","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","diem_types::account_config::events::new_epoch","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","diem_types::account_config::events::preburn","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","diem_types::account_config::events::received_mint","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","diem_types::account_config::events::received_payment","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","diem_types::account_config::events::sent_payment","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"test_only_hash","","",15,[[],["hashvalue",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","diem_types::account_config::resources::account","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"test_only_hash","","",16,[[],["hashvalue",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","diem_types::account_config::resources::balance","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"test_only_hash","","",17,[[],["hashvalue",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","diem_types::account_config::resources::chain_id","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","diem_types::account_config::resources::currency_info","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"test_only_hash","","",19,[[],["hashvalue",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","diem_types::account_config::resources::designated_dealer","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"test_only_hash","","",20,[[],["hashvalue",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","diem_types::account_config::resources::dual_attestation","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"test_only_hash","","",22,[[],["hashvalue",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"test_only_hash","","",21,[[],["hashvalue",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","diem_types::account_config::resources::freezing_bit","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"test_only_hash","","",23,[[],["hashvalue",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","diem_types::account_config::resources::key_rotation_capability","",152,[[]]],[11,"into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"test_only_hash","","",152,[[],["hashvalue",3]]],[11,"vzip","","",152,[[]]],[11,"init","","",152,[[]]],[11,"deref","","",152,[[]]],[11,"deref_mut","","",152,[[]]],[11,"drop","","",152,[[]]],[11,"from","diem_types::account_config::resources::preburn_balance","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"test_only_hash","","",24,[[],["hashvalue",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","diem_types::account_config::resources::role","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"test_only_hash","","",25,[[],["hashvalue",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","diem_types::account_config::resources::role_id","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"test_only_hash","","",28,[[],["hashvalue",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","diem_types::account_config::resources::vasp","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"test_only_hash","","",30,[[],["hashvalue",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","diem_types::account_config::resources::withdraw_capability","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"test_only_hash","","",153,[[],["hashvalue",3]]],[11,"vzip","","",153,[[]]],[11,"init","","",153,[[]]],[11,"deref","","",153,[[]]],[11,"deref_mut","","",153,[[]]],[11,"drop","","",153,[[]]],[11,"from","diem_types::account_state","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"test_only_hash","","",31,[[],["hashvalue",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","diem_types::account_state_blob","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"test_only_hash","","",154,[[],["hashvalue",3]]],[11,"vzip","","",154,[[]]],[11,"encode_hex","","",154,[[]]],[11,"encode_hex_upper","","",154,[[]]],[11,"init","","",154,[[]]],[11,"deref","","",154,[[]]],[11,"deref_mut","","",154,[[]]],[11,"drop","","",154,[[]]],[11,"equivalent","","",154,[[]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"vzip","","",155,[[]]],[11,"init","","",155,[[]]],[11,"deref","","",155,[[]]],[11,"deref_mut","","",155,[[]]],[11,"drop","","",155,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"test_only_hash","","",32,[[],["hashvalue",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"equivalent","","",32,[[]]],[11,"from","diem_types::block_info","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"test_only_hash","","",33,[[],["hashvalue",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"equivalent","","",33,[[]]],[11,"from","diem_types::block_metadata","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"test_only_hash","","",34,[[],["hashvalue",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"equivalent","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"test_only_hash","","",35,[[],["hashvalue",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"test_only_hash","","",36,[[],["hashvalue",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","diem_types::chain_id","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"test_only_hash","","",38,[[],["hashvalue",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"equivalent","","",38,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","diem_types::contract_event","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"vzip","","",156,[[]]],[11,"init","","",156,[[]]],[11,"deref","","",156,[[]]],[11,"deref_mut","","",156,[[]]],[11,"drop","","",156,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"test_only_hash","","",41,[[],["hashvalue",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"equivalent","","",41,[[]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"vzip","","",157,[[]]],[11,"init","","",157,[[]]],[11,"deref","","",157,[[]]],[11,"deref_mut","","",157,[[]]],[11,"drop","","",157,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"test_only_hash","","",39,[[],["hashvalue",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"equivalent","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"test_only_hash","","",40,[[],["hashvalue",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"equivalent","","",40,[[]]],[11,"from","diem_types::diem_timestamp","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"test_only_hash","","",42,[[],["hashvalue",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"test_only_hash","","",43,[[],["hashvalue",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","diem_types::epoch_change","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"test_only_hash","","",44,[[],["hashvalue",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"equivalent","","",44,[[]]],[11,"from","diem_types::epoch_state","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"test_only_hash","","",46,[[],["hashvalue",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"equivalent","","",46,[[]]],[11,"from","diem_types::event","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"test_only_hash","","",47,[[],["hashvalue",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"equivalent","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"test_only_hash","","",48,[[],["hashvalue",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"equivalent","","",48,[[]]],[11,"from","diem_types::ledger_info","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"test_only_hash","","",50,[[],["hashvalue",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"equivalent","","",50,[[]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"init","","",158,[[]]],[11,"deref","","",158,[[]]],[11,"deref_mut","","",158,[[]]],[11,"drop","","",158,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"test_only_hash","","",51,[[],["hashvalue",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"equivalent","","",51,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"test_only_hash","","",49,[[],["hashvalue",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"equivalent","","",49,[[]]],[11,"from","diem_types::mempool_status","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"equivalent","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"equivalent","","",53,[[]]],[11,"from","diem_types::on_chain_config","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"test_only_hash","","",55,[[],["hashvalue",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"test_only_hash","","",58,[[],["hashvalue",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"equivalent","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"into_iter","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"test_only_hash","","",59,[[],["hashvalue",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"equivalent","","",59,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"test_only_hash","","",56,[[],["hashvalue",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"test_only_hash","","",57,[[],["hashvalue",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"equivalent","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"test_only_hash","","",64,[[],["hashvalue",3]]],[11,"vzip","","",64,[[]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"from","diem_types::proof","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[]]],[11,"deref","","",80,[[]]],[11,"deref_mut","","",80,[[]]],[11,"drop","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"test_only_hash","","",81,[[],["hashvalue",3]]],[11,"vzip","","",81,[[]]],[11,"init","","",81,[[]]],[11,"deref","","",81,[[]]],[11,"deref_mut","","",81,[[]]],[11,"drop","","",81,[[]]],[11,"equivalent","","",81,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"init","","",159,[[]]],[11,"deref","","",159,[[]]],[11,"deref_mut","","",159,[[]]],[11,"drop","","",159,[[]]],[11,"from","diem_types::proof::accumulator","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"from","diem_types::proof::definition","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"test_only_hash","","",66,[[],["hashvalue",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"equivalent","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"test_only_hash","","",67,[[],["hashvalue",3]]],[11,"vzip","","",67,[[]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"equivalent","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"test_only_hash","","",68,[[],["hashvalue",3]]],[11,"vzip","","",68,[[]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"equivalent","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"test_only_hash","","",69,[[],["hashvalue",3]]],[11,"vzip","","",69,[[]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"equivalent","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"test_only_hash","","",70,[[],["hashvalue",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"equivalent","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"test_only_hash","","",71,[[],["hashvalue",3]]],[11,"vzip","","",71,[[]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"equivalent","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"test_only_hash","","",72,[[],["hashvalue",3]]],[11,"vzip","","",72,[[]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"equivalent","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"test_only_hash","","",73,[[],["hashvalue",3]]],[11,"vzip","","",73,[[]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"equivalent","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"test_only_hash","","",74,[[],["hashvalue",3]]],[11,"vzip","","",74,[[]]],[11,"init","","",74,[[]]],[11,"deref","","",74,[[]]],[11,"deref_mut","","",74,[[]]],[11,"drop","","",74,[[]]],[11,"equivalent","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"test_only_hash","","",75,[[],["hashvalue",3]]],[11,"vzip","","",75,[[]]],[11,"init","","",75,[[]]],[11,"deref","","",75,[[]]],[11,"deref_mut","","",75,[[]]],[11,"drop","","",75,[[]]],[11,"equivalent","","",75,[[]]],[11,"from","diem_types::proof::position","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"init","","",77,[[]]],[11,"deref","","",77,[[]]],[11,"deref_mut","","",77,[[]]],[11,"drop","","",77,[[]]],[11,"equivalent","","",77,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"into_iter","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"vzip","","",160,[[]]],[11,"init","","",160,[[]]],[11,"deref","","",160,[[]]],[11,"deref_mut","","",160,[[]]],[11,"drop","","",160,[[]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"into_iter","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"vzip","","",161,[[]]],[11,"init","","",161,[[]]],[11,"deref","","",161,[[]]],[11,"deref_mut","","",161,[[]]],[11,"drop","","",161,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"into_iter","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"into_iter","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"init","","",79,[[]]],[11,"deref","","",79,[[]]],[11,"deref_mut","","",79,[[]]],[11,"drop","","",79,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"equivalent","","",76,[[]]],[11,"from","diem_types::proptest_types","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"init","","",82,[[]]],[11,"deref","","",82,[[]]],[11,"deref_mut","","",82,[[]]],[11,"drop","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"init","","",83,[[]]],[11,"deref","","",83,[[]]],[11,"deref_mut","","",83,[[]]],[11,"drop","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"init","","",84,[[]]],[11,"deref","","",84,[[]]],[11,"deref_mut","","",84,[[]]],[11,"drop","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"init","","",85,[[]]],[11,"deref","","",85,[[]]],[11,"deref_mut","","",85,[[]]],[11,"drop","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"init","","",86,[[]]],[11,"deref","","",86,[[]]],[11,"deref_mut","","",86,[[]]],[11,"drop","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"init","","",87,[[]]],[11,"deref","","",87,[[]]],[11,"deref_mut","","",87,[[]]],[11,"drop","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"init","","",88,[[]]],[11,"deref","","",88,[[]]],[11,"deref_mut","","",88,[[]]],[11,"drop","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"init","","",89,[[]]],[11,"deref","","",89,[[]]],[11,"deref_mut","","",89,[[]]],[11,"drop","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"init","","",90,[[]]],[11,"deref","","",90,[[]]],[11,"deref_mut","","",90,[[]]],[11,"drop","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"init","","",91,[[]]],[11,"deref","","",91,[[]]],[11,"deref_mut","","",91,[[]]],[11,"drop","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"init","","",92,[[]]],[11,"deref","","",92,[[]]],[11,"deref_mut","","",92,[[]]],[11,"drop","","",92,[[]]],[11,"from","diem_types::transaction","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"test_only_hash","","",93,[[],["hashvalue",3]]],[11,"vzip","","",93,[[]]],[11,"init","","",93,[[]]],[11,"deref","","",93,[[]]],[11,"deref_mut","","",93,[[]]],[11,"drop","","",93,[[]]],[11,"equivalent","","",93,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"test_only_hash","","",108,[[],["hashvalue",3]]],[11,"vzip","","",108,[[]]],[11,"init","","",108,[[]]],[11,"deref","","",108,[[]]],[11,"deref_mut","","",108,[[]]],[11,"drop","","",108,[[]]],[11,"equivalent","","",108,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"test_only_hash","","",114,[[],["hashvalue",3]]],[11,"vzip","","",114,[[]]],[11,"init","","",114,[[]]],[11,"deref","","",114,[[]]],[11,"deref_mut","","",114,[[]]],[11,"drop","","",114,[[]]],[11,"equivalent","","",114,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"test_only_hash","","",117,[[],["hashvalue",3]]],[11,"vzip","","",117,[[]]],[11,"init","","",117,[[]]],[11,"deref","","",117,[[]]],[11,"deref_mut","","",117,[[]]],[11,"drop","","",117,[[]]],[11,"equivalent","","",117,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"test_only_hash","","",115,[[],["hashvalue",3]]],[11,"vzip","","",115,[[]]],[11,"init","","",115,[[]]],[11,"deref","","",115,[[]]],[11,"deref_mut","","",115,[[]]],[11,"drop","","",115,[[]]],[11,"equivalent","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"test_only_hash","","",116,[[],["hashvalue",3]]],[11,"vzip","","",116,[[]]],[11,"init","","",116,[[]]],[11,"deref","","",116,[[]]],[11,"deref_mut","","",116,[[]]],[11,"drop","","",116,[[]]],[11,"equivalent","","",116,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"test_only_hash","","",118,[[],["hashvalue",3]]],[11,"vzip","","",118,[[]]],[11,"init","","",118,[[]]],[11,"deref","","",118,[[]]],[11,"deref_mut","","",118,[[]]],[11,"drop","","",118,[[]]],[11,"equivalent","","",118,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"test_only_hash","","",119,[[],["hashvalue",3]]],[11,"vzip","","",119,[[]]],[11,"init","","",119,[[]]],[11,"deref","","",119,[[]]],[11,"deref_mut","","",119,[[]]],[11,"drop","","",119,[[]]],[11,"equivalent","","",119,[[]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"vzip","","",162,[[]]],[11,"init","","",162,[[]]],[11,"deref","","",162,[[]]],[11,"deref_mut","","",162,[[]]],[11,"drop","","",162,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"test_only_hash","","",121,[[],["hashvalue",3]]],[11,"vzip","","",121,[[]]],[11,"init","","",121,[[]]],[11,"deref","","",121,[[]]],[11,"deref_mut","","",121,[[]]],[11,"drop","","",121,[[]]],[11,"equivalent","","",121,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"init","","",120,[[]]],[11,"deref","","",120,[[]]],[11,"deref_mut","","",120,[[]]],[11,"drop","","",120,[[]]],[11,"equivalent","","",120,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"test_only_hash","","",94,[[],["hashvalue",3]]],[11,"vzip","","",94,[[]]],[11,"init","","",94,[[]]],[11,"deref","","",94,[[]]],[11,"deref_mut","","",94,[[]]],[11,"drop","","",94,[[]]],[11,"equivalent","","",94,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"init","","",122,[[]]],[11,"deref","","",122,[[]]],[11,"deref_mut","","",122,[[]]],[11,"drop","","",122,[[]]],[11,"equivalent","","",122,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"vzip","","",123,[[]]],[11,"init","","",123,[[]]],[11,"deref","","",123,[[]]],[11,"deref_mut","","",123,[[]]],[11,"drop","","",123,[[]]],[11,"equivalent","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"to_string","","",124,[[],["string",3]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"test_only_hash","","",124,[[],["hashvalue",3]]],[11,"vzip","","",124,[[]]],[11,"init","","",124,[[]]],[11,"deref","","",124,[[]]],[11,"deref_mut","","",124,[[]]],[11,"drop","","",124,[[]]],[11,"equivalent","","",124,[[]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"init","","",163,[[]]],[11,"deref","","",163,[[]]],[11,"deref_mut","","",163,[[]]],[11,"drop","","",163,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"test_only_hash","","",125,[[],["hashvalue",3]]],[11,"vzip","","",125,[[]]],[11,"init","","",125,[[]]],[11,"deref","","",125,[[]]],[11,"deref_mut","","",125,[[]]],[11,"drop","","",125,[[]]],[11,"equivalent","","",125,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"test_only_hash","","",95,[[],["hashvalue",3]]],[11,"vzip","","",95,[[]]],[11,"init","","",95,[[]]],[11,"deref","","",95,[[]]],[11,"deref_mut","","",95,[[]]],[11,"drop","","",95,[[]]],[11,"equivalent","","",95,[[]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"vzip","","",164,[[]]],[11,"init","","",164,[[]]],[11,"deref","","",164,[[]]],[11,"deref_mut","","",164,[[]]],[11,"drop","","",164,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"test_only_hash","","",96,[[],["hashvalue",3]]],[11,"vzip","","",96,[[]]],[11,"init","","",96,[[]]],[11,"deref","","",96,[[]]],[11,"deref_mut","","",96,[[]]],[11,"drop","","",96,[[]]],[11,"equivalent","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"test_only_hash","","",97,[[],["hashvalue",3]]],[11,"vzip","","",97,[[]]],[11,"init","","",97,[[]]],[11,"deref","","",97,[[]]],[11,"deref_mut","","",97,[[]]],[11,"drop","","",97,[[]]],[11,"equivalent","","",97,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"test_only_hash","","",99,[[],["hashvalue",3]]],[11,"vzip","","",99,[[]]],[11,"init","","",99,[[]]],[11,"deref","","",99,[[]]],[11,"deref_mut","","",99,[[]]],[11,"drop","","",99,[[]]],[11,"equivalent","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"init","","",100,[[]]],[11,"deref","","",100,[[]]],[11,"deref_mut","","",100,[[]]],[11,"drop","","",100,[[]]],[11,"equivalent","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"test_only_hash","","",101,[[],["hashvalue",3]]],[11,"vzip","","",101,[[]]],[11,"init","","",101,[[]]],[11,"deref","","",101,[[]]],[11,"deref_mut","","",101,[[]]],[11,"drop","","",101,[[]]],[11,"equivalent","","",101,[[]]],[11,"from","diem_types::transaction::authenticator","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"to_string","","",106,[[],["string",3]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"test_only_hash","","",106,[[],["hashvalue",3]]],[11,"vzip","","",106,[[]]],[11,"encode_hex","","",106,[[]]],[11,"encode_hex_upper","","",106,[[]]],[11,"init","","",106,[[]]],[11,"deref","","",106,[[]]],[11,"deref_mut","","",106,[[]]],[11,"drop","","",106,[[]]],[11,"equivalent","","",106,[[]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"vzip","","",165,[[]]],[11,"init","","",165,[[]]],[11,"deref","","",165,[[]]],[11,"deref_mut","","",165,[[]]],[11,"drop","","",165,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"init","","",107,[[]]],[11,"deref","","",107,[[]]],[11,"deref_mut","","",107,[[]]],[11,"drop","","",107,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_string","","",102,[[],["string",3]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"init","","",102,[[]]],[11,"deref","","",102,[[]]],[11,"deref_mut","","",102,[[]]],[11,"drop","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"to_string","","",103,[[],["string",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"test_only_hash","","",103,[[],["hashvalue",3]]],[11,"vzip","","",103,[[]]],[11,"init","","",103,[[]]],[11,"deref","","",103,[[]]],[11,"deref_mut","","",103,[[]]],[11,"drop","","",103,[[]]],[11,"equivalent","","",103,[[]]],[11,"from","diem_types::transaction::metadata","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"test_only_hash","","",113,[[],["hashvalue",3]]],[11,"vzip","","",113,[[]]],[11,"init","","",113,[[]]],[11,"deref","","",113,[[]]],[11,"deref_mut","","",113,[[]]],[11,"drop","","",113,[[]]],[11,"equivalent","","",113,[[]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"test_only_hash","","",166,[[],["hashvalue",3]]],[11,"vzip","","",166,[[]]],[11,"init","","",166,[[]]],[11,"deref","","",166,[[]]],[11,"deref_mut","","",166,[[]]],[11,"drop","","",166,[[]]],[11,"equivalent","","",166,[[]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"test_only_hash","","",167,[[],["hashvalue",3]]],[11,"vzip","","",167,[[]]],[11,"init","","",167,[[]]],[11,"deref","","",167,[[]]],[11,"deref_mut","","",167,[[]]],[11,"drop","","",167,[[]]],[11,"equivalent","","",167,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"test_only_hash","","",110,[[],["hashvalue",3]]],[11,"vzip","","",110,[[]]],[11,"init","","",110,[[]]],[11,"deref","","",110,[[]]],[11,"deref_mut","","",110,[[]]],[11,"drop","","",110,[[]]],[11,"equivalent","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"test_only_hash","","",111,[[],["hashvalue",3]]],[11,"vzip","","",111,[[]]],[11,"init","","",111,[[]]],[11,"deref","","",111,[[]]],[11,"deref_mut","","",111,[[]]],[11,"drop","","",111,[[]]],[11,"equivalent","","",111,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"test_only_hash","","",112,[[],["hashvalue",3]]],[11,"vzip","","",112,[[]]],[11,"init","","",112,[[]]],[11,"deref","","",112,[[]]],[11,"deref_mut","","",112,[[]]],[11,"drop","","",112,[[]]],[11,"equivalent","","",112,[[]]],[11,"from","diem_types::trusted_state","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"vzip","","",129,[[]]],[11,"init","","",129,[[]]],[11,"deref","","",129,[[]]],[11,"deref_mut","","",129,[[]]],[11,"drop","","",129,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"vzip","","",126,[[]]],[11,"init","","",126,[[]]],[11,"deref","","",126,[[]]],[11,"deref_mut","","",126,[[]]],[11,"drop","","",126,[[]]],[11,"from","diem_types::validator_config","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"test_only_hash","","",130,[[],["hashvalue",3]]],[11,"vzip","","",130,[[]]],[11,"init","","",130,[[]]],[11,"deref","","",130,[[]]],[11,"deref_mut","","",130,[[]]],[11,"drop","","",130,[[]]],[11,"equivalent","","",130,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"test_only_hash","","",131,[[],["hashvalue",3]]],[11,"vzip","","",131,[[]]],[11,"init","","",131,[[]]],[11,"deref","","",131,[[]]],[11,"deref_mut","","",131,[[]]],[11,"drop","","",131,[[]]],[11,"equivalent","","",131,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"test_only_hash","","",132,[[],["hashvalue",3]]],[11,"vzip","","",132,[[]]],[11,"init","","",132,[[]]],[11,"deref","","",132,[[]]],[11,"deref_mut","","",132,[[]]],[11,"drop","","",132,[[]]],[11,"equivalent","","",132,[[]]],[11,"from","diem_types::validator_info","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"to_string","","",133,[[],["string",3]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"test_only_hash","","",133,[[],["hashvalue",3]]],[11,"vzip","","",133,[[]]],[11,"init","","",133,[[]]],[11,"deref","","",133,[[]]],[11,"deref_mut","","",133,[[]]],[11,"drop","","",133,[[]]],[11,"equivalent","","",133,[[]]],[11,"from","diem_types::validator_signer","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"init","","",134,[[]]],[11,"deref","","",134,[[]]],[11,"deref_mut","","",134,[[]]],[11,"drop","","",134,[[]]],[11,"from","diem_types::validator_verifier","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"test_only_hash","","",138,[[],["hashvalue",3]]],[11,"vzip","","",138,[[]]],[11,"init","","",138,[[]]],[11,"deref","","",138,[[]]],[11,"deref_mut","","",138,[[]]],[11,"drop","","",138,[[]]],[11,"equivalent","","",138,[[]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"to_string","","",139,[[],["string",3]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"test_only_hash","","",139,[[],["hashvalue",3]]],[11,"vzip","","",139,[[]]],[11,"init","","",139,[[]]],[11,"deref","","",139,[[]]],[11,"deref_mut","","",139,[[]]],[11,"drop","","",139,[[]]],[11,"equivalent","","",139,[[]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_string","","",135,[[],["string",3]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"init","","",135,[[]]],[11,"deref","","",135,[[]]],[11,"deref_mut","","",135,[[]]],[11,"drop","","",135,[[]]],[11,"from","diem_types::vm_status","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"to_string","","",140,[[],["string",3]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"test_only_hash","","",140,[[],["hashvalue",3]]],[11,"vzip","","",140,[[]]],[11,"init","","",140,[[]]],[11,"deref","","",140,[[]]],[11,"deref_mut","","",140,[[]]],[11,"drop","","",140,[[]]],[11,"equivalent","","",140,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"to_string","","",141,[[],["string",3]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"test_only_hash","","",141,[[],["hashvalue",3]]],[11,"vzip","","",141,[[]]],[11,"init","","",141,[[]]],[11,"deref","","",141,[[]]],[11,"deref_mut","","",141,[[]]],[11,"drop","","",141,[[]]],[11,"equivalent","","",141,[[]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"test_only_hash","","",143,[[],["hashvalue",3]]],[11,"vzip","","",143,[[]]],[11,"init","","",143,[[]]],[11,"deref","","",143,[[]]],[11,"deref_mut","","",143,[[]]],[11,"drop","","",143,[[]]],[11,"equivalent","","",143,[[]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"to_string","","",144,[[],["string",3]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"vzip","","",144,[[]]],[11,"init","","",144,[[]]],[11,"deref","","",144,[[]]],[11,"deref_mut","","",144,[[]]],[11,"drop","","",144,[[]]],[11,"equivalent","","",144,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"to_string","","",145,[[],["string",3]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"test_only_hash","","",145,[[],["hashvalue",3]]],[11,"vzip","","",145,[[]]],[11,"init","","",145,[[]]],[11,"deref","","",145,[[]]],[11,"deref_mut","","",145,[[]]],[11,"drop","","",145,[[]]],[11,"equivalent","","",145,[[]]],[11,"from","diem_types::waypoint","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"to_string","","",147,[[],["string",3]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"test_only_hash","","",147,[[],["hashvalue",3]]],[11,"vzip","","",147,[[]]],[11,"init","","",147,[[]]],[11,"deref","","",147,[[]]],[11,"deref_mut","","",147,[[]]],[11,"drop","","",147,[[]]],[11,"equivalent","","",147,[[]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"vzip","","",168,[[]]],[11,"init","","",168,[[]]],[11,"deref","","",168,[[]]],[11,"deref_mut","","",168,[[]]],[11,"drop","","",168,[[]]],[11,"from","diem_types::write_set","",149,[[]]],[11,"into","","",149,[[]]],[11,"into_iter","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"test_only_hash","","",149,[[],["hashvalue",3]]],[11,"vzip","","",149,[[]]],[11,"init","","",149,[[]]],[11,"deref","","",149,[[]]],[11,"deref_mut","","",149,[[]]],[11,"drop","","",149,[[]]],[11,"equivalent","","",149,[[]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"test_only_hash","","",150,[[],["hashvalue",3]]],[11,"vzip","","",150,[[]]],[11,"init","","",150,[[]]],[11,"deref","","",150,[[]]],[11,"deref_mut","","",150,[[]]],[11,"drop","","",150,[[]]],[11,"equivalent","","",150,[[]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"test_only_hash","","",148,[[],["hashvalue",3]]],[11,"vzip","","",148,[[]]],[11,"init","","",148,[[]]],[11,"deref","","",148,[[]]],[11,"deref_mut","","",148,[[]]],[11,"drop","","",148,[[]]],[11,"equivalent","","",148,[[]]],[11,"fmt","diem_types::account_address","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"cmp","","",151,[[["accountaddress",3]],["ordering",4]]],[11,"cmp","diem_types::vm_status","",143,[[["statuscode",4]],["ordering",4]]],[11,"cmp","","",140,[[["abortlocation",4]],["ordering",4]]],[11,"cmp","","",141,[[["keptvmstatus",4]],["ordering",4]]],[11,"cmp","","",145,[[["vmstatus",4]],["ordering",4]]],[11,"fmt","","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_types::account_address","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_types::vm_status","",143,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_types::transaction","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_types::vm_status","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","diem_types::account_address","",151,[[],[["accountaddress",3],["result",4]]]],[11,"deserialize","diem_types::vm_status","",141,[[],[["result",4],["keptvmstatus",4]]]],[11,"deserialize","","",143,[[],[["result",4],["statuscode",4]]]],[11,"deserialize","diem_types::transaction","",93,[[],[["result",4],["transactionargument",4]]]],[11,"deserialize","diem_types::vm_status","",140,[[],[["result",4],["abortlocation",4]]]],[11,"deserialize","","",145,[[],[["result",4],["vmstatus",4]]]],[11,"eq","","",143,[[["statuscode",4]]]],[11,"eq","","",144,[[["statustype",4]]]],[11,"eq","diem_types::account_address","",151,[[["accountaddress",3]]]],[11,"ne","","",151,[[["accountaddress",3]]]],[11,"eq","diem_types::transaction","",93,[[["transactionargument",4]]]],[11,"ne","","",93,[[["transactionargument",4]]]],[11,"eq","diem_types::vm_status","",145,[[["vmstatus",4]]]],[11,"ne","","",145,[[["vmstatus",4]]]],[11,"eq","","",140,[[["abortlocation",4]]]],[11,"ne","","",140,[[["abortlocation",4]]]],[11,"eq","","",141,[[["keptvmstatus",4]]]],[11,"ne","","",141,[[["keptvmstatus",4]]]],[11,"hash","diem_types::account_address","",151,[[],["hashvalue",3]]],[11,"from_str","","",151,[[],[["result",4],["error",3],["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",151,[[],[["result",4],["error",3],["accountaddress",3]]]],[11,"try_from","","",151,[[["string",3]],[["result",4],["error",3],["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",151,[[],[["result",4],["error",3],["accountaddress",3]]]],[11,"try_from","diem_types::vm_status","",143,[[],[["result",4],["statuscode",4]]]],[11,"try_from","diem_types::account_address","Tries to convert the provided byte buffer into Address.",151,[[["vec",3]],[["result",4],["error",3],["accountaddress",3]]]],[11,"clone","diem_types::transaction","",93,[[],["transactionargument",4]]],[11,"clone","diem_types::vm_status","",143,[[],["statuscode",4]]],[11,"clone","","",144,[[],["statustype",4]]],[11,"clone","","",140,[[],["abortlocation",4]]],[11,"clone","diem_types::account_address","",151,[[],["accountaddress",3]]],[11,"clone","diem_types::vm_status","",141,[[],["keptvmstatus",4]]],[11,"clone","","",145,[[],["vmstatus",4]]],[11,"hash","","",143,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",141,[[]]],[11,"hash","diem_types::account_address","",151,[[]]],[11,"hash","diem_types::transaction","",93,[[]]],[11,"hash","diem_types::vm_status","",145,[[]]],[11,"hash","","",140,[[]]],[11,"serialize","","",145,[[],["result",4]]],[11,"serialize","","",140,[[],["result",4]]],[11,"serialize","diem_types::transaction","",93,[[],["result",4]]],[11,"serialize","diem_types::vm_status","",141,[[],["result",4]]],[11,"serialize","","",143,[[],["result",4]]],[11,"serialize","diem_types::account_address","",151,[[],["result",4]]],[11,"arbitrary_with","diem_types::vm_status","",145,[[]]],[11,"arbitrary_with","","",141,[[]]],[11,"arbitrary_with","","",143,[[]]],[11,"arbitrary_with","diem_types::account_address","",151,[[]]],[11,"arbitrary_with","diem_types::transaction","",93,[[]]],[11,"arbitrary_with","diem_types::vm_status","",140,[[]]],[11,"as_ref","diem_types::account_address","",151,[[]]],[11,"partial_cmp","","",151,[[["accountaddress",3]],[["ordering",4],["option",4]]]],[11,"lt","","",151,[[["accountaddress",3]]]],[11,"le","","",151,[[["accountaddress",3]]]],[11,"gt","","",151,[[["accountaddress",3]]]],[11,"ge","","",151,[[["accountaddress",3]]]],[11,"partial_cmp","diem_types::vm_status","",141,[[["keptvmstatus",4]],[["ordering",4],["option",4]]]],[11,"lt","","",141,[[["keptvmstatus",4]]]],[11,"le","","",141,[[["keptvmstatus",4]]]],[11,"gt","","",141,[[["keptvmstatus",4]]]],[11,"ge","","",141,[[["keptvmstatus",4]]]],[11,"partial_cmp","","",143,[[["statuscode",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",145,[[["vmstatus",4]],[["ordering",4],["option",4]]]],[11,"lt","","",145,[[["vmstatus",4]]]],[11,"le","","",145,[[["vmstatus",4]]]],[11,"gt","","",145,[[["vmstatus",4]]]],[11,"ge","","",145,[[["vmstatus",4]]]],[11,"partial_cmp","","",140,[[["abortlocation",4]],[["ordering",4],["option",4]]]],[11,"lt","","",140,[[["abortlocation",4]]]],[11,"le","","",140,[[["abortlocation",4]]]],[11,"gt","","",140,[[["abortlocation",4]]]],[11,"ge","","",140,[[["abortlocation",4]]]],[11,"fmt","diem_types::account_address","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_types::vm_status","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","diem_types::account_address","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"verify","diem_types::epoch_state","",46,[[["ledgerinfowithsignatures",4]],["result",6]]],[11,"epoch_change_verification_required","","",46,[[]]],[11,"is_ledger_info_stale","","",46,[[["ledgerinfo",3]]]],[11,"verify","diem_types::waypoint","",147,[[["ledgerinfowithsignatures",4]],["result",6]]],[11,"epoch_change_verification_required","","",147,[[]]],[11,"is_ledger_info_stale","","",147,[[["ledgerinfo",3]]]],[11,"deserialize_into_config","diem_types::on_chain_config","",56,[[],["result",6]]],[11,"deserialize_into_config","","",57,[[],["result",6]]],[11,"as_ref","diem_types::account_state_blob","",154,[[]]],[11,"as_ref","diem_types::transaction::authenticator","",106,[[]]],[11,"from","diem_types::access_path","",0,[[["moduleid",3]],["accesspath",3]]],[11,"from","diem_types::account_state_blob","",154,[[["vec",3]],["accountstateblob",3]]],[11,"from","diem_types::transaction","",99,[[["vmstatus",4]]]],[11,"from","diem_types::trusted_state","",129,[[["waypoint",3]]]],[11,"from","diem_types::validator_verifier","",139,[[["validatorset",3]]]],[11,"from","diem_types::on_chain_config","",59,[[["validatorverifier",3]]]],[11,"into_iter","","",59,[[]]],[11,"into_iter","diem_types::write_set","",149,[[]]],[11,"next","diem_types::proof::position","",160,[[],[["option",4],["position",3]]]],[11,"next","","",161,[[],[["option",4],["position",3]]]],[11,"next","","",78,[[],[["option",4],["position",3]]]],[11,"next","","",79,[[],["option",4]]],[11,"clone","diem_types::access_path","",0,[[],["accesspath",3]]],[11,"clone","","",1,[[],["path",4]]],[11,"clone","diem_types::account_config::resources::currency_info","",19,[[],["currencyinforesource",3]]],[11,"clone","diem_types::account_config::resources::dual_attestation","",21,[[],["limit",3]]],[11,"clone","diem_types::account_state_blob","",154,[[],["accountstateblob",3]]],[11,"clone","","",155,[[],["accountstateblobhasher",3]]],[11,"clone","","",32,[[],["accountstatewithproof",3]]],[11,"clone","diem_types::block_info","",33,[[],["blockinfo",3]]],[11,"clone","diem_types::block_metadata","",34,[[],["blockmetadata",3]]],[11,"clone","","",36,[[],["newblockevent",3]]],[11,"clone","diem_types::chain_id","",37,[[],["namedchain",4]]],[11,"clone","","",38,[[],["chainid",3]]],[11,"clone","diem_types::contract_event","",40,[[],["contractevent",4]]],[11,"clone","","",156,[[],["contracteventhasher",3]]],[11,"clone","","",41,[[],["contracteventv0",3]]],[11,"clone","","",157,[[],["contracteventv0hasher",3]]],[11,"clone","","",39,[[],["eventwithproof",3]]],[11,"clone","diem_types::diem_timestamp","",43,[[],["diemtimestamp",3]]],[11,"clone","diem_types::epoch_change","",44,[[],["epochchangeproof",3]]],[11,"clone","diem_types::epoch_state","",46,[[],["epochstate",3]]],[11,"clone","diem_types::event","",47,[[],["eventkey",3]]],[11,"clone","","",48,[[],["eventhandle",3]]],[11,"clone","diem_types::ledger_info","",50,[[],["ledgerinfo",3]]],[11,"clone","","",158,[[],["ledgerinfohasher",3]]],[11,"clone","","",49,[[],["ledgerinfowithsignatures",4]]],[11,"clone","","",51,[[],["ledgerinfowithv0",3]]],[11,"clone","diem_types::mempool_status","",52,[[],["mempoolstatus",3]]],[11,"clone","","",53,[[],["mempoolstatuscode",4]]],[11,"clone","diem_types::on_chain_config","",55,[[],["diemversion",3]]],[11,"clone","","",58,[[],["registeredcurrencies",3]]],[11,"clone","","",59,[[],["validatorset",3]]],[11,"clone","","",56,[[],["vmconfig",3]]],[11,"clone","","",57,[[],["vmpublishingoption",3]]],[11,"clone","","",62,[[],["configid",3]]],[11,"clone","","",63,[[],["onchainconfigpayload",3]]],[11,"clone","diem_types::proof::definition","",66,[[],["accumulatorproof",3]]],[11,"clone","","",67,[[],["sparsemerkleproof",3]]],[11,"clone","","",68,[[],["accumulatorconsistencyproof",3]]],[11,"clone","","",69,[[],["accumulatorrangeproof",3]]],[11,"clone","","",70,[[],["sparsemerklerangeproof",3]]],[11,"clone","","",71,[[],["transactioninfowithproof",3]]],[11,"clone","","",72,[[],["accountstateproof",3]]],[11,"clone","","",73,[[],["eventproof",3]]],[11,"clone","","",74,[[],["transactionlistproof",3]]],[11,"clone","","",75,[[],["accumulatorextensionproof",3]]],[11,"clone","diem_types::proof::position","",77,[[],["position",3]]],[11,"clone","diem_types::proof","",81,[[],["sparsemerkleleafnode",3]]],[11,"clone","","",159,[[],["sparsemerkleleafnodehasher",3]]],[11,"clone","diem_types::transaction::authenticator","",103,[[],["transactionauthenticator",4]]],[11,"clone","","",106,[[],["authenticationkey",3]]],[11,"clone","","",165,[[],["authenticationkeyhasher",3]]],[11,"clone","diem_types::transaction","",108,[[],["changeset",3]]],[11,"clone","diem_types::transaction::metadata","",110,[[],["metadata",4]]],[11,"clone","","",111,[[],["generalmetadata",4]]],[11,"clone","","",113,[[],["generalmetadatav0",3]]],[11,"clone","","",112,[[],["travelrulemetadata",4]]],[11,"clone","","",166,[[],["travelrulemetadatav0",3]]],[11,"clone","","",167,[[],["unstructuredbytesmetadata",3]]],[11,"clone","diem_types::transaction","",114,[[],["module",3]]],[11,"clone","","",115,[[],["script",3]]],[11,"clone","","",116,[[],["scriptabi",3]]],[11,"clone","","",117,[[],["argumentabi",3]]],[11,"clone","","",118,[[],["typeargumentabi",3]]],[11,"clone","","",119,[[],["rawtransaction",3]]],[11,"clone","","",162,[[],["rawtransactionhasher",3]]],[11,"clone","","",96,[[],["transactionpayload",4]]],[11,"clone","","",97,[[],["writesetpayload",4]]],[11,"clone","","",121,[[],["signedtransaction",3]]],[11,"clone","","",120,[[],["signaturecheckedtransaction",3]]],[11,"clone","","",94,[[],["transactionwithproof",3]]],[11,"clone","","",99,[[],["transactionstatus",4]]],[11,"clone","","",100,[[],["governancerole",4]]],[11,"clone","","",122,[[],["vmvalidatorresult",3]]],[11,"clone","","",123,[[],["transactionoutput",3]]],[11,"clone","","",124,[[],["transactioninfo",3]]],[11,"clone","","",163,[[],["transactioninfohasher",3]]],[11,"clone","","",125,[[],["transactiontocommit",3]]],[11,"clone","","",95,[[],["transactionlistwithproof",3]]],[11,"clone","","",101,[[],["transaction",4]]],[11,"clone","","",164,[[],["transactionhasher",3]]],[11,"clone","diem_types::trusted_state","",129,[[],["trustedstate",3]]],[11,"clone","","",126,[[],["trustedstatechange",4]]],[11,"clone","diem_types::validator_config","",130,[[],["validatorconfigresource",3]]],[11,"clone","","",131,[[],["validatoroperatorconfigresource",3]]],[11,"clone","","",132,[[],["validatorconfig",3]]],[11,"clone","diem_types::validator_info","",133,[[],["validatorinfo",3]]],[11,"clone","diem_types::validator_signer","",134,[[],["validatorsigner",3]]],[11,"clone","diem_types::validator_verifier","",138,[[],["validatorconsensusinfo",3]]],[11,"clone","","",139,[[],["validatorverifier",3]]],[11,"clone","diem_types::waypoint","",147,[[],["waypoint",3]]],[11,"clone","","",168,[[],["ledger2waypointconverterhasher",3]]],[11,"clone","diem_types::write_set","",148,[[],["writeop",4]]],[11,"clone","","",149,[[],["writeset",3]]],[11,"clone","","",150,[[],["writesetmut",3]]],[11,"default","diem_types::account_state","",31,[[],["accountstate",3]]],[11,"default","diem_types::account_state_blob","",155,[[]]],[11,"default","diem_types::chain_id","",38,[[]]],[11,"default","diem_types::contract_event","",156,[[]]],[11,"default","","",157,[[]]],[11,"default","diem_types::ledger_info","",158,[[]]],[11,"default","diem_types::on_chain_config","",64,[[]]],[11,"default","diem_types::proof::accumulator","",65,[[]]],[11,"default","diem_types::proof","",159,[[]]],[11,"default","diem_types::transaction::authenticator","",165,[[]]],[11,"default","diem_types::transaction","",162,[[]]],[11,"default","","",163,[[]]],[11,"default","","",164,[[]]],[11,"default","diem_types::validator_config","",130,[[],["validatorconfigresource",3]]],[11,"default","","",131,[[],["validatoroperatorconfigresource",3]]],[11,"default","diem_types::waypoint","",147,[[],["waypoint",3]]],[11,"default","","",168,[[]]],[11,"default","diem_types::write_set","",149,[[],["writeset",3]]],[11,"default","","",150,[[],["writesetmut",3]]],[11,"cmp","diem_types::access_path","",0,[[["accesspath",3]],["ordering",4]]],[11,"cmp","","",1,[[["path",4]],["ordering",4]]],[11,"cmp","diem_types::event","",47,[[["eventkey",3]],["ordering",4]]],[11,"cmp","diem_types::mempool_status","",52,[[["mempoolstatus",3]],["ordering",4]]],[11,"cmp","","",53,[[["mempoolstatuscode",4]],["ordering",4]]],[11,"cmp","diem_types::transaction::authenticator","",106,[[["authenticationkey",3]],["ordering",4]]],[11,"cmp","diem_types::transaction","",100,[[["governancerole",4]],["ordering",4]]],[11,"eq","diem_types::access_path","",0,[[["accesspath",3]]]],[11,"ne","","",0,[[["accesspath",3]]]],[11,"eq","","",1,[[["path",4]]]],[11,"ne","","",1,[[["path",4]]]],[11,"eq","diem_types::account_config::resources::dual_attestation","",21,[[["limit",3]]]],[11,"ne","","",21,[[["limit",3]]]],[11,"eq","diem_types::account_state","",31,[[["accountstate",3]]]],[11,"ne","","",31,[[["accountstate",3]]]],[11,"eq","diem_types::account_state_blob","",154,[[["accountstateblob",3]]]],[11,"ne","","",154,[[["accountstateblob",3]]]],[11,"eq","","",32,[[["accountstatewithproof",3]]]],[11,"ne","","",32,[[["accountstatewithproof",3]]]],[11,"eq","diem_types::block_info","",33,[[["blockinfo",3]]]],[11,"ne","","",33,[[["blockinfo",3]]]],[11,"eq","diem_types::block_metadata","",34,[[["blockmetadata",3]]]],[11,"ne","","",34,[[["blockmetadata",3]]]],[11,"eq","diem_types::chain_id","",38,[[["chainid",3]]]],[11,"ne","","",38,[[["chainid",3]]]],[11,"eq","diem_types::contract_event","",40,[[["contractevent",4]]]],[11,"ne","","",40,[[["contractevent",4]]]],[11,"eq","","",41,[[["contracteventv0",3]]]],[11,"ne","","",41,[[["contracteventv0",3]]]],[11,"eq","","",39,[[["eventwithproof",3]]]],[11,"ne","","",39,[[["eventwithproof",3]]]],[11,"eq","diem_types::epoch_change","",44,[[["epochchangeproof",3]]]],[11,"ne","","",44,[[["epochchangeproof",3]]]],[11,"eq","diem_types::epoch_state","",46,[[["epochstate",3]]]],[11,"ne","","",46,[[["epochstate",3]]]],[11,"eq","diem_types::event","",47,[[["eventkey",3]]]],[11,"ne","","",47,[[["eventkey",3]]]],[11,"eq","","",48,[[["eventhandle",3]]]],[11,"ne","","",48,[[["eventhandle",3]]]],[11,"eq","diem_types::ledger_info","",50,[[["ledgerinfo",3]]]],[11,"ne","","",50,[[["ledgerinfo",3]]]],[11,"eq","","",49,[[["ledgerinfowithsignatures",4]]]],[11,"ne","","",49,[[["ledgerinfowithsignatures",4]]]],[11,"eq","","",51,[[["ledgerinfowithv0",3]]]],[11,"ne","","",51,[[["ledgerinfowithv0",3]]]],[11,"eq","diem_types::mempool_status","",52,[[["mempoolstatus",3]]]],[11,"ne","","",52,[[["mempoolstatus",3]]]],[11,"eq","","",53,[[["mempoolstatuscode",4]]]],[11,"eq","diem_types::on_chain_config","",55,[[["diemversion",3]]]],[11,"ne","","",55,[[["diemversion",3]]]],[11,"eq","","",58,[[["registeredcurrencies",3]]]],[11,"ne","","",58,[[["registeredcurrencies",3]]]],[11,"eq","","",59,[[["validatorset",3]]]],[11,"ne","","",59,[[["validatorset",3]]]],[11,"eq","","",56,[[["vmconfig",3]]]],[11,"ne","","",56,[[["vmconfig",3]]]],[11,"eq","","",57,[[["vmpublishingoption",3]]]],[11,"ne","","",57,[[["vmpublishingoption",3]]]],[11,"eq","","",62,[[["configid",3]]]],[11,"ne","","",62,[[["configid",3]]]],[11,"eq","","",63,[[["onchainconfigpayload",3]]]],[11,"ne","","",63,[[["onchainconfigpayload",3]]]],[11,"eq","diem_types::proof::definition","",66,[[]]],[11,"eq","","",67,[[["sparsemerkleproof",3]]]],[11,"ne","","",67,[[["sparsemerkleproof",3]]]],[11,"eq","","",68,[[["accumulatorconsistencyproof",3]]]],[11,"ne","","",68,[[["accumulatorconsistencyproof",3]]]],[11,"eq","","",69,[[]]],[11,"eq","","",70,[[["sparsemerklerangeproof",3]]]],[11,"ne","","",70,[[["sparsemerklerangeproof",3]]]],[11,"eq","","",71,[[["transactioninfowithproof",3]]]],[11,"ne","","",71,[[["transactioninfowithproof",3]]]],[11,"eq","","",72,[[["accountstateproof",3]]]],[11,"ne","","",72,[[["accountstateproof",3]]]],[11,"eq","","",73,[[["eventproof",3]]]],[11,"ne","","",73,[[["eventproof",3]]]],[11,"eq","","",74,[[["transactionlistproof",3]]]],[11,"ne","","",74,[[["transactionlistproof",3]]]],[11,"eq","","",75,[[["accumulatorextensionproof",3]]]],[11,"ne","","",75,[[["accumulatorextensionproof",3]]]],[11,"eq","diem_types::proof::position","",77,[[["position",3]]]],[11,"ne","","",77,[[["position",3]]]],[11,"eq","","",76,[[["nodedirection",4]]]],[11,"eq","diem_types::proof","",81,[[["sparsemerkleleafnode",3]]]],[11,"ne","","",81,[[["sparsemerkleleafnode",3]]]],[11,"eq","diem_types::transaction::authenticator","",103,[[["transactionauthenticator",4]]]],[11,"ne","","",103,[[["transactionauthenticator",4]]]],[11,"eq","","",106,[[["authenticationkey",3]]]],[11,"ne","","",106,[[["authenticationkey",3]]]],[11,"eq","diem_types::transaction","",108,[[["changeset",3]]]],[11,"ne","","",108,[[["changeset",3]]]],[11,"eq","diem_types::transaction::metadata","",110,[[["metadata",4]]]],[11,"ne","","",110,[[["metadata",4]]]],[11,"eq","","",111,[[["generalmetadata",4]]]],[11,"ne","","",111,[[["generalmetadata",4]]]],[11,"eq","","",113,[[["generalmetadatav0",3]]]],[11,"ne","","",113,[[["generalmetadatav0",3]]]],[11,"eq","","",112,[[["travelrulemetadata",4]]]],[11,"ne","","",112,[[["travelrulemetadata",4]]]],[11,"eq","","",166,[[["travelrulemetadatav0",3]]]],[11,"ne","","",166,[[["travelrulemetadatav0",3]]]],[11,"eq","","",167,[[["unstructuredbytesmetadata",3]]]],[11,"ne","","",167,[[["unstructuredbytesmetadata",3]]]],[11,"eq","diem_types::transaction","",114,[[["module",3]]]],[11,"ne","","",114,[[["module",3]]]],[11,"eq","","",115,[[["script",3]]]],[11,"ne","","",115,[[["script",3]]]],[11,"eq","","",116,[[["scriptabi",3]]]],[11,"ne","","",116,[[["scriptabi",3]]]],[11,"eq","","",117,[[["argumentabi",3]]]],[11,"ne","","",117,[[["argumentabi",3]]]],[11,"eq","","",118,[[["typeargumentabi",3]]]],[11,"ne","","",118,[[["typeargumentabi",3]]]],[11,"eq","","",119,[[["rawtransaction",3]]]],[11,"ne","","",119,[[["rawtransaction",3]]]],[11,"eq","","",96,[[["transactionpayload",4]]]],[11,"ne","","",96,[[["transactionpayload",4]]]],[11,"eq","","",97,[[["writesetpayload",4]]]],[11,"ne","","",97,[[["writesetpayload",4]]]],[11,"eq","","",121,[[["signedtransaction",3]]]],[11,"ne","","",121,[[["signedtransaction",3]]]],[11,"eq","","",120,[[["signaturecheckedtransaction",3]]]],[11,"ne","","",120,[[["signaturecheckedtransaction",3]]]],[11,"eq","","",94,[[["transactionwithproof",3]]]],[11,"ne","","",94,[[["transactionwithproof",3]]]],[11,"eq","","",99,[[["transactionstatus",4]]]],[11,"ne","","",99,[[["transactionstatus",4]]]],[11,"eq","","",100,[[["governancerole",4]]]],[11,"eq","","",122,[[["vmvalidatorresult",3]]]],[11,"ne","","",122,[[["vmvalidatorresult",3]]]],[11,"eq","","",123,[[["transactionoutput",3]]]],[11,"ne","","",123,[[["transactionoutput",3]]]],[11,"eq","","",124,[[["transactioninfo",3]]]],[11,"ne","","",124,[[["transactioninfo",3]]]],[11,"eq","","",125,[[["transactiontocommit",3]]]],[11,"ne","","",125,[[["transactiontocommit",3]]]],[11,"eq","","",95,[[["transactionlistwithproof",3]]]],[11,"ne","","",95,[[["transactionlistwithproof",3]]]],[11,"eq","","",101,[[["transaction",4]]]],[11,"ne","","",101,[[["transaction",4]]]],[11,"eq","diem_types::validator_config","",130,[[["validatorconfigresource",3]]]],[11,"ne","","",130,[[["validatorconfigresource",3]]]],[11,"eq","","",131,[[["validatoroperatorconfigresource",3]]]],[11,"ne","","",131,[[["validatoroperatorconfigresource",3]]]],[11,"eq","","",132,[[["validatorconfig",3]]]],[11,"ne","","",132,[[["validatorconfig",3]]]],[11,"eq","diem_types::validator_info","",133,[[["validatorinfo",3]]]],[11,"ne","","",133,[[["validatorinfo",3]]]],[11,"eq","diem_types::validator_verifier","",135,[[["verifyerror",4]]]],[11,"ne","","",135,[[["verifyerror",4]]]],[11,"eq","","",138,[[["validatorconsensusinfo",3]]]],[11,"ne","","",138,[[["validatorconsensusinfo",3]]]],[11,"eq","","",139,[[["validatorverifier",3]]]],[11,"ne","","",139,[[["validatorverifier",3]]]],[11,"eq","diem_types::waypoint","",147,[[["waypoint",3]]]],[11,"ne","","",147,[[["waypoint",3]]]],[11,"eq","diem_types::write_set","",148,[[["writeop",4]]]],[11,"ne","","",148,[[["writeop",4]]]],[11,"eq","","",149,[[["writeset",3]]]],[11,"ne","","",149,[[["writeset",3]]]],[11,"eq","","",150,[[["writesetmut",3]]]],[11,"ne","","",150,[[["writesetmut",3]]]],[11,"partial_cmp","diem_types::access_path","",0,[[["accesspath",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["accesspath",3]]]],[11,"le","","",0,[[["accesspath",3]]]],[11,"gt","","",0,[[["accesspath",3]]]],[11,"ge","","",0,[[["accesspath",3]]]],[11,"partial_cmp","","",1,[[["path",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["path",4]]]],[11,"le","","",1,[[["path",4]]]],[11,"gt","","",1,[[["path",4]]]],[11,"ge","","",1,[[["path",4]]]],[11,"partial_cmp","diem_types::event","",47,[[["eventkey",3]],[["ordering",4],["option",4]]]],[11,"lt","","",47,[[["eventkey",3]]]],[11,"le","","",47,[[["eventkey",3]]]],[11,"gt","","",47,[[["eventkey",3]]]],[11,"ge","","",47,[[["eventkey",3]]]],[11,"partial_cmp","diem_types::mempool_status","",52,[[["mempoolstatus",3]],[["ordering",4],["option",4]]]],[11,"lt","","",52,[[["mempoolstatus",3]]]],[11,"le","","",52,[[["mempoolstatus",3]]]],[11,"gt","","",52,[[["mempoolstatus",3]]]],[11,"ge","","",52,[[["mempoolstatus",3]]]],[11,"partial_cmp","","",53,[[["mempoolstatuscode",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","diem_types::transaction::authenticator","",106,[[["authenticationkey",3]],[["ordering",4],["option",4]]]],[11,"lt","","",106,[[["authenticationkey",3]]]],[11,"le","","",106,[[["authenticationkey",3]]]],[11,"gt","","",106,[[["authenticationkey",3]]]],[11,"ge","","",106,[[["authenticationkey",3]]]],[11,"partial_cmp","diem_types::transaction","",100,[[["governancerole",4]],[["ordering",4],["option",4]]]],[11,"deref","diem_types::contract_event","",40,[[]]],[11,"deref","diem_types::ledger_info","",49,[[],["ledgerinfowithv0",3]]],[11,"deref","diem_types::transaction","",120,[[]]],[11,"deref_mut","diem_types::ledger_info","",49,[[],["ledgerinfowithv0",3]]],[11,"fmt","diem_types::access_path","",0,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::admin_transaction","",2,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::base_url_rotation","",3,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::burn","",4,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::cancel_burn","",5,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::compliance_key_rotation","",6,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::create_account","",7,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::exchange_rate_update","",8,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::mint","",9,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::new_block","",10,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::new_epoch","",11,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::preburn","",12,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::received_mint","",13,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::received_payment","",14,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::sent_payment","",15,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::account","",16,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::balance","",17,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::currency_info","",19,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::designated_dealer","",20,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::dual_attestation","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::freezing_bit","",23,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::key_rotation_capability","",152,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::preburn_balance","",24,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::role","",25,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::role_id","",28,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::vasp","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::withdraw_capability","",153,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_state","",31,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_state_blob","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::block_info","",33,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::block_metadata","",34,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::chain_id","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::contract_event","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::diem_timestamp","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::epoch_change","",44,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::epoch_state","",46,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::event","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::ledger_info","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::mempool_status","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::on_chain_config","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::proof::accumulator","",65,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::proof::definition","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::proof::position","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::proof","",81,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::proptest_types","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction::authenticator","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction","",108,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction::metadata","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::trusted_state","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::validator_config","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::validator_info","",133,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::validator_signer","",134,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::validator_verifier","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::waypoint","",147,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::write_set","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::access_path","",0,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::block_info","",33,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::chain_id","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::contract_event","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::epoch_state","",46,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::event","",47,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::ledger_info","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::mempool_status","",53,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::on_chain_config","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::proof::position","",77,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction::authenticator","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction","",124,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::validator_info","",133,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::validator_verifier","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::waypoint","",147,[[["formatter",3]],["result",6]]],[11,"hash","diem_types::access_path","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","diem_types::chain_id","",38,[[]]],[11,"hash","diem_types::contract_event","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","diem_types::event","",47,[[]]],[11,"hash","diem_types::mempool_status","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","diem_types::on_chain_config","",62,[[]]],[11,"hash","diem_types::proof::position","",77,[[]]],[11,"hash","diem_types::transaction::authenticator","",103,[[]]],[11,"hash","","",106,[[]]],[11,"hash","diem_types::transaction","",108,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",100,[[]]],[11,"hash","diem_types::write_set","",148,[[]]],[11,"hash","","",149,[[]]],[11,"hash","","",150,[[]]],[11,"try_from","diem_types::access_path","",1,[[],["result",4]]],[11,"try_from","","",1,[[["vec",3]],["result",4]]],[11,"try_from","diem_types::account_state","",31,[[],["result",6]]],[11,"try_from","diem_types::account_state_blob","",154,[[["accountstate",3]],["result",6]]],[11,"try_from","diem_types::account_state","",31,[[["accountstateblob",3]],["result",6]]],[11,"try_from","diem_types::account_state_blob","",154,[[],["result",6]]],[11,"try_from","diem_types::account_config::resources::account","",16,[[["accountstateblob",3]],["result",6]]],[11,"try_from","diem_types::account_config::events::sent_payment","",15,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::received_payment","",14,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::exchange_rate_update","",8,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::mint","",9,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::received_mint","",13,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::burn","",4,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::preburn","",12,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::cancel_burn","",5,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::admin_transaction","",2,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::new_block","",10,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::new_epoch","",11,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::compliance_key_rotation","",6,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::base_url_rotation","",3,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::create_account","",7,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::event","Tries to convert the provided byte array into Event Key.",47,[[],[["result",6],["eventkey",3]]]],[11,"try_from","diem_types::mempool_status","",53,[[],["result",6]]],[11,"try_from","diem_types::transaction::authenticator","",106,[[],[["result",4],["authenticationkey",3],["cryptomaterialerror",4]]]],[11,"try_from","","",106,[[["vec",3]],[["result",4],["authenticationkey",3],["cryptomaterialerror",4]]]],[11,"try_from","diem_types::transaction","",121,[[["transaction",4]],["result",6]]],[11,"try_from","diem_types::trusted_state","",129,[[["ledgerinfo",3]],["result",6]]],[11,"from_str","diem_types::chain_id","",38,[[],["result",6]]],[11,"from_str","diem_types::event","",47,[[],["result",6]]],[11,"from_str","diem_types::transaction::authenticator","",106,[[],["result",6]]],[11,"from_str","diem_types::waypoint","",147,[[],["result",6]]],[11,"from_iter","diem_types::write_set","",150,[[["intoiterator",8]]]],[11,"fmt","diem_types::event","",47,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction::authenticator","",106,[[["formatter",3]],["result",6]]],[11,"write","diem_types::account_state_blob","",155,[[],["result",6]]],[11,"flush","","",155,[[],["result",6]]],[11,"write","diem_types::contract_event","",156,[[],["result",6]]],[11,"flush","","",156,[[],["result",6]]],[11,"write","","",157,[[],["result",6]]],[11,"flush","","",157,[[],["result",6]]],[11,"write","diem_types::ledger_info","",158,[[],["result",6]]],[11,"flush","","",158,[[],["result",6]]],[11,"write","diem_types::proof","",159,[[],["result",6]]],[11,"flush","","",159,[[],["result",6]]],[11,"write","diem_types::transaction::authenticator","",165,[[],["result",6]]],[11,"flush","","",165,[[],["result",6]]],[11,"write","diem_types::transaction","",162,[[],["result",6]]],[11,"flush","","",162,[[],["result",6]]],[11,"write","","",163,[[],["result",6]]],[11,"flush","","",163,[[],["result",6]]],[11,"write","","",164,[[],["result",6]]],[11,"flush","","",164,[[],["result",6]]],[11,"write","diem_types::waypoint","",168,[[],["result",6]]],[11,"flush","","",168,[[],["result",6]]],[11,"hash","diem_types::account_state_blob","",154,[[],["hashvalue",3]]],[11,"hash","diem_types::contract_event","",40,[[],["hashvalue",3]]],[11,"hash","diem_types::ledger_info","",50,[[],["hashvalue",3]]],[11,"hash","diem_types::proof","",80,[[],["hashvalue",3]]],[11,"hash","","",81,[[],["hashvalue",3]]],[11,"hash","diem_types::transaction","",119,[[],["hashvalue",3]]],[11,"hash","","",124,[[],["hashvalue",3]]],[11,"hash","","",101,[[],["hashvalue",3]]],[11,"seed","diem_types::account_state_blob","",155,[[]]],[11,"update","","",155,[[]]],[11,"finish","","",155,[[],["hashvalue",3]]],[11,"seed","diem_types::contract_event","",156,[[]]],[11,"update","","",156,[[]]],[11,"finish","","",156,[[],["hashvalue",3]]],[11,"seed","","",157,[[]]],[11,"update","","",157,[[]]],[11,"finish","","",157,[[],["hashvalue",3]]],[11,"seed","diem_types::ledger_info","",158,[[]]],[11,"update","","",158,[[]]],[11,"finish","","",158,[[],["hashvalue",3]]],[11,"seed","diem_types::proof","",159,[[]]],[11,"update","","",159,[[]]],[11,"finish","","",159,[[],["hashvalue",3]]],[11,"seed","diem_types::transaction::authenticator","",165,[[]]],[11,"update","","",165,[[]]],[11,"finish","","",165,[[],["hashvalue",3]]],[11,"seed","diem_types::transaction","",162,[[]]],[11,"update","","",162,[[]]],[11,"finish","","",162,[[],["hashvalue",3]]],[11,"seed","","",163,[[]]],[11,"update","","",163,[[]]],[11,"finish","","",163,[[],["hashvalue",3]]],[11,"seed","","",164,[[]]],[11,"update","","",164,[[]]],[11,"finish","","",164,[[],["hashvalue",3]]],[11,"seed","diem_types::waypoint","",168,[[]]],[11,"update","","",168,[[]]],[11,"finish","","",168,[[],["hashvalue",3]]],[11,"serialize","diem_types::access_path","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::admin_transaction","",2,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::base_url_rotation","",3,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::burn","",4,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::cancel_burn","",5,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::compliance_key_rotation","",6,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::create_account","",7,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::exchange_rate_update","",8,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::mint","",9,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::new_block","",10,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::new_epoch","",11,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::preburn","",12,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::received_mint","",13,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::received_payment","",14,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::sent_payment","",15,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::account","",16,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::balance","",17,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::currency_info","",19,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::designated_dealer","",20,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::dual_attestation","",22,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::freezing_bit","",23,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::key_rotation_capability","",152,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::preburn_balance","",24,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::role","",25,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::role_id","",28,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::vasp","",29,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::withdraw_capability","",153,[[],["result",4]]],[11,"serialize","diem_types::account_state","",31,[[],["result",4]]],[11,"serialize","diem_types::account_state_blob","",154,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","diem_types::block_info","",33,[[],["result",4]]],[11,"serialize","diem_types::block_metadata","",34,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","diem_types::chain_id","",38,[[],["result",4]]],[11,"serialize","diem_types::contract_event","",40,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","diem_types::diem_timestamp","",42,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","diem_types::epoch_change","",44,[[],["result",4]]],[11,"serialize","diem_types::epoch_state","",46,[[],["result",4]]],[11,"serialize","diem_types::event","",47,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","diem_types::ledger_info","",50,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","diem_types::on_chain_config","",55,[[],["result",4]]],[11,"serialize","","",58,[[],["result",4]]],[11,"serialize","","",59,[[],["result",4]]],[11,"serialize","","",56,[[],["result",4]]],[11,"serialize","","",57,[[],["result",4]]],[11,"serialize","","",64,[[],["result",4]]],[11,"serialize","diem_types::proof::definition","",66,[[],["result",4]]],[11,"serialize","","",67,[[],["result",4]]],[11,"serialize","","",68,[[],["result",4]]],[11,"serialize","","",69,[[],["result",4]]],[11,"serialize","","",70,[[],["result",4]]],[11,"serialize","","",71,[[],["result",4]]],[11,"serialize","","",72,[[],["result",4]]],[11,"serialize","","",73,[[],["result",4]]],[11,"serialize","","",74,[[],["result",4]]],[11,"serialize","","",75,[[],["result",4]]],[11,"serialize","diem_types::proof","",81,[[],["result",4]]],[11,"serialize","diem_types::transaction::authenticator","",103,[[],["result",4]]],[11,"serialize","","",106,[[],["result",4]]],[11,"serialize","diem_types::transaction","",108,[[],["result",4]]],[11,"serialize","diem_types::transaction::metadata","",110,[[],["result",4]]],[11,"serialize","","",111,[[],["result",4]]],[11,"serialize","","",113,[[],["result",4]]],[11,"serialize","","",112,[[],["result",4]]],[11,"serialize","","",166,[[],["result",4]]],[11,"serialize","","",167,[[],["result",4]]],[11,"serialize","diem_types::transaction","",114,[[],["result",4]]],[11,"serialize","","",115,[[],["result",4]]],[11,"serialize","","",116,[[],["result",4]]],[11,"serialize","","",117,[[],["result",4]]],[11,"serialize","","",118,[[],["result",4]]],[11,"serialize","","",119,[[],["result",4]]],[11,"serialize","","",96,[[],["result",4]]],[11,"serialize","","",97,[[],["result",4]]],[11,"serialize","","",121,[[],["result",4]]],[11,"serialize","","",94,[[],["result",4]]],[11,"serialize","","",99,[[],["result",4]]],[11,"serialize","","",124,[[],["result",4]]],[11,"serialize","","",125,[[],["result",4]]],[11,"serialize","","",95,[[],["result",4]]],[11,"serialize","","",101,[[],["result",4]]],[11,"serialize","diem_types::validator_config","",130,[[],["result",4]]],[11,"serialize","","",131,[[],["result",4]]],[11,"serialize","","",132,[[],["result",4]]],[11,"serialize","diem_types::validator_info","",133,[[],["result",4]]],[11,"serialize","diem_types::validator_verifier","",138,[[],["result",4]]],[11,"serialize","","",139,[[],["result",4]]],[11,"serialize","diem_types::waypoint","",147,[[],["result",4]]],[11,"serialize","diem_types::write_set","",148,[[],["result",4]]],[11,"serialize","","",149,[[],["result",4]]],[11,"serialize","","",150,[[],["result",4]]],[11,"deserialize","diem_types::access_path","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::admin_transaction","",2,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::base_url_rotation","",3,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::burn","",4,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::cancel_burn","",5,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::compliance_key_rotation","",6,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::create_account","",7,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::exchange_rate_update","",8,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::mint","",9,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::new_block","",10,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::new_epoch","",11,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::preburn","",12,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::received_mint","",13,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::received_payment","",14,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::sent_payment","",15,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::account","",16,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::balance","",17,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::chain_id","",18,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::currency_info","",19,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::designated_dealer","",20,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::dual_attestation","",22,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::freezing_bit","",23,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::key_rotation_capability","",152,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::preburn_balance","",24,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::role","",25,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::role_id","",28,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::vasp","",29,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::withdraw_capability","",153,[[],["result",4]]],[11,"deserialize","diem_types::account_state","",31,[[],["result",4]]],[11,"deserialize","diem_types::account_state_blob","",154,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","diem_types::block_info","",33,[[],["result",4]]],[11,"deserialize","diem_types::block_metadata","",34,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","diem_types::chain_id","",38,[[],["result",4]]],[11,"deserialize","diem_types::contract_event","",40,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"deserialize","diem_types::diem_timestamp","",42,[[],["result",4]]],[11,"deserialize","","",43,[[],["result",4]]],[11,"deserialize","diem_types::epoch_change","",44,[[],["result",4]]],[11,"deserialize","diem_types::epoch_state","",46,[[],["result",4]]],[11,"deserialize","diem_types::event","",47,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","diem_types::ledger_info","",50,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","","",51,[[],["result",4]]],[11,"deserialize","diem_types::on_chain_config","",55,[[],["result",4]]],[11,"deserialize","","",58,[[],["result",4]]],[11,"deserialize","","",59,[[],["result",4]]],[11,"deserialize","","",56,[[],["result",4]]],[11,"deserialize","","",57,[[],["result",4]]],[11,"deserialize","","",64,[[],["result",4]]],[11,"deserialize","diem_types::proof::definition","",66,[[],["result",4]]],[11,"deserialize","","",67,[[],["result",4]]],[11,"deserialize","","",68,[[],["result",4]]],[11,"deserialize","","",69,[[],["result",4]]],[11,"deserialize","","",70,[[],["result",4]]],[11,"deserialize","","",71,[[],["result",4]]],[11,"deserialize","","",72,[[],["result",4]]],[11,"deserialize","","",73,[[],["result",4]]],[11,"deserialize","","",74,[[],["result",4]]],[11,"deserialize","","",75,[[],["result",4]]],[11,"deserialize","diem_types::proof","",81,[[],["result",4]]],[11,"deserialize","diem_types::transaction::authenticator","",103,[[],["result",4]]],[11,"deserialize","","",106,[[],["result",4]]],[11,"deserialize","diem_types::transaction","",108,[[],["result",4]]],[11,"deserialize","diem_types::transaction::metadata","",110,[[],["result",4]]],[11,"deserialize","","",111,[[],["result",4]]],[11,"deserialize","","",113,[[],["result",4]]],[11,"deserialize","","",112,[[],["result",4]]],[11,"deserialize","","",166,[[],["result",4]]],[11,"deserialize","","",167,[[],["result",4]]],[11,"deserialize","diem_types::transaction","",114,[[],["result",4]]],[11,"deserialize","","",115,[[],["result",4]]],[11,"deserialize","","",116,[[],["result",4]]],[11,"deserialize","","",117,[[],["result",4]]],[11,"deserialize","","",118,[[],["result",4]]],[11,"deserialize","","",119,[[],["result",4]]],[11,"deserialize","","",96,[[],["result",4]]],[11,"deserialize","","",97,[[],["result",4]]],[11,"deserialize","","",121,[[],["result",4]]],[11,"deserialize","","",94,[[],["result",4]]],[11,"deserialize","","",99,[[],["result",4]]],[11,"deserialize","","",124,[[],["result",4]]],[11,"deserialize","","",125,[[],["result",4]]],[11,"deserialize","","",95,[[],["result",4]]],[11,"deserialize","","",101,[[],["result",4]]],[11,"deserialize","diem_types::validator_config","",130,[[],["result",4]]],[11,"deserialize","","",131,[[],["result",4]]],[11,"deserialize","","",132,[[],["result",4]]],[11,"deserialize","diem_types::validator_info","",133,[[],["result",4]]],[11,"deserialize","diem_types::validator_verifier","",138,[[],["result",4]]],[11,"deserialize","","",139,[[],["result",4]]],[11,"deserialize","diem_types::waypoint","",147,[[],["result",4]]],[11,"deserialize","diem_types::write_set","",148,[[],["result",4]]],[11,"deserialize","","",149,[[],["result",4]]],[11,"deserialize","","",150,[[],["result",4]]],[11,"arbitrary_with","diem_types::access_path","",0,[[]]],[11,"arbitrary_with","diem_types::account_config::resources::account","",16,[[]]],[11,"arbitrary_with","diem_types::account_config::resources::balance","",17,[[]]],[11,"arbitrary_with","diem_types::account_config::resources::key_rotation_capability","",152,[[]]],[11,"arbitrary_with","diem_types::account_config::resources::preburn_balance","",24,[[]]],[11,"arbitrary_with","diem_types::account_config::resources::vasp","",30,[[]]],[11,"arbitrary_with","diem_types::account_config::resources::withdraw_capability","",153,[[]]],[11,"arbitrary_with","diem_types::account_state_blob","",154,[[]]],[11,"arbitrary_with","","",32,[[]]],[11,"arbitrary_with","diem_types::block_info","",33,[[]]],[11,"arbitrary_with","diem_types::contract_event","",39,[[]]],[11,"arbitrary_with","diem_types::epoch_change","",44,[[]]],[11,"arbitrary_with","diem_types::epoch_state","",46,[[]]],[11,"arbitrary_with","diem_types::event","",47,[[]]],[11,"arbitrary_with","diem_types::ledger_info","",50,[[]]],[11,"arbitrary_with","","",51,[[]]],[11,"arbitrary_with","diem_types::mempool_status","",52,[[]]],[11,"arbitrary_with","","",53,[[]]],[11,"arbitrary_with","diem_types::on_chain_config","",59,[[]]],[11,"arbitrary_with","diem_types::proof::definition","",71,[[]]],[11,"arbitrary_with","","",72,[[]]],[11,"arbitrary_with","","",73,[[]]],[11,"arbitrary_with","","",74,[[]]],[11,"arbitrary_with","","",66,[[]]],[11,"arbitrary_with","","",67,[[]]],[11,"arbitrary_with","","",68,[[]]],[11,"arbitrary_with","","",69,[[]]],[11,"arbitrary_with","","",70,[[]]],[11,"arbitrary_with","diem_types::proof","",81,[[]]],[11,"arbitrary_with","diem_types::write_set","",148,[[]]],[11,"arbitrary_with","diem_types::transaction","",97,[[]]],[11,"arbitrary_with","diem_types::write_set","",149,[[]]],[11,"arbitrary_with","diem_types::transaction","",108,[[]]],[11,"arbitrary_with","diem_types::proptest_types","",82,[[]]],[11,"arbitrary","","",82,[[]]],[11,"arbitrary_with","","",83,[[]]],[11,"arbitrary_with","diem_types::transaction","",119,[[]]],[11,"arbitrary_with","diem_types::proptest_types","",84,[[]]],[11,"arbitrary_with","diem_types::transaction","",120,[[]]],[11,"arbitrary_with","","",121,[[]]],[11,"arbitrary_with","","",99,[[]]],[11,"arbitrary_with","","",96,[[]]],[11,"arbitrary_with","","",115,[[]]],[11,"arbitrary_with","","",114,[[]]],[11,"arbitrary_with","diem_types::ledger_info","",49,[[]]],[11,"arbitrary_with","diem_types::proptest_types","",85,[[]]],[11,"arbitrary_with","","",86,[[]]],[11,"arbitrary_with","","",87,[[]]],[11,"arbitrary_with","","",88,[[]]],[11,"arbitrary_with","diem_types::event","",48,[[]]],[11,"arbitrary_with","diem_types::contract_event","",40,[[]]],[11,"arbitrary_with","diem_types::transaction","",125,[[]]],[11,"arbitrary_with","diem_types::proptest_types","",89,[[]]],[11,"arbitrary_with","diem_types::transaction","",95,[[]]],[11,"arbitrary_with","diem_types::block_metadata","",34,[[]]],[11,"arbitrary_with","diem_types::proptest_types","",90,[[]]],[11,"arbitrary_with","","",91,[[]]],[11,"arbitrary_with","","",92,[[]]],[11,"arbitrary_with","diem_types::transaction::authenticator","",106,[[]]],[11,"arbitrary_with","diem_types::transaction","",94,[[]]],[11,"arbitrary_with","","",124,[[]]],[11,"arbitrary_with","","",101,[[]]],[11,"arbitrary_with","diem_types::validator_config","",132,[[]]],[11,"arbitrary_with","diem_types::validator_info","",133,[[]]],[11,"arbitrary_with","diem_types::validator_verifier","",138,[[]]],[11,"arbitrary_with","","",139,[[]]],[11,"to_bytes","diem_types::transaction::authenticator","",106,[[],["vec",3]]],[11,"type_params","diem_types::account_config::resources::balance","",17,[[],[["vec",3],["typetag",4]]]],[11,"type_params","diem_types::account_config::resources::preburn_balance","",24,[[],[["vec",3],["typetag",4]]]],[11,"new","diem_types::account_address","",151,[[],["accountaddress",3]]],[18,"LENGTH","","The number of bytes in an address.",151,null],[18,"ZERO","","Hex address: 0x0",151,null],[11,"random","","",151,[[],["accountaddress",3]]],[11,"short_str","","",151,[[],["shorthexstr",3]]],[11,"short_str_lossless","","",151,[[],["string",3]]],[11,"to_vec","","",151,[[],["vec",3]]],[11,"to_u8","","",151,[[]]],[11,"from_hex_literal","","",151,[[],[["result",4],["error",3],["accountaddress",3]]]],[11,"from_identity_public_key","","",151,[[["publickey",3]],["accountaddress",3]]],[11,"value_strategy","diem_types::write_set","",148,[[]]],[11,"deletion_strategy","","",148,[[]]],[11,"script_strategy","diem_types::transaction","",120,[[]]],[11,"module_strategy","","",120,[[]]],[11,"write_set_strategy","","",120,[[]]],[11,"genesis_strategy","","",120,[[]]],[11,"script_strategy","","",96,[[]]],[11,"module_strategy","","",96,[[]]],[11,"write_set_strategy","","",96,[[]]],[11,"genesis_strategy","","Similar to `write_set_strategy` except generates a valid…",96,[[]]],[11,"status_type","diem_types::vm_status","Return the status type for this status code",143,[[],["statustype",4]]],[11,"status_code","","Return the status code for the `VMStatus`",145,[[],["statuscode",4]]],[11,"move_abort_code","","Returns the Move abort code if the status is `MoveAbort`,…",145,[[],["option",4]]],[11,"status_type","","Return the status type for this `VMStatus`. This is solely…",145,[[],["statustype",4]]],[11,"keep_or_discard","","Returns `Ok` with a recorded status if it should be kept,…",145,[[],[["result",4],["statuscode",4],["keptvmstatus",4]]]]],"p":[[3,"AccessPath"],[4,"Path"],[3,"AdminTransactionEvent"],[3,"BaseUrlRotationEvent"],[3,"BurnEvent"],[3,"CancelBurnEvent"],[3,"ComplianceKeyRotationEvent"],[3,"CreateAccountEvent"],[3,"ToXDXExchangeRateUpdateEvent"],[3,"MintEvent"],[3,"NewBlockEvent"],[3,"NewEpochEvent"],[3,"PreburnEvent"],[3,"ReceivedMintEvent"],[3,"ReceivedPaymentEvent"],[3,"SentPaymentEvent"],[3,"AccountResource"],[3,"BalanceResource"],[3,"ChainIdResource"],[3,"CurrencyInfoResource"],[3,"DesignatedDealer"],[3,"Limit"],[3,"Credential"],[3,"FreezingBit"],[3,"PreburnResource"],[4,"AccountRole"],[13,"ParentVASP"],[13,"DesignatedDealer"],[3,"RoleId"],[3,"ParentVASP"],[3,"ChildVASP"],[3,"AccountState"],[3,"AccountStateWithProof"],[3,"BlockInfo"],[3,"BlockMetadata"],[3,"DiemBlockResource"],[3,"NewBlockEvent"],[4,"NamedChain"],[3,"ChainId"],[3,"EventWithProof"],[4,"ContractEvent"],[3,"ContractEventV0"],[3,"DiemTimestampResource"],[3,"DiemTimestamp"],[3,"EpochChangeProof"],[8,"Verifier"],[3,"EpochState"],[3,"EventKey"],[3,"EventHandle"],[4,"LedgerInfoWithSignatures"],[3,"LedgerInfo"],[3,"LedgerInfoWithV0"],[3,"MempoolStatus"],[4,"MempoolStatusCode"],[8,"MoveStorage"],[3,"DiemVersion"],[3,"VMConfig"],[3,"VMPublishingOption"],[3,"RegisteredCurrencies"],[3,"ValidatorSet"],[8,"ConfigStorage"],[8,"OnChainConfig"],[3,"ConfigID"],[3,"OnChainConfigPayload"],[3,"ConfigurationResource"],[3,"InMemoryAccumulator"],[3,"AccumulatorProof"],[3,"SparseMerkleProof"],[3,"AccumulatorConsistencyProof"],[3,"AccumulatorRangeProof"],[3,"SparseMerkleRangeProof"],[3,"TransactionInfoWithProof"],[3,"AccountStateProof"],[3,"EventProof"],[3,"TransactionListProof"],[3,"AccumulatorExtensionProof"],[4,"NodeDirection"],[3,"Position"],[3,"FrozenSubTreeIterator"],[3,"FrozenSubtreeSiblingIterator"],[3,"MerkleTreeInternalNode"],[3,"SparseMerkleLeafNode"],[3,"AccountInfoUniverse"],[3,"RawTransactionGen"],[3,"SignatureCheckedTransactionGen"],[3,"ContractEventGen"],[3,"AccountResourceGen"],[3,"BalanceResourceGen"],[3,"AccountStateBlobGen"],[3,"TransactionToCommitGen"],[3,"BlockInfoGen"],[3,"LedgerInfoGen"],[3,"LedgerInfoWithSignaturesGen"],[4,"TransactionArgument"],[3,"TransactionWithProof"],[3,"TransactionListWithProof"],[4,"TransactionPayload"],[4,"WriteSetPayload"],[13,"Script"],[4,"TransactionStatus"],[4,"GovernanceRole"],[4,"Transaction"],[4,"Scheme"],[4,"TransactionAuthenticator"],[13,"Ed25519"],[13,"MultiEd25519"],[3,"AuthenticationKey"],[3,"AuthenticationKeyPreimage"],[3,"ChangeSet"],[8,"TransactionSigner"],[4,"Metadata"],[4,"GeneralMetadata"],[4,"TravelRuleMetadata"],[3,"GeneralMetadataV0"],[3,"Module"],[3,"Script"],[3,"ScriptABI"],[3,"ArgumentABI"],[3,"TypeArgumentABI"],[3,"RawTransaction"],[3,"SignatureCheckedTransaction"],[3,"SignedTransaction"],[3,"VMValidatorResult"],[3,"TransactionOutput"],[3,"TransactionInfo"],[3,"TransactionToCommit"],[4,"TrustedStateChange"],[13,"Version"],[13,"Epoch"],[3,"TrustedState"],[3,"ValidatorConfigResource"],[3,"ValidatorOperatorConfigResource"],[3,"ValidatorConfig"],[3,"ValidatorInfo"],[3,"ValidatorSigner"],[4,"VerifyError"],[13,"TooLittleVotingPower"],[13,"TooManySignatures"],[3,"ValidatorConsensusInfo"],[3,"ValidatorVerifier"],[4,"AbortLocation"],[4,"KeptVMStatus"],[13,"ExecutionFailure"],[4,"StatusCode"],[4,"StatusType"],[4,"VMStatus"],[13,"ExecutionFailure"],[3,"Waypoint"],[4,"WriteOp"],[3,"WriteSet"],[3,"WriteSetMut"],[3,"AccountAddress"],[3,"KeyRotationCapabilityResource"],[3,"WithdrawCapabilityResource"],[3,"AccountStateBlob"],[3,"AccountStateBlobHasher"],[3,"ContractEventHasher"],[3,"ContractEventV0Hasher"],[3,"LedgerInfoHasher"],[3,"SparseMerkleLeafNodeHasher"],[3,"AncestorSiblingIterator"],[3,"AncestorIterator"],[3,"RawTransactionHasher"],[3,"TransactionInfoHasher"],[3,"TransactionHasher"],[3,"AuthenticationKeyHasher"],[3,"TravelRuleMetadataV0"],[3,"UnstructuredBytesMetadata"],[3,"Ledger2WaypointConverterHasher"]]},\
"diem_validator_interface":{"doc":"","i":[[3,"DBDebuggerInterface","diem_validator_interface","",null,null],[3,"JsonRpcDebuggerInterface","","",null,null],[3,"DebuggerStateView","","",null,null],[11,"new","","",0,[[],["result",6]]],[11,"open","","",1,[[["clone",8],["asref",8],["path",3]],["result",6]]],[8,"DiemValidatorInterface","","",null,null],[10,"get_account_state_by_version","","",2,[[["accountaddress",3],["version",6]],[["result",6],["option",4]]]],[10,"get_committed_transactions","","",2,[[["version",6]],[["result",6],["vec",3]]]],[10,"get_latest_version","","",2,[[],[["version",6],["result",6]]]],[10,"get_version_by_account_sequence","","",2,[[["accountaddress",3]],[["result",6],["option",4]]]],[11,"get_diem_framework_modules_by_version","","",2,[[["version",6]],[["result",6],["vec",3]]]],[11,"get_admin_accounts","","Get the account states of the most critical accounts,…",2,[[["version",6]],[["vec",3],["result",6]]]],[11,"new","","",3,[[["version",6],["diemvalidatorinterface",8]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"get_account_state_by_version","","",0,[[["accountaddress",3],["version",6]],[["result",6],["option",4]]]],[11,"get_committed_transactions","","",0,[[["version",6]],[["result",6],["vec",3]]]],[11,"get_latest_version","","",0,[[],[["version",6],["result",6]]]],[11,"get_version_by_account_sequence","","",0,[[["accountaddress",3]],[["result",6],["option",4]]]],[11,"get_account_state_by_version","","",1,[[["accountaddress",3],["version",6]],[["result",6],["option",4]]]],[11,"get_committed_transactions","","",1,[[["version",6]],[["result",6],["vec",3]]]],[11,"get_latest_version","","",1,[[],[["version",6],["result",6]]]],[11,"get_version_by_account_sequence","","",1,[[["accountaddress",3]],[["result",6],["option",4]]]],[11,"get","","",3,[[["accesspath",3]],[["result",6],["option",4]]]],[11,"multi_get","","",3,[[],[["result",6],["vec",3]]]],[11,"is_genesis","","",3,[[]]]],"p":[[3,"JsonRpcDebuggerInterface"],[3,"DBDebuggerInterface"],[8,"DiemValidatorInterface"],[3,"DebuggerStateView"]]},\
"diem_vault_client":{"doc":"","i":[[3,"Client","diem_vault_client","Client provides a client around the restful interface to a…",null,null],[3,"KeyBackup","","Key backup / restore format Example: { \\\"policy\\\":{…",null,null],[3,"KeyBackupPolicy","","",null,null],[3,"KeyBackupInfo","","",null,null],[3,"BackupInfo","","",null,null],[3,"ReadResponse","","Provides a simple wrapper for all read APIs.",null,null],[12,"creation_time","","",0,null],[12,"value","","",0,null],[12,"version","","",0,null],[3,"ReadKey","","",null,null],[3,"Policy","","This data structure is used to represent both policies…",null,null],[3,"PolicyPaths","","Represents the policy for a given path.",null,null],[3,"PathPolicy","","Represents the set of capabilities used within a policy.",null,null],[4,"Error","","",null,null],[13,"HttpError","","",1,null],[13,"InternalError","","",1,null],[13,"MissingField","","",1,null],[13,"NotFound","","",1,null],[13,"SerializationError","","",1,null],[13,"SyntheticError","","",1,null],[4,"Capability","","The various set of capabilities available to a policy…",null,null],[13,"Create","","",2,null],[13,"Delete","","",2,null],[13,"Deny","","",2,null],[13,"List","","",2,null],[13,"Read","","",2,null],[13,"Sudo","","",2,null],[13,"Update","","",2,null],[5,"process_generic_response","","Processes a generic response returned by a vault request.…",null,[[["response",3]],[["error",4],["result",4]]]],[5,"process_policy_list_response","","Processes the response returned by a policy list vault…",null,[[["response",3]],[["result",4],["vec",3],["error",4]]]],[5,"process_policy_read_response","","Processes the response returned by a policy read vault…",null,[[["response",3]],[["policy",3],["error",4],["result",4]]]],[5,"process_secret_list_response","","Processes the response returned by a secret list vault…",null,[[["response",3]],[["result",4],["vec",3],["error",4]]]],[5,"process_secret_read_response","","Processes the response returned by a secret read vault…",null,[[["response",3]],[["result",4],["readresponse",3],["error",4]]]],[5,"process_token_create_response","","Processes the response returned by a token create vault…",null,[[["response",3]],[["result",4],["error",4],["string",3]]]],[5,"process_token_renew_response","","Processes the response returned by a token renew vault…",null,[[["response",3]],[["result",4],["error",4]]]],[5,"process_transit_create_response","","Processes the response returned by a transit key create…",null,[[["response",3]],[["error",4],["result",4]]]],[5,"process_transit_export_response","","Processes the response returned by a transit key export…",null,[[["option",4],["response",3]],[["result",4],["ed25519privatekey",3],["error",4]]]],[5,"process_transit_list_response","","Processes the response returned by a transit key list…",null,[[["response",3]],[["result",4],["vec",3],["error",4]]]],[5,"process_transit_read_response","","Processes the response returned by a transit key read…",null,[[["response",3]],[["result",4],["error",4],["vec",3]]]],[5,"process_transit_restore_response","","Processes the response returned by a transit key restore…",null,[[["response",3]],[["error",4],["result",4]]]],[5,"process_transit_sign_response","","Processes the response returned by a transit key sign…",null,[[["response",3]],[["result",4],["error",4],["ed25519signature",3]]]],[5,"process_unsealed_response","","Processes the response returned by a seal-status() vault…",null,[[["response",3]],[["result",4],["error",4]]]],[0,"dev","","",null,null],[3,"VaultRunner","diem_vault_client::dev","Provide an instance of Vault if vault is installed on the…",null,null],[5,"test_host_safe","","This will return the vault host, if vault was started…",null,[[],[["option",4],["string",3]]]],[5,"test_host","","This will return the vault host or panic.",null,[[],["string",3]]],[17,"ROOT_TOKEN","","",null,null],[11,"run","","Instantiates a new instance of Vault if one is available…",3,[[],[["string",3],["result",4]]]],[11,"host","","",3,[[]]],[11,"root_token","","",3,[[]]],[11,"client","","",3,[[],["client",3]]],[0,"fuzzing","diem_vault_client","",null,null],[5,"arb_generic_response","diem_vault_client::fuzzing","",null,[[]]],[5,"arb_policy_list_response","","",null,[[]]],[5,"arb_secret_list_response","","",null,[[]]],[5,"arb_secret_read_response","","",null,[[]]],[5,"arb_token_create_response","","",null,[[]]],[5,"arb_token_renew_response","","",null,[[]]],[5,"arb_transit_create_response","","",null,[[]]],[5,"arb_transit_export_response","","",null,[[]]],[5,"arb_transit_list_response","","",null,[[]]],[5,"arb_transit_read_key","","",null,[[]]],[5,"arb_transit_read_response","","",null,[[]]],[5,"arb_transit_sign_response","","",null,[[]]],[5,"arb_unsealed_response","","",null,[[]]],[11,"new","diem_vault_client","",4,[[["option",4],["string",3]]]],[11,"delete_policy","","",4,[[],[["error",4],["result",4]]]],[11,"list_policies","","",4,[[],[["result",4],["vec",3],["error",4]]]],[11,"read_policy","","Retrieves the policy at the given policy name.",4,[[],[["policy",3],["error",4],["result",4]]]],[11,"set_policy","","Create a new policy in Vault, see the explanation for…",4,[[["policy",3]],[["error",4],["result",4]]]],[11,"create_token","","Creates a new token or identity for accessing Vault. The…",4,[[["vec",3]],[["result",4],["error",4],["string",3]]]],[11,"renew_token_self","","",4,[[["option",4]],[["result",4],["error",4]]]],[11,"revoke_token_self","","",4,[[],[["error",4],["result",4]]]],[11,"list_secrets","","List all stored secrets",4,[[],[["result",4],["vec",3],["error",4]]]],[11,"delete_secret","","Delete a specific secret store",4,[[],[["error",4],["result",4]]]],[11,"read_secret","","Read a key/value pair from a given secret store.",4,[[],[["result",4],["readresponse",3],["error",4]]]],[11,"create_ed25519_key","","",4,[[],[["error",4],["result",4]]]],[11,"delete_key","","",4,[[],[["error",4],["result",4]]]],[11,"export_ed25519_key","","",4,[[["option",4]],[["result",4],["ed25519privatekey",3],["error",4]]]],[11,"import_ed25519_key","","",4,[[["ed25519privatekey",3]],[["error",4],["result",4]]]],[11,"list_keys","","",4,[[],[["result",4],["vec",3],["error",4]]]],[11,"read_ed25519_key","","",4,[[],[["result",4],["error",4],["vec",3]]]],[11,"rotate_key","","",4,[[],[["error",4],["result",4]]]],[11,"trim_key_versions","","Trims the number of key versions held in vault storage.…",4,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"sign_ed25519","","",4,[[["option",4]],[["result",4],["error",4],["ed25519signature",3]]]],[11,"write_secret","","Create or update a key/value pair in a given secret store.",4,[[["value",4],["option",4]],[["result",4],["error",4]]]],[11,"unsealed","","Returns whether or not the vault is unsealed (can be read…",4,[[],[["result",4],["error",4]]]],[11,"new","","",5,[[["ed25519privatekey",3]]]],[11,"new","","",0,[[["string",3]]]],[11,"new","","",6,[[]]],[11,"add_policy","","",6,[[["vec",3],["capability",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"test_only_hash","","",8,[[],["hashvalue",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","diem_vault_client::dev","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diem_vault_client","",1,[[["decodeerror",4]]]],[11,"from","","",1,[[["cryptomaterialerror",4]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[["response",3]]]],[11,"from","","",1,[[["error",3]]]],[11,"clone","","",6,[[],["policy",3]]],[11,"clone","","",11,[[],["policypaths",3]]],[11,"clone","","",12,[[],["pathpolicy",3]]],[11,"clone","","",2,[[],["capability",4]]],[11,"default","","",7,[[],["keybackuppolicy",3]]],[11,"default","","",8,[[],["keybackupinfo",3]]],[11,"default","","",9,[[],["backupinfo",3]]],[11,"default","","",6,[[],["policy",3]]],[11,"default","","",11,[[],["policypaths",3]]],[11,"default","","",12,[[],["pathpolicy",3]]],[11,"eq","","",1,[[["error",4]]]],[11,"ne","","",1,[[["error",4]]]],[11,"eq","","",5,[[["keybackup",3]]]],[11,"ne","","",5,[[["keybackup",3]]]],[11,"eq","","",7,[[["keybackuppolicy",3]]]],[11,"ne","","",7,[[["keybackuppolicy",3]]]],[11,"eq","","",8,[[["keybackupinfo",3]]]],[11,"ne","","",8,[[["keybackupinfo",3]]]],[11,"eq","","",9,[[["backupinfo",3]]]],[11,"ne","","",9,[[["backupinfo",3]]]],[11,"eq","","",10,[[["readkey",3]]]],[11,"ne","","",10,[[["readkey",3]]]],[11,"eq","","",6,[[["policy",3]]]],[11,"ne","","",6,[[["policy",3]]]],[11,"eq","","",11,[[["policypaths",3]]]],[11,"ne","","",11,[[["policypaths",3]]]],[11,"eq","","",12,[[["pathpolicy",3]]]],[11,"ne","","",12,[[["pathpolicy",3]]]],[11,"eq","","",2,[[["capability",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"try_from","","",6,[[["value",4]],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]]],"p":[[3,"ReadResponse"],[4,"Error"],[4,"Capability"],[3,"VaultRunner"],[3,"Client"],[3,"KeyBackup"],[3,"Policy"],[3,"KeyBackupPolicy"],[3,"KeyBackupInfo"],[3,"BackupInfo"],[3,"ReadKey"],[3,"PolicyPaths"],[3,"PathPolicy"]]},\
"diem_vm":{"doc":"The VM runtimeTransaction flowThis is the path taken to…","i":[[5,"txn_effects_to_writeset_and_events","diem_vm","",null,[[["transactioneffects",3]],[["vmstatus",4],["result",4]]]],[0,"data_cache","","Scratchpad for on chain values during the execution.",null,null],[3,"StateViewCache","diem_vm::data_cache","A local cache for a given a `StateView`. The cache is…",null,null],[3,"RemoteStorage","","",null,null],[11,"new","","Create a `StateViewCache` give a `StateView`. Hold updates…",0,[[["stateview",8]]]],[11,"new","","",1,[[]]],[11,"get","","",1,[[["accesspath",3]],[["option",4],["partialvmresult",6]]]],[0,"transaction_metadata","diem_vm","",null,null],[3,"TransactionMetadata","diem_vm::transaction_metadata","",null,null],[12,"sender","","",2,null],[12,"authentication_key_preimage","","",2,null],[12,"sequence_number","","",2,null],[12,"max_gas_amount","","",2,null],[12,"gas_unit_price","","",2,null],[12,"transaction_size","","",2,null],[12,"expiration_timestamp_secs","","",2,null],[12,"chain_id","","",2,null],[12,"script_hash","","",2,null],[11,"new","","",2,[[["signedtransaction",3]]]],[11,"max_gas_amount","","",2,[[],[["gasunits",3],["gascarrier",6]]]],[11,"gas_unit_price","","",2,[[],[["gascarrier",6],["gasprice",3]]]],[11,"sender","","",2,[[],["accountaddress",3]]],[11,"authentication_key_preimage","","",2,[[]]],[11,"sequence_number","","",2,[[]]],[11,"transaction_size","","",2,[[],[["abstractmemorysize",3],["gascarrier",6]]]],[11,"expiration_timestamp_secs","","",2,[[]]],[11,"chain_id","","",2,[[],["chainid",3]]],[0,"diem_transaction_executor","diem_vm","",null,null],[3,"DiemVM","diem_vm::diem_transaction_executor","",null,null],[11,"new","","",3,[[]]],[11,"internals","","",3,[[],["diemvminternals",3]]],[11,"failed_transaction_cleanup","","Generates a transaction output for a transaction that…",3,[[["gasunits",3],["gascarrier",6],["transactionmetadata",3],["costtable",3],["identstr",3],["stateviewcache",3],["vmstatus",4]],["transactionoutput",3]]],[11,"execute_writeset_transaction","","",3,[[["transactionmetadata",3],["stateviewcache",3],["writesetpayload",4]],[["result",4],["vmstatus",4]]]],[11,"execute_block_and_keep_vm_status","","Alternate form of \'execute_block\' that keeps the vm_status…",3,[[["transaction",4],["stateview",8],["vec",3]],[["result",4],["vec",3],["vmstatus",4]]]],[0,"diem_transaction_validator","diem_vm","",null,null],[3,"DiemVMValidator","diem_vm::diem_transaction_validator","",null,null],[11,"new","","",4,[[]]],[11,"init_with_config","","",4,[[["diemversion",3],["vmconfig",3],["vmpublishingoption",3]]]],[0,"logging","diem_vm","",null,null],[3,"AdapterLogSchema","diem_vm::logging","",null,null],[4,"LogEntry","","",null,null],[13,"Execution","","",5,null],[13,"Validation","","",5,null],[13,"Miscellaneous","","",5,null],[11,"name","","",6,[[["logentry",4]]]],[11,"block_id","","",6,[[["hashvalue",3]]]],[11,"first_version","","",6,[[["version",6]]]],[11,"base_version","","",6,[[["version",6]]]],[11,"txn_id","","",6,[[]]],[11,"new","","",6,[[["stateviewid",4]]]],[0,"system_module_names","diem_vm","Names of modules, functions, and types used by Diem System.",null,null],[7,"DIEM_BLOCK_MODULE","diem_vm::system_module_names","The ModuleId for the diem writeset manager module The…",null,null],[7,"SCRIPT_PROLOGUE_NAME","","",null,null],[7,"MODULE_PROLOGUE_NAME","","",null,null],[7,"WRITESET_PROLOGUE_NAME","","",null,null],[7,"WRITESET_EPILOGUE_NAME","","",null,null],[7,"USER_EPILOGUE_NAME","","",null,null],[7,"BLOCK_PROLOGUE","","",null,null],[8,"VMValidator","diem_vm","This trait describes the VM\'s validation interfaces.",null,null],[10,"validate_transaction","","Executes the prologue of the Diem Account and verifies…",7,[[["signedtransaction",3],["stateview",8]],["vmvalidatorresult",3]]],[8,"VMExecutor","","This trait describes the VM\'s execution interface.",null,null],[10,"execute_block","","Executes a block of transactions and returns output for…",8,[[["transaction",4],["stateview",8],["vec",3]],[["result",4],["vec",3],["vmstatus",4]]]],[11,"from","diem_vm::data_cache","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","diem_vm::transaction_metadata","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","diem_vm::diem_transaction_executor","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diem_vm::diem_transaction_validator","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","diem_vm::logging","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"validate_transaction","diem_vm::diem_transaction_validator","Determine if a transaction is valid. Will return `None` if…",4,[[["signedtransaction",3],["stateview",8]],["vmvalidatorresult",3]]],[11,"execute_block","diem_vm::diem_transaction_executor","Execute a block of `transactions`. The output vector will…",3,[[["transaction",4],["stateview",8],["vec",3]],[["result",4],["vec",3],["vmstatus",4]]]],[11,"clone","diem_vm::diem_transaction_validator","",4,[[],["diemvmvalidator",3]]],[11,"clone","diem_vm::logging","",6,[[],["adapterlogschema",3]]],[11,"clone","","",5,[[],["logentry",4]]],[11,"default","diem_vm::transaction_metadata","",2,[[]]],[11,"serialize","diem_vm::logging","",5,[[],["result",4]]],[11,"fetch_config","diem_vm::data_cache","",0,[[["accesspath",3]],[["vec",3],["option",4]]]],[11,"fetch_config","","",1,[[["accesspath",3]],[["vec",3],["option",4]]]],[11,"visit","diem_vm::logging","",6,[[["visitor",8]]]],[11,"get","diem_vm::data_cache","",0,[[["accesspath",3]],[["result",6],["option",4]]]],[11,"multi_get","","",0,[[],[["result",6],["vec",3]]]],[11,"is_genesis","","",0,[[]]],[11,"id","","",0,[[],["stateviewid",4]]],[11,"get_module","","",0,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[11,"get_resource","","",0,[[["structtag",3],["accountaddress",3]],[["option",4],["partialvmresult",6]]]],[11,"get_module","","",1,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[11,"get_resource","","",1,[[["structtag",3],["accountaddress",3]],[["option",4],["partialvmresult",6]]]],[11,"alert","diem_vm::logging","",6,[[]]]],"p":[[3,"StateViewCache"],[3,"RemoteStorage"],[3,"TransactionMetadata"],[3,"DiemVM"],[3,"DiemVMValidator"],[4,"LogEntry"],[3,"AdapterLogSchema"],[8,"VMValidator"],[8,"VMExecutor"]]},\
"diem_wallet":{"doc":"","i":[[3,"Mnemonic","diem_wallet","Mnemonic seed for deterministic key derivation based on…",null,null],[3,"WalletLibrary","","WalletLibrary contains all the information needed to…",null,null],[0,"io_utils","","Utils for read/write A module to generate, store and load…",null,null],[5,"recover","diem_wallet::io_utils","Recover wallet from the path specified.",null,[[],[["result",6],["walletlibrary",3]]]],[5,"write_recovery","","Write wallet seed to file.",null,[[["walletlibrary",3]],["result",6]]],[17,"DELIMITER","","Delimiter used to ser/deserialize account data.",null,null],[11,"from","diem_wallet","Generate mnemonic from string.",0,[[],[["result",6],["mnemonic",3]]]],[11,"mnemonic","","Generate mnemonic from entropy byte-array.",0,[[],[["result",6],["mnemonic",3]]]],[11,"write","","Write mnemonic to output_file_path.",0,[[["path",3]],["result",6]]],[11,"read","","Read mnemonic from input_file_path.",0,[[["path",3]],["result",6]]],[11,"new","","Constructor that generates a Mnemonic from OS randomness…",1,[[]]],[11,"new_from_mnemonic","","Constructor that instantiates a new WalletLibrary from…",1,[[["mnemonic",3]]]],[11,"mnemonic","","Function that returns the string representation of the…",1,[[],["string",3]]],[11,"write_recovery","","Function that writes the wallet Mnemonic to file NOTE:…",1,[[["path",3]],["result",6]]],[11,"recover","","Recover wallet from input_file_path",1,[[["path",3]],[["result",6],["walletlibrary",3]]]],[11,"key_leaf","","Get the current ChildNumber in u64 format",1,[[]]],[11,"generate_addresses","","Function that iterates from the current key_leaf until the…",1,[[],["result",6]]],[11,"new_address_at_child_number","","Function that allows to get the address of a particular…",1,[[["childnumber",3]],[["accountaddress",3],["result",6]]]],[11,"new_address","","Function that generates a new key and adds it to the…",1,[[],["result",6]]],[11,"get_addresses","","Returns a list of all addresses controlled by this wallet…",1,[[],[["result",6],["vec",3]]]],[11,"sign_txn","","Simple public function that allows to sign a Diem…",1,[[["rawtransaction",3]],[["signedtransaction",3],["result",6]]]],[11,"get_private_key","","Return private key for an address in the wallet",1,[[["accountaddress",3]],[["result",6],["ed25519privatekey",3]]]],[11,"get_authentication_key","","Return authentication key (AuthenticationKey) for an…",1,[[["accountaddress",3]],[["authenticationkey",3],["result",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"sign_txn","","",1,[[["rawtransaction",3]],[["result",6],["signedtransaction",3],["error",3]]]]],"p":[[3,"Mnemonic"],[3,"WalletLibrary"]]},\
"diem_workspace_hack":{"doc":"","i":[],"p":[]},\
"diem_writeset_generator":{"doc":"","i":[[3,"GenesisSession","diem_writeset_generator","",null,null],[5,"encode_custom_script","","",null,[[["accountaddress",3],["option",4]],["writesetpayload",4]]],[5,"encode_halt_network_payload","","",null,[[],["writesetpayload",4]]],[5,"encode_remove_validators_payload","","",null,[[["accountaddress",3],["vec",3]],["writesetpayload",4]]],[5,"create_release","","",null,[[["chainid",3],["string",3]],[["result",6],["writesetpayload",4]]]],[5,"verify_release","","",null,[[["chainid",3],["writesetpayload",4],["string",3]],["result",6]]],[5,"build_changeset","","",null,[[],["changeset",3]]],[5,"build_stdlib_upgrade_changeset","","",null,[[],["changeset",3]]],[0,"release_flow","","",null,null],[5,"create_release","diem_writeset_generator::release_flow","",null,[[["chainid",3],["string",3]],[["result",6],["writesetpayload",4]]]],[5,"verify_release","","",null,[[["chainid",3],["writesetpayload",4],["string",3]],["result",6]]],[0,"artifacts","","",null,null],[3,"ReleaseArtifact","diem_writeset_generator::release_flow::artifacts","Checkin the release artifact to a local file to make sure…",null,null],[12,"chain_id","","",0,null],[12,"version","","",0,null],[12,"stdlib_hash","","",0,null],[5,"save_release_artifact","","",null,[[["releaseartifact",3]],["result",6]]],[5,"load_artifact","","",null,[[["chainid",3]],[["releaseartifact",3],["result",6]]]],[5,"hash_for_modules","","Generate a unique hash for a list of modules",null,[[],[["hashvalue",3],["result",6]]]],[0,"test_utils","diem_writeset_generator::release_flow","",null,null],[5,"release_modules","diem_writeset_generator::release_flow::test_utils","",null,[[],[["compiledmodule",3],["vec",3]]]],[11,"exec_func","diem_writeset_generator","",1,[[["vec",3],["accountaddress",3],["typetag",4],["vec",3],["value",3]]]],[11,"exec_script","","",1,[[["accountaddress",3],["script",3]]]],[11,"set_diem_version","","",1,[[["version",6]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","diem_writeset_generator::release_flow::artifacts","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"clone","","",0,[[],["releaseartifact",3]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]]],"p":[[3,"ReleaseArtifact"],[3,"GenesisSession"]]},\
"diemdb":{"doc":"This crate provides [`DiemDB`] which represents physical…","i":[[3,"DiemDB","diemdb","This holds a handle to the underlying DB responsible for…",null,null],[5,"test_save_blocks_impl","","",null,[[["vec",3]]]],[0,"diemsum","","",null,null],[3,"Diemsum","diemdb::diemsum","",null,null],[11,"new","","",0,[[["clone",8],["asref",8],["path",3]],["result",6]]],[11,"get_startup_info","","",0,[[],[["startupinfo",3],["result",6]]]],[11,"get_committed_version","","",0,[[],[["version",6],["result",6]]]],[11,"scan_txn_by_version","","",0,[[["version",6]],[["vec",3],["result",6]]]],[11,"get_txn_by_version","","",0,[[["version",6]],[["result",6],["transaction",4]]]],[11,"get_account_state_by_version","","",0,[[["version",6],["accountaddress",3]],[["option",4],["result",6]]]],[11,"scan_events_by_seq","","",0,[[["eventkey",3]],[["vec",3],["result",6]]]],[11,"get_events_by_version","","",0,[[["version",6]],[["result",6],["vec",3]]]],[0,"test_helper","diemdb","This module provides reusable helpers in tests.",null,null],[5,"arb_blocks_to_commit_impl","diemdb::test_helper","This returns a `proptest` `Strategy` that yields an…",null,[[]]],[5,"arb_blocks_to_commit","","",null,[[]]],[5,"arb_mock_genesis","","",null,[[]]],[0,"backup","diemdb","",null,null],[0,"backup_handler","diemdb::backup","",null,null],[3,"BackupHandler","diemdb::backup::backup_handler","`BackupHandler` provides functionalities for DiemDB data…",null,null],[3,"DbState","","",null,null],[12,"epoch","","",1,null],[12,"committed_version","","",1,null],[12,"synced_version","","",1,null],[11,"get_transaction_iter","","Gets an iterator that yields a range of transactions.",2,[[["version",6]],["result",6]]],[11,"get_transaction_range_proof","","Gets the proof for a transaction chunk. N.B. the…",2,[[["version",6]],["result",6]]],[11,"get_account_iter","","Gets an iterator which can yield all accounts in the state…",2,[[["version",6]],[["result",6],["box",3]]]],[11,"get_account_state_range_proof","","Gets the proof that proves a range of accounts.",2,[[["hashvalue",3],["version",6]],[["result",6],["sparsemerklerangeproof",3]]]],[11,"get_db_state","","Gets the epoch, commited version, and synced version of…",2,[[],[["option",4],["result",6]]]],[11,"get_state_root_proof","","Gets the proof of the state root at specified version.…",2,[[["version",6]],["result",6]]],[11,"get_epoch_ending_ledger_info_iter","","",2,[[],["result",6]]],[0,"restore_handler","diemdb::backup","",null,null],[3,"RestoreHandler","diemdb::backup::restore_handler","Provides functionalities for DiemDB data restore.",null,null],[12,"diemdb","","",3,null],[11,"get_state_restore_receiver","","",3,[[["version",6],["hashvalue",3]],[["result",6],["jellyfishmerklerestore",3]]]],[11,"save_ledger_infos","","",3,[[],["result",6]]],[11,"confirm_or_save_frozen_subtrees","","",3,[[["leafcount",6]],["result",6]]],[11,"save_transactions","","",3,[[["version",6]],["result",6]]],[11,"get_tree_state","","",3,[[["leafcount",6]],[["treestate",3],["result",6]]]],[11,"get_next_expected_transaction_version","","",3,[[],[["version",6],["result",6]]]],[0,"errors","diemdb","This module defines error types used by `DiemDB`.",null,null],[4,"DiemDbError","diemdb::errors","This enum defines errors commonly used among `DiemDB` APIs.",null,null],[13,"NotFound","","A requested item is not found.",4,null],[13,"TooManyRequested","","Requested too many items.",4,null],[0,"schema","diemdb","This module defines representation of Diem core data…",null,null],[0,"fuzzing","diemdb::schema","",null,null],[5,"fuzz_decode","diemdb::schema::fuzzing","",null,[[]]],[8,"GetRestoreHandler","diemdb","",null,null],[10,"get_restore_handler","","Gets an instance of `RestoreHandler` for data restore…",5,[[],["restorehandler",3]]],[11,"open","","",6,[[["clone",8],["asref",8],["rocksdbconfig",3],["option",4],["path",3]],["result",6]]],[11,"open_as_secondary","","",6,[[["clone",8],["asref",8],["rocksdbconfig",3],["path",3]],["result",6]]],[11,"new_for_test","","This opens db in non-readonly mode, without the pruner.",6,[[["clone",8],["asref",8],["path",3]]]],[11,"get_backup_handler","","Gets an instance of `BackupHandler` for data backup purpose.",6,[[],["backuphandler",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","diemdb::diemsum","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","diemdb::backup::backup_handler","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","diemdb::backup::restore_handler","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diemdb::errors","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"clone","diemdb::backup::backup_handler","",2,[[],["backuphandler",3]]],[11,"clone","","",1,[[],["dbstate",3]]],[11,"clone","diemdb::backup::restore_handler","",3,[[],["restorehandler",3]]],[11,"fmt","diemdb::backup::backup_handler","",1,[[["formatter",3]],["result",6]]],[11,"fmt","diemdb::errors","",4,[[["formatter",3]],["result",6]]],[11,"fmt","diemdb","",6,[[["formatter",3]],["result",6]]],[11,"fmt","diemdb::backup::backup_handler","",1,[[["formatter",3]],["result",6]]],[11,"fmt","diemdb::errors","",4,[[["formatter",3]],["result",6]]],[11,"deserialize","diemdb::backup::backup_handler","",1,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"get_epoch_ending_ledger_infos","diemdb","",6,[[],[["result",6],["epochchangeproof",3]]]],[11,"get_latest_account_state","","",6,[[["accountaddress",3]],[["option",4],["result",6]]]],[11,"get_latest_ledger_info","","",6,[[],[["result",6],["ledgerinfowithsignatures",4]]]],[11,"get_txn_by_account","","Returns a transaction that is the `seq_num`-th one…",6,[[["version",6],["accountaddress",3]],[["option",4],["result",6]]]],[11,"get_transactions","","Gets a batch of transactions for the purpose of…",6,[[["version",6]],[["transactionlistwithproof",3],["result",6]]]],[11,"get_events","","",6,[[["eventkey",3],["order",4]],[["vec",3],["result",6]]]],[11,"get_events_with_proofs","","",6,[[["eventkey",3],["option",4],["order",4]],[["result",6],["vec",3]]]],[11,"get_epoch_ending_ledger_info","","Gets ledger info at specified version and ensures it\'s an…",6,[[],[["result",6],["ledgerinfowithsignatures",4]]]],[11,"get_state_proof_with_ledger_info","","",6,[[["ledgerinfowithsignatures",4]],["result",6]]],[11,"get_state_proof","","",6,[[],["result",6]]],[11,"get_account_state_with_proof","","",6,[[["version",6],["accountaddress",3]],[["accountstatewithproof",3],["result",6]]]],[11,"get_startup_info","","",6,[[],[["result",6],["option",4]]]],[11,"get_account_state_with_proof_by_version","","",6,[[["version",6],["accountaddress",3]],["result",6]]],[11,"get_latest_state_root","","",6,[[],["result",6]]],[11,"get_latest_tree_state","","",6,[[],[["treestate",3],["result",6]]]],[11,"get_block_timestamp","","",6,[[],["result",6]]],[11,"get_latest_transaction_info_option","","",6,[[],[["option",4],["result",6]]]],[11,"get_accumulator_root_hash","","",6,[[["version",6]],[["hashvalue",3],["result",6]]]],[11,"save_transactions","","`first_version` is the version of the first transaction in…",6,[[["version",6],["option",4],["ledgerinfowithsignatures",4]],["result",6]]]],"p":[[3,"Diemsum"],[3,"DbState"],[3,"BackupHandler"],[3,"RestoreHandler"],[4,"DiemDbError"],[8,"GetRestoreHandler"],[3,"DiemDB"]]},\
"disassembler":{"doc":"","i":[[0,"disassembler","disassembler","",null,null],[3,"DisassemblerOptions","disassembler::disassembler","Holds the various options that we support while…",null,null],[12,"only_public","","Only print public functions",0,null],[12,"print_code","","Print the bytecode for the instructions within the function.",0,null],[12,"print_basic_blocks","","Print the basic blocks of the bytecode.",0,null],[12,"print_locals","","Print the locals inside each function body.",0,null],[3,"Disassembler","","",null,null],[11,"new","","",0,[[]]],[11,"new","","",1,[[["sourcemapping",3],["disassembleroptions",3]]]],[11,"from_module","","",1,[[["compiledmodule",3]],["result",6]]],[11,"add_coverage_map","","",1,[[["execcoveragemap",3]]]],[11,"disassemble_function_def","","",1,[[["functiondefinitionindex",3]],[["result",6],["string",3]]]],[11,"disassemble_struct_def","","",1,[[["structdefinitionindex",3]],[["result",6],["string",3]]]],[11,"disassemble","","",1,[[],[["result",6],["string",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"default","","",0,[[],["disassembleroptions",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"DisassemblerOptions"],[3,"Disassembler"]]},\
"docgen":{"doc":"","i":[[3,"DocgenOptions","docgen","Options passed into the documentation generator.",null,null],[12,"section_level_start","","The level where we start sectioning. Often markdown…",0,null],[12,"include_private_fun","","Whether to include private functions in the generated docs.",0,null],[12,"include_specs","","Whether to include specifications in the generated docs.",0,null],[12,"specs_inlined","","Whether to put specifications in the same section as a…",0,null],[12,"include_impl","","Whether to include Move implementations.",0,null],[12,"toc_depth","","Max depth to which sections are displayed in…",0,null],[12,"collapsed_sections","","Whether to use collapsed sections () for impl and specs",0,null],[12,"output_directory","","In which directory to store output.",0,null],[12,"doc_path","","In which directories to look for references.",0,null],[12,"root_doc_templates","","A list of paths to files containing templates for root…",0,null],[12,"references_file","","An optional file containing reference definitions. The…",0,null],[12,"include_dep_diagrams","","Whether to include dependency diagrams in the generated…",0,null],[12,"include_call_diagrams","","Whether to include call diagrams in the generated docs.",0,null],[3,"Docgen","","The documentation generator.",null,null],[11,"new","","Creates a new documentation generator.",1,[[["globalenv",3],["docgenoptions",3]]]],[11,"gen","","Generate document contents, returning pairs of output file…",1,[[],["vec",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"clone","","",0,[[],["docgenoptions",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"DocgenOptions"],[3,"Docgen"]]},\
"errmapgen":{"doc":"","i":[[3,"ErrmapOptions","errmapgen","",null,null],[12,"error_prefix","","The constant prefix that determines if a constant is an…",0,null],[12,"error_category_module","","The module ID of the error category module",0,null],[12,"output_file","","In which file to store the output",0,null],[3,"ErrorDescription","","",null,null],[12,"code_name","","The constant name of error e.g., ECANT_PAY_DEPOSIT",1,null],[12,"code_description","","The code description. This is generated from the doc…",1,null],[3,"ErrorContext","","",null,null],[12,"category","","The error category e.g., INVALID_ARGUMENT",2,null],[12,"reason","","The error reason e.g., ECANT_PAY_DEPOSIT",2,null],[3,"ErrorMapping","","",null,null],[12,"error_categories","","The set of error categories and their descriptions",3,null],[12,"module_error_maps","","The set of modules, and the module-specific errors",3,null],[3,"ErrmapGen","","",null,null],[11,"add_error_category","","",3,[[["errordescription",3]],["result",6]]],[11,"add_module_error","","",3,[[["moduleid",3],["errordescription",3]],["result",6]]],[11,"from_file","","",3,[[["asref",8],["path",3]]]],[11,"to_file","","",3,[[["asref",8],["path",3]]]],[11,"get_explanation","","",3,[[["moduleid",3]],[["option",4],["errorcontext",3]]]],[11,"new","","",4,[[["errmapoptions",3],["globalenv",3]]]],[11,"save_result","","",4,[[]]],[11,"gen","","",4,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"clone","","",0,[[],["errmapoptions",3]]],[11,"clone","","",1,[[],["errordescription",3]]],[11,"clone","","",2,[[],["errorcontext",3]]],[11,"clone","","",3,[[],["errormapping",3]]],[11,"default","","",0,[[]]],[11,"default","","",3,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]]],"p":[[3,"ErrmapOptions"],[3,"ErrorDescription"],[3,"ErrorContext"],[3,"ErrorMapping"],[3,"ErrmapGen"]]},\
"execution_correctness":{"doc":"","i":[[3,"ExecutionCorrectnessManager","execution_correctness","",null,null],[3,"Process","","",null,null],[11,"new","","",0,[[["nodeconfig",3]]]],[11,"new_local","","",0,[[["socketaddr",4],["ed25519privatekey",3],["option",4]]]],[11,"new_process","","",0,[[["socketaddr",4]]]],[11,"new_serializer","","",0,[[["socketaddr",4],["ed25519privatekey",3],["option",4]]]],[11,"new_thread","","",0,[[["socketaddr",4],["ed25519privatekey",3],["option",4]]]],[11,"client","","",0,[[],[["box",3],["executioncorrectness",8]]]],[11,"new","","",1,[[["nodeconfig",3]]]],[11,"start","","",1,[[]]],[8,"ExecutionCorrectness","","Interface for ExecutionCorrectness. It is basically the…",null,null],[10,"committed_block_id","","",2,[[],[["hashvalue",3],["result",4],["error",4]]]],[10,"reset","","",2,[[],[["result",4],["error",4]]]],[10,"execute_block","","Executes a block.",2,[[["block",3],["hashvalue",3]],[["error",4],["result",4],["statecomputeresult",3]]]],[10,"commit_blocks","","",2,[[["vec",3],["hashvalue",3],["ledgerinfowithsignatures",4]],[["result",4],["error",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]]],"p":[[3,"ExecutionCorrectnessManager"],[3,"Process"],[8,"ExecutionCorrectness"]]},\
"executor":{"doc":"","i":[[3,"Executor","executor","`Executor` implements all functionalities the execution…",null,null],[5,"process_write_set","","For all accounts modified by this transaction, find the…",null,[[["transaction",4],["writeset",3],["hashmap",3],["proofreader",3],["sparsemerkletree",3]],["result",6]]],[0,"fuzzing","","",null,null],[3,"FakeVM","executor::fuzzing","A fake VM implementing VMExecutor",null,null],[3,"FakeDb","","A fake database implementing DbReader and DbWriter",null,null],[5,"fuzz_execute_and_commit_chunk","","",null,[[["transactionlistwithproof",3],["ledgerinfowithsignatures",4]]]],[5,"fuzz_execute_and_commit_blocks","","",null,[[["ledgerinfowithsignatures",4],["vec",3]]]],[0,"db_bootstrapper","executor","",null,null],[3,"GenesisCommitter","executor::db_bootstrapper","",null,null],[5,"generate_waypoint","","",null,[[["transaction",4],["dbreaderwriter",3]],[["result",6],["waypoint",3]]]],[5,"maybe_bootstrap","","If current version + 1 != waypoint.version(), return…",null,[[["transaction",4],["waypoint",3],["dbreaderwriter",3]],["result",6]]],[5,"calculate_genesis","","",null,[[["treestate",3],["transaction",4],["dbreaderwriter",3]],[["result",6],["genesiscommitter",3]]]],[11,"new","","",0,[[["ledgerinfowithsignatures",4],["executor",3]],["result",6]]],[11,"waypoint","","",0,[[],["waypoint",3]]],[11,"commit","","",0,[[],["result",6]]],[11,"committed_block_id","executor","",1,[[],["hashvalue",3]]],[11,"new","","Constructs an `Executor`.",1,[[["dbreaderwriter",3]]]],[11,"new_on_unbootstrapped_db","","",1,[[["dbreaderwriter",3],["treestate",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","executor::fuzzing","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","executor::db_bootstrapper","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"execute_block","executor::fuzzing","",2,[[["vec",3],["transaction",4],["stateview",8]],[["vmstatus",4],["vec",3],["result",6]]]],[11,"execute_and_commit_chunk","executor","",1,[[["transactionlistwithproof",3],["ledgerinfowithsignatures",4],["option",4]],[["result",6],["vec",3]]]],[11,"committed_block_id","","",1,[[],[["hashvalue",3],["error",4],["result",6]]]],[11,"reset","","",1,[[],[["error",4],["result",6]]]],[11,"execute_block","","",1,[[["hashvalue",3]],[["statecomputeresult",3],["result",6],["error",4]]]],[11,"commit_blocks","","",1,[[["vec",3],["hashvalue",3],["ledgerinfowithsignatures",4]],[["error",4],["result",6]]]],[11,"replay_chunk","","",1,[[["version",6],["vec",3],["vec",3],["transactioninfo",3],["transaction",4]],["result",6]]],[11,"expecting_version","","",1,[[],["version",6]]],[11,"get_block_timestamp","executor::fuzzing","",3,[[],["result",6]]],[11,"get_epoch_ending_ledger_infos","","",3,[[],[["result",6],["epochchangeproof",3]]]],[11,"get_transactions","","",3,[[["version",6]],[["transactionlistwithproof",3],["result",6]]]],[11,"get_events","","",3,[[["order",4],["eventkey",3]],[["result",6],["vec",3]]]],[11,"get_events_with_proofs","","",3,[[["order",4],["option",4],["eventkey",3]],[["result",6],["vec",3]]]],[11,"get_latest_account_state","","",3,[[["accountaddress",3]],[["option",4],["result",6]]]],[11,"get_latest_ledger_info","","",3,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[11,"get_latest_version","","",3,[[],[["version",6],["result",6]]]],[11,"get_latest_commit_metadata","","",3,[[],["result",6]]],[11,"get_startup_info","","",3,[[],[["option",4],["result",6]]]],[11,"get_txn_by_account","","",3,[[["version",6],["accountaddress",3]],[["option",4],["result",6]]]],[11,"get_state_proof_with_ledger_info","","",3,[[["ledgerinfowithsignatures",4]],["result",6]]],[11,"get_state_proof","","",3,[[],["result",6]]],[11,"get_account_state_with_proof","","",3,[[["version",6],["accountaddress",3]],[["result",6],["accountstatewithproof",3]]]],[11,"get_account_state_with_proof_by_version","","",3,[[["version",6],["accountaddress",3]],["result",6]]],[11,"get_latest_state_root","","",3,[[],["result",6]]],[11,"get_latest_tree_state","","",3,[[],[["treestate",3],["result",6]]]],[11,"get_epoch_ending_ledger_info","","",3,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[11,"save_transactions","","",3,[[["version",6],["option",4],["ledgerinfowithsignatures",4]],["result",6]]]],"p":[[3,"GenesisCommitter"],[3,"Executor"],[3,"FakeVM"],[3,"FakeDb"]]},\
"executor_benchmark":{"doc":"","i":[[5,"run_benchmark","executor_benchmark","Runs the benchmark with given parameters.",null,[[["option",4],["pathbuf",3]]]]],"p":[]},\
"executor_test_helpers":{"doc":"","i":[[5,"bootstrap_genesis","executor_test_helpers","Helper function for test to blindly bootstrap without…",null,[[["transaction",4],["dbreaderwriter",3]],[["waypoint",3],["result",6]]]],[5,"start_storage_service","","",null,[[]]],[5,"gen_block_id","","",null,[[],["hashvalue",3]]],[5,"gen_ledger_info_with_sigs","","",null,[[["statecomputeresult",3],["validatorsigner",3],["vec",3],["hashvalue",3]],["ledgerinfowithsignatures",4]]],[5,"extract_signer","","",null,[[["nodeconfig",3]],["validatorsigner",3]]],[5,"gen_block_metadata","","",null,[[["accountaddress",3]],["blockmetadata",3]]],[5,"get_test_signed_transaction","","",null,[[["option",4],["accountaddress",3],["ed25519privatekey",3],["script",3],["ed25519publickey",3]],["transaction",4]]],[0,"integration_test_impl","","",null,null],[5,"test_execution_with_storage_impl","executor_test_helpers::integration_test_impl","",null,[[],[["diemdb",3],["arc",3]]]],[5,"create_db_and_executor","","",null,[[["path",3],["asref",8],["transaction",4]]]],[5,"verify_account_balance","","",null,[[["accountstatewithproof",3]],["result",6]]],[5,"verify_transactions","","",null,[[["transactionlistwithproof",3]],["result",6]]],[5,"verify_committed_txn_status","","",null,[[["transaction",4],["option",4],["transactionwithproof",3]],["result",6]]]],"p":[]},\
"executor_types":{"doc":"","i":[[3,"StateComputeResult","executor_types","A structure that summarizes the result of the execution…",null,null],[3,"ExecutedTrees","","A wrapper of the in-memory state sparse merkle tree and…",null,null],[3,"ProofReader","","",null,null],[4,"Error","","Different reasons for proposal rejection",null,null],[13,"BlockNotFound","","",0,null],[13,"InternalError","","",0,null],[12,"error","executor_types::Error","",1,null],[13,"SerializationError","executor_types","",0,null],[8,"ChunkExecutor","","",null,null],[10,"execute_and_commit_chunk","","Verifies the transactions based on the provided proofs and…",2,[[["ledgerinfowithsignatures",4],["transactionlistwithproof",3],["option",4]],[["result",6],["vec",3]]]],[8,"BlockExecutor","","",null,null],[10,"committed_block_id","","Get the latest committed block id",3,[[],[["error",4],["result",6],["hashvalue",3]]]],[10,"reset","","Reset the internal state including cache with newly…",3,[[],[["result",6],["error",4]]]],[10,"execute_block","","Executes a block.",3,[[["hashvalue",3]],[["statecomputeresult",3],["result",6],["error",4]]]],[10,"commit_blocks","","Saves eligible blocks to persistent storage. If we have…",3,[[["ledgerinfowithsignatures",4],["hashvalue",3],["vec",3]],[["result",6],["error",4]]]],[8,"TransactionReplayer","","",null,null],[10,"replay_chunk","","",4,[[["transaction",4],["vec",3],["version",6],["transactioninfo",3],["vec",3]],["result",6]]],[10,"expecting_version","","",4,[[],["version",6]]],[11,"new","","",5,[[["hashvalue",3],["epochstate",3],["vec",3],["option",4],["transactionstatus",4],["vec",3]]]],[11,"version","","",5,[[],["version",6]]],[11,"root_hash","","",5,[[],["hashvalue",3]]],[11,"compute_status","","",5,[[],["vec",3]]],[11,"epoch_state","","",5,[[],["option",4]]],[11,"extension_proof","","",5,[[],[["transactionaccumulatorhasher",3],["accumulatorextensionproof",3]]]],[11,"transaction_info_hashes","","",5,[[],["vec",3]]],[11,"num_leaves","","",5,[[]]],[11,"frozen_subtree_roots","","",5,[[],["vec",3]]],[11,"parent_num_leaves","","",5,[[]]],[11,"parent_frozen_subtree_roots","","",5,[[],["vec",3]]],[11,"has_reconfiguration","","",5,[[]]],[11,"signature","","",5,[[],["option",4]]],[11,"set_signature","","",5,[[["ed25519signature",3]]]],[11,"new_copy","","",6,[[["inmemoryaccumulator",3],["sparsemerkletree",3],["arc",3],["arc",3]]]],[11,"state_tree","","",6,[[],["arc",3]]],[11,"txn_accumulator","","",6,[[],["arc",3]]],[11,"version","","",6,[[],[["option",4],["version",6]]]],[11,"state_id","","",6,[[],["hashvalue",3]]],[11,"state_root","","",6,[[],["hashvalue",3]]],[11,"new","","",6,[[["hashvalue",3],["vec",3]],["executedtrees",3]]],[11,"new_empty","","",6,[[],["executedtrees",3]]],[11,"new","","",7,[[["hashvalue",3],["sparsemerkleproof",3],["hashmap",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",6,[[["treestate",3]]]],[11,"clone","","",5,[[],["statecomputeresult",3]]],[11,"clone","","",6,[[],["executedtrees",3]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"eq","","",5,[[["statecomputeresult",3]]]],[11,"ne","","",5,[[["statecomputeresult",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"get_proof","","",7,[[["hashvalue",3]],[["sparsemerkleproof",3],["option",4]]]]],"p":[[4,"Error"],[13,"InternalError"],[8,"ChunkExecutor"],[8,"BlockExecutor"],[8,"TransactionReplayer"],[3,"StateComputeResult"],[3,"ExecutedTrees"],[3,"ProofReader"]]},\
"functional_tests":{"doc":"","i":[[0,"checker","functional_tests","",null,null],[0,"directives","functional_tests::checker","",null,null],[4,"Directive","functional_tests::checker::directives","Specification of an expected text pattern in the output.",null,null],[13,"Check","","",0,null],[13,"Not","","",0,null],[11,"is_positive","","Returns if the directive is a positive pattern.",0,[[]]],[11,"is_negative","","Returns if the directive is a negative pattern.",0,[[]]],[11,"pattern_str","","Returns the pattern of the directive.",0,[[]]],[11,"parse_line","","Parses the line and extracts one or more directives from it.",0,[[],[["result",6],["vec",3]]]],[0,"matcher","functional_tests::checker","This module implements a matcher that checks if an…",null,null],[3,"Match","functional_tests::checker::matcher","A single match consisting of the index of the log entry,…",null,null],[12,"pat_id","","",1,null],[12,"entry_id","","",1,null],[12,"start","","",1,null],[12,"end","","",1,null],[3,"MatchResult","","The result of matching the directives against the…",null,null],[12,"status","","",2,null],[12,"text","","",2,null],[12,"matches","","",2,null],[4,"MatchError","","A match error.",null,null],[13,"NegativeMatch","","",3,null],[13,"UnmatchedDirectives","","",3,null],[13,"UnmatchedErrors","","",3,null],[4,"MatchStatus","","The status of a match. Can be either success or failure…",null,null],[13,"Success","","",4,null],[13,"Failure","","",4,null],[5,"match_output","","Matches the directives against the evaluation log.",null,[[["evaluationlog",3]],["matchresult",3]]],[11,"is_success","","",4,[[]]],[11,"is_failure","","",4,[[]]],[11,"is_success","","",2,[[]]],[11,"is_failure","","",2,[[]]],[0,"common","functional_tests","",null,null],[3,"Sp","functional_tests::common","Wrapper of an inner object with start and end source…",null,null],[12,"inner","","",5,null],[12,"start","","",5,null],[12,"end","","",5,null],[3,"LineSp","","Wrapper of an inner object with line, start and end source…",null,null],[12,"inner","","",6,null],[12,"line","","",6,null],[12,"start","","",6,null],[12,"end","","",6,null],[11,"new","","",5,[[]]],[11,"into_inner","","",5,[[]]],[11,"as_inner","","",5,[[]]],[11,"map","","",5,[[],["sp",3]]],[11,"into_line_sp","","",5,[[],["linesp",3]]],[11,"new","","",6,[[]]],[11,"as_inner","","",6,[[]]],[11,"map","","",6,[[],["linesp",3]]],[0,"compiler","functional_tests","",null,null],[4,"ScriptOrModule","functional_tests::compiler","",null,null],[13,"Script","","",7,null],[13,"Module","","",7,null],[8,"Compiler","","",null,null],[10,"compile","","Compile a transaction script or module.",8,[[["fnmut",8],["accountaddress",3]],[["scriptormodule",4],["result",6]]]],[10,"use_compiled_genesis","","",8,[[]]],[0,"config","functional_tests","",null,null],[0,"block_metadata","functional_tests::config","",null,null],[4,"Proposer","functional_tests::config::block_metadata","",null,null],[13,"Account","","",9,null],[13,"Address","","",9,null],[4,"Entry","","",null,null],[13,"Proposer","","",10,null],[13,"Timestamp","","",10,null],[5,"is_new_block","","Checks whether a line denotes the start of a new…",null,[[]]],[5,"build_block_metadata","","",null,[[["globalconfig",3]],[["result",6],["blockmetadata",3]]]],[11,"try_parse","","",10,[[],[["option",4],["result",6]]]],[0,"global","functional_tests::config","",null,null],[3,"Balance","functional_tests::config::global","",null,null],[12,"amount","","",11,null],[12,"currency_code","","",11,null],[3,"AccountDefinition","","Struct that specifies the initial setup of an account.",null,null],[12,"name","","Name of the account. The name is case insensitive.",12,null],[12,"balance","","The initial balance of the account.",12,null],[12,"sequence_number","","The initial sequence number of the account.",12,null],[12,"role","","Special role this account has in the system (if any)",12,null],[12,"account_type_specifier","","Specifier on what type of account this is. Default is VASP.",12,null],[3,"Config","","A table of options either shared by all transactions or…",null,null],[12,"accounts","","A map from account names to account data",13,null],[12,"genesis_accounts","","",13,null],[12,"addresses","","",13,null],[12,"validator_accounts","","The validator set after genesis",13,null],[12,"exp_mode","","",13,null],[4,"Role","","",null,null],[13,"Validator","","Means that the account is a current validator; its address…",14,null],[13,"Address","","Means that this this is only an account address (with…",14,null],[4,"Entry","","A raw entry extracted from the input. Used to build the…",null,null],[13,"AccountDefinition","","Defines an account that can be used in tests.",15,null],[11,"is_validator","","",15,[[]]],[11,"is_address","","",15,[[]]],[11,"build","","",13,[[],["result",6]]],[11,"get_account_for_name","","",13,[[],[["result",6],["account",3]]]],[0,"transaction","functional_tests::config","",null,null],[3,"Config","functional_tests::config::transaction","A table of options specific to one transaction, fine…",null,null],[12,"disabled_stages","","",16,null],[12,"sender","","",16,null],[12,"ty_args","","",16,null],[12,"args","","",16,null],[12,"max_gas","","",16,null],[12,"gas_price","","",16,null],[12,"gas_currency_code","","",16,null],[12,"sequence_number","","",16,null],[12,"expiration_timestamp_secs","","",16,null],[12,"execute_as","","",16,null],[12,"show_gas","","",16,null],[12,"show_writeset","","",16,null],[12,"show_events","","",16,null],[4,"Argument","","A partially parsed transaction argument.",null,null],[13,"AddressOf","","",17,null],[13,"SelfContained","","",17,null],[4,"Entry","","A raw entry extracted from the input. Used to build a…",null,null],[13,"DisableStages","","",18,null],[13,"Sender","","",18,null],[13,"TypeArguments","","",18,null],[13,"Arguments","","",18,null],[13,"MaxGas","","",18,null],[13,"GasPrice","","",18,null],[13,"GasCurrencyCode","","",18,null],[13,"SequenceNumber","","",18,null],[13,"ExpirationTime","","",18,null],[13,"ExecuteAs","","",18,null],[13,"ShowGas","","",18,null],[13,"ShowWriteSet","","",18,null],[13,"ShowEvents","","",18,null],[5,"is_new_transaction","","Checks whether a line denotes the start of a new…",null,[[]]],[11,"try_parse","","",18,[[],[["option",4],["result",6]]]],[11,"build","","Builds a transaction config table from raw entries.",16,[[["globalconfig",3]],["result",6]]],[11,"is_stage_disabled","","",16,[[["stage",4]]]],[0,"errors","functional_tests","",null,null],[14,"anyhow","functional_tests::errors","Construct an ad-hoc error from a string or existing…",null,null],[14,"bail","","Return early with an error.",null,null],[14,"format_err","","Construct an ad-hoc error from a string or existing…",null,null],[3,"Error","","The `Error` type, a wrapper around a dynamic error type.",null,null],[6,"Result","","`Result<T, Error>`",null,null],[4,"ErrorKind","","Defines all errors in this crate.",null,null],[13,"VMExecutionFailure","","",19,null],[13,"DiscardedTransaction","","",19,null],[13,"CheckerFailure","","",19,null],[13,"VerificationError","","",19,null],[13,"Other","","",19,null],[0,"evaluator","functional_tests","",null,null],[3,"Transaction","functional_tests::evaluator","A transaction to be evaluated by the testing infra.…",null,null],[12,"config","","",20,null],[12,"input","","",20,null],[3,"EvaluationLog","","A log consisting of outputs from all stages and the final…",null,null],[12,"outputs","","",21,null],[4,"Command","","Commands that drives the operation of DiemVM. Such as:",null,null],[13,"Transaction","","",22,null],[13,"BlockMetadata","","",22,null],[4,"Stage","","Indicates one step in the pipeline the given Move…",null,null],[13,"Compiler","","",23,null],[13,"Verifier","","",23,null],[13,"Serializer","","",23,null],[13,"Runtime","","",23,null],[4,"Status","","Evaluation status: success or failure.",null,null],[13,"Success","","",24,null],[13,"Failure","","",24,null],[4,"OutputType","","",null,null],[13,"CompiledModule","","",25,null],[13,"CompiledScript","","",25,null],[13,"CompilerLog","","",25,null],[13,"TransactionOutput","","",25,null],[4,"EvaluationOutput","","An entry in the `EvaluationLog`.",null,null],[13,"Transaction","","",26,null],[13,"Stage","","",26,null],[13,"Output","","",26,null],[13,"Error","","",26,null],[13,"Status","","",26,null],[13,"PlainMessage","","",26,null],[5,"verify_script","","Verify a script with its dependencies.",null,[[["compiledscript",3]],[["result",4],["compiledscript",3],["vmerror",3]]]],[5,"verify_module","","Verify a module with its dependencies.",null,[[["compiledmodule",3]],[["compiledmodule",3],["result",4],["vmerror",3]]]],[5,"eval_block_metadata","","",null,[[["blockmetadata",3],["evaluationlog",3],["fakeexecutor",3]],[["result",6],["status",4]]]],[5,"eval","","Feeds all given transactions through the pipeline and…",null,[[["compiler",8],["globalconfig",3]],[["evaluationlog",3],["result",6]]]],[6,"TransactionId","","",null,null],[11,"to_check_string","","",25,[[],["string",3]]],[11,"is_error","","",26,[[]]],[11,"to_string_for_matching","","",26,[[],["string",3]]],[11,"new","","",21,[[]]],[11,"get_failed_transactions","","",21,[[],["vec",3]]],[11,"to_text_for_matching","","",21,[[],[["vec",3],["string",3]]]],[11,"append","","",21,[[["evaluationoutput",4]]]],[0,"preprocessor","functional_tests","",null,null],[3,"RawTransactionInput","functional_tests::preprocessor","",null,null],[12,"config_entries","","",27,null],[12,"text","","",27,null],[4,"RawCommand","","",null,null],[13,"Transaction","","",28,null],[13,"BlockMetadata","","",28,null],[5,"substitute_addresses_and_auth_keys","","Substitutes the placeholders (account names in double…",null,[[["globalconfig",3]],["string",3]]],[5,"extract_global_config","","",null,[[],[["result",6],["globalconfig",3]]]],[5,"split_input","","Parses the input string into three parts: a global config,…",null,[[["globalconfig",3]],["result",6]]],[5,"build_transactions","","",null,[[["globalconfig",3]],[["result",6],["vec",3]]]],[0,"testsuite","functional_tests","",null,null],[5,"functional_tests","functional_tests::testsuite","",null,[[["compiler",8],["path",3]],["result",6]]],[17,"PRETTY","","",null,null],[17,"FILTER","","",null,null],[17,"UPDATE_BASELINE","","",null,null],[11,"from","functional_tests::checker::directives","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","functional_tests::checker::matcher","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","functional_tests::common","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"encode_hex","","",5,[[]]],[11,"encode_hex_upper","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"encode_hex","","",6,[[]]],[11,"encode_hex_upper","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","functional_tests::compiler","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","functional_tests::config::block_metadata","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","functional_tests::config::global","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","functional_tests::config::transaction","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","functional_tests::errors","",29,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","functional_tests::evaluator","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"equivalent","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"equivalent","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","functional_tests::preprocessor","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"drop","functional_tests::errors","",29,[[]]],[11,"from","","",29,[[],["error",3]]],[11,"deref","","",29,[[]]],[11,"as_ref","","",29,[[],["error",8]]],[11,"as_ref","","",29,[[],["error",8]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deref_mut","","",29,[[]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_ref","functional_tests::checker::directives","",0,[[],["directive",4]]],[11,"as_ref","functional_tests::common","",5,[[]]],[11,"as_ref","","",6,[[]]],[11,"clone","functional_tests::config::global","",11,[[],["balance",3]]],[11,"clone","functional_tests::errors","",19,[[],["errorkind",4]]],[11,"clone","functional_tests::evaluator","",23,[[],["stage",4]]],[11,"clone","","",24,[[],["status",4]]],[11,"clone","","",25,[[],["outputtype",4]]],[11,"default","","",21,[[],["evaluationlog",3]]],[11,"cmp","","",23,[[["stage",4]],["ordering",4]]],[11,"eq","functional_tests::checker::directives","",0,[[["directive",4]]]],[11,"ne","","",0,[[["directive",4]]]],[11,"eq","functional_tests::evaluator","",23,[[["stage",4]]]],[11,"eq","","",24,[[["status",4]]]],[11,"partial_cmp","","",23,[[["stage",4]],[["ordering",4],["option",4]]]],[11,"fmt","functional_tests::checker::directives","",0,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::checker::matcher","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::common","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::config::block_metadata","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::config::global","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::config::transaction","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::errors","",19,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::evaluator","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::errors","",19,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::evaluator","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"from_str","functional_tests::config::block_metadata","",10,[[],["result",6]]],[11,"from_str","functional_tests::config::global","",11,[[],["result",6]]],[11,"from_str","","",14,[[],["result",6]]],[11,"from_str","","",15,[[],["result",6]]],[11,"from_str","functional_tests::config::transaction","",18,[[],["result",6]]],[11,"from_str","functional_tests::evaluator","",23,[[],["result",6]]],[11,"new","functional_tests::errors","Create a new error object from any error type.",29,[[],["error",3]]],[11,"msg","","Create a new error object from a printable error message.",29,[[],["error",3]]],[11,"context","","Wrap the error value with additional context.",29,[[],["error",3]]],[11,"backtrace","","Get the backtrace for this Error.",29,[[],["backtrace",3]]],[11,"chain","","An iterator of the chain of source errors contained by…",29,[[],["chain",3]]],[11,"root_cause","","The lowest level cause of this error — this error\'s…",29,[[],["error",8]]],[11,"is","","Returns true if `E` is the type held by this error object.",29,[[]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",29,[[],[["result",4],["error",3]]]],[11,"downcast_ref","","Downcast this error object by reference.",29,[[],["option",4]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",29,[[],["option",4]]]],"p":[[4,"Directive"],[3,"Match"],[3,"MatchResult"],[4,"MatchError"],[4,"MatchStatus"],[3,"Sp"],[3,"LineSp"],[4,"ScriptOrModule"],[8,"Compiler"],[4,"Proposer"],[4,"Entry"],[3,"Balance"],[3,"AccountDefinition"],[3,"Config"],[4,"Role"],[4,"Entry"],[3,"Config"],[4,"Argument"],[4,"Entry"],[4,"ErrorKind"],[3,"Transaction"],[3,"EvaluationLog"],[4,"Command"],[4,"Stage"],[4,"Status"],[4,"OutputType"],[4,"EvaluationOutput"],[3,"RawTransactionInput"],[4,"RawCommand"],[3,"Error"]]},\
"generate_format":{"doc":"How and where to record the Serde format of interesting…","i":[[4,"Corpus","generate_format","A corpus of Rust types to trace, and optionally record on…",null,null],[13,"Diem","","",0,null],[13,"Consensus","","",0,null],[13,"Network","","",0,null],[13,"MoveABI","","",0,null],[5,"lint_bcs_format","","Verify that a Serde format is compatible with BCS and…",null,[[["containerformat",4]],["result",6]]],[11,"variants","","",0,[[]]],[11,"values","","All corpuses.",0,[[],[["corpus",4],["vec",3]]]],[11,"get_registry","","Compute the registry of formats.",0,[[],["registry",6]]],[11,"output_file","","Where to record this corpus on disk.",0,[[],["option",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"clone","","",0,[[],["corpus",4]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"from_str","","",0,[[],["result",4]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[]]]],"p":[[4,"Corpus"]]},\
"generate_key":{"doc":"","i":[[5,"generate_key","generate_key","",null,[[],["ed25519privatekey",3]]],[5,"generate_and_save_key","","",null,[[["asref",8],["path",3]],["ed25519privatekey",3]]],[5,"save_key","","",null,[[["path",3],["ed25519privatekey",3],["asref",8]],["ed25519privatekey",3]]],[5,"load_key","","",null,[[["asref",8],["path",3]],["ed25519privatekey",3]]]],"p":[]},\
"invalid_mutations":{"doc":"","i":[[0,"bounds","invalid_mutations","",null,null],[3,"ApplyCodeUnitBoundsContext","invalid_mutations::bounds","",null,null],[3,"CodeUnitBoundsMutation","","Represents a single mutation onto a code unit to make it…",null,null],[3,"OutOfBoundsMutation","","Represents a single mutation to a `CompiledModule` to…",null,null],[3,"ApplyOutOfBoundsContext","","",null,null],[4,"PointerKind","","Represents the number of pointers that exist out from a…",null,null],[13,"One","","Exactly one pointer out with this index kind as its…",0,null],[13,"Optional","","Zero or one pointer out with this index kind as its…",0,null],[13,"Star","","Zero or more pointers out with this index kind as its…",0,null],[11,"strategy","","",1,[[]]],[11,"new","","",2,[[["vec",3],["compiledmodulemut",3],["codeunitboundsmutation",3]]]],[11,"apply","","",2,[[],[["partialvmerror",3],["vec",3]]]],[7,"VALID_POINTER_SRCS","","",null,null],[11,"pointers_from","","A list of what pointers (indexes) exist out from a…",0,[[["indexkind",4]]]],[11,"to_index_kind","","",0,[[],["indexkind",4]]],[11,"strategy","","",3,[[]]],[11,"new","","",4,[[["compiledmodule",3],["vec",3],["outofboundsmutation",3]]]],[11,"apply","","",4,[[]]],[0,"signature","invalid_mutations","",null,null],[3,"SignatureRefMutation","invalid_mutations::signature","",null,null],[3,"FieldRefMutation","","Context for applying a list of `FieldRefMutation` instances.",null,null],[11,"new","","",5,[[["compiledmodulemut",3],["vec",3]]]],[11,"apply","","",5,[[]]],[11,"new","","",6,[[["compiledmodulemut",3],["vec",3]]]],[11,"apply","","",6,[[]]],[11,"from","invalid_mutations::bounds","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","invalid_mutations::signature","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"as_ref","invalid_mutations::bounds","",1,[[],["propindex",3]]],[11,"as_ref","","",3,[[],["propindex",3]]],[11,"clone","","",0,[[],["pointerkind",4]]],[11,"eq","","",0,[[["pointerkind",4]]]],[11,"ne","","",0,[[["pointerkind",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]]],"p":[[4,"PointerKind"],[3,"CodeUnitBoundsMutation"],[3,"ApplyCodeUnitBoundsContext"],[3,"OutOfBoundsMutation"],[3,"ApplyOutOfBoundsContext"],[3,"SignatureRefMutation"],[3,"FieldRefMutation"]]},\
"ir_to_bytecode":{"doc":"","i":[[0,"compiler","ir_to_bytecode","",null,null],[5,"compile_script","ir_to_bytecode::compiler","Compile a transaction script.",null,[[["option",4],["script",3],["accountaddress",3]],["result",6]]],[5,"compile_module","","Compile a module.",null,[[["moduledefinition",3],["accountaddress",3]],["result",6]]],[0,"errors","ir_to_bytecode","",null,null],[4,"InternalCompilerError","ir_to_bytecode::errors","",null,null],[13,"BoundsCheckErrors","","",0,null],[0,"parser","ir_to_bytecode","",null,null],[5,"is_permitted_printable_char","ir_to_bytecode::parser","Determine if a character is an allowed eye-visible…",null,[[]]],[5,"is_permitted_newline_char","","Determine if a character is a permitted newline character.",null,[[]]],[5,"is_permitted_char","","Determine if a character is permitted character.",null,[[]]],[5,"parse_script_or_module","","Given the raw input of a file, creates a `ScriptOrModule`…",null,[[],[["result",6],["scriptormodule",4]]]],[5,"parse_script","","Given the raw input of a file, creates a `Script` struct…",null,[[],[["script",3],["result",6]]]],[5,"parse_module","","Given the raw input of a file, creates a single…",null,[[],[["result",6],["moduledefinition",3]]]],[5,"parse_cmd_","","Given the raw input of a file, creates a single `Cmd_`…",null,[[["accountaddress",3]],[["cmd_",4],["result",6]]]],[11,"from","ir_to_bytecode::errors","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"clone","","",0,[[],["internalcompilererror",4]]],[11,"cmp","","",0,[[["internalcompilererror",4]],["ordering",4]]],[11,"eq","","",0,[[["internalcompilererror",4]]]],[11,"ne","","",0,[[["internalcompilererror",4]]]],[11,"partial_cmp","","",0,[[["internalcompilererror",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["internalcompilererror",4]]]],[11,"le","","",0,[[["internalcompilererror",4]]]],[11,"gt","","",0,[[["internalcompilererror",4]]]],[11,"ge","","",0,[[["internalcompilererror",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"InternalCompilerError"]]},\
"ir_to_bytecode_syntax":{"doc":"GrammarIdentifiers","i":[[0,"syntax","ir_to_bytecode_syntax","",null,null],[4,"ParseError","ir_to_bytecode_syntax::syntax","",null,null],[13,"InvalidToken","","",0,null],[12,"location","ir_to_bytecode_syntax::syntax::ParseError","",1,null],[13,"User","ir_to_bytecode_syntax::syntax","",0,null],[12,"error","ir_to_bytecode_syntax::syntax::ParseError","",2,null],[5,"parse_cmd_string","ir_to_bytecode_syntax::syntax","",null,[[],[["result",4],["cmd_",4],["parseerror",4]]]],[5,"parse_module_string","","",null,[[],[["parseerror",4],["moduledefinition",3],["result",4]]]],[5,"parse_script_string","","",null,[[],[["result",4],["script",3],["parseerror",4]]]],[5,"parse_script_or_module_string","","",null,[[],[["parseerror",4],["result",4],["scriptormodule",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","","",0,[[["error",3]]]],[11,"clone","","",0,[[],["parseerror",4]]],[11,"cmp","","",0,[[["parseerror",4]],["ordering",4]]],[11,"eq","","",0,[[["parseerror",4]]]],[11,"ne","","",0,[[["parseerror",4]]]],[11,"partial_cmp","","",0,[[["parseerror",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["parseerror",4]]]],[11,"le","","",0,[[["parseerror",4]]]],[11,"gt","","",0,[[["parseerror",4]]]],[11,"ge","","",0,[[["parseerror",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"ParseError"],[13,"InvalidToken"],[13,"User"]]},\
"language_benchmarks":{"doc":"","i":[[0,"move_vm","language_benchmarks","",null,null],[5,"bench","language_benchmarks::move_vm","Entry point for the bench, provide a function name to…",null,[[["criterion",3]]]],[0,"transactions","language_benchmarks","",null,null],[3,"TransactionBencher","language_benchmarks::transactions","Benchmarking support for transactions.",null,null],[18,"DEFAULT_NUM_ACCOUNTS","","The number of accounts created by default.",0,null],[18,"DEFAULT_NUM_TRANSACTIONS","","The number of transactions created by default.",0,null],[11,"new","","Creates a new transaction bencher with default settings.",0,[[]]],[11,"num_accounts","","Sets a custom number of accounts.",0,[[]]],[11,"num_transactions","","Sets a custom number of transactions.",0,[[]]],[11,"bench","","Runs the bencher.",0,[[["bencher",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"clone","","",0,[[],["transactionbencher",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"TransactionBencher"]]},\
"language_e2e_tests":{"doc":"Test infrastructure for the Diem VM.","i":[[5,"assert_status_eq","language_e2e_tests","",null,[[["keptvmstatus",4]]]],[5,"transaction_status_eq","","",null,[[["transactionstatus",4]]]],[0,"account","","Test infrastructure for modeling Diem accounts.",null,null],[3,"Account","language_e2e_tests::account","Details about a Diem account.",null,null],[12,"privkey","","The current private key for this account.",0,null],[12,"pubkey","","The current public key for this account.",0,null],[3,"TransactionBuilder","","",null,null],[12,"sender","","",1,null],[12,"sequence_number","","",1,null],[12,"program","","",1,null],[12,"max_gas_amount","","",1,null],[12,"gas_unit_price","","",1,null],[12,"gas_currency_code","","",1,null],[12,"chain_id","","",1,null],[12,"ttl","","",1,null],[3,"Balance","","Struct that represents an account balance resource for…",null,null],[3,"AccountRole","","Struct that represents an account type for testing.",null,null],[3,"EventHandleGenerator","","Struct that represents the event generator resource stored…",null,null],[3,"AccountData","","Represents an account along with initial state about it.",null,null],[3,"WithdrawCapability","","",null,null],[3,"KeyRotationCapability","","",null,null],[3,"FreezingBit","","",null,null],[4,"AccountRoleSpecifier","","",null,null],[13,"DiemRoot","","",2,null],[13,"TreasuryCompliance","","",2,null],[13,"DesignatedDealer","","",2,null],[13,"Validator","","",2,null],[13,"ValidatorOperator","","",2,null],[13,"ParentVASP","","",2,null],[13,"ChildVASP","","",2,null],[5,"xus_currency_code","","",null,[[],["identifier",3]]],[5,"currency_code","","",null,[[],["identifier",3]]],[17,"DEFAULT_EXPIRATION_TIME","","",null,null],[11,"new","","Creates a new account in memory.",0,[[]]],[11,"new_from_seed","","Creates a new account in memory given a random seed.",0,[[["keygen",3]]]],[11,"with_keypair","","Creates a new account with the given keypair.",0,[[["ed25519privatekey",3],["ed25519publickey",3]]]],[11,"new_validator","","Creates a new account with the given addr and key pair",0,[[["accountaddress",3],["ed25519privatekey",3],["ed25519publickey",3]]]],[11,"new_genesis_account","","Creates a new account in memory representing an account…",0,[[["accountaddress",3]]]],[11,"new_diem_root","","Creates a new account representing the diem root account…",0,[[]]],[11,"new_blessed_tc","","Creates a new account representing treasury compliance in…",0,[[]]],[11,"address","","Returns the address of the account. This is a hash of the…",0,[[],["accountaddress",3]]],[11,"make_account_access_path","","Returns the AccessPath that describes the Account resource…",0,[[],["accesspath",3]]],[11,"make_event_generator_access_path","","Returns the AccessPath that describes the…",0,[[],["accesspath",3]]],[11,"make_balance_access_path","","Returns the AccessPath that describes the Account balance…",0,[[["identifier",3]],["accesspath",3]]],[11,"make_access_path","","",0,[[["structtag",3]],["accesspath",3]]],[11,"rotate_key","","Changes the keys for this account to the provided ones.",0,[[["ed25519privatekey",3],["ed25519publickey",3]]]],[11,"auth_key","","Computes the authentication key for this account, as…",0,[[],["vec",3]]],[11,"auth_key_prefix","","Return the first 16 bytes of the account\'s auth key",0,[[],["vec",3]]],[11,"transaction","","",0,[[],["transactionbuilder",3]]],[11,"new","","",1,[[["account",3]]]],[11,"sequence_number","","",1,[[]]],[11,"chain_id","","",1,[[["chainid",3]]]],[11,"script","","",1,[[["script",3]]]],[11,"module","","",1,[[["module",3]]]],[11,"write_set","","",1,[[["writesetpayload",4]]]],[11,"max_gas_amount","","",1,[[]]],[11,"gas_unit_price","","",1,[[]]],[11,"gas_currency_code","","",1,[[]]],[11,"ttl","","",1,[[]]],[11,"raw","","",1,[[],["rawtransaction",3]]],[11,"sign","","",1,[[],["signedtransaction",3]]],[11,"new","","Create a new balance with amount `balance`",3,[[]]],[11,"coin","","Retrieve the balance inside of this",3,[[]]],[11,"to_value","","Returns the Move Value for the account balance",3,[[],["value",3]]],[11,"layout","","Returns the value layout for the account balance",3,[[],["movestructlayout",3]]],[11,"id","","",2,[[]]],[11,"layout","","",2,[[],["movestructlayout",3]]],[11,"to_value","","",2,[[],["value",3]]],[11,"role_id_struct_tag","","",2,[[],["structtag",3]]],[11,"new","","Create a new AccountRole testing account.",4,[[["accountaddress",3],["accountrolespecifier",4]]]],[11,"account_specifier","","",4,[[],["accountrolespecifier",4]]],[11,"new","","",5,[[["accountaddress",3]]]],[11,"new_with_event_count","","",5,[[["accountaddress",3]]]],[11,"to_value","","",5,[[],["value",3]]],[11,"layout","","",5,[[],["movestructlayout",3]]],[11,"new","","Creates a new `AccountData` with a new account.",6,[[]]],[11,"new_from_seed","","Creates a new `AccountData` with a new account.",6,[[["keygen",3]]]],[11,"with_account","","Creates a new `AccountData` with the provided account.",6,[[["identifier",3],["account",3],["accountrolespecifier",4]]]],[11,"with_keypair","","Creates a new `AccountData` with the provided account.",6,[[["identifier",3],["ed25519privatekey",3],["accountrolespecifier",4],["ed25519publickey",3]]]],[11,"with_account_and_event_counts","","Creates a new `AccountData` with custom parameters.",6,[[["identifier",3],["account",3],["accountrolespecifier",4]]]],[11,"add_balance_currency","","Adds the balance held by this account to the one…",6,[[["identifier",3]]]],[11,"rotate_key","","Changes the keys for this account to the provided ones.",6,[[["ed25519privatekey",3],["ed25519publickey",3]]]],[11,"sent_payment_event_layout","","",6,[[],["movestructlayout",3]]],[11,"received_payment_event_type","","",6,[[],["movestructlayout",3]]],[11,"event_handle_layout","","",6,[[],["movestructlayout",3]]],[11,"layout","","Returns the (Move value) layout of the…",6,[[],["movestructlayout",3]]],[11,"account_role","","Returns the account role specifier",6,[[],["accountrolespecifier",4]]],[11,"to_value","","Creates and returns the top-level resources to be…",6,[[]]],[11,"make_account_access_path","","Returns the AccessPath that describes the Account resource…",6,[[],["accesspath",3]]],[11,"make_balance_access_path","","Returns the AccessPath that describes the Account balance…",6,[[["identifier",3]],["accesspath",3]]],[11,"make_event_generator_access_path","","Returns the AccessPath that describes the…",6,[[],["accesspath",3]]],[11,"to_writeset","","Creates a writeset that contains the account data and can…",6,[[],["writeset",3]]],[11,"address","","Returns the address of the account. This is a hash of the…",6,[[],["accountaddress",3]]],[11,"account","","Returns the underlying [`Account`] instance.",6,[[],["account",3]]],[11,"into_account","","Converts this data into an `Account` instance.",6,[[],["account",3]]],[11,"balance","","Returns the initial balance.",6,[[["identstr",3]]]],[11,"sequence_number","","Returns the initial sequence number.",6,[[]]],[11,"sent_events_key","","Returns the unique key for this sent events stream.",6,[[]]],[11,"sent_events_count","","Returns the initial sent events count.",6,[[]]],[11,"received_events_key","","Returns the unique key for this received events stream.",6,[[]]],[11,"received_events_count","","Returns the initial received events count.",6,[[]]],[11,"new","","",7,[[["accountaddress",3]]]],[11,"layout","","",7,[[],["movestructlayout",3]]],[11,"value","","",7,[[],["value",3]]],[11,"new","","",8,[[["accountaddress",3]]]],[11,"layout","","",8,[[],["movestructlayout",3]]],[11,"value","","",8,[[],["value",3]]],[11,"layout","","",9,[[],["movestructlayout",3]]],[11,"value","","",9,[[],["value",3]]],[0,"account_universe","language_e2e_tests","A model to test properties of common Diem transactions.",null,null],[3,"SequenceNumberMismatchGen","language_e2e_tests::account_universe","Represents a sequence number mismatch transaction",null,null],[3,"InsufficientBalanceGen","","Represents a insufficient balance transaction",null,null],[3,"InvalidAuthkeyGen","","Represents a authkey mismatch transaction",null,null],[3,"CreateAccountGen","","Represents a create-account transaction performed in the…",null,null],[3,"CreateExistingAccountGen","","Represents a create-account transaction in the account…",null,null],[3,"P2PTransferGen","","Represents a peer-to-peer transaction performed in the…",null,null],[3,"RotateKeyGen","","Represents a rotate-key transaction performed in the…",null,null],[3,"AccountUniverseGen","","A set of accounts which can be used to construct an…",null,null],[3,"AccountUniverse","","A set of accounts that has been set up and can now be used…",null,null],[3,"AccountPairGen","","Allows pairs of accounts to be uniformly randomly selected…",null,null],[3,"AccountPair","","Mutable references to a pair of distinct accounts picked…",null,null],[12,"idx_1","","The index of the first account picked.",10,null],[12,"idx_2","","The index of the second account picked.",10,null],[12,"account_1","","A mutable reference to the first account picked.",10,null],[12,"account_2","","A mutable reference to the second account picked.",10,null],[3,"AccountCurrent","","Represents the current state of account in a universe,…",null,null],[4,"AccountPickStyle","","Determines the sampling algorithm used to pick accounts…",null,null],[13,"Unlimited","","An account may be picked as many times as possible.",11,null],[13,"Limited","","An account may only be picked these many times.",11,null],[5,"bad_txn_strategy","","",null,[[]]],[5,"create_account_strategy","","",null,[[]]],[5,"p2p_strategy","","",null,[[]]],[5,"default_num_accounts","","The number of accounts to run universe-based proptests…",null,[[]]],[5,"default_num_transactions","","The number of transactions to run universe-based proptests…",null,[[]]],[5,"txn_one_account_result","","Computes the result for running a transfer out of one…",null,[[["accountcurrent",3]]]],[5,"log_balance_strategy","","Returns a [`Strategy`] that provides a variety of balances…",null,[[]]],[5,"all_transactions_strategy","","A strategy that returns a random transaction.",null,[[]]],[5,"run_and_assert_gas_cost_stability","","Run these transactions and make sure that they all cost…",null,[[["accountuniversegen",3],["vec",3]],[["testcaseerror",4],["result",4]]]],[5,"run_and_assert_universe","","Run these transactions and verify the expected output.",null,[[["accountuniversegen",3],["vec",3]],[["testcaseerror",4],["result",4]]]],[5,"assert_accounts_match","","Verify that the account information in the universe…",null,[[["fakeexecutor",3],["accountuniverse",3]],[["testcaseerror",4],["result",4]]]],[11,"strategy","","Returns a [`Strategy`] that generates a universe of…",12,[[]]],[11,"success_strategy","","Returns a [`Strategy`] that generates a universe of…",12,[[]]],[11,"set_pick_style","","Sets the pick style used by this account universe.",12,[[["accountpickstyle",4]]]],[11,"num_accounts","","Returns the number of accounts in this account universe.",12,[[]]],[11,"setup","","Returns an [`AccountUniverse`] with the initial state…",12,[[["fakeexecutor",3]],["accountuniverse",3]]],[11,"setup_gas_cost_stability","","Returns an [`AccountUniverse`] with the initial state…",12,[[["fakeexecutor",3]],["accountuniverse",3]]],[11,"num_accounts","","Returns the number of accounts currently in this universe.",13,[[]]],[11,"accounts","","Returns the accounts currently in this universe.",13,[[]]],[11,"add_account","","Adds an account to the universe so that future…",13,[[["accountdata",3]]]],[11,"pick","","Picks an account using the provided `Index` as a source of…",13,[[["index",3]]]],[11,"pick","","Picks two accounts uniformly randomly from this universe…",14,[[["accountuniverse",3]],["accountpair",3]]],[8,"AUTransactionGen","","Represents any sort of transaction that can be done in an…",null,null],[10,"apply","","Applies this transaction onto the universe, updating…",15,[[["accountuniverse",3]]]],[11,"arced","","Creates an arced version of this transaction, suitable for…",15,[[],[["autransactiongen",8],["arc",3]]]],[11,"account","","Returns the underlying account.",16,[[],["account",3]]],[11,"rotate_key","","Rotates the key in this account.",16,[[["ed25519privatekey",3],["ed25519publickey",3]]]],[11,"balance","","Returns the current balance for this account, assuming all…",16,[[]]],[11,"sequence_number","","Returns the current sequence number for this account,…",16,[[]]],[11,"sent_events_count","","Returns the current sent events count for this account,…",16,[[]]],[11,"received_events_count","","Returns the current received events count for this…",16,[[]]],[11,"create_account_gas_cost","","Returns the gas cost of a create-account transaction.",16,[[]]],[11,"create_account_low_balance_gas_cost","","Returns the gas cost of a create-account transaction where…",16,[[]]],[11,"create_existing_account_gas_cost","","Returns the gas cost of a create-account transaction where…",16,[[]]],[11,"peer_to_peer_gas_cost","","Returns the gas cost of a peer-to-peer transaction.",16,[[]]],[11,"peer_to_peer_too_low_gas_cost","","Returns the gas cost of a peer-to-peer transaction with an…",16,[[]]],[11,"peer_to_peer_new_receiver_gas_cost","","Returns the gas cost of a create-account transaction where…",16,[[]]],[11,"peer_to_peer_new_receiver_too_low_gas_cost","","Returns the gas cost of a create-account transaction where…",16,[[]]],[11,"rotate_key_gas_cost","","Returns the gas cost of a peer-to-peer transaction with an…",16,[[]]],[0,"common_transactions","language_e2e_tests","Support for encoding transactions for common situations.",null,null],[5,"empty_txn","language_e2e_tests::common_transactions","",null,[[["account",3],["string",3]],["signedtransaction",3]]],[5,"create_account_txn","","Returns a transaction to create a new account with the…",null,[[["typetag",4],["account",3]],["signedtransaction",3]]],[5,"peer_to_peer_txn","","Returns a transaction to transfer coin from one account to…",null,[[["account",3]],["signedtransaction",3]]],[5,"rotate_key_txn","","Returns a transaction to change the keys for the given…",null,[[["account",3],["vec",3]],["signedtransaction",3]]],[5,"raw_rotate_key_txn","","Returns a transaction to change the keys for the given…",null,[[["account",3],["vec",3]],["rawtransaction",3]]],[7,"CREATE_ACCOUNT_SCRIPT","","",null,null],[7,"EMPTY_SCRIPT","","",null,null],[0,"compile","language_e2e_tests","Support for compiling scripts and modules in tests.",null,null],[5,"compile_module_with_address","language_e2e_tests::compile","Compile the provided Move code into a blob which can be…",null,[[["accountaddress",3]]]],[5,"compile_script_with_address","","Compile the provided Move code into a blob which can be…",null,[[["vec",3],["compiledmodule",3],["accountaddress",3]],["script",3]]],[0,"currencies","language_e2e_tests","",null,null],[5,"add_currency_to_system","language_e2e_tests::currencies","",null,[[["fakeexecutor",3]]]],[0,"data_store","language_e2e_tests","Support for mocking the Diem data store.",null,null],[3,"FakeDataStore","language_e2e_tests::data_store","An in-memory implementation of [`StateView`] and…",null,null],[7,"GENESIS_CHANGE_SET","","Dummy genesis ChangeSet for testing",null,null],[7,"GENESIS_CHANGE_SET_FRESH","","",null,null],[11,"new","","Creates a new `FakeDataStore` with the provided initial…",17,[[["accesspath",3],["hashmap",3],["vec",3]]]],[11,"add_write_set","","Adds a [`WriteSet`] to this data store.",17,[[["writeset",3]]]],[11,"set","","Sets a (key, value) pair within this data store.",17,[[["accesspath",3],["vec",3]],[["vec",3],["option",4]]]],[11,"remove","","Deletes a key from this data store.",17,[[["accesspath",3]],[["vec",3],["option",4]]]],[11,"add_account_data","","Adds an [`AccountData`] to this data store.",17,[[["accountdata",3]]]],[11,"add_module","","Adds a [`CompiledModule`] to this data store.",17,[[["compiledmodule",3],["moduleid",3]]]],[0,"execution_strategies","language_e2e_tests","",null,null],[0,"basic_strategy","language_e2e_tests::execution_strategies","",null,null],[3,"BasicStrategy","language_e2e_tests::execution_strategies::basic_strategy","",null,null],[3,"BasicExecutor","","",null,null],[11,"new","","",18,[[]]],[0,"guided_strategy","language_e2e_tests::execution_strategies","",null,null],[3,"PartitionedGuidedStrategy","language_e2e_tests::execution_strategies::guided_strategy","",null,null],[3,"UnPartitionedGuidedStrategy","","",null,null],[3,"GuidedExecutor","","",null,null],[4,"AnnotatedTransaction","","",null,null],[13,"Block","","",19,null],[13,"Txn","","",19,null],[11,"new","","",20,[[]]],[0,"multi_strategy","language_e2e_tests::execution_strategies","",null,null],[3,"MultiExecutor","language_e2e_tests::execution_strategies::multi_strategy","",null,null],[4,"MultiResult","","",null,null],[13,"NonMatchingOutput","","",21,null],[13,"OtherResult","","",21,null],[11,"new","","",22,[[]]],[11,"add_executor","","",22,[[]]],[0,"random_strategy","language_e2e_tests::execution_strategies","",null,null],[3,"RandomizedStrategy","language_e2e_tests::execution_strategies::random_strategy","",null,null],[3,"RandomExecutor","","",null,null],[11,"from_seed","","",23,[[]]],[11,"from_os_rng","","",23,[[]]],[11,"from_seed","","",24,[[]]],[11,"from_os_rng","","",24,[[]]],[0,"types","language_e2e_tests::execution_strategies","",null,null],[6,"Block","language_e2e_tests::execution_strategies::types","",null,null],[6,"ExecutorResult","","",null,null],[8,"Executor","","",null,null],[16,"Txn","","",25,null],[16,"BlockResult","","",25,null],[10,"execute_block","","",25,[[["block",6]],["executorresult",6]]],[8,"PartitionStrategy","","",null,null],[16,"Txn","","",26,null],[10,"partition","","",26,[[["block",6]],[["block",6],["vec",3]]]],[0,"executor","language_e2e_tests","Support for running the VM to execute and verify…",null,null],[3,"FakeExecutor","language_e2e_tests::executor","Provides an environment to run a VM instance.",null,null],[11,"from_genesis","","Creates an executor from a genesis [`WriteSet`].",27,[[["writeset",3]]]],[11,"from_genesis_file","","Creates an executor from the genesis file…",27,[[]]],[11,"from_fresh_genesis","","Creates an executor using the standard genesis.",27,[[]]],[11,"allowlist_genesis","","",27,[[]]],[11,"from_genesis_with_options","","Creates an executor from the genesis file…",27,[[["vmpublishingoption",3]]]],[11,"no_genesis","","Creates an executor in which no genesis state has been…",27,[[]]],[11,"set_golden_file","","",27,[[]]],[11,"stdlib_only_genesis","","Creates an executor with only the standard library Move…",27,[[]]],[11,"custom_genesis","","Creates fresh genesis from the stdlib modules passed in.",27,[[["vmpublishingoption",3],["compiledmodule",3],["option",4],["vec",3]]]],[11,"create_raw_account","","Create one instance of [`AccountData`] without saving it…",27,[[],["account",3]]],[11,"create_raw_account_data","","Create one instance of [`AccountData`] without saving it…",27,[[],["accountdata",3]]],[11,"create_accounts","","Creates a number of [`Account`] instances all with the…",27,[[],[["vec",3],["account",3]]]],[11,"apply_write_set","","Applies a [`WriteSet`] to this executor\'s data store.",27,[[["writeset",3]]]],[11,"add_account_data","","Adds an account to this executor\'s data store.",27,[[["accountdata",3]]]],[11,"add_module","","Adds a module to this executor\'s data store.",27,[[["compiledmodule",3],["moduleid",3]]]],[11,"read_account_resource","","Reads the resource [`Value`] for an account from this…",27,[[["account",3]],[["option",4],["accountresource",3]]]],[11,"read_balance_resource","","Reads the balance resource value for an account from this…",27,[[["identifier",3],["account",3]],[["option",4],["balanceresource",3]]]],[11,"execute_block","","Executes the given block of transactions.",27,[[["signedtransaction",3],["vec",3]],[["vec",3],["result",4],["vmstatus",4]]]],[11,"execute_block_and_keep_vm_status","","Alternate form of \'execute_block\' that keeps the vm_status…",27,[[["signedtransaction",3],["vec",3]],[["vmstatus",4],["vec",3],["result",4]]]],[11,"execute_and_apply","","Executes the transaction as a singleton block and applies…",27,[[["signedtransaction",3]],["transactionoutput",3]]],[11,"execute_transaction_block","","",27,[[["vec",3],["transaction",4]],[["vec",3],["result",4],["vmstatus",4]]]],[11,"execute_transaction","","",27,[[["signedtransaction",3]],["transactionoutput",3]]],[11,"read_from_access_path","","Get the blob for the associated AccessPath",27,[[["accesspath",3]],[["vec",3],["option",4]]]],[11,"verify_transaction","","Verifies the given transaction by running it through the…",27,[[["signedtransaction",3]],["vmvalidatorresult",3]]],[11,"get_state_view","","",27,[[],["fakedatastore",3]]],[11,"new_block","","",27,[[]]],[11,"new_block_with_timestamp","","",27,[[]]],[11,"set_block_time","","",27,[[]]],[11,"get_block_time","","",27,[[]]],[11,"exec","","",27,[[["vec",3],["typetag",4],["vec",3],["value",3],["accountaddress",3]]]],[11,"try_exec","","",27,[[["vec",3],["typetag",4],["vec",3],["value",3],["accountaddress",3]],[["writeset",3],["result",4],["vmstatus",4]]]],[0,"gas_costs","language_e2e_tests","Gas costs for common transactions.",null,null],[7,"CREATE_ACCOUNT_FIRST","language_e2e_tests::gas_costs","The gas cost of a first time create-account transaction.",null,null],[7,"CREATE_ACCOUNT_NEXT","","The gas cost of a create-account transaction.",null,null],[7,"CREATE_ACCOUNT_TOO_LOW_FIRST","","The gas cost of a create-account transaction where the…",null,null],[7,"CREATE_ACCOUNT_TOO_LOW_NEXT","","The gas cost of a create-account transaction where the…",null,null],[7,"CREATE_EXISTING_ACCOUNT_FIRST","","The gas cost of a create-account transaction where the…",null,null],[7,"CREATE_EXISTING_ACCOUNT_NEXT","","The gas cost of a create-account transaction where the…",null,null],[7,"PEER_TO_PEER","","The gas cost of a peer-to-peer transaction.",null,null],[7,"PEER_TO_PEER_TOO_LOW","","The gas cost of a peer-to-peer transaction with an…",null,null],[7,"PEER_TO_PEER_NEW_RECEIVER_FIRST","","The gas cost of a peer-to-peer transaction that creates a…",null,null],[7,"PEER_TO_PEER_NEW_RECEIVER_NEXT","","The gas cost of a peer-to-peer transaction that creates a…",null,null],[7,"PEER_TO_PEER_NEW_RECEIVER_TOO_LOW_FIRST","","The gas cost of a peer-to-peer transaction that tries to…",null,null],[7,"PEER_TO_PEER_NEW_RECEIVER_TOO_LOW_NEXT","","The gas cost of a peer-to-peer transaction that tries to…",null,null],[7,"ROTATE_KEY","","The gas cost of a rotate-key transaction.",null,null],[17,"TXN_RESERVED","","The gas each transaction is configured to reserve. If the…",null,null],[0,"keygen","language_e2e_tests","",null,null],[3,"KeyGen","language_e2e_tests::keygen","Ed25519 key generator.",null,null],[11,"from_seed","","Constructs a key generator with a specific seed.",28,[[]]],[11,"from_os_rng","","Constructs a key generator with a random seed. The random…",28,[[]]],[11,"generate_keypair","","Generate an Ed25519 key pair.",28,[[]]],[11,"strategy","language_e2e_tests::account","Returns a [`Strategy`] that creates `AccountData` instances.",6,[[]]],[14,"assert_prologue_parity","language_e2e_tests","",null,null],[14,"assert_prologue_disparity","","",null,null],[14,"current_function_name","","Returns the name of the current function. This macro is…",null,null],[11,"from","language_e2e_tests::account","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"equivalent","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"equivalent","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"equivalent","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"equivalent","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"equivalent","","",9,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"from","language_e2e_tests::account_universe","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"equivalent","","",16,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","language_e2e_tests::data_store","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","language_e2e_tests::execution_strategies::basic_strategy","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","language_e2e_tests::execution_strategies::guided_strategy","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","language_e2e_tests::execution_strategies::multi_strategy","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","language_e2e_tests::execution_strategies::random_strategy","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","language_e2e_tests::executor","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","language_e2e_tests::keygen","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"apply","language_e2e_tests::account_universe","",29,[[["accountuniverse",3]]]],[11,"apply","","",30,[[["accountuniverse",3]]]],[11,"apply","","",31,[[["accountuniverse",3]]]],[11,"apply","","",32,[[["accountuniverse",3]]]],[11,"apply","","",33,[[["accountuniverse",3]]]],[11,"apply","","",34,[[["accountuniverse",3]]]],[11,"apply","","",35,[[["accountuniverse",3]]]],[11,"execute_block","language_e2e_tests::execution_strategies::basic_strategy","",18,[[["block",6]],["executorresult",6]]],[11,"execute_block","language_e2e_tests::execution_strategies::guided_strategy","",20,[[["block",6]],["executorresult",6]]],[11,"execute_block","language_e2e_tests::execution_strategies::multi_strategy","",22,[[["block",6]],["executorresult",6]]],[11,"execute_block","language_e2e_tests::execution_strategies::random_strategy","",24,[[["block",6]],["executorresult",6]]],[11,"partition","language_e2e_tests::execution_strategies::basic_strategy","",36,[[["block",6]],[["block",6],["vec",3]]]],[11,"partition","language_e2e_tests::execution_strategies::guided_strategy","",37,[[["block",6]],[["block",6],["vec",3]]]],[11,"partition","","",38,[[["block",6]],[["block",6],["vec",3]]]],[11,"partition","language_e2e_tests::execution_strategies::random_strategy","",23,[[["block",6]],[["block",6],["vec",3]]]],[11,"clone","language_e2e_tests::account","",0,[[],["account",3]]],[11,"clone","","",3,[[],["balance",3]]],[11,"clone","","",2,[[],["accountrolespecifier",4]]],[11,"clone","","",4,[[],["accountrole",3]]],[11,"clone","","",5,[[],["eventhandlegenerator",3]]],[11,"clone","","",6,[[],["accountdata",3]]],[11,"clone","","",7,[[],["withdrawcapability",3]]],[11,"clone","","",8,[[],["keyrotationcapability",3]]],[11,"clone","","",9,[[],["freezingbit",3]]],[11,"clone","language_e2e_tests::account_universe","",29,[[],["sequencenumbermismatchgen",3]]],[11,"clone","","",30,[[],["insufficientbalancegen",3]]],[11,"clone","","",31,[[],["invalidauthkeygen",3]]],[11,"clone","","",32,[[],["createaccountgen",3]]],[11,"clone","","",33,[[],["createexistingaccountgen",3]]],[11,"clone","","",34,[[],["p2ptransfergen",3]]],[11,"clone","","",35,[[],["rotatekeygen",3]]],[11,"clone","","",12,[[],["accountuniversegen",3]]],[11,"clone","","",13,[[],["accountuniverse",3]]],[11,"clone","","",14,[[],["accountpairgen",3]]],[11,"clone","","",11,[[],["accountpickstyle",4]]],[11,"clone","","",16,[[],["accountcurrent",3]]],[11,"clone","language_e2e_tests::execution_strategies::basic_strategy","",36,[[],["basicstrategy",3]]],[11,"clone","language_e2e_tests::execution_strategies::guided_strategy","",19,[[],["annotatedtransaction",4]]],[11,"clone","","",37,[[],["partitionedguidedstrategy",3]]],[11,"clone","","",38,[[],["unpartitionedguidedstrategy",3]]],[11,"clone","language_e2e_tests::execution_strategies::random_strategy","",23,[[],["randomizedstrategy",3]]],[11,"default","language_e2e_tests::account","",0,[[]]],[11,"default","","",2,[[]]],[11,"default","language_e2e_tests::data_store","",17,[[],["fakedatastore",3]]],[11,"default","language_e2e_tests::execution_strategies::basic_strategy","",18,[[]]],[11,"default","language_e2e_tests::execution_strategies::multi_strategy","",22,[[]]],[11,"eq","language_e2e_tests::account","",0,[[["account",3]]]],[11,"ne","","",0,[[["account",3]]]],[11,"eq","","",3,[[["balance",3]]]],[11,"ne","","",3,[[["balance",3]]]],[11,"eq","","",2,[[["accountrolespecifier",4]]]],[11,"eq","","",4,[[["accountrole",3]]]],[11,"ne","","",4,[[["accountrole",3]]]],[11,"eq","","",5,[[["eventhandlegenerator",3]]]],[11,"ne","","",5,[[["eventhandlegenerator",3]]]],[11,"eq","","",6,[[["accountdata",3]]]],[11,"ne","","",6,[[["accountdata",3]]]],[11,"eq","","",7,[[["withdrawcapability",3]]]],[11,"ne","","",7,[[["withdrawcapability",3]]]],[11,"eq","","",8,[[["keyrotationcapability",3]]]],[11,"ne","","",8,[[["keyrotationcapability",3]]]],[11,"eq","","",9,[[["freezingbit",3]]]],[11,"ne","","",9,[[["freezingbit",3]]]],[11,"eq","language_e2e_tests::account_universe","",16,[[["accountcurrent",3]]]],[11,"ne","","",16,[[["accountcurrent",3]]]],[11,"eq","language_e2e_tests::execution_strategies::guided_strategy","",19,[[["annotatedtransaction",4]]]],[11,"ne","","",19,[[["annotatedtransaction",4]]]],[11,"fmt","language_e2e_tests::account","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::account_universe","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::data_store","",17,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::execution_strategies::basic_strategy","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::execution_strategies::guided_strategy","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::execution_strategies::multi_strategy","",21,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::execution_strategies::random_strategy","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::executor","",27,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::keygen","",28,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::execution_strategies::multi_strategy","",21,[[["formatter",3]],["result",6]]],[11,"from_str","language_e2e_tests::account","",2,[[],["result",6]]],[11,"source","language_e2e_tests::execution_strategies::multi_strategy","",21,[[],[["error",8],["option",4]]]],[11,"arbitrary_with","language_e2e_tests::account_universe","",29,[[]]],[11,"arbitrary_with","","",30,[[]]],[11,"arbitrary_with","","",31,[[]]],[11,"arbitrary_with","","",32,[[]]],[11,"arbitrary_with","","",33,[[]]],[11,"arbitrary_with","","",34,[[]]],[11,"arbitrary_with","","",35,[[]]],[11,"arbitrary_with","","",14,[[]]],[11,"arbitrary_with","language_e2e_tests::account","",0,[[]]],[11,"fetch_config","language_e2e_tests::data_store","",17,[[["accesspath",3]],[["vec",3],["option",4]]]],[11,"get","","",17,[[["accesspath",3]],[["option",4],["result",6]]]],[11,"multi_get","","",17,[[],[["vec",3],["result",6]]]],[11,"is_genesis","","",17,[[]]],[11,"get_module","","",17,[[["moduleid",3]],[["vmresult",6],["option",4]]]],[11,"get_resource","","",17,[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]]]],"p":[[3,"Account"],[3,"TransactionBuilder"],[4,"AccountRoleSpecifier"],[3,"Balance"],[3,"AccountRole"],[3,"EventHandleGenerator"],[3,"AccountData"],[3,"WithdrawCapability"],[3,"KeyRotationCapability"],[3,"FreezingBit"],[3,"AccountPair"],[4,"AccountPickStyle"],[3,"AccountUniverseGen"],[3,"AccountUniverse"],[3,"AccountPairGen"],[8,"AUTransactionGen"],[3,"AccountCurrent"],[3,"FakeDataStore"],[3,"BasicExecutor"],[4,"AnnotatedTransaction"],[3,"GuidedExecutor"],[4,"MultiResult"],[3,"MultiExecutor"],[3,"RandomizedStrategy"],[3,"RandomExecutor"],[8,"Executor"],[8,"PartitionStrategy"],[3,"FakeExecutor"],[3,"KeyGen"],[3,"SequenceNumberMismatchGen"],[3,"InsufficientBalanceGen"],[3,"InvalidAuthkeyGen"],[3,"CreateAccountGen"],[3,"CreateExistingAccountGen"],[3,"P2PTransferGen"],[3,"RotateKeyGen"],[3,"BasicStrategy"],[3,"PartitionedGuidedStrategy"],[3,"UnPartitionedGuidedStrategy"]]},\
"language_e2e_testsuite":{"doc":"","i":[],"p":[]},\
"memsocket":{"doc":"","i":[[3,"MemoryListener","memsocket","An in-memory socket server, listening for connections.",null,null],[3,"Incoming","","Stream returned by the `MemoryListener::incoming` function…",null,null],[3,"MemorySocket","","An in-memory stream between two local sockets.",null,null],[11,"bind","","Creates a new `MemoryListener` which will be bound to the…",0,[[],["result",6]]],[11,"local_addr","","Returns the local address that this listener is bound to.",0,[[]]],[11,"incoming","","Consumes this listener, returning a stream of the sockets…",0,[[],["incoming",3]]],[11,"new_pair","","Construct both sides of an in-memory socket.",1,[[]]],[11,"connect","","Create a new in-memory Socket connected to the specified…",1,[[],[["result",6],["memorysocket",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"try_poll_next","","",2,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"poll_next","","",2,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",1,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","","Attempt to write bytes from `buf` into the outgoing channel.",1,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","Attempt to flush the channel. Cannot Fail.",1,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","Attempt to close the channel. Cannot Fail.",1,[[["context",3],["pin",3]],[["result",6],["poll",4]]]]],"p":[[3,"MemoryListener"],[3,"MemorySocket"],[3,"Incoming"]]},\
"module_generation":{"doc":"","i":[[3,"ModuleGenerator","module_generation","",null,null],[3,"ModuleGeneratorOptions","","",null,null],[12,"max_locals","","The maximum number of locals that can be defined within a…",0,null],[12,"max_fields","","The maximum number of fields that will be generated for…",0,null],[12,"min_fields","","",0,null],[12,"max_structs","","The maximum number of structs that can be generated for a…",0,null],[12,"max_functions","","The maximum number of functions that can be generated for…",0,null],[12,"max_ty_params","","The maximum number of type parameters functions and structs.",0,null],[12,"byte_array_max_size","","The maximum size that generated byte arrays can be.",0,null],[12,"max_string_size","","The maximum size that a generated string can be.",0,null],[12,"max_function_call_size","","The maximum number of arguments to generated function…",0,null],[12,"max_ret_types_size","","The maximum number of return types of generated function…",0,null],[12,"simple_types_only","","Whether or not generate modules should only contain simple…",0,null],[12,"references_allowed","","Whether references are allowed to be generated for e.g.…",0,null],[12,"add_resources","","Whether the generated modules should have any resources…",0,null],[12,"min_table_size","","The minimum number of entries in any table",0,null],[12,"args_for_ty_params","","If set, all functions with type parameters will have…",0,null],[3,"Pad","","",null,null],[5,"generate_module","","",null,[[["stdrng",3],["modulegeneratoroptions",3]],["compiledmodule",3]]],[5,"generate_modules","","Generate a `number - 1` modules. Then generate a root…",null,[[["stdrng",3],["modulegeneratoroptions",3]]]],[5,"generate_verified_modules","","",null,[[["stdrng",3],["modulegeneratoroptions",3]]]],[11,"create","","",1,[[["modulegeneratoroptions",3],["btreeset",3],["stdrng",3]],["moduledefinition",3]]],[11,"pad","","",2,[[["modulegeneratoroptions",3],["compiledmodulemut",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"clone","","",0,[[],["modulegeneratoroptions",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"ModuleGeneratorOptions"],[3,"ModuleGenerator"],[3,"Pad"]]},\
"move_cli":{"doc":"","i":[[17,"DEFAULT_BUILD_DIR","move_cli","Default directory for build output",null,null],[3,"OnDiskStateView","","",null,null],[0,"package","","",null,null],[3,"Mode","move_cli::package","The dependency interface exposed to CLI main",null,null],[5,"parse_mode_from_string","","",null,[[],[["result",6],["mode",3]]]],[11,"prepare","","",0,[[["path",3]],["result",6]]],[11,"source_files","","",0,[[["path",3]],[["result",6],["vec",3]]]],[11,"compiled_modules","","",0,[[["path",3]],[["vec",3],["result",6]]]],[0,"test","move_cli","",null,null],[5,"run_one","move_cli::test","Run the `args_path` batch file with`cli_binary`",null,[[["path",3]],[["option",4],["result",6]]]],[5,"run_all","","",null,[[],["result",6]]],[5,"create_test_scaffold","","Create a directory scaffold for writing a Move CLI test.",null,[[],["result",6]]],[17,"TEST_ARGS_FILENAME","","The filename that contains the arguments to the Move binary.",null,null],[17,"DEFAULT_STORAGE_DIR","move_cli","Default directory where saved Move resources live",null,null],[17,"DEFAULT_SOURCE_DIR","","Default directory where Move modules live",null,null],[17,"DEFAULT_PACKAGE_DIR","","Default directory where Move packages live under build_dir",null,null],[17,"DEFAULT_DEP_MODE","","Default dependency inclusion mode",null,null],[11,"create","","Create an `OnDiskStateView` that reads/writes resource…",1,[[["pathbuf",3],["into",8]],["result",6]]],[11,"interface_files_dir","","",1,[[],[["result",6],["string",3]]]],[11,"is_resource_path","","",1,[[["path",3]]]],[11,"is_event_path","","",1,[[["path",3]]]],[11,"is_module_path","","",1,[[["path",3]]]],[11,"get_resource_bytes","","Read the resource bytes stored on-disk at `addr`/`tag`",1,[[["accountaddress",3],["structtag",3]],[["result",6],["option",4]]]],[11,"has_module","","Check if a module at `addr`/`module_id` exists",1,[[["moduleid",3]]]],[11,"get_compiled_module","","Deserialize and return the module stored on-disk at…",1,[[["moduleid",3]],[["result",6],["compiledmodule",3]]]],[11,"resolve_function","","Return the name of the function at `idx` in `module_id`",1,[[["moduleid",3]],[["result",6],["identifier",3]]]],[11,"view_resource","","Returns a deserialized representation of the resource…",1,[[["path",3]],[["result",6],["option",4]]]],[11,"view_events","","",1,[[["path",3]],[["vec",3],["result",6]]]],[11,"view_module","","",1,[[["path",3]],[["option",4],["result",6]]]],[11,"delete_resource","","Delete resource stored on disk at the path `addr`/`tag`",1,[[["accountaddress",3],["structtag",3]],["result",6]]],[11,"save_resource","","Save `resource` on disk under the path `addr`/`tag`",1,[[["movetypelayout",4],["accountaddress",3],["value",3],["structtag",3]],["result",6]]],[11,"save_resource_bytes","","",1,[[["accountaddress",3],["structtag",3]],["result",6]]],[11,"save_event","","",1,[[["typetag",4],["value",3],["movetypelayout",4]],["result",6]]],[11,"save_contract_event","","",1,[[["contractevent",4]],["result",6]]],[11,"save_module","","Save `module` on disk under the path…",1,[[["moduleid",3]],["result",6]]],[11,"save_modules","","Save all the modules in the local cache, re-generate…",1,[[],["result",6]]],[11,"delete_module","","",1,[[["moduleid",3]],["result",6]]],[11,"resource_paths","","",1,[[]]],[11,"module_paths","","",1,[[]]],[11,"event_paths","","",1,[[]]],[11,"get_all_modules","","Return a map of module ID -> module for all modules in the…",1,[[],[["btreemap",3],["result",6]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","move_cli::package","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"fmt","move_cli","",1,[[["formatter",3]],["result",6]]],[11,"get_module","","",1,[[["moduleid",3]],[["vmresult",6],["option",4]]]],[11,"get_resource","","",1,[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]]]],"p":[[3,"Mode"],[3,"OnDiskStateView"]]},\
"move_core_types":{"doc":"Core types for Move.","i":[[0,"account_address","move_core_types","",null,null],[3,"AccountAddress","move_core_types::account_address","A struct that represents an account address.",null,null],[3,"AccountAddressHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new","","",0,[[]]],[18,"LENGTH","","The number of bytes in an address.",0,null],[18,"ZERO","","Hex address: 0x0",0,null],[11,"random","","",0,[[]]],[11,"short_str","","",0,[[],["shorthexstr",3]]],[11,"short_str_lossless","","",0,[[],["string",3]]],[11,"to_vec","","",0,[[],["vec",3]]],[11,"to_u8","","",0,[[]]],[11,"from_hex_literal","","",0,[[],["result",6]]],[11,"from_identity_public_key","","",0,[[["publickey",3]]]],[0,"gas_schedule","move_core_types","This module lays out the basic abstract costing schedule…",null,null],[3,"AbstractMemorySize","move_core_types::gas_schedule","A newtype wrapper that represents the (abstract) memory…",null,null],[3,"GasUnits","","A newtype wrapper around the underlying carrier for the…",null,null],[3,"GasPrice","","A newtype wrapper around the gas price for each unit of…",null,null],[3,"GasConstants","","",null,null],[12,"global_memory_per_byte_cost","","The cost per-byte read from global storage.",1,null],[12,"global_memory_per_byte_write_cost","","The cost per-byte written to storage.",1,null],[12,"min_transaction_gas_units","","The flat minimum amount of gas required for any…",1,null],[12,"large_transaction_cutoff","","Any transaction over this size will be charged an…",1,null],[12,"intrinsic_gas_per_byte","","The units of gas that to be charged per byte over the…",1,null],[12,"maximum_number_of_gas_units","","~5 microseconds should equal one unit of computational…",1,null],[12,"min_price_per_gas_unit","","The minimum gas price that a transaction can be submitted…",1,null],[12,"max_price_per_gas_unit","","The maximum gas unit price that a transaction can be…",1,null],[12,"max_transaction_size_in_bytes","","",1,null],[12,"gas_unit_scaling_factor","","",1,null],[12,"default_account_size","","",1,null],[3,"CostTable","","The cost tables, keyed by the serialized form of the…",null,null],[12,"instruction_table","","",2,null],[12,"native_table","","",2,null],[12,"gas_constants","","",2,null],[3,"GasCost","","The  `GasCost` tracks:",null,null],[12,"instruction_gas","","",3,null],[12,"memory_gas","","",3,null],[6,"GasCarrier","","The underlying carrier for gas-related units and costs.…",null,null],[17,"ONE_GAS_UNIT","","One unit of gas",null,null],[17,"MAX_ABSTRACT_MEMORY_SIZE","","The maximum size representable by AbstractMemorySize",null,null],[17,"CONST_SIZE","","The size in bytes for a non-string or address constant on…",null,null],[17,"REFERENCE_SIZE","","The size in bytes for a reference on the stack",null,null],[17,"STRUCT_SIZE","","The size of a struct in bytes",null,null],[17,"DEFAULT_ACCOUNT_SIZE","","For V1 all accounts will be ~800 bytes",null,null],[17,"LARGE_TRANSACTION_CUTOFF","","Any transaction over this size will be charged…",null,null],[17,"MIN_EXISTS_DATA_SIZE","","For exists checks on data that doesn\'t exists this is the…",null,null],[17,"MAX_TRANSACTION_SIZE_IN_BYTES","","",null,null],[8,"GasAlgebra","","A trait encoding the operations permitted on the…",null,null],[10,"new","","Project a value into the gas algebra.",4,[[]]],[10,"get","","Get the carrier.",4,[[]]],[11,"map","","Map a function `f` of one argument over the underlying data.",4,[[["fn",8]]]],[11,"map2","","Map a function `f` of two arguments over the underlying…",4,[[["fn",8]]]],[11,"app","","Apply a function `f` of two arguments to the carrier.…",4,[[["fn",8]]]],[11,"unitary_cast","","We allow casting between GasAlgebras as long as they have…",4,[[],["gasalgebra",8]]],[11,"add","","Add the two `GasAlgebra`s together.",4,[[]]],[11,"sub","","Subtract one `GasAlgebra` from the other.",4,[[]]],[11,"mul","","Multiply two `GasAlgebra`s together.",4,[[]]],[11,"div","","Divide one `GasAlgebra` by the other.",4,[[]]],[11,"instruction_cost","","",2,[[],["gascost",3]]],[11,"native_cost","","",2,[[],["gascost",3]]],[11,"new","","",3,[[["gascarrier",6]]]],[11,"total","","Take a GasCost from our gas schedule and convert it to a…",3,[[],[["gascarrier",6],["gasunits",3]]]],[0,"identifier","move_core_types","An identifier is the name of an entity (module, resource,…",null,null],[3,"Identifier","move_core_types::identifier","An owned identifier.",null,null],[3,"IdentStr","","A borrowed identifier.",null,null],[11,"new","","Creates a new `Identifier` instance.",5,[[],["result",6]]],[11,"is_valid","","Returns true if this string is a valid identifier.",5,[[]]],[11,"is_self","","Returns if this identifier is \\\"\\\". TODO: remove once we…",5,[[]]],[11,"from_utf8","","Converts a vector of bytes to an `Identifier`.",5,[[["vec",3]],["result",6]]],[11,"as_ident_str","","Creates a borrowed version of `self`.",5,[[],["identstr",3]]],[11,"into_string","","Converts this `Identifier` into a `String`.",5,[[],["string",3]]],[11,"into_bytes","","Converts this `Identifier` into a UTF-8-encoded byte…",5,[[],["vec",3]]],[11,"new","","",6,[[],[["result",6],["identstr",3]]]],[11,"is_valid","","Returns true if this string is a valid identifier.",6,[[]]],[11,"len","","Returns the length of `self` in bytes.",6,[[]]],[11,"is_empty","","Returns `true` if `self` has a length of zero bytes.",6,[[]]],[11,"as_str","","Converts `self` to a `&str`.",6,[[]]],[11,"as_bytes","","Converts `self` to a byte slice.",6,[[]]],[0,"language_storage","move_core_types","",null,null],[3,"StructTag","move_core_types::language_storage","",null,null],[12,"address","","",7,null],[12,"module","","",7,null],[12,"name","","",7,null],[12,"type_params","","",7,null],[3,"StructTagHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[3,"ResourceKey","","Represents the intitial key into global storage where we…",null,null],[12,"address","","",8,null],[12,"type_","","",8,null],[3,"ModuleId","","Represents the initial key into global storage where we…",null,null],[3,"ModuleIdHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[4,"TypeTag","","",null,null],[13,"Bool","","",9,null],[13,"U8","","",9,null],[13,"U64","","",9,null],[13,"U128","","",9,null],[13,"Address","","",9,null],[13,"Signer","","",9,null],[13,"Vector","","",9,null],[13,"Struct","","",9,null],[17,"CODE_TAG","","",null,null],[17,"RESOURCE_TAG","","",null,null],[17,"CORE_CODE_ADDRESS","","",null,null],[11,"access_vector","","",7,[[],["vec",3]]],[11,"module_id","","",7,[[],["moduleid",3]]],[11,"address","","",8,[[],["accountaddress",3]]],[11,"type_","","",8,[[],["structtag",3]]],[11,"new","","",8,[[["structtag",3],["accountaddress",3]]]],[11,"new","","",10,[[["identifier",3],["accountaddress",3]]]],[11,"name","","",10,[[],["identstr",3]]],[11,"address","","",10,[[],["accountaddress",3]]],[11,"access_vector","","",10,[[],["vec",3]]],[0,"move_resource","move_core_types","",null,null],[8,"MoveResource","move_core_types::move_resource","",null,null],[18,"MODULE_NAME","","",11,null],[18,"STRUCT_NAME","","",11,null],[11,"module_identifier","","",11,[[],["identifier",3]]],[11,"struct_identifier","","",11,[[],["identifier",3]]],[11,"type_params","","",11,[[],[["vec",3],["typetag",4]]]],[11,"struct_tag","","",11,[[],["structtag",3]]],[11,"resource_path","","",11,[[],["vec",3]]],[0,"parser","move_core_types","",null,null],[5,"parse_type_tags","move_core_types::parser","",null,[[],[["vec",3],["result",6]]]],[5,"parse_type_tag","","",null,[[],[["typetag",4],["result",6]]]],[5,"parse_transaction_arguments","","",null,[[],[["vec",3],["result",6]]]],[5,"parse_transaction_argument","","",null,[[],[["result",6],["transactionargument",4]]]],[0,"proptest_types","move_core_types","",null,null],[0,"transaction_argument","","",null,null],[4,"TransactionArgument","move_core_types::transaction_argument","",null,null],[13,"U8","","",12,null],[13,"U64","","",12,null],[13,"U128","","",12,null],[13,"Address","","",12,null],[13,"U8Vector","","",12,null],[13,"Bool","","",12,null],[0,"value","move_core_types","",null,null],[3,"MoveStruct","move_core_types::value","",null,null],[3,"MoveStructLayout","","",null,null],[4,"MoveValue","","",null,null],[13,"U8","","",13,null],[13,"U64","","",13,null],[13,"U128","","",13,null],[13,"Bool","","",13,null],[13,"Address","","",13,null],[13,"Vector","","",13,null],[13,"Struct","","",13,null],[13,"Signer","","",13,null],[4,"MoveTypeLayout","","",null,null],[13,"Bool","","",14,null],[13,"U8","","",14,null],[13,"U64","","",14,null],[13,"U128","","",14,null],[13,"Address","","",14,null],[13,"Vector","","",14,null],[13,"Struct","","",14,null],[13,"Signer","","",14,null],[4,"MoveKind","","",null,null],[13,"Copyable","","",15,null],[13,"Resource","","",15,null],[4,"MoveKindInfo","","",null,null],[13,"Base","","",16,null],[13,"Vector","","",16,null],[13,"Struct","","",16,null],[11,"is_resource","","",15,[[]]],[11,"is_copyable","","",15,[[]]],[11,"from_bool","","",15,[[]]],[11,"is_resource","","",16,[[]]],[11,"is_copyable","","",16,[[]]],[11,"kind","","",16,[[],["movekind",4]]],[11,"simple_deserialize","","",13,[[["movetypelayout",4]],["aresult",6]]],[11,"simple_serialize","","",13,[[],[["vec",3],["option",4]]]],[11,"vector_u8","","",13,[[["vec",3]]]],[11,"new","","",17,[[["vec",3],["movevalue",4]]]],[11,"simple_deserialize","","",17,[[["movestructlayout",3]],["aresult",6]]],[11,"fields","","",17,[[]]],[11,"into_inner","","",17,[[],[["vec",3],["movevalue",4]]]],[11,"new","","",18,[[["vec",3],["movetypelayout",4]]]],[11,"fields","","",18,[[]]],[0,"vm_status","move_core_types","",null,null],[4,"VMStatus","move_core_types::vm_status","A `VMStatus` is represented as either",null,null],[13,"Executed","","The VM status corresponding to an EXECUTED status code",19,null],[13,"Error","","Indicates an error from the VM, e.g. OUT_OF_GAS,…",19,null],[13,"MoveAbort","","Indicates an `abort` from inside Move code. Contains the…",19,null],[13,"ExecutionFailure","","Indicates an failure from inside Move code, where the VM…",19,null],[12,"status_code","move_core_types::vm_status::VMStatus","",20,null],[12,"location","","",20,null],[12,"function","","",20,null],[12,"code_offset","","",20,null],[4,"KeptVMStatus","move_core_types::vm_status","",null,null],[13,"Executed","","",21,null],[13,"OutOfGas","","",21,null],[13,"MoveAbort","","",21,null],[13,"ExecutionFailure","","",21,null],[12,"location","move_core_types::vm_status::KeptVMStatus","",22,null],[12,"function","","",22,null],[12,"code_offset","","",22,null],[13,"MiscellaneousError","move_core_types::vm_status","",21,null],[4,"AbortLocation","","An `AbortLocation` specifies where a Move program `abort`…",null,null],[13,"Module","","Indicates `abort` occurred in the specified module",23,null],[13,"Script","","Indicates the `abort` occurred in a script",23,null],[4,"StatusType","","A status type is one of 5 different variants, along with a…",null,null],[13,"Validation","","",24,null],[13,"Verification","","",24,null],[13,"InvariantViolation","","",24,null],[13,"Deserialization","","",24,null],[13,"Execution","","",24,null],[13,"Unknown","","",24,null],[4,"StatusCode","","We don\'t derive Arbitrary on this enum because it is too…",null,null],[13,"UNKNOWN_VALIDATION_STATUS","","",25,null],[13,"INVALID_SIGNATURE","","",25,null],[13,"INVALID_AUTH_KEY","","",25,null],[13,"SEQUENCE_NUMBER_TOO_OLD","","",25,null],[13,"SEQUENCE_NUMBER_TOO_NEW","","",25,null],[13,"INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","","",25,null],[13,"TRANSACTION_EXPIRED","","",25,null],[13,"SENDING_ACCOUNT_DOES_NOT_EXIST","","",25,null],[13,"REJECTED_WRITE_SET","","",25,null],[13,"INVALID_WRITE_SET","","",25,null],[13,"EXCEEDED_MAX_TRANSACTION_SIZE","","",25,null],[13,"UNKNOWN_SCRIPT","","",25,null],[13,"UNKNOWN_MODULE","","",25,null],[13,"MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","","",25,null],[13,"MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","","",25,null],[13,"GAS_UNIT_PRICE_BELOW_MIN_BOUND","","",25,null],[13,"GAS_UNIT_PRICE_ABOVE_MAX_BOUND","","",25,null],[13,"INVALID_GAS_SPECIFIER","","",25,null],[13,"SENDING_ACCOUNT_FROZEN","","",25,null],[13,"UNABLE_TO_DESERIALIZE_ACCOUNT","","",25,null],[13,"CURRENCY_INFO_DOES_NOT_EXIST","","",25,null],[13,"INVALID_MODULE_PUBLISHER","","",25,null],[13,"NO_ACCOUNT_ROLE","","",25,null],[13,"BAD_CHAIN_ID","","",25,null],[13,"SEQUENCE_NUMBER_TOO_BIG","","",25,null],[13,"BAD_TRANSACTION_FEE_CURRENCY","","",25,null],[13,"UNKNOWN_VERIFICATION_ERROR","","",25,null],[13,"INDEX_OUT_OF_BOUNDS","","",25,null],[13,"INVALID_SIGNATURE_TOKEN","","",25,null],[13,"RECURSIVE_STRUCT_DEFINITION","","",25,null],[13,"INVALID_RESOURCE_FIELD","","",25,null],[13,"INVALID_FALL_THROUGH","","",25,null],[13,"NEGATIVE_STACK_SIZE_WITHIN_BLOCK","","",25,null],[13,"INVALID_MAIN_FUNCTION_SIGNATURE","","",25,null],[13,"DUPLICATE_ELEMENT","","",25,null],[13,"INVALID_MODULE_HANDLE","","",25,null],[13,"UNIMPLEMENTED_HANDLE","","",25,null],[13,"LOOKUP_FAILED","","",25,null],[13,"TYPE_MISMATCH","","",25,null],[13,"MISSING_DEPENDENCY","","",25,null],[13,"POP_RESOURCE_ERROR","","",25,null],[13,"BR_TYPE_MISMATCH_ERROR","","",25,null],[13,"ABORT_TYPE_MISMATCH_ERROR","","",25,null],[13,"STLOC_TYPE_MISMATCH_ERROR","","",25,null],[13,"STLOC_UNSAFE_TO_DESTROY_ERROR","","",25,null],[13,"UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","","",25,null],[13,"RET_TYPE_MISMATCH_ERROR","","",25,null],[13,"RET_BORROWED_MUTABLE_REFERENCE_ERROR","","",25,null],[13,"FREEZEREF_TYPE_MISMATCH_ERROR","","",25,null],[13,"FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","","",25,null],[13,"BORROWFIELD_TYPE_MISMATCH_ERROR","","",25,null],[13,"BORROWFIELD_BAD_FIELD_ERROR","","",25,null],[13,"BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","","",25,null],[13,"COPYLOC_UNAVAILABLE_ERROR","","",25,null],[13,"COPYLOC_RESOURCE_ERROR","","",25,null],[13,"COPYLOC_EXISTS_BORROW_ERROR","","",25,null],[13,"MOVELOC_UNAVAILABLE_ERROR","","",25,null],[13,"MOVELOC_EXISTS_BORROW_ERROR","","",25,null],[13,"BORROWLOC_REFERENCE_ERROR","","",25,null],[13,"BORROWLOC_UNAVAILABLE_ERROR","","",25,null],[13,"BORROWLOC_EXISTS_BORROW_ERROR","","",25,null],[13,"CALL_TYPE_MISMATCH_ERROR","","",25,null],[13,"CALL_BORROWED_MUTABLE_REFERENCE_ERROR","","",25,null],[13,"PACK_TYPE_MISMATCH_ERROR","","",25,null],[13,"UNPACK_TYPE_MISMATCH_ERROR","","",25,null],[13,"READREF_TYPE_MISMATCH_ERROR","","",25,null],[13,"READREF_RESOURCE_ERROR","","",25,null],[13,"READREF_EXISTS_MUTABLE_BORROW_ERROR","","",25,null],[13,"WRITEREF_TYPE_MISMATCH_ERROR","","",25,null],[13,"WRITEREF_RESOURCE_ERROR","","",25,null],[13,"WRITEREF_EXISTS_BORROW_ERROR","","",25,null],[13,"WRITEREF_NO_MUTABLE_REFERENCE_ERROR","","",25,null],[13,"INTEGER_OP_TYPE_MISMATCH_ERROR","","",25,null],[13,"BOOLEAN_OP_TYPE_MISMATCH_ERROR","","",25,null],[13,"EQUALITY_OP_TYPE_MISMATCH_ERROR","","",25,null],[13,"EXISTS_RESOURCE_TYPE_MISMATCH_ERROR","","",25,null],[13,"BORROWGLOBAL_TYPE_MISMATCH_ERROR","","",25,null],[13,"BORROWGLOBAL_NO_RESOURCE_ERROR","","",25,null],[13,"MOVEFROM_TYPE_MISMATCH_ERROR","","",25,null],[13,"MOVEFROM_NO_RESOURCE_ERROR","","",25,null],[13,"MOVETO_TYPE_MISMATCH_ERROR","","",25,null],[13,"MOVETO_NO_RESOURCE_ERROR","","",25,null],[13,"MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","","",25,null],[13,"NO_MODULE_HANDLES","","",25,null],[13,"POSITIVE_STACK_SIZE_AT_BLOCK_END","","",25,null],[13,"MISSING_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",25,null],[13,"EXTRANEOUS_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",25,null],[13,"DUPLICATE_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",25,null],[13,"INVALID_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",25,null],[13,"GLOBAL_REFERENCE_ERROR","","",25,null],[13,"CONSTRAINT_KIND_MISMATCH","","",25,null],[13,"NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","","",25,null],[13,"LOOP_IN_INSTANTIATION_GRAPH","","",25,null],[13,"ZERO_SIZED_STRUCT","","",25,null],[13,"LINKER_ERROR","","",25,null],[13,"INVALID_CONSTANT_TYPE","","",25,null],[13,"MALFORMED_CONSTANT_DATA","","",25,null],[13,"EMPTY_CODE_UNIT","","",25,null],[13,"INVALID_LOOP_SPLIT","","",25,null],[13,"INVALID_LOOP_BREAK","","",25,null],[13,"INVALID_LOOP_CONTINUE","","",25,null],[13,"UNSAFE_RET_UNUSED_RESOURCES","","",25,null],[13,"TOO_MANY_LOCALS","","",25,null],[13,"GENERIC_MEMBER_OPCODE_MISMATCH","","",25,null],[13,"FUNCTION_RESOLUTION_FAILURE","","",25,null],[13,"INVALID_OPERATION_IN_SCRIPT","","",25,null],[13,"DUPLICATE_MODULE_NAME","","",25,null],[13,"BACKWARD_INCOMPATIBLE_MODULE_UPDATE","","",25,null],[13,"CYCLIC_MODULE_DEPENDENCY","","",25,null],[13,"UNKNOWN_INVARIANT_VIOLATION_ERROR","","",25,null],[13,"EMPTY_VALUE_STACK","","",25,null],[13,"PC_OVERFLOW","","",25,null],[13,"VERIFICATION_ERROR","","",25,null],[13,"STORAGE_ERROR","","",25,null],[13,"INTERNAL_TYPE_ERROR","","",25,null],[13,"EVENT_KEY_MISMATCH","","",25,null],[13,"UNREACHABLE","","",25,null],[13,"VM_STARTUP_FAILURE","","",25,null],[13,"UNEXPECTED_ERROR_FROM_KNOWN_MOVE_FUNCTION","","",25,null],[13,"VERIFIER_INVARIANT_VIOLATION","","",25,null],[13,"UNEXPECTED_VERIFIER_ERROR","","",25,null],[13,"UNEXPECTED_DESERIALIZATION_ERROR","","",25,null],[13,"FAILED_TO_SERIALIZE_WRITE_SET_CHANGES","","",25,null],[13,"FAILED_TO_DESERIALIZE_RESOURCE","","",25,null],[13,"TYPE_RESOLUTION_FAILURE","","",25,null],[13,"UNKNOWN_BINARY_ERROR","","",25,null],[13,"MALFORMED","","",25,null],[13,"BAD_MAGIC","","",25,null],[13,"UNKNOWN_VERSION","","",25,null],[13,"UNKNOWN_TABLE_TYPE","","",25,null],[13,"UNKNOWN_SIGNATURE_TYPE","","",25,null],[13,"UNKNOWN_SERIALIZED_TYPE","","",25,null],[13,"UNKNOWN_OPCODE","","",25,null],[13,"BAD_HEADER_TABLE","","",25,null],[13,"UNEXPECTED_SIGNATURE_TYPE","","",25,null],[13,"DUPLICATE_TABLE","","",25,null],[13,"UNKNOWN_NOMINAL_RESOURCE","","",25,null],[13,"UNKNOWN_KIND","","",25,null],[13,"UNKNOWN_NATIVE_STRUCT_FLAG","","",25,null],[13,"BAD_U64","","",25,null],[13,"BAD_U128","","",25,null],[13,"VALUE_SERIALIZATION_ERROR","","",25,null],[13,"VALUE_DESERIALIZATION_ERROR","","",25,null],[13,"CODE_DESERIALIZATION_ERROR","","",25,null],[13,"UNKNOWN_RUNTIME_STATUS","","",25,null],[13,"EXECUTED","","",25,null],[13,"OUT_OF_GAS","","",25,null],[13,"RESOURCE_DOES_NOT_EXIST","","",25,null],[13,"RESOURCE_ALREADY_EXISTS","","",25,null],[13,"MISSING_DATA","","",25,null],[13,"DATA_FORMAT_ERROR","","",25,null],[13,"ABORTED","","",25,null],[13,"ARITHMETIC_ERROR","","",25,null],[13,"EXECUTION_STACK_OVERFLOW","","",25,null],[13,"CALL_STACK_OVERFLOW","","",25,null],[13,"VM_MAX_TYPE_DEPTH_REACHED","","",25,null],[13,"VM_MAX_VALUE_DEPTH_REACHED","","",25,null],[13,"UNKNOWN_STATUS","","",25,null],[0,"known_locations","","",null,null],[5,"account_module_abort","move_core_types::vm_status::known_locations","Location for an abort in the Account module",null,[[],["abortlocation",4]]],[5,"diem_module_abort","","",null,[[],["abortlocation",4]]],[5,"designated_dealer_module_abort","","",null,[[],["abortlocation",4]]],[7,"ACCOUNT_MODULE_IDENTIFIER","","The Identifier for the Account module.",null,null],[7,"ACCOUNT_MODULE","","The ModuleId for the Account module.",null,null],[7,"DIEM_MODULE_IDENTIFIER","","The Identifier for the Diem module.",null,null],[7,"DIEM_MODULE","","The ModuleId for the Diem module.",null,null],[7,"DESIGNATED_DEALER_MODULE_IDENTIFIER","","The Identifier for the Designated Dealer module.",null,null],[7,"DESIGNATED_DEALER_MODULE","","The ModuleId for the Designated Dealer module.",null,null],[17,"ACCOUNT_MODULE_NAME","","The name of the Account module.",null,null],[17,"DIEM_MODULE_NAME","","The name of the Diem module.",null,null],[17,"DESIGNATED_DEALER_MODULE_NAME","","The name of the Designated Dealer module.",null,null],[0,"sub_status","move_core_types::vm_status","",null,null],[17,"NFE_VECTOR_ERROR_BASE","move_core_types::vm_status::sub_status","",null,null],[17,"NFE_BCS_SERIALIZATION_FAILURE","","",null,null],[6,"DiscardedVMStatus","move_core_types::vm_status","",null,null],[7,"VALIDATION_STATUS_MIN_CODE","","The minimum status code for validation statuses",null,null],[7,"VALIDATION_STATUS_MAX_CODE","","The maximum status code for validation statuses",null,null],[7,"VERIFICATION_STATUS_MIN_CODE","","The minimum status code for verification statuses",null,null],[7,"VERIFICATION_STATUS_MAX_CODE","","The maximum status code for verification statuses",null,null],[7,"INVARIANT_VIOLATION_STATUS_MIN_CODE","","The minimum status code for invariant violation statuses",null,null],[7,"INVARIANT_VIOLATION_STATUS_MAX_CODE","","The maximum status code for invariant violation statuses",null,null],[7,"DESERIALIZATION_STATUS_MIN_CODE","","The minimum status code for deserialization statuses",null,null],[7,"DESERIALIZATION_STATUS_MAX_CODE","","The maximum status code for deserialization statuses",null,null],[7,"EXECUTION_STATUS_MIN_CODE","","The minimum status code for runtime statuses",null,null],[7,"EXECUTION_STATUS_MAX_CODE","","The maximum status code for runtim statuses",null,null],[11,"status_code","","Return the status code for the `VMStatus`",19,[[],["statuscode",4]]],[11,"move_abort_code","","Returns the Move abort code if the status is `MoveAbort`,…",19,[[],["option",4]]],[11,"status_type","","Return the status type for this `VMStatus`. This is solely…",19,[[],["statustype",4]]],[11,"keep_or_discard","","Returns `Ok` with a recorded status if it should be kept,…",19,[[],[["discardedvmstatus",6],["keptvmstatus",4],["result",6]]]],[11,"status_type","","Return the status type for this status code",25,[[],["statustype",4]]],[11,"from","move_core_types::account_address","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"encode_hex","","",0,[[]]],[11,"encode_hex_upper","","",0,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","move_core_types::gas_schedule","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"test_only_hash","","",27,[[],["hashvalue",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"test_only_hash","","",28,[[],["hashvalue",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"from","move_core_types::identifier","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","move_core_types::language_storage","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"test_only_hash","","",8,[[],["hashvalue",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"vzip","","",9,[[]]],[11,"from","move_core_types::transaction_argument","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"from","move_core_types::value","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"test_only_hash","","",17,[[],["hashvalue",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"test_only_hash","","",18,[[],["hashvalue",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"test_only_hash","","",15,[[],["hashvalue",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"test_only_hash","","",16,[[],["hashvalue",3]]],[11,"vzip","","",16,[[]]],[11,"from","move_core_types::vm_status","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"test_only_hash","","",19,[[],["hashvalue",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"test_only_hash","","",21,[[],["hashvalue",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"test_only_hash","","",23,[[],["hashvalue",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"test_only_hash","","",25,[[],["hashvalue",3]]],[11,"vzip","","",25,[[]]],[11,"new","move_core_types::gas_schedule","",27,[[["gascarrier",6]]]],[11,"get","","",27,[[],["gascarrier",6]]],[11,"new","","",28,[[["gascarrier",6]]]],[11,"get","","",28,[[],["gascarrier",6]]],[11,"new","","",29,[[["gascarrier",6]]]],[11,"get","","",29,[[],["gascarrier",6]]],[11,"as_ref","move_core_types::account_address","",0,[[]]],[11,"as_ref","move_core_types::identifier","",5,[[],["identstr",3]]],[11,"from","","",5,[[["identstr",3]]]],[11,"clone","move_core_types::account_address","",0,[[],["accountaddress",3]]],[11,"clone","","",26,[[],["accountaddresshasher",3]]],[11,"clone","move_core_types::gas_schedule","",27,[[],["abstractmemorysize",3]]],[11,"clone","","",28,[[],["gasunits",3]]],[11,"clone","","",29,[[],["gasprice",3]]],[11,"clone","","",1,[[],["gasconstants",3]]],[11,"clone","","",2,[[],["costtable",3]]],[11,"clone","","",3,[[],["gascost",3]]],[11,"clone","move_core_types::identifier","",5,[[],["identifier",3]]],[11,"clone","move_core_types::language_storage","",9,[[],["typetag",4]]],[11,"clone","","",7,[[],["structtag",3]]],[11,"clone","","",30,[[],["structtaghasher",3]]],[11,"clone","","",8,[[],["resourcekey",3]]],[11,"clone","","",10,[[],["moduleid",3]]],[11,"clone","","",31,[[],["moduleidhasher",3]]],[11,"clone","move_core_types::transaction_argument","",12,[[],["transactionargument",4]]],[11,"clone","move_core_types::value","",17,[[],["movestruct",3]]],[11,"clone","","",13,[[],["movevalue",4]]],[11,"clone","","",18,[[],["movestructlayout",3]]],[11,"clone","","",14,[[],["movetypelayout",4]]],[11,"clone","","",15,[[],["movekind",4]]],[11,"clone","","",16,[[],["movekindinfo",4]]],[11,"clone","move_core_types::vm_status","",19,[[],["vmstatus",4]]],[11,"clone","","",21,[[],["keptvmstatus",4]]],[11,"clone","","",23,[[],["abortlocation",4]]],[11,"clone","","",24,[[],["statustype",4]]],[11,"clone","","",25,[[],["statuscode",4]]],[11,"default","move_core_types::account_address","",26,[[]]],[11,"default","move_core_types::gas_schedule","",1,[[]]],[11,"default","move_core_types::language_storage","",30,[[]]],[11,"default","","",31,[[]]],[11,"cmp","move_core_types::account_address","",0,[[["accountaddress",3]],["ordering",4]]],[11,"cmp","move_core_types::identifier","",5,[[["identifier",3]],["ordering",4]]],[11,"cmp","","",6,[[["identstr",3]],["ordering",4]]],[11,"cmp","move_core_types::language_storage","",9,[[["typetag",4]],["ordering",4]]],[11,"cmp","","",7,[[["structtag",3]],["ordering",4]]],[11,"cmp","","",8,[[["resourcekey",3]],["ordering",4]]],[11,"cmp","","",10,[[["moduleid",3]],["ordering",4]]],[11,"cmp","move_core_types::vm_status","",19,[[["vmstatus",4]],["ordering",4]]],[11,"cmp","","",21,[[["keptvmstatus",4]],["ordering",4]]],[11,"cmp","","",23,[[["abortlocation",4]],["ordering",4]]],[11,"cmp","","",25,[[["statuscode",4]],["ordering",4]]],[11,"eq","move_core_types::account_address","",0,[[["accountaddress",3]]]],[11,"ne","","",0,[[["accountaddress",3]]]],[11,"eq","move_core_types::gas_schedule","",27,[[["abstractmemorysize",3]]]],[11,"ne","","",27,[[["abstractmemorysize",3]]]],[11,"eq","","",28,[[["gasunits",3]]]],[11,"ne","","",28,[[["gasunits",3]]]],[11,"eq","","",29,[[["gasprice",3]]]],[11,"ne","","",29,[[["gasprice",3]]]],[11,"eq","","",1,[[["gasconstants",3]]]],[11,"ne","","",1,[[["gasconstants",3]]]],[11,"eq","","",2,[[["costtable",3]]]],[11,"ne","","",2,[[["costtable",3]]]],[11,"eq","","",3,[[["gascost",3]]]],[11,"ne","","",3,[[["gascost",3]]]],[11,"eq","move_core_types::identifier","",5,[[["identifier",3]]]],[11,"ne","","",5,[[["identifier",3]]]],[11,"eq","","",6,[[["identstr",3]]]],[11,"ne","","",6,[[["identstr",3]]]],[11,"eq","move_core_types::language_storage","",9,[[["typetag",4]]]],[11,"ne","","",9,[[["typetag",4]]]],[11,"eq","","",7,[[["structtag",3]]]],[11,"ne","","",7,[[["structtag",3]]]],[11,"eq","","",8,[[["resourcekey",3]]]],[11,"ne","","",8,[[["resourcekey",3]]]],[11,"eq","","",10,[[["moduleid",3]]]],[11,"ne","","",10,[[["moduleid",3]]]],[11,"eq","move_core_types::transaction_argument","",12,[[["transactionargument",4]]]],[11,"ne","","",12,[[["transactionargument",4]]]],[11,"eq","move_core_types::value","",17,[[["movestruct",3]]]],[11,"ne","","",17,[[["movestruct",3]]]],[11,"eq","","",13,[[["movevalue",4]]]],[11,"ne","","",13,[[["movevalue",4]]]],[11,"eq","move_core_types::vm_status","",19,[[["vmstatus",4]]]],[11,"ne","","",19,[[["vmstatus",4]]]],[11,"eq","","",21,[[["keptvmstatus",4]]]],[11,"ne","","",21,[[["keptvmstatus",4]]]],[11,"eq","","",23,[[["abortlocation",4]]]],[11,"ne","","",23,[[["abortlocation",4]]]],[11,"eq","","",24,[[["statustype",4]]]],[11,"eq","","",25,[[["statuscode",4]]]],[11,"partial_cmp","move_core_types::account_address","",0,[[["accountaddress",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["accountaddress",3]]]],[11,"le","","",0,[[["accountaddress",3]]]],[11,"gt","","",0,[[["accountaddress",3]]]],[11,"ge","","",0,[[["accountaddress",3]]]],[11,"partial_cmp","move_core_types::identifier","",5,[[["identifier",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["identifier",3]]]],[11,"le","","",5,[[["identifier",3]]]],[11,"gt","","",5,[[["identifier",3]]]],[11,"ge","","",5,[[["identifier",3]]]],[11,"partial_cmp","","",6,[[["identstr",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["identstr",3]]]],[11,"le","","",6,[[["identstr",3]]]],[11,"gt","","",6,[[["identstr",3]]]],[11,"ge","","",6,[[["identstr",3]]]],[11,"partial_cmp","move_core_types::language_storage","",9,[[["typetag",4]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["typetag",4]]]],[11,"le","","",9,[[["typetag",4]]]],[11,"gt","","",9,[[["typetag",4]]]],[11,"ge","","",9,[[["typetag",4]]]],[11,"partial_cmp","","",7,[[["structtag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["structtag",3]]]],[11,"le","","",7,[[["structtag",3]]]],[11,"gt","","",7,[[["structtag",3]]]],[11,"ge","","",7,[[["structtag",3]]]],[11,"partial_cmp","","",8,[[["resourcekey",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["resourcekey",3]]]],[11,"le","","",8,[[["resourcekey",3]]]],[11,"gt","","",8,[[["resourcekey",3]]]],[11,"ge","","",8,[[["resourcekey",3]]]],[11,"partial_cmp","","",10,[[["moduleid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["moduleid",3]]]],[11,"le","","",10,[[["moduleid",3]]]],[11,"gt","","",10,[[["moduleid",3]]]],[11,"ge","","",10,[[["moduleid",3]]]],[11,"partial_cmp","move_core_types::vm_status","",19,[[["vmstatus",4]],[["ordering",4],["option",4]]]],[11,"lt","","",19,[[["vmstatus",4]]]],[11,"le","","",19,[[["vmstatus",4]]]],[11,"gt","","",19,[[["vmstatus",4]]]],[11,"ge","","",19,[[["vmstatus",4]]]],[11,"partial_cmp","","",21,[[["keptvmstatus",4]],[["ordering",4],["option",4]]]],[11,"lt","","",21,[[["keptvmstatus",4]]]],[11,"le","","",21,[[["keptvmstatus",4]]]],[11,"gt","","",21,[[["keptvmstatus",4]]]],[11,"ge","","",21,[[["keptvmstatus",4]]]],[11,"partial_cmp","","",23,[[["abortlocation",4]],[["ordering",4],["option",4]]]],[11,"lt","","",23,[[["abortlocation",4]]]],[11,"le","","",23,[[["abortlocation",4]]]],[11,"gt","","",23,[[["abortlocation",4]]]],[11,"ge","","",23,[[["abortlocation",4]]]],[11,"partial_cmp","","",25,[[["statuscode",4]],[["ordering",4],["option",4]]]],[11,"to_owned","move_core_types::identifier","",6,[[],["identifier",3]]],[11,"deref","","",5,[[],["identstr",3]]],[11,"fmt","move_core_types::account_address","",0,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::gas_schedule","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::identifier","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::language_storage","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::transaction_argument","",12,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::value","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::vm_status","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::account_address","",0,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::identifier","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::language_storage","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::vm_status","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"hash","move_core_types::account_address","",0,[[]]],[11,"hash","move_core_types::gas_schedule","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","move_core_types::identifier","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","move_core_types::language_storage","",9,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",10,[[]]],[11,"hash","move_core_types::transaction_argument","",12,[[]]],[11,"hash","move_core_types::vm_status","",19,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"borrow","move_core_types::identifier","",5,[[],["identstr",3]]],[11,"try_from","move_core_types::account_address","Tries to convert the provided byte array into Address.",0,[[],[["result",6],["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",0,[[],[["result",6],["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte buffer into Address.",0,[[["vec",3]],[["result",6],["accountaddress",3]]]],[11,"try_from","","",0,[[["string",3]],[["result",6],["accountaddress",3]]]],[11,"try_from","move_core_types::vm_status","",25,[[],["result",6]]],[11,"from_str","move_core_types::account_address","",0,[[],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"write","","",26,[[],["result",6]]],[11,"flush","","",26,[[],["result",6]]],[11,"write","move_core_types::language_storage","",30,[[],["result",6]]],[11,"flush","","",30,[[],["result",6]]],[11,"write","","",31,[[],["result",6]]],[11,"flush","","",31,[[],["result",6]]],[11,"hash","move_core_types::account_address","",0,[[],["hashvalue",3]]],[11,"hash","move_core_types::language_storage","",7,[[],["hashvalue",3]]],[11,"hash","","",10,[[],["hashvalue",3]]],[11,"seed","move_core_types::account_address","",26,[[]]],[11,"update","","",26,[[]]],[11,"finish","","",26,[[],["hashvalue",3]]],[11,"seed","move_core_types::language_storage","",30,[[]]],[11,"update","","",30,[[]]],[11,"finish","","",30,[[],["hashvalue",3]]],[11,"seed","","",31,[[]]],[11,"update","","",31,[[]]],[11,"finish","","",31,[[],["hashvalue",3]]],[11,"serialize","move_core_types::account_address","",0,[[],["result",4]]],[11,"serialize","move_core_types::gas_schedule","",27,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","move_core_types::identifier","",5,[[],["result",4]]],[11,"serialize","move_core_types::language_storage","",9,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","move_core_types::transaction_argument","",12,[[],["result",4]]],[11,"serialize","move_core_types::value","",18,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",13,[[["serializer",8]],["result",4]]],[11,"serialize","","",17,[[["serializer",8]],["result",4]]],[11,"serialize","move_core_types::vm_status","",19,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"deserialize","move_core_types::account_address","",0,[[],["result",4]]],[11,"deserialize","move_core_types::gas_schedule","",27,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","move_core_types::identifier","",5,[[],["result",4]]],[11,"deserialize","move_core_types::language_storage","",9,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","move_core_types::transaction_argument","",12,[[],["result",4]]],[11,"deserialize","move_core_types::value","",18,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","move_core_types::vm_status","",19,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"arbitrary_with","move_core_types::account_address","",0,[[]]],[11,"arbitrary_with","move_core_types::identifier","",5,[[]]],[11,"arbitrary_with","move_core_types::language_storage","",10,[[]]],[11,"arbitrary_with","","",9,[[]]],[11,"arbitrary_with","move_core_types::transaction_argument","",12,[[]]],[11,"arbitrary_with","move_core_types::vm_status","",19,[[]]],[11,"arbitrary_with","","",21,[[]]],[11,"arbitrary_with","","",23,[[]]],[11,"arbitrary_with","","",25,[[]]],[11,"ref_cast","move_core_types::identifier","",6,[[]]],[11,"ref_cast_mut","","",6,[[]]]],"p":[[3,"AccountAddress"],[3,"GasConstants"],[3,"CostTable"],[3,"GasCost"],[8,"GasAlgebra"],[3,"Identifier"],[3,"IdentStr"],[3,"StructTag"],[3,"ResourceKey"],[4,"TypeTag"],[3,"ModuleId"],[8,"MoveResource"],[4,"TransactionArgument"],[4,"MoveValue"],[4,"MoveTypeLayout"],[4,"MoveKind"],[4,"MoveKindInfo"],[3,"MoveStruct"],[3,"MoveStructLayout"],[4,"VMStatus"],[13,"ExecutionFailure"],[4,"KeptVMStatus"],[13,"ExecutionFailure"],[4,"AbortLocation"],[4,"StatusType"],[4,"StatusCode"],[3,"AccountAddressHasher"],[3,"AbstractMemorySize"],[3,"GasUnits"],[3,"GasPrice"],[3,"StructTagHasher"],[3,"ModuleIdHasher"]]},\
"move_coverage":{"doc":"","i":[[0,"coverage_map","move_coverage","",null,null],[3,"CoverageMap","move_coverage::coverage_map","",null,null],[12,"exec_maps","","",0,null],[3,"ModuleCoverageMap","","",null,null],[12,"module_addr","","",1,null],[12,"module_name","","",1,null],[12,"function_maps","","",1,null],[3,"ExecCoverageMap","","",null,null],[12,"exec_id","","",2,null],[12,"module_maps","","",2,null],[3,"ExecCoverageMapWithModules","","",null,null],[12,"module_maps","","",3,null],[12,"compiled_modules","","",3,null],[3,"TraceEntry","","",null,null],[12,"module_addr","","",4,null],[12,"module_name","","",4,null],[12,"func_name","","",4,null],[12,"func_pc","","",4,null],[3,"TraceMap","","",null,null],[12,"exec_maps","","",5,null],[5,"output_map_to_file","","",null,[[["asref",8],["path",3]],["result",6]]],[6,"FunctionCoverage","","",null,null],[11,"update_coverage_from_trace_file","","Takes in a file containing a raw VM trace, and returns an…",0,[[["asref",8],["path",3]]]],[11,"from_trace_file","","Takes in a file containing a raw VM trace, and returns a…",0,[[["asref",8],["path",3]]]],[11,"from_binary_file","","Takes in a file containing a serialized coverage map and…",0,[[["asref",8],["path",3]]]],[11,"insert","","",0,[[["identifier",3],["accountaddress",3]]]],[11,"to_unified_exec_map","","",0,[[],["execcoveragemap",3]]],[11,"new","","",1,[[["identifier",3],["accountaddress",3]]]],[11,"insert_multi","","",1,[[["identifier",3]]]],[11,"insert","","",1,[[["identifier",3]]]],[11,"merge","","",1,[[["modulecoveragemap",3]]]],[11,"get_function_coverage","","",1,[[["identstr",3]],[["functioncoverage",6],["option",4]]]],[11,"new","","",2,[[["string",3]]]],[11,"insert_multi","","",2,[[["identifier",3],["accountaddress",3]]]],[11,"insert","","",2,[[["identifier",3],["accountaddress",3]]]],[11,"into_coverage_map_with_modules","","",2,[[["btreemap",3],["accountaddress",3],["btreemap",3]],["execcoveragemapwithmodules",3]]],[11,"empty","","",3,[[]]],[11,"merge","","",3,[[["execcoveragemapwithmodules",3]]]],[11,"update_from_trace_file","","Takes in a file containing a raw VM trace, and returns an…",5,[[["asref",8],["path",3]]]],[11,"from_trace_file","","",5,[[["asref",8],["path",3]]]],[11,"from_binary_file","","",5,[[["asref",8],["path",3]]]],[11,"insert","","",5,[[["identifier",3],["accountaddress",3]]]],[0,"source_coverage","move_coverage","",null,null],[3,"FunctionSourceCoverage","move_coverage::source_coverage","",null,null],[12,"fn_is_native","","",6,null],[12,"uncovered_locations","","",6,null],[3,"SourceCoverageBuilder","","",null,null],[3,"SourceCoverage","","",null,null],[12,"annotated_lines","","",7,null],[4,"AbstractSegment","","",null,null],[13,"Bounded","","",8,null],[12,"start","move_coverage::source_coverage::AbstractSegment","",9,null],[12,"end","","",9,null],[13,"BoundedRight","move_coverage::source_coverage","",8,null],[12,"end","move_coverage::source_coverage::AbstractSegment","",10,null],[13,"BoundedLeft","move_coverage::source_coverage","",8,null],[12,"start","move_coverage::source_coverage::AbstractSegment","",11,null],[4,"StringSegment","move_coverage::source_coverage","",null,null],[13,"Covered","","",12,null],[13,"Uncovered","","",12,null],[6,"AnnotatedLine","","",null,null],[11,"new","","",13,[[["sourcemap",3],["compiledmodule",3],["coveragemap",3]]]],[11,"compute_source_coverage","","",13,[[["path",3]],["sourcecoverage",3]]],[11,"output_source_coverage","","",7,[[],["result",6]]],[0,"summary","move_coverage","",null,null],[3,"ModuleSummary","move_coverage::summary","",null,null],[12,"module_name","","",14,null],[12,"function_summaries","","",14,null],[3,"FunctionSummary","","",null,null],[12,"fn_is_native","","",15,null],[12,"total","","",15,null],[12,"covered","","",15,null],[3,"FunctionInfo","","",null,null],[12,"fn_name","","",16,null],[12,"fn_entry","","",16,null],[12,"fn_returns","","",16,null],[12,"fn_branches","","",16,null],[12,"fn_num_paths","","",16,null],[5,"summarize_inst_cov_by_module","","",null,[[["compiledmodule",3],["modulecoveragemap",3],["option",4]],["modulesummary",3]]],[5,"summarize_inst_cov","","",null,[[["compiledmodule",3],["execcoveragemap",3]],["modulesummary",3]]],[5,"summarize_path_cov","","",null,[[["compiledmodule",3],["tracemap",3]],["modulesummary",3]]],[11,"summarize_csv","","Summarizes the modules coverage in CSV format",14,[[],["result",6]]],[11,"summarize_human","","Summarizes the modules coverage, and returns the total…",14,[[],["result",6]]],[11,"percent_coverage","","",15,[[]]],[11,"into_module_summaries","move_coverage::coverage_map","",3,[[],[["modulesummary",3],["btreemap",3],["string",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","move_coverage::source_coverage","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"test_only_hash","","",8,[[],["hashvalue",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"equivalent","","",8,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","move_coverage::summary","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"test_only_hash","","",15,[[],["hashvalue",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"clone","move_coverage::source_coverage","",6,[[],["functionsourcecoverage",3]]],[11,"cmp","","",8,[[["abstractsegment",4]],["ordering",4]]],[11,"eq","","",8,[[["abstractsegment",4]]]],[11,"ne","","",8,[[["abstractsegment",4]]]],[11,"partial_cmp","","",8,[[["abstractsegment",4]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["abstractsegment",4]]]],[11,"le","","",8,[[["abstractsegment",4]]]],[11,"gt","","",8,[[["abstractsegment",4]]]],[11,"ge","","",8,[[["abstractsegment",4]]]],[11,"fmt","move_coverage::coverage_map","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","move_coverage::source_coverage","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","move_coverage::summary","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"deserialize","move_coverage::coverage_map","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","move_coverage::summary","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"serialize","move_coverage::coverage_map","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","move_coverage::source_coverage","",6,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","move_coverage::summary","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]]],"p":[[3,"CoverageMap"],[3,"ModuleCoverageMap"],[3,"ExecCoverageMap"],[3,"ExecCoverageMapWithModules"],[3,"TraceEntry"],[3,"TraceMap"],[3,"FunctionSourceCoverage"],[3,"SourceCoverage"],[4,"AbstractSegment"],[13,"Bounded"],[13,"BoundedRight"],[13,"BoundedLeft"],[4,"StringSegment"],[3,"SourceCoverageBuilder"],[3,"ModuleSummary"],[3,"FunctionSummary"],[3,"FunctionInfo"]]},\
"move_explain":{"doc":"","i":[[5,"get_explanation","move_explain","Given the module ID and the abort code raised from that…",null,[[["moduleid",3]],[["errorcontext",3],["option",4]]]]],"p":[]},\
"move_ir_types":{"doc":"Base types for the Move IR.","i":[[0,"ast","move_ir_types","",null,null],[3,"Program","move_ir_types::ast","A set of Move modules and a Move transaction script",null,null],[12,"modules","","The modules to publish",0,null],[12,"script","","The transaction script to execute",0,null],[3,"Script","","The Move transaction script to be executed",null,null],[12,"imports","","The dependencies of `main`, i.e. of the transaction script",1,null],[12,"explicit_dependency_declarations","","Explicit declaration of dependencies. If not provided,…",1,null],[12,"constants","","the constants that the module defines. Only a utility, the…",1,null],[12,"main","","The transaction script\'s `main` procedure",1,null],[3,"ModuleName","","Newtype for a name of a module",null,null],[3,"QualifiedModuleIdent","","Newtype of the address + the module name `addr.m`",null,null],[12,"name","","Name for the module. Will be unique among modules…",2,null],[12,"address","","Address that this module is published under",2,null],[3,"ModuleDefinition","","A Move module",null,null],[12,"name","","name of the module",3,null],[12,"imports","","the module\'s dependencies",3,null],[12,"explicit_dependency_declarations","","Explicit declaration of dependencies. If not provided,…",3,null],[12,"structs","","the structs (including resources) that the module defines",3,null],[12,"constants","","the constants that the script defines. Only a utility, the…",3,null],[12,"functions","","the procedure that the module defines",3,null],[12,"synthetics","","the synthetic, specification variables the module defines.",3,null],[3,"ModuleDependency","","Explicitly given dependency",null,null],[12,"name","","Qualified identifer of the dependency",4,null],[12,"structs","","The structs (including resources) that the dependency…",4,null],[12,"functions","","The signatures of functions that the dependency defines",4,null],[3,"ImportDefinition","","A dependency/import declaration",null,null],[12,"ident","","the dependency `addr.m` or `Transaction.m`",5,null],[12,"alias","","the alias for that dependency `m`",5,null],[3,"Var_","","Newtype for a variable/local",null,null],[3,"TypeVar_","","New type that represents a type variable. Used to declare…",null,null],[3,"QualifiedStructIdent","","Identifier for a struct definition. Tells us where to look…",null,null],[12,"module","","Module name and address in which the struct is contained",6,null],[12,"name","","Name for the struct class. Should be unique among structs…",6,null],[3,"Field_","","The field newtype",null,null],[3,"StructName","","Newtype for the name of a struct",null,null],[3,"StructDefinition_","","A Move struct",null,null],[12,"is_nominal_resource","","The struct will have kind resource if…",7,null],[12,"name","","Human-readable name for the struct that also serves as a…",7,null],[12,"type_formals","","Kind constraints of the type parameters",7,null],[12,"fields","","the fields each instance has",7,null],[12,"invariants","","the invariants for this struct",7,null],[3,"StructDependency","","An explicit struct dependency",null,null],[12,"is_nominal_resource","","The struct will have kind resource if…",8,null],[12,"name","","Human-readable name for the struct that also serves as a…",8,null],[12,"type_formals","","Kind constraints of the type parameters",8,null],[3,"ConstantName","","Newtype for the name of a constant",null,null],[3,"Constant","","A constant declaration in a module or script",null,null],[12,"name","","The constant\'s name. Not carried through to the Move…",9,null],[12,"signature","","The type of the constant\'s value",9,null],[12,"value","","The constant\'s value",9,null],[3,"FunctionName","","Newtype for the name of a function",null,null],[3,"FunctionSignature","","The signature of a function",null,null],[12,"formals","","Possibly-empty list of (formal name, formal type) pairs.…",10,null],[12,"return_type","","Optional return types",10,null],[12,"type_formals","","Possibly-empty list of (TypeVar, Kind) pairs.s.",10,null],[3,"FunctionDependency","","An explicit function dependency",null,null],[12,"name","","Name of the function dependency",11,null],[12,"signature","","Signature of the function dependency",11,null],[3,"Function_","","A Move function/procedure",null,null],[12,"visibility","","The visibility (public or internal)",12,null],[12,"signature","","The type signature",12,null],[12,"acquires","","List of nominal resources (declared in this module) that…",12,null],[12,"specifications","","List of specifications for the Move prover (experimental)",12,null],[12,"body","","The code for the procedure",12,null],[3,"IfElse","","Struct defining an if statement",null,null],[12,"cond","","the if\'s condition",13,null],[12,"if_block","","the block taken if the condition is `true`",13,null],[12,"else_block","","the block taken if the condition is `false`",13,null],[3,"While","","Struct defining a while statement",null,null],[12,"cond","","The condition for a while statement",14,null],[12,"block","","The block taken if the condition is `true`",14,null],[3,"Loop","","Struct defining a loop statement",null,null],[12,"block","","The body of the loop",15,null],[3,"Block_","","`{ s }`",null,null],[12,"stmts","","The statements that make up the block",16,null],[3,"BlockLabel","","",null,null],[12,"0","","",17,null],[3,"NopLabel","","",null,null],[12,"0","","",18,null],[4,"ScriptOrModule","","A script or a module, used to represent the two types of…",null,null],[13,"Script","","The script to execute.",19,null],[13,"Module","","The module to publish.",19,null],[4,"ModuleIdent","","Either a qualified module name like `addr.m` or…",null,null],[13,"Transaction","","",20,null],[13,"Qualified","","",20,null],[4,"Kind","","The kind of a type. Analogous to `vm::file_format::Kind`.",null,null],[13,"All","","Represents the super set of all types.",21,null],[13,"Resource","","`Resource` types must follow move semantics and various…",21,null],[13,"Copyable","","`Copyable` types do not need to follow the `Resource` rules.",21,null],[4,"Type","","The type of a single value",null,null],[13,"Address","","`address`",22,null],[13,"Signer","","`signer`",22,null],[13,"U8","","`u8`",22,null],[13,"U64","","`u64`",22,null],[13,"U128","","`u128`",22,null],[13,"Bool","","`bool`",22,null],[13,"Vector","","`vector`",22,null],[13,"Struct","","A module defined struct",22,null],[13,"Reference","","A reference type, the bool flag indicates whether the…",22,null],[13,"TypeParameter","","A type parameter",22,null],[4,"StructDefinitionFields","","The fields of a Move struct definition",null,null],[13,"Move","","The fields are declared",23,null],[12,"fields","move_ir_types::ast::StructDefinitionFields","",24,null],[13,"Native","move_ir_types::ast","The struct is a type provided by the VM",23,null],[4,"FunctionVisibility","","Public or internal modifier for a procedure",null,null],[13,"Public","","The procedure can be invoked anywhere `public`",25,null],[13,"Internal","","The procedure can be invoked only internally `<no modifier>`",25,null],[4,"FunctionBody","","The body of a Move function",null,null],[13,"Move","","The body is declared `locals` are all of the declared…",26,null],[12,"locals","move_ir_types::ast::FunctionBody","",27,null],[12,"code","","",27,null],[13,"Bytecode","move_ir_types::ast","",26,null],[12,"locals","move_ir_types::ast::FunctionBody","",28,null],[12,"code","","",28,null],[13,"Native","move_ir_types::ast","The body is provided by the runtime",26,null],[4,"Builtin","","Builtin \\\"function\\\"-like operators that often have a…",null,null],[13,"Exists","","Check if there is a struct object (`StructName` resolved…",29,null],[13,"BorrowGlobal","","Get a reference to the resource(`StructName` resolved by…",29,null],[13,"MoveFrom","","Remove a resource of the given type from the account with…",29,null],[13,"MoveTo","","Publish an instantiated struct object into signer\'s…",29,null],[13,"Freeze","","Convert a mutable reference into an immutable one",29,null],[13,"ToU8","","Cast an integer into u8.",29,null],[13,"ToU64","","Cast an integer into u64.",29,null],[13,"ToU128","","Cast an integer into u128.",29,null],[4,"FunctionCall_","","Enum for different function calls",null,null],[13,"Builtin","","functions defined in the host environment",30,null],[13,"ModuleFunctionCall","","The call of a module defined procedure",30,null],[12,"module","move_ir_types::ast::FunctionCall_","",31,null],[12,"name","","",31,null],[12,"type_actuals","","",31,null],[4,"LValue_","move_ir_types::ast","Enum for Move lvalues",null,null],[13,"Var","","`x`",32,null],[13,"Mutate","","`*e`",32,null],[13,"Pop","","`_`",32,null],[4,"Cmd_","","Enum for Move commands",null,null],[13,"Assign","","`l_1, ..., l_n = e`",33,null],[13,"Unpack","","`n { f_1: x_1, ... , f_j: x_j  } = e`",33,null],[13,"Abort","","`abort e`",33,null],[13,"Return","","`return e_1, ... , e_j`",33,null],[13,"Break","","`break`",33,null],[13,"Continue","","`continue`",33,null],[13,"Exp","","",33,null],[4,"Statement","","",null,null],[13,"CommandStatement","","`c;`",34,null],[13,"IfElseStatement","","`if (e) { s_1 } else { s_2 }`",34,null],[13,"WhileStatement","","`while (e) { s }`",34,null],[13,"LoopStatement","","`loop { s }`",34,null],[13,"EmptyStatement","","no-op that eases parsing in some places",34,null],[4,"CopyableVal_","","Bottom of the value hierarchy. These values can be…",null,null],[13,"Address","","An address in the global storage",35,null],[13,"U8","","An unsigned 8-bit integer",35,null],[13,"U64","","An unsigned 64-bit integer",35,null],[13,"U128","","An unsigned 128-bit integer",35,null],[13,"Bool","","true or false",35,null],[13,"ByteArray","","`b\\\"<bytes>\\\"`",35,null],[4,"UnaryOp","","Enum for unary operators",null,null],[13,"Not","","Boolean negation",36,null],[4,"BinOp","","Enum for binary operators",null,null],[13,"Add","","`+`",37,null],[13,"Sub","","`-`",37,null],[13,"Mul","","`*`",37,null],[13,"Mod","","`%`",37,null],[13,"Div","","`/`",37,null],[13,"BitOr","","`|`",37,null],[13,"BitAnd","","`&`",37,null],[13,"Xor","","`^`",37,null],[13,"Shl","","`<<`",37,null],[13,"Shr","","`>>`",37,null],[13,"And","","`&&`",37,null],[13,"Or","","`||`",37,null],[13,"Eq","","`==`",37,null],[13,"Neq","","`!=`",37,null],[13,"Lt","","`<`",37,null],[13,"Gt","","`>`",37,null],[13,"Le","","`<=`",37,null],[13,"Ge","","`>=`",37,null],[13,"Subrange","","\'..\'  only used in specs",37,null],[4,"Exp_","","Enum for all expressions",null,null],[13,"Dereference","","`*e`",38,null],[13,"UnaryExp","","`op e`",38,null],[13,"BinopExp","","`e_1 op e_2`",38,null],[13,"Value","","Wrapper to lift `CopyableVal` into `Exp` `v`",38,null],[13,"Pack","","Takes the given field values and instantiates the struct…",38,null],[13,"Borrow","","`&e.f`, `&mut e.f`",38,null],[12,"is_mutable","move_ir_types::ast::Exp_","mutable or not",39,null],[12,"exp","","the expression containing the reference",39,null],[12,"field","","the field being borrowed",39,null],[13,"Move","move_ir_types::ast","`move(x)`",38,null],[13,"Copy","","`copy(x)`",38,null],[13,"BorrowLocal","","`&x` or `&mut x`",38,null],[13,"FunctionCall","","`f(e)` or `f(e_1, e_2, ..., e_j)`",38,null],[13,"ExprList","","(e_1, e_2, e_3, ..., e_j)",38,null],[4,"Bytecode_","","",null,null],[13,"Pop","","",40,null],[13,"Ret","","",40,null],[13,"Nop","","",40,null],[13,"BrTrue","","",40,null],[13,"BrFalse","","",40,null],[13,"Branch","","",40,null],[13,"LdU8","","",40,null],[13,"LdU64","","",40,null],[13,"LdU128","","",40,null],[13,"CastU8","","",40,null],[13,"CastU64","","",40,null],[13,"CastU128","","",40,null],[13,"LdByteArray","","",40,null],[13,"LdAddr","","",40,null],[13,"LdTrue","","",40,null],[13,"LdFalse","","",40,null],[13,"LdConst","","",40,null],[13,"CopyLoc","","",40,null],[13,"MoveLoc","","",40,null],[13,"StLoc","","",40,null],[13,"Call","","",40,null],[13,"Pack","","",40,null],[13,"Unpack","","",40,null],[13,"ReadRef","","",40,null],[13,"WriteRef","","",40,null],[13,"FreezeRef","","",40,null],[13,"MutBorrowLoc","","",40,null],[13,"ImmBorrowLoc","","",40,null],[13,"MutBorrowField","","",40,null],[13,"ImmBorrowField","","",40,null],[13,"MutBorrowGlobal","","",40,null],[13,"ImmBorrowGlobal","","",40,null],[13,"Add","","",40,null],[13,"Sub","","",40,null],[13,"Mul","","",40,null],[13,"Mod","","",40,null],[13,"Div","","",40,null],[13,"BitOr","","",40,null],[13,"BitAnd","","",40,null],[13,"Xor","","",40,null],[13,"Or","","",40,null],[13,"And","","",40,null],[13,"Not","","",40,null],[13,"Eq","","",40,null],[13,"Neq","","",40,null],[13,"Lt","","",40,null],[13,"Gt","","",40,null],[13,"Le","","",40,null],[13,"Ge","","",40,null],[13,"Abort","","",40,null],[13,"Exists","","",40,null],[13,"MoveFrom","","",40,null],[13,"MoveTo","","",40,null],[13,"Shl","","",40,null],[13,"Shr","","",40,null],[6,"Var","","The type of a variable with a location",null,null],[6,"TypeVar","","The type of a type variable with a location.",null,null],[6,"Field","","A field coupled with source location information",null,null],[6,"Fields","","A field map",null,null],[6,"StructDefinition","","The type of a StructDefinition along with its source…",null,null],[6,"Function","","The type of a Function coupled with its source location…",null,null],[6,"FunctionCall","","The type for a function call and its location",null,null],[6,"LValue","","",null,null],[6,"Cmd","","The type of a command with its location",null,null],[6,"Block","","The type of a Block coupled with source location…",null,null],[6,"CopyableVal","","The type of a value and its location",null,null],[6,"ExpFields","","The type for fields and their bound expressions",null,null],[6,"Exp","","The type for a `Exp_` and its location",null,null],[6,"BytecodeBlocks","","",null,null],[6,"BytecodeBlock","","",null,null],[6,"Bytecode","","",null,null],[11,"new","","Create a new `Program` from modules and transaction script",0,[[["moduledefinition",3],["vec",3],["script",3]]]],[11,"new","","Create a new `Script` from the imports and the main function",1,[[["constant",3],["vec",3],["moduledependency",3],["vec",3],["importdefinition",3],["vec",3],["function",6]]]],[11,"body","","Accessor for the body of the \'main\' procedure",1,[[],["block_",3]]],[11,"get_external_deps","","Return a vector of `ModuleId` for the external dependencies.",1,[[],[["moduleid",3],["vec",3]]]],[11,"new","","Create a new `ModuleName` from a string",41,[[["string",3]]]],[11,"self_name","","Name for the current module handle",41,[[]]],[11,"module_self","","Create a new `ModuleName` from `self_name`.",41,[[]]],[11,"into_inner","","Converts self into a string.",41,[[],["string",3]]],[11,"as_inner","","Accessor for the name of the module",41,[[]]],[11,"new","","Creates a new fully qualified module identifier from the…",2,[[["accountaddress",3],["modulename",3]]]],[11,"name","","Accessor for the name of the fully qualified module…",2,[[],["modulename",3]]],[11,"address","","Accessor for the address at which the module is published",2,[[],["accountaddress",3]]],[11,"name","","",20,[[],["modulename",3]]],[11,"new","","Creates a new `ModuleDefinition` from its string name,…",3,[[["vec",3],["vec",3],["moduledependency",3],["vec",3],["importdefinition",3],["structdefinition",6],["syntheticdefinition",6],["constant",3],["vec",3],["vec",3],["vec",3]],["result",6]]],[11,"get_external_deps","","Return a vector of `ModuleId` for the external dependencies.",3,[[],[["moduleid",3],["vec",3]]]],[11,"struct","","Creates a new struct type",22,[[["qualifiedstructident",3],["vec",3],["type",4]],["type",4]]],[11,"reference","","Creates a new reference type from its mutability and…",22,[[["type",4]],["type",4]]],[11,"address","","Creates a new address type",22,[[],["type",4]]],[11,"u64","","Creates a new u64 type",22,[[],["type",4]]],[11,"bool","","Creates a new bool type",22,[[],["type",4]]],[11,"new","","Creates a new StructType handle from the name of the…",6,[[["structname",3],["modulename",3]]]],[11,"module","","Accessor for the module alias",6,[[],["modulename",3]]],[11,"name","","Accessor for the struct name",6,[[],["structname",3]]],[11,"new","","Creates a new import definition from a module identifier…",5,[[["modulename",3],["moduleident",4],["option",4]]]],[11,"new","","Create a new `Field_` from a string",42,[[["string",3]]]],[11,"into_inner","","Converts self into a string.",42,[[],["string",3]]],[11,"as_inner","","Accessor for the name of the struct",42,[[]]],[11,"new","","Create a new `StructName` from a string",43,[[["string",3]]]],[11,"into_inner","","Converts self into a string.",43,[[],["string",3]]],[11,"as_inner","","Accessor for the name of the struct",43,[[]]],[11,"move_declared","","Creates a new StructDefinition from the resource kind…",7,[[["vec",3],["vec",3],["fields",6],["invariant",6],["type",4]],["result",6]]],[11,"native","","Creates a new StructDefinition from the resource kind…",7,[[["vec",3]],["result",6]]],[11,"new","","Create a new `ConstantName` from a string",44,[[["string",3]]]],[11,"into_inner","","Converts self into a string.",44,[[],["string",3]]],[11,"as_inner","","Accessor for the name of the function",44,[[]]],[11,"new","","Create a new `FunctionName` from a string",45,[[["string",3]]]],[11,"into_inner","","Converts self into a string.",45,[[],["string",3]]],[11,"as_inner","","Accessor for the name of the function",45,[[]]],[11,"new","","Creates a new function signature from the parameters and…",10,[[["vec",3],["vec",3],["vec",3],["type",4]]]],[11,"new","","Creates a new function declaration from the components of…",12,[[["vec",3],["condition",6],["vec",3],["functionbody",4],["vec",3],["vec",3],["structname",3],["functionvisibility",4],["vec",3],["type",4]]]],[11,"new","","Creates a new `Var` from a string.",46,[[["string",3]]]],[11,"into_inner","","Converts self into a string.",46,[[],["string",3]]],[11,"name","","Accessor for the name of the var",46,[[]]],[11,"new","","Creates a new `TypeVar` from an String.",47,[[["string",3]]]],[11,"into_inner","","Converts self into a string.",47,[[],["string",3]]],[11,"name","","Accessor for the name of the var.",47,[[]]],[11,"module_call","","Creates a `FunctionCall::ModuleFunctionCall` variant",30,[[["modulename",3],["vec",3],["functionname",3],["type",4]]]],[11,"builtin","","Creates a `FunctionCall::Builtin` variant with no location…",30,[[["builtin",4]],["functioncall",6]]],[11,"return_empty","","Creates a command that returns no values",33,[[]]],[11,"return_","","Creates a command that returns a single value",33,[[["exp",6]]]],[11,"if_block","","Creates an if-statement with no else branch",13,[[["block",6],["exp",6]]]],[11,"if_else","","Creates an if-statement with an else branch",13,[[["block",6],["exp",6]]]],[11,"cmd","","Lifts a command into a statement",34,[[["cmd",6]]]],[11,"if_block","","Creates an `Statement::IfElseStatement` variant with no…",34,[[["block",6],["exp",6]]]],[11,"if_else","","Creates an `Statement::IfElseStatement` variant with an…",34,[[["block",6],["exp",6]]]],[11,"new","","Creates a new block from the vector of statements",16,[[["vec",3],["statement",4]]]],[11,"empty","","Creates an empty block",16,[[]]],[11,"address","","Creates a new address `Exp` with no location information",38,[[["accountaddress",3]],["exp",6]]],[11,"value","","Creates a new value `Exp` with no location information",38,[[["copyableval_",4]],["exp",6]]],[11,"u64","","Creates a new u64 `Exp` with no location information",38,[[],["exp",6]]],[11,"bool","","Creates a new bool `Exp` with no location information",38,[[],["exp",6]]],[11,"byte_array","","Creates a new bytearray `Exp` with no location information",38,[[["vec",3]],["exp",6]]],[11,"instantiate","","Creates a new pack/struct-instantiation `Exp` with no…",38,[[["structname",3],["vec",3],["expfields",6],["type",4]],["exp",6]]],[11,"binop","","Creates a new binary operator `Exp` with no location…",38,[[["exp",6],["binop",4]],["exp",6]]],[11,"add","","Creates a new `e+e` `Exp` with no location information",38,[[["exp",6]],["exp",6]]],[11,"sub","","Creates a new `e-e` `Exp` with no location information",38,[[["exp",6]],["exp",6]]],[11,"dereference","","Creates a new `*e` `Exp` with no location information",38,[[["exp",6]],["exp",6]]],[11,"borrow","","Creates a new borrow field `Exp` with no location…",38,[[["box",3],["exp",6],["field_",3]],["exp",6]]],[11,"copy","","Creates a new copy-local `Exp` with no location information",38,[[["var",6]],["exp",6]]],[11,"move_","","Creates a new move-local `Exp` with no location information",38,[[["var",6]],["exp",6]]],[11,"function_call","","Creates a new function call `Exp` with no location…",38,[[["functioncall",6],["exp",6]],["exp",6]]],[11,"expr_list","","",38,[[["vec",3],["exp",6]],["exp",6]]],[0,"location","move_ir_types","",null,null],[3,"Loc","move_ir_types::location","",null,null],[3,"Spanned","","",null,null],[12,"loc","","",48,null],[12,"value","","",48,null],[5,"sp","","Function used to have nearly tuple-like syntax for…",null,[[["loc",3]],["spanned",3]]],[11,"new","","",49,[[["span",3]],["loc",3]]],[11,"file","","",49,[[]]],[11,"span","","",49,[[],["span",3]]],[11,"new","","",48,[[["loc",3]],["spanned",3]]],[11,"unsafe_no_loc","","",48,[[],["spanned",3]]],[0,"spec_language_ast","move_ir_types","",null,null],[3,"Invariant_","move_ir_types::spec_language_ast","An invariant over a resource.",null,null],[12,"modifier","","A free string (for now) which specifies the function of…",50,null],[12,"target","","An optional synthetic variable to which the below…",50,null],[12,"exp","","A specification expression.",50,null],[3,"SyntheticDefinition_","","A synthetic variable definition.",null,null],[12,"name","","",51,null],[12,"type_","","",51,null],[4,"FieldOrIndex","","AST for the Move Prover specification language.",null,null],[13,"Field","","",52,null],[13,"Index","","",52,null],[4,"StorageLocation","","A location that can store a value",null,null],[13,"Formal","","A formal of the current procedure",53,null],[13,"GlobalResource","","A resource of type `type_` stored in global storage at…",53,null],[12,"type_","move_ir_types::spec_language_ast::StorageLocation","",54,null],[12,"type_actuals","","",54,null],[12,"address","","",54,null],[13,"AccessPath","move_ir_types::spec_language_ast","An access path rooted at `base` with nonempty offsets in…",53,null],[12,"base","move_ir_types::spec_language_ast::StorageLocation","",55,null],[12,"fields_and_indices","","",55,null],[13,"Address","move_ir_types::spec_language_ast","Account address constant",53,null],[13,"Ret","","The ith return value of the current procedure",53,null],[4,"SpecExp","","An expression in the specification language",null,null],[13,"Constant","","A Move constant",56,null],[13,"StorageLocation","","A spec language storage location",56,null],[13,"GlobalExists","","Lifting the Move exists operator to a storage location",56,null],[12,"type_","move_ir_types::spec_language_ast::SpecExp","",57,null],[12,"type_actuals","","",57,null],[12,"address","","",57,null],[13,"Dereference","move_ir_types::spec_language_ast","Dereference of a storage location (written *s)",56,null],[13,"Reference","","Reference to a storage location (written &s)",56,null],[13,"Not","","Negation of a boolean expression (written !e),",56,null],[13,"Binop","","Binary operators also suported by Move",56,null],[13,"Update","","Update expr (i := 1 inside [])",56,null],[13,"Old","","Value of expression evaluated in the state before function…",56,null],[13,"Call","","Call to a helper function.",56,null],[4,"Condition_","","A specification directive to be verified",null,null],[13,"Ensures","","Postconditions",58,null],[13,"Requires","","Preconditions",58,null],[13,"AbortsIf","","If the given expression is true, the procedure must…",58,null],[13,"SucceedsIf","","If the given expression is true, the procedure must…",58,null],[6,"Condition","","Specification directive with span.",null,null],[6,"Invariant","","Invariant with span.",null,null],[6,"SyntheticDefinition","","Synthetic with span.",null,null],[14,"sp","move_ir_types","Macro used to create a tuple-like pattern match for Spanned",null,null],[11,"from","move_ir_types::ast","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"equivalent","","",41,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"equivalent","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"equivalent","","",47,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"equivalent","","",6,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"equivalent","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"equivalent","","",43,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"test_only_hash","","",44,[[],["hashvalue",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"equivalent","","",44,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"equivalent","","",45,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"test_only_hash","","",17,[[],["hashvalue",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"equivalent","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"test_only_hash","","",18,[[],["hashvalue",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"equivalent","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"equivalent","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"equivalent","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","move_ir_types::location","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"test_only_hash","","",49,[[],["hashvalue",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"equivalent","","",49,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"equivalent","","",48,[[]]],[11,"from","move_ir_types::spec_language_ast","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"next","move_ir_types::ast","",1,[[],[["statement",4],["option",4]]]],[11,"next","","",16,[[],[["statement",4],["option",4]]]],[11,"clone","","",0,[[],["program",3]]],[11,"clone","","",19,[[],["scriptormodule",4]]],[11,"clone","","",1,[[],["script",3]]],[11,"clone","","",41,[[],["modulename",3]]],[11,"clone","","",2,[[],["qualifiedmoduleident",3]]],[11,"clone","","",3,[[],["moduledefinition",3]]],[11,"clone","","",20,[[],["moduleident",4]]],[11,"clone","","",4,[[],["moduledependency",3]]],[11,"clone","","",5,[[],["importdefinition",3]]],[11,"clone","","",46,[[],["var_",3]]],[11,"clone","","",47,[[],["typevar_",3]]],[11,"clone","","",21,[[],["kind",4]]],[11,"clone","","",22,[[],["type",4]]],[11,"clone","","",6,[[],["qualifiedstructident",3]]],[11,"clone","","",42,[[],["field_",3]]],[11,"clone","","",43,[[],["structname",3]]],[11,"clone","","",7,[[],["structdefinition_",3]]],[11,"clone","","",8,[[],["structdependency",3]]],[11,"clone","","",23,[[],["structdefinitionfields",4]]],[11,"clone","","",44,[[],["constantname",3]]],[11,"clone","","",9,[[],["constant",3]]],[11,"clone","","",45,[[],["functionname",3]]],[11,"clone","","",10,[[],["functionsignature",3]]],[11,"clone","","",11,[[],["functiondependency",3]]],[11,"clone","","",25,[[],["functionvisibility",4]]],[11,"clone","","",26,[[],["functionbody",4]]],[11,"clone","","",12,[[],["function_",3]]],[11,"clone","","",29,[[],["builtin",4]]],[11,"clone","","",30,[[],["functioncall_",4]]],[11,"clone","","",32,[[],["lvalue_",4]]],[11,"clone","","",33,[[],["cmd_",4]]],[11,"clone","","",13,[[],["ifelse",3]]],[11,"clone","","",14,[[],["while",3]]],[11,"clone","","",15,[[],["loop",3]]],[11,"clone","","",34,[[],["statement",4]]],[11,"clone","","",16,[[],["block_",3]]],[11,"clone","","",35,[[],["copyableval_",4]]],[11,"clone","","",36,[[],["unaryop",4]]],[11,"clone","","",37,[[],["binop",4]]],[11,"clone","","",38,[[],["exp_",4]]],[11,"clone","","",17,[[],["blocklabel",3]]],[11,"clone","","",18,[[],["noplabel",3]]],[11,"clone","","",40,[[],["bytecode_",4]]],[11,"clone","move_ir_types::location","",49,[[],["loc",3]]],[11,"clone","","",48,[[],["spanned",3]]],[11,"clone","move_ir_types::spec_language_ast","",52,[[],["fieldorindex",4]]],[11,"clone","","",53,[[],["storagelocation",4]]],[11,"clone","","",56,[[],["specexp",4]]],[11,"clone","","",58,[[],["condition_",4]]],[11,"clone","","",50,[[],["invariant_",3]]],[11,"clone","","",51,[[],["syntheticdefinition_",3]]],[11,"cmp","move_ir_types::ast","",41,[[["modulename",3]],["ordering",4]]],[11,"cmp","","",2,[[["qualifiedmoduleident",3]],["ordering",4]]],[11,"cmp","","",20,[[["moduleident",4]],["ordering",4]]],[11,"cmp","","",46,[[["var_",3]],["ordering",4]]],[11,"cmp","","",6,[[["qualifiedstructident",3]],["ordering",4]]],[11,"cmp","","",42,[[["field_",3]],["ordering",4]]],[11,"cmp","","",43,[[["structname",3]],["ordering",4]]],[11,"cmp","","",44,[[["constantname",3]],["ordering",4]]],[11,"cmp","","",45,[[["functionname",3]],["ordering",4]]],[11,"cmp","","",17,[[["blocklabel",3]],["ordering",4]]],[11,"cmp","","",18,[[["noplabel",3]],["ordering",4]]],[11,"cmp","move_ir_types::location","",49,[[["loc",3]],["ordering",4]]],[11,"cmp","","",48,[[["spanned",3]],["ordering",4]]],[11,"eq","move_ir_types::ast","",41,[[["modulename",3]]]],[11,"ne","","",41,[[["modulename",3]]]],[11,"eq","","",2,[[["qualifiedmoduleident",3]]]],[11,"ne","","",2,[[["qualifiedmoduleident",3]]]],[11,"eq","","",3,[[["moduledefinition",3]]]],[11,"ne","","",3,[[["moduledefinition",3]]]],[11,"eq","","",20,[[["moduleident",4]]]],[11,"ne","","",20,[[["moduleident",4]]]],[11,"eq","","",4,[[["moduledependency",3]]]],[11,"ne","","",4,[[["moduledependency",3]]]],[11,"eq","","",5,[[["importdefinition",3]]]],[11,"ne","","",5,[[["importdefinition",3]]]],[11,"eq","","",46,[[["var_",3]]]],[11,"ne","","",46,[[["var_",3]]]],[11,"eq","","",47,[[["typevar_",3]]]],[11,"ne","","",47,[[["typevar_",3]]]],[11,"eq","","",21,[[["kind",4]]]],[11,"eq","","",22,[[["type",4]]]],[11,"ne","","",22,[[["type",4]]]],[11,"eq","","",6,[[["qualifiedstructident",3]]]],[11,"ne","","",6,[[["qualifiedstructident",3]]]],[11,"eq","","",42,[[["field_",3]]]],[11,"ne","","",42,[[["field_",3]]]],[11,"eq","","",43,[[["structname",3]]]],[11,"ne","","",43,[[["structname",3]]]],[11,"eq","","",7,[[["structdefinition_",3]]]],[11,"ne","","",7,[[["structdefinition_",3]]]],[11,"eq","","",8,[[["structdependency",3]]]],[11,"ne","","",8,[[["structdependency",3]]]],[11,"eq","","",23,[[["structdefinitionfields",4]]]],[11,"ne","","",23,[[["structdefinitionfields",4]]]],[11,"eq","","",44,[[["constantname",3]]]],[11,"ne","","",44,[[["constantname",3]]]],[11,"eq","","",9,[[["constant",3]]]],[11,"ne","","",9,[[["constant",3]]]],[11,"eq","","",45,[[["functionname",3]]]],[11,"ne","","",45,[[["functionname",3]]]],[11,"eq","","",10,[[["functionsignature",3]]]],[11,"ne","","",10,[[["functionsignature",3]]]],[11,"eq","","",11,[[["functiondependency",3]]]],[11,"ne","","",11,[[["functiondependency",3]]]],[11,"eq","","",25,[[["functionvisibility",4]]]],[11,"eq","","",26,[[["functionbody",4]]]],[11,"ne","","",26,[[["functionbody",4]]]],[11,"eq","","",12,[[["function_",3]]]],[11,"ne","","",12,[[["function_",3]]]],[11,"eq","","",29,[[["builtin",4]]]],[11,"ne","","",29,[[["builtin",4]]]],[11,"eq","","",30,[[["functioncall_",4]]]],[11,"ne","","",30,[[["functioncall_",4]]]],[11,"eq","","",32,[[["lvalue_",4]]]],[11,"ne","","",32,[[["lvalue_",4]]]],[11,"eq","","",33,[[["cmd_",4]]]],[11,"ne","","",33,[[["cmd_",4]]]],[11,"eq","","",13,[[["ifelse",3]]]],[11,"ne","","",13,[[["ifelse",3]]]],[11,"eq","","",14,[[["while",3]]]],[11,"ne","","",14,[[["while",3]]]],[11,"eq","","",15,[[["loop",3]]]],[11,"ne","","",15,[[["loop",3]]]],[11,"eq","","",34,[[["statement",4]]]],[11,"ne","","",34,[[["statement",4]]]],[11,"eq","","",16,[[["block_",3]]]],[11,"ne","","",16,[[["block_",3]]]],[11,"eq","","",35,[[["copyableval_",4]]]],[11,"ne","","",35,[[["copyableval_",4]]]],[11,"eq","","",36,[[["unaryop",4]]]],[11,"eq","","",37,[[["binop",4]]]],[11,"eq","","",38,[[["exp_",4]]]],[11,"ne","","",38,[[["exp_",4]]]],[11,"eq","","",17,[[["blocklabel",3]]]],[11,"ne","","",17,[[["blocklabel",3]]]],[11,"eq","","",18,[[["noplabel",3]]]],[11,"ne","","",18,[[["noplabel",3]]]],[11,"eq","","",40,[[["bytecode_",4]]]],[11,"ne","","",40,[[["bytecode_",4]]]],[11,"eq","","",1,[[["script",3]]]],[11,"eq","move_ir_types::location","",49,[[["loc",3]]]],[11,"ne","","",49,[[["loc",3]]]],[11,"eq","","",48,[[["spanned",3]]]],[11,"eq","move_ir_types::spec_language_ast","",52,[[["fieldorindex",4]]]],[11,"ne","","",52,[[["fieldorindex",4]]]],[11,"eq","","",53,[[["storagelocation",4]]]],[11,"ne","","",53,[[["storagelocation",4]]]],[11,"eq","","",56,[[["specexp",4]]]],[11,"ne","","",56,[[["specexp",4]]]],[11,"eq","","",58,[[["condition_",4]]]],[11,"ne","","",58,[[["condition_",4]]]],[11,"eq","","",50,[[["invariant_",3]]]],[11,"ne","","",50,[[["invariant_",3]]]],[11,"eq","","",51,[[["syntheticdefinition_",3]]]],[11,"ne","","",51,[[["syntheticdefinition_",3]]]],[11,"partial_cmp","move_ir_types::ast","",41,[[["modulename",3]],[["ordering",4],["option",4]]]],[11,"lt","","",41,[[["modulename",3]]]],[11,"le","","",41,[[["modulename",3]]]],[11,"gt","","",41,[[["modulename",3]]]],[11,"ge","","",41,[[["modulename",3]]]],[11,"partial_cmp","","",2,[[["qualifiedmoduleident",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["qualifiedmoduleident",3]]]],[11,"le","","",2,[[["qualifiedmoduleident",3]]]],[11,"gt","","",2,[[["qualifiedmoduleident",3]]]],[11,"ge","","",2,[[["qualifiedmoduleident",3]]]],[11,"partial_cmp","","",20,[[["moduleident",4]],[["ordering",4],["option",4]]]],[11,"lt","","",20,[[["moduleident",4]]]],[11,"le","","",20,[[["moduleident",4]]]],[11,"gt","","",20,[[["moduleident",4]]]],[11,"ge","","",20,[[["moduleident",4]]]],[11,"partial_cmp","","",46,[[["var_",3]],[["ordering",4],["option",4]]]],[11,"lt","","",46,[[["var_",3]]]],[11,"le","","",46,[[["var_",3]]]],[11,"gt","","",46,[[["var_",3]]]],[11,"ge","","",46,[[["var_",3]]]],[11,"partial_cmp","","",6,[[["qualifiedstructident",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["qualifiedstructident",3]]]],[11,"le","","",6,[[["qualifiedstructident",3]]]],[11,"gt","","",6,[[["qualifiedstructident",3]]]],[11,"ge","","",6,[[["qualifiedstructident",3]]]],[11,"partial_cmp","","",42,[[["field_",3]],[["ordering",4],["option",4]]]],[11,"lt","","",42,[[["field_",3]]]],[11,"le","","",42,[[["field_",3]]]],[11,"gt","","",42,[[["field_",3]]]],[11,"ge","","",42,[[["field_",3]]]],[11,"partial_cmp","","",43,[[["structname",3]],[["ordering",4],["option",4]]]],[11,"lt","","",43,[[["structname",3]]]],[11,"le","","",43,[[["structname",3]]]],[11,"gt","","",43,[[["structname",3]]]],[11,"ge","","",43,[[["structname",3]]]],[11,"partial_cmp","","",44,[[["constantname",3]],[["ordering",4],["option",4]]]],[11,"lt","","",44,[[["constantname",3]]]],[11,"le","","",44,[[["constantname",3]]]],[11,"gt","","",44,[[["constantname",3]]]],[11,"ge","","",44,[[["constantname",3]]]],[11,"partial_cmp","","",45,[[["functionname",3]],[["ordering",4],["option",4]]]],[11,"lt","","",45,[[["functionname",3]]]],[11,"le","","",45,[[["functionname",3]]]],[11,"gt","","",45,[[["functionname",3]]]],[11,"ge","","",45,[[["functionname",3]]]],[11,"partial_cmp","","",17,[[["blocklabel",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["blocklabel",3]]]],[11,"le","","",17,[[["blocklabel",3]]]],[11,"gt","","",17,[[["blocklabel",3]]]],[11,"ge","","",17,[[["blocklabel",3]]]],[11,"partial_cmp","","",18,[[["noplabel",3]],[["ordering",4],["option",4]]]],[11,"lt","","",18,[[["noplabel",3]]]],[11,"le","","",18,[[["noplabel",3]]]],[11,"gt","","",18,[[["noplabel",3]]]],[11,"ge","","",18,[[["noplabel",3]]]],[11,"partial_cmp","move_ir_types::location","",49,[[["loc",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",48,[[["spanned",3]],[["ordering",4],["option",4]]]],[11,"fmt","move_ir_types::ast","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","move_ir_types::location","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","move_ir_types::spec_language_ast","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","move_ir_types::ast","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","move_ir_types::location","",48,[[["formatter",3]],["result",6]]],[11,"hash","move_ir_types::ast","",41,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","move_ir_types::location","",48,[[]]],[11,"deserialize","move_ir_types::ast","",44,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","move_ir_types::location","",49,[[],["result",4]]],[11,"serialize","move_ir_types::ast","",44,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","move_ir_types::location","",49,[[],["result",4]]]],"p":[[3,"Program"],[3,"Script"],[3,"QualifiedModuleIdent"],[3,"ModuleDefinition"],[3,"ModuleDependency"],[3,"ImportDefinition"],[3,"QualifiedStructIdent"],[3,"StructDefinition_"],[3,"StructDependency"],[3,"Constant"],[3,"FunctionSignature"],[3,"FunctionDependency"],[3,"Function_"],[3,"IfElse"],[3,"While"],[3,"Loop"],[3,"Block_"],[3,"BlockLabel"],[3,"NopLabel"],[4,"ScriptOrModule"],[4,"ModuleIdent"],[4,"Kind"],[4,"Type"],[4,"StructDefinitionFields"],[13,"Move"],[4,"FunctionVisibility"],[4,"FunctionBody"],[13,"Move"],[13,"Bytecode"],[4,"Builtin"],[4,"FunctionCall_"],[13,"ModuleFunctionCall"],[4,"LValue_"],[4,"Cmd_"],[4,"Statement"],[4,"CopyableVal_"],[4,"UnaryOp"],[4,"BinOp"],[4,"Exp_"],[13,"Borrow"],[4,"Bytecode_"],[3,"ModuleName"],[3,"Field_"],[3,"StructName"],[3,"ConstantName"],[3,"FunctionName"],[3,"Var_"],[3,"TypeVar_"],[3,"Spanned"],[3,"Loc"],[3,"Invariant_"],[3,"SyntheticDefinition_"],[4,"FieldOrIndex"],[4,"StorageLocation"],[13,"GlobalResource"],[13,"AccessPath"],[4,"SpecExp"],[13,"GlobalExists"],[4,"Condition_"]]},\
"move_lang":{"doc":"","i":[[4,"Pass","move_lang","",null,null],[13,"Parser","","",0,null],[13,"Expansion","","",0,null],[13,"Naming","","",0,null],[13,"Typing","","",0,null],[13,"HLIR","","",0,null],[13,"CFGIR","","",0,null],[13,"Compilation","","",0,null],[4,"PassResult","","",null,null],[13,"Parser","","",1,null],[13,"Expansion","","",1,null],[13,"Naming","","",1,null],[13,"Typing","","",1,null],[13,"HLIR","","",1,null],[13,"CFGIR","","",1,null],[13,"Compilation","","",1,null],[5,"move_check","","Given a set of targets and a set of dependencies",null,[[["option",4],["address",3],["option",4],["string",3]],["result",6]]],[5,"move_check_and_report","","Similar to move_check but it reports it\'s errors to stderr",null,[[["option",4],["address",3],["option",4],["string",3]],[["result",6],["filessourcetext",6]]]],[5,"move_compile","","Given a set of targets and a set of dependencies",null,[[["option",4],["address",3],["option",4],["string",3]],["result",6]]],[5,"move_compile_and_report","","Similar to move_compile but it reports it\'s errors to stderr",null,[[["option",4],["address",3],["option",4],["string",3]],["result",6]]],[5,"move_parse","","Given a set of targets and a set of dependencies, produces…",null,[[["option",4],["address",3],["option",4],["string",3]],["result",6]]],[5,"move_continue_up_to","","Runs the compiler from a previous result until a stopping…",null,[[["passresult",4],["pass",4]],[["passresult",4],["errors",6],["result",4]]]],[5,"sanity_check_compiled_units","","Runs the bytecode verifier on the compiled units Fails if…",null,[[["vec",3],["filessourcetext",6],["compiledunit",4]]]],[5,"output_compiled_units","","Given a file map and a set of compiled programs, saves the…",null,[[["vec",3],["filessourcetext",6],["compiledunit",4]],["result",6]]],[5,"generate_interface_files","","",null,[[["option",4],["string",3]],[["option",4],["result",6]]]],[5,"path_to_string","","",null,[[["path",3]],[["result",6],["string",3]]]],[5,"extension_equals","","",null,[[["path",3]]]],[5,"find_move_filenames","","For each directory in `paths`, it will return all files…",null,[[],[["result",6],["vec",3]]]],[5,"find_filenames","","For each directory in `paths`, it will return all files…",null,[[["fnmut",8]],[["result",6],["vec",3]]]],[5,"is_permitted_printable_char","","Determine if a character is an allowed eye-visible…",null,[[]]],[5,"is_permitted_newline_char","","Determine if a character is a permitted newline character.",null,[[]]],[5,"is_permitted_char","","Determine if a character is permitted character.",null,[[]]],[0,"cfgir","","",null,null],[5,"refine_inference_and_verify","move_lang::cfgir","",null,[[["functionsignature",3],["errors",6],["btreemap",3],["uniquemap",3],["blockcfg",3],["btreeset",3]]]],[5,"optimize","","",null,[[["functionsignature",3],["blockcfg",3],["uniquemap",3]]]],[0,"ast","","",null,null],[3,"Program","move_lang::cfgir::ast","",null,null],[12,"modules","","",2,null],[12,"scripts","","",2,null],[3,"Script","","",null,null],[12,"loc","","",3,null],[12,"constants","","",3,null],[12,"function_name","","",3,null],[12,"function","","",3,null],[3,"ModuleDefinition","","",null,null],[12,"is_source_module","","",4,null],[12,"dependency_order","","`dependency_order` is the topological order/rank in the…",4,null],[12,"structs","","",4,null],[12,"constants","","",4,null],[12,"functions","","",4,null],[3,"Constant","","",null,null],[12,"loc","","",5,null],[12,"signature","","",5,null],[12,"value","","",5,null],[3,"Function","","",null,null],[12,"visibility","","",6,null],[12,"signature","","",6,null],[12,"acquires","","",6,null],[12,"body","","",6,null],[4,"FunctionBody_","","",null,null],[13,"Native","","",7,null],[13,"Defined","","",7,null],[12,"locals","move_lang::cfgir::ast::FunctionBody_","",8,null],[12,"start","","",8,null],[12,"blocks","","",8,null],[5,"remap_labels","move_lang::cfgir::ast","",null,[[["basicblocks",6],["label",3],["btreemap",3]]]],[6,"FunctionBody","","",null,null],[6,"BasicBlocks","","",null,null],[6,"BasicBlock","","",null,null],[0,"command_line","move_lang","",null,null],[5,"parse_address","move_lang::command_line","",null,[[],[["address",3],["string",3],["result",4]]]],[5,"read_env_var","","",null,[[],["string",3]]],[5,"read_bool_env_var","","",null,[[]]],[17,"DEPENDENCY","","",null,null],[17,"DEPENDENCY_SHORT","","",null,null],[17,"SENDER","","",null,null],[17,"SENDER_SHORT","","",null,null],[17,"OUT_DIR","","",null,null],[17,"OUT_DIR_SHORT","","",null,null],[17,"DEFAULT_OUTPUT_DIR","","",null,null],[17,"NO_SHADOW","","",null,null],[17,"NO_SHADOW_SHORT","","",null,null],[17,"SOURCE_MAP","","",null,null],[17,"SOURCE_MAP_SHORT","","",null,null],[17,"COLOR_MODE_ENV_VAR","","",null,null],[0,"compiled_unit","move_lang","",null,null],[3,"VarInfo","move_lang::compiled_unit","",null,null],[12,"type_","","",9,null],[12,"index","","",9,null],[3,"SpecInfo","","",null,null],[12,"offset","","",10,null],[12,"used_locals","","",10,null],[3,"FunctionInfo","","",null,null],[12,"spec_info","","",11,null],[12,"parameters","","",11,null],[4,"CompiledUnit","","",null,null],[13,"Module","","",12,null],[12,"ident","move_lang::compiled_unit::CompiledUnit","",13,null],[12,"module","","",13,null],[12,"source_map","","",13,null],[12,"function_infos","","",13,null],[13,"Script","move_lang::compiled_unit","",12,null],[12,"loc","move_lang::compiled_unit::CompiledUnit","",14,null],[12,"key","","",14,null],[12,"script","","",14,null],[12,"source_map","","",14,null],[12,"function_info","","",14,null],[5,"verify_units","move_lang::compiled_unit","",null,[[["vec",3],["compiledunit",4]]]],[11,"name","","",12,[[],["string",3]]],[11,"serialize","","",12,[[],["vec",3]]],[11,"serialize_debug","","",12,[[],["vec",3]]],[11,"serialize_source_map","","",12,[[],["vec",3]]],[11,"verify","","",12,[[]]],[0,"errors","move_lang","",null,null],[5,"check_errors","move_lang::errors","",null,[[["errors",6]],[["result",4],["errors",6]]]],[5,"report_errors","","",null,[[["filessourcetext",6],["errors",6]]]],[5,"report_errors_to_buffer","","",null,[[["filessourcetext",6],["errors",6]],["vec",3]]],[5,"report_errors_to_color_buffer","","",null,[[["filessourcetext",6],["errors",6]],["vec",3]]],[6,"Errors","","",null,null],[6,"Error","","",null,null],[6,"ErrorSlice","","",null,null],[6,"HashableError","","",null,null],[6,"FilesSourceText","","",null,null],[0,"expansion","move_lang","",null,null],[0,"ast","move_lang::expansion","",null,null],[3,"Program","move_lang::expansion::ast","",null,null],[12,"modules","","",15,null],[12,"scripts","","",15,null],[3,"Script","","",null,null],[12,"loc","","",16,null],[12,"constants","","",16,null],[12,"function_name","","",16,null],[12,"function","","",16,null],[12,"specs","","",16,null],[3,"ModuleDefinition","","",null,null],[12,"loc","","",17,null],[12,"is_source_module","","",17,null],[12,"structs","","",17,null],[12,"functions","","",17,null],[12,"constants","","",17,null],[12,"specs","","",17,null],[3,"StructDefinition","","",null,null],[12,"loc","","",18,null],[12,"resource_opt","","",18,null],[12,"type_parameters","","",18,null],[12,"fields","","",18,null],[3,"FunctionSignature","","",null,null],[12,"type_parameters","","",19,null],[12,"parameters","","",19,null],[12,"return_type","","",19,null],[3,"SpecId","","",null,null],[3,"Function","","",null,null],[12,"loc","","",20,null],[12,"visibility","","",20,null],[12,"signature","","",20,null],[12,"acquires","","",20,null],[12,"body","","",20,null],[12,"specs","","",20,null],[3,"Constant","","",null,null],[12,"loc","","",21,null],[12,"signature","","",21,null],[12,"value","","",21,null],[3,"SpecBlock_","","",null,null],[12,"target","","",22,null],[12,"members","","",22,null],[3,"PragmaProperty_","","",null,null],[12,"name","","",23,null],[12,"value","","",23,null],[4,"StructFields","","",null,null],[13,"Defined","","",24,null],[13,"Native","","",24,null],[4,"FunctionBody_","","",null,null],[13,"Defined","","",25,null],[13,"Native","","",25,null],[4,"SpecBlockMember_","","",null,null],[13,"Condition","","",26,null],[12,"kind","move_lang::expansion::ast::SpecBlockMember_","",27,null],[12,"properties","","",27,null],[12,"exp","","",27,null],[12,"additional_exps","","",27,null],[13,"Function","move_lang::expansion::ast","",26,null],[12,"uninterpreted","move_lang::expansion::ast::SpecBlockMember_","",28,null],[12,"name","","",28,null],[12,"signature","","",28,null],[12,"body","","",28,null],[13,"Variable","move_lang::expansion::ast","",26,null],[12,"is_global","move_lang::expansion::ast::SpecBlockMember_","",29,null],[12,"name","","",29,null],[12,"type_parameters","","",29,null],[12,"type_","","",29,null],[13,"Let","move_lang::expansion::ast","",26,null],[12,"name","move_lang::expansion::ast::SpecBlockMember_","",30,null],[12,"def","","",30,null],[13,"Include","move_lang::expansion::ast","",26,null],[12,"properties","move_lang::expansion::ast::SpecBlockMember_","",31,null],[12,"exp","","",31,null],[13,"Apply","move_lang::expansion::ast","",26,null],[12,"exp","move_lang::expansion::ast::SpecBlockMember_","",32,null],[12,"patterns","","",32,null],[12,"exclusion_patterns","","",32,null],[13,"Pragma","move_lang::expansion::ast","",26,null],[12,"properties","move_lang::expansion::ast::SpecBlockMember_","",33,null],[4,"PragmaValue","move_lang::expansion::ast","",null,null],[13,"Literal","","",34,null],[13,"Ident","","",34,null],[4,"ModuleAccess_","","",null,null],[13,"Name","","",35,null],[13,"ModuleAccess","","",35,null],[4,"Type_","","",null,null],[13,"Unit","","",36,null],[13,"Multiple","","",36,null],[13,"Apply","","",36,null],[13,"Ref","","",36,null],[13,"Fun","","",36,null],[13,"UnresolvedError","","",36,null],[4,"LValue_","","",null,null],[13,"Var","","",37,null],[13,"Unpack","","",37,null],[4,"ExpDotted_","","",null,null],[13,"Exp","","",38,null],[13,"Dot","","",38,null],[4,"Value_","","",null,null],[13,"Address","","",39,null],[13,"U8","","",39,null],[13,"U64","","",39,null],[13,"U128","","",39,null],[13,"Bool","","",39,null],[13,"Bytearray","","",39,null],[4,"Exp_","","",null,null],[13,"Value","","",40,null],[13,"InferredNum","","",40,null],[13,"Move","","",40,null],[13,"Copy","","",40,null],[13,"Name","","",40,null],[13,"Call","","",40,null],[13,"Pack","","",40,null],[13,"IfElse","","",40,null],[13,"While","","",40,null],[13,"Loop","","",40,null],[13,"Block","","",40,null],[13,"Lambda","","",40,null],[13,"Quant","","",40,null],[13,"Assign","","",40,null],[13,"FieldMutate","","",40,null],[13,"Mutate","","",40,null],[13,"Return","","",40,null],[13,"Abort","","",40,null],[13,"Break","","",40,null],[13,"Continue","","",40,null],[13,"Dereference","","",40,null],[13,"UnaryExp","","",40,null],[13,"BinopExp","","",40,null],[13,"ExpList","","",40,null],[13,"Unit","","",40,null],[12,"trailing","move_lang::expansion::ast::Exp_","",41,null],[13,"Borrow","move_lang::expansion::ast","",40,null],[13,"ExpDotted","","",40,null],[13,"Index","","",40,null],[13,"Cast","","",40,null],[13,"Annotate","","",40,null],[13,"Spec","","",40,null],[13,"UnresolvedError","","",40,null],[4,"SequenceItem_","","",null,null],[13,"Seq","","",42,null],[13,"Declare","","",42,null],[13,"Bind","","",42,null],[6,"Fields","","",null,null],[6,"FunctionBody","","",null,null],[6,"SpecBlock","","",null,null],[6,"SpecBlockMember","","",null,null],[6,"PragmaProperty","","",null,null],[6,"ModuleAccess","","",null,null],[6,"Type","","",null,null],[6,"LValue","","",null,null],[6,"LValueList_","","",null,null],[6,"LValueList","","",null,null],[6,"LValueWithRange_","","",null,null],[6,"LValueWithRange","","",null,null],[6,"LValueWithRangeList_","","",null,null],[6,"LValueWithRangeList","","",null,null],[6,"ExpDotted","","",null,null],[6,"Value","","",null,null],[6,"Exp","","",null,null],[6,"Sequence","","",null,null],[6,"SequenceItem","","",null,null],[11,"new","","",43,[[]]],[11,"inner","","",43,[[]]],[0,"hlir","move_lang","",null,null],[0,"ast","move_lang::hlir","",null,null],[3,"Program","move_lang::hlir::ast","",null,null],[12,"modules","","",44,null],[12,"scripts","","",44,null],[3,"Script","","",null,null],[12,"loc","","",45,null],[12,"constants","","",45,null],[12,"function_name","","",45,null],[12,"function","","",45,null],[3,"ModuleDefinition","","",null,null],[12,"is_source_module","","",46,null],[12,"dependency_order","","`dependency_order` is the topological order/rank in the…",46,null],[12,"structs","","",46,null],[12,"constants","","",46,null],[12,"functions","","",46,null],[3,"StructDefinition","","",null,null],[12,"resource_opt","","",47,null],[12,"type_parameters","","",47,null],[12,"fields","","",47,null],[3,"Constant","","",null,null],[12,"loc","","",48,null],[12,"signature","","",48,null],[12,"value","","",48,null],[3,"FunctionSignature","","",null,null],[12,"type_parameters","","",49,null],[12,"parameters","","",49,null],[12,"return_type","","",49,null],[3,"Function","","",null,null],[12,"visibility","","",50,null],[12,"signature","","",50,null],[12,"acquires","","",50,null],[12,"body","","",50,null],[3,"Label","","",null,null],[12,"0","","",51,null],[3,"ModuleCall","","",null,null],[12,"module","","",52,null],[12,"name","","",52,null],[12,"type_arguments","","",52,null],[12,"arguments","","",52,null],[12,"acquires","","",52,null],[3,"Exp","","",null,null],[12,"ty","","",53,null],[12,"exp","","",53,null],[4,"StructFields","","",null,null],[13,"Defined","","",54,null],[13,"Native","","",54,null],[4,"FunctionBody_","","",null,null],[13,"Native","","",55,null],[13,"Defined","","",55,null],[12,"locals","move_lang::hlir::ast::FunctionBody_","",56,null],[12,"body","","",56,null],[4,"TypeName_","move_lang::hlir::ast","",null,null],[13,"Builtin","","",57,null],[13,"ModuleType","","",57,null],[4,"BaseType_","","",null,null],[13,"Param","","",58,null],[13,"Apply","","",58,null],[13,"Unreachable","","",58,null],[13,"UnresolvedError","","",58,null],[4,"SingleType_","","",null,null],[13,"Base","","",59,null],[13,"Ref","","",59,null],[4,"Type_","","",null,null],[13,"Unit","","",60,null],[13,"Single","","",60,null],[13,"Multiple","","",60,null],[4,"Statement_","","",null,null],[13,"Command","","",61,null],[13,"IfElse","","",61,null],[12,"cond","move_lang::hlir::ast::Statement_","",62,null],[12,"if_block","","",62,null],[12,"else_block","","",62,null],[13,"While","move_lang::hlir::ast","",61,null],[12,"cond","move_lang::hlir::ast::Statement_","",63,null],[12,"block","","",63,null],[13,"Loop","move_lang::hlir::ast","",61,null],[12,"block","move_lang::hlir::ast::Statement_","",64,null],[12,"has_break","","",64,null],[12,"has_return_abort","","",64,null],[4,"Command_","move_lang::hlir::ast","",null,null],[13,"Assign","","",65,null],[13,"Mutate","","",65,null],[13,"Abort","","",65,null],[13,"Return","","",65,null],[13,"Break","","",65,null],[13,"Continue","","",65,null],[13,"IgnoreAndPop","","",65,null],[12,"pop_num","move_lang::hlir::ast::Command_","",66,null],[12,"exp","","",66,null],[13,"Jump","move_lang::hlir::ast","",65,null],[13,"JumpIf","","",65,null],[12,"cond","move_lang::hlir::ast::Command_","",67,null],[12,"if_true","","",67,null],[12,"if_false","","",67,null],[4,"LValue_","move_lang::hlir::ast","",null,null],[13,"Ignore","","",68,null],[13,"Var","","",68,null],[13,"Unpack","","",68,null],[4,"BuiltinFunction_","","",null,null],[13,"MoveTo","","",69,null],[13,"MoveFrom","","",69,null],[13,"BorrowGlobal","","",69,null],[13,"Exists","","",69,null],[4,"UnannotatedExp_","","",null,null],[13,"Unit","","",70,null],[12,"trailing","move_lang::hlir::ast::UnannotatedExp_","",71,null],[13,"Value","move_lang::hlir::ast","",70,null],[13,"Move","","",70,null],[12,"from_user","move_lang::hlir::ast::UnannotatedExp_","",72,null],[12,"var","","",72,null],[13,"Copy","move_lang::hlir::ast","",70,null],[12,"from_user","move_lang::hlir::ast::UnannotatedExp_","",73,null],[12,"var","","",73,null],[13,"Constant","move_lang::hlir::ast","",70,null],[13,"ModuleCall","","",70,null],[13,"Builtin","","",70,null],[13,"Freeze","","",70,null],[13,"Dereference","","",70,null],[13,"UnaryExp","","",70,null],[13,"BinopExp","","",70,null],[13,"Pack","","",70,null],[13,"ExpList","","",70,null],[13,"Borrow","","",70,null],[13,"BorrowLocal","","",70,null],[13,"Cast","","",70,null],[13,"Unreachable","","",70,null],[13,"Spec","","",70,null],[13,"UnresolvedError","","",70,null],[4,"ExpListItem","","",null,null],[13,"Single","","",74,null],[13,"Splat","","",74,null],[5,"exp","","",null,[[["unannotatedexp",6],["type",6]],["exp",3]]],[6,"FunctionBody","","",null,null],[6,"TypeName","","",null,null],[6,"BaseType","","",null,null],[6,"SingleType","","",null,null],[6,"Type","","",null,null],[6,"Statement","","",null,null],[6,"Block","","",null,null],[6,"BasicBlocks","","",null,null],[6,"BasicBlock","","",null,null],[6,"Command","","",null,null],[6,"LValue","","",null,null],[6,"BuiltinFunction","","",null,null],[6,"UnannotatedExp","","",null,null],[11,"is_parameter","","",49,[[["var",3]]]],[11,"is_terminal","","",65,[[]]],[11,"is_exit","","",65,[[]]],[11,"is_unit","","",65,[[]]],[11,"successors","","",65,[[],[["label",3],["btreeset",3]]]],[11,"is_unit","","",53,[[]]],[11,"is_unit","","",70,[[]]],[11,"builtin","","",58,[[["basetype",6],["vec",3],["builtintypename_",4],["loc",3]],["basetype",6]]],[11,"kind","","",58,[[],["kind",6]]],[11,"bool","","",58,[[["loc",3]],["basetype",6]]],[11,"address","","",58,[[["loc",3]],["basetype",6]]],[11,"u8","","",58,[[["loc",3]],["basetype",6]]],[11,"u64","","",58,[[["loc",3]],["basetype",6]]],[11,"u128","","",58,[[["loc",3]],["basetype",6]]],[11,"base","","",59,[[["basetype",6]],["singletype",6]]],[11,"bool","","",59,[[["loc",3]],["singletype",6]]],[11,"address","","",59,[[["loc",3]],["singletype",6]]],[11,"u8","","",59,[[["loc",3]],["singletype",6]]],[11,"u64","","",59,[[["loc",3]],["singletype",6]]],[11,"u128","","",59,[[["loc",3]],["singletype",6]]],[11,"kind","","",59,[[["loc",3]],["kind",6]]],[11,"base","","",60,[[["basetype",6]],["type",6]]],[11,"single","","",60,[[["singletype",6]],["type",6]]],[11,"bool","","",60,[[["loc",3]],["type",6]]],[11,"address","","",60,[[["loc",3]],["type",6]]],[11,"u8","","",60,[[["loc",3]],["type",6]]],[11,"u64","","",60,[[["loc",3]],["type",6]]],[11,"u128","","",60,[[["loc",3]],["type",6]]],[11,"type_at_index","","",60,[[],["singletype",6]]],[11,"from_vec","","",60,[[["singletype",6],["vec",3],["loc",3]],["type",6]]],[0,"interface_generator","move_lang","",null,null],[5,"write_to_string","move_lang::interface_generator","Generate the text for the \\\"interface\\\" file of a compiled…",null,[[],["result",6]]],[0,"ir_translation","move_lang","",null,null],[5,"fix_syntax_and_write","move_lang::ir_translation","",null,[[["path",3],["string",3]]]],[0,"naming","move_lang","",null,null],[0,"ast","move_lang::naming","",null,null],[3,"Program","move_lang::naming::ast","",null,null],[12,"modules","","",75,null],[12,"scripts","","",75,null],[3,"Script","","",null,null],[12,"loc","","",76,null],[12,"constants","","",76,null],[12,"function_name","","",76,null],[12,"function","","",76,null],[3,"ModuleDefinition","","",null,null],[12,"is_source_module","","",77,null],[12,"dependency_order","","`dependency_order` is the topological order/rank in the…",77,null],[12,"structs","","",77,null],[12,"constants","","",77,null],[12,"functions","","",77,null],[3,"StructDefinition","","",null,null],[12,"resource_opt","","",78,null],[12,"type_parameters","","",78,null],[12,"fields","","",78,null],[3,"FunctionSignature","","",null,null],[12,"type_parameters","","",79,null],[12,"parameters","","",79,null],[12,"return_type","","",79,null],[3,"Function","","",null,null],[12,"visibility","","",80,null],[12,"signature","","",80,null],[12,"acquires","","",80,null],[12,"body","","",80,null],[3,"Constant","","",null,null],[12,"loc","","",81,null],[12,"signature","","",81,null],[12,"value","","",81,null],[3,"TParamID","","",null,null],[12,"0","","",82,null],[3,"TParam","","",null,null],[12,"id","","",83,null],[12,"user_specified_name","","",83,null],[12,"kind","","",83,null],[3,"TVar","","",null,null],[4,"StructFields","","",null,null],[13,"Defined","","",84,null],[13,"Native","","",84,null],[4,"FunctionBody_","","",null,null],[13,"Defined","","",85,null],[13,"Native","","",85,null],[4,"BuiltinTypeName_","","",null,null],[13,"Address","","",86,null],[13,"Signer","","",86,null],[13,"U8","","",86,null],[13,"U64","","",86,null],[13,"U128","","",86,null],[13,"Vector","","",86,null],[13,"Bool","","",86,null],[4,"TypeName_","","",null,null],[13,"Multiple","","",87,null],[13,"Builtin","","",87,null],[13,"ModuleType","","",87,null],[4,"Type_","","",null,null],[13,"Unit","","",88,null],[13,"Ref","","",88,null],[13,"Param","","",88,null],[13,"Apply","","",88,null],[13,"Var","","",88,null],[13,"Anything","","",88,null],[13,"UnresolvedError","","",88,null],[4,"LValue_","","",null,null],[13,"Ignore","","",89,null],[13,"Var","","",89,null],[13,"Unpack","","",89,null],[4,"ExpDotted_","","",null,null],[13,"Exp","","",90,null],[13,"Dot","","",90,null],[4,"BuiltinFunction_","","",null,null],[13,"MoveTo","","",91,null],[13,"MoveFrom","","",91,null],[13,"BorrowGlobal","","",91,null],[13,"Exists","","",91,null],[13,"Freeze","","",91,null],[13,"Assert","","",91,null],[4,"Exp_","","",null,null],[13,"Value","","",92,null],[13,"InferredNum","","",92,null],[13,"Move","","",92,null],[13,"Copy","","",92,null],[13,"Use","","",92,null],[13,"Constant","","",92,null],[13,"ModuleCall","","",92,null],[13,"Builtin","","",92,null],[13,"IfElse","","",92,null],[13,"While","","",92,null],[13,"Loop","","",92,null],[13,"Block","","",92,null],[13,"Assign","","",92,null],[13,"FieldMutate","","",92,null],[13,"Mutate","","",92,null],[13,"Return","","",92,null],[13,"Abort","","",92,null],[13,"Break","","",92,null],[13,"Continue","","",92,null],[13,"Dereference","","",92,null],[13,"UnaryExp","","",92,null],[13,"BinopExp","","",92,null],[13,"Pack","","",92,null],[13,"ExpList","","",92,null],[13,"Unit","","",92,null],[12,"trailing","move_lang::naming::ast::Exp_","",93,null],[13,"DerefBorrow","move_lang::naming::ast","",92,null],[13,"Borrow","","",92,null],[13,"Cast","","",92,null],[13,"Annotate","","",92,null],[13,"Spec","","",92,null],[13,"UnresolvedError","","",92,null],[4,"SequenceItem_","","",null,null],[13,"Seq","","",94,null],[13,"Declare","","",94,null],[13,"Bind","","",94,null],[6,"FunctionBody","","",null,null],[6,"BuiltinTypeName","","",null,null],[6,"TypeName","","",null,null],[6,"Type","","",null,null],[6,"LValue","","",null,null],[6,"LValueList_","","",null,null],[6,"LValueList","","",null,null],[6,"ExpDotted","","",null,null],[6,"BuiltinFunction","","",null,null],[6,"Exp","","",null,null],[6,"Sequence","","",null,null],[6,"SequenceItem","","",null,null],[18,"ADDRESS","","",86,null],[18,"SIGNER","","",86,null],[18,"U_8","","",86,null],[18,"U_64","","",86,null],[18,"U_128","","",86,null],[18,"BOOL","","",86,null],[18,"VECTOR","","",86,null],[11,"all_names","","",86,[[],["btreeset",3]]],[11,"numeric","","",86,[[],[["btreeset",3],["builtintypename_",4]]]],[11,"bits","","",86,[[],[["btreeset",3],["builtintypename_",4]]]],[11,"ordered","","",86,[[],[["btreeset",3],["builtintypename_",4]]]],[11,"is_numeric","","",86,[[]]],[11,"resolve","","",86,[[],["option",4]]],[11,"tparam_constraints","","",86,[[["loc",3]],[["kind",6],["vec",3]]]],[11,"next","","",82,[[],["tparamid",3]]],[11,"next","","",95,[[],["tvar",3]]],[18,"MOVE_TO","","",91,null],[18,"MOVE_FROM","","",91,null],[18,"BORROW_GLOBAL","","",91,null],[18,"BORROW_GLOBAL_MUT","","",91,null],[18,"EXISTS","","",91,null],[18,"FREEZE","","",91,null],[18,"ASSERT","","",91,null],[11,"all_names","","",91,[[],["btreeset",3]]],[11,"resolve","","",91,[[["type",6],["option",4]],["option",4]]],[11,"display_name","","",91,[[]]],[11,"builtin_","","",88,[[["type",6],["vec",3],["builtintypename",6]],["type_",4]]],[11,"builtin","","",88,[[["type",6],["loc",3],["vec",3],["builtintypename",6]],["type",6]]],[11,"bool","","",88,[[["loc",3]],["type",6]]],[11,"address","","",88,[[["loc",3]],["type",6]]],[11,"signer","","",88,[[["loc",3]],["type",6]]],[11,"u8","","",88,[[["loc",3]],["type",6]]],[11,"u64","","",88,[[["loc",3]],["type",6]]],[11,"u128","","",88,[[["loc",3]],["type",6]]],[11,"vector","","",88,[[["type",6],["loc",3]],["type",6]]],[11,"multiple","","",88,[[["type",6],["vec",3],["loc",3]],["type",6]]],[11,"multiple_","","",88,[[["type",6],["vec",3],["loc",3]],["type_",4]]],[11,"builtin_name","","",88,[[],[["option",4],["builtintypename",6]]]],[11,"type_","move_lang::expansion::ast","",39,[[["loc",3]],["type",6]]],[0,"parser","move_lang","",null,null],[0,"ast","move_lang::parser","",null,null],[3,"Program","move_lang::parser::ast","",null,null],[12,"source_definitions","","",96,null],[12,"lib_definitions","","",96,null],[3,"Script","","",null,null],[12,"loc","","",97,null],[12,"uses","","",97,null],[12,"constants","","",97,null],[12,"function","","",97,null],[12,"specs","","",97,null],[3,"ModuleName","","",null,null],[12,"0","","",98,null],[3,"ModuleIdent_","","",null,null],[12,"name","","",99,null],[12,"address","","",99,null],[3,"ModuleIdent","","",null,null],[12,"0","","",100,null],[3,"ModuleDefinition","","",null,null],[12,"loc","","",101,null],[12,"name","","",101,null],[12,"members","","",101,null],[3,"Field","","",null,null],[12,"0","","",102,null],[3,"StructName","","",null,null],[12,"0","","",103,null],[3,"StructDefinition","","",null,null],[12,"loc","","",104,null],[12,"resource_opt","","",104,null],[12,"name","","",104,null],[12,"type_parameters","","",104,null],[12,"fields","","",104,null],[3,"FunctionName","","",null,null],[12,"0","","",105,null],[3,"FunctionSignature","","",null,null],[12,"type_parameters","","",106,null],[12,"parameters","","",106,null],[12,"return_type","","",106,null],[3,"Function","","",null,null],[12,"loc","","",107,null],[12,"visibility","","",107,null],[12,"signature","","",107,null],[12,"acquires","","",107,null],[12,"name","","",107,null],[12,"body","","",107,null],[3,"ConstantName","","",null,null],[12,"0","","",108,null],[3,"Constant","","",null,null],[12,"loc","","",109,null],[12,"signature","","",109,null],[12,"name","","",109,null],[12,"value","","",109,null],[3,"SpecBlock_","","",null,null],[12,"target","","",110,null],[12,"uses","","",110,null],[12,"members","","",110,null],[3,"PragmaProperty_","","",null,null],[12,"name","","",111,null],[12,"value","","",111,null],[3,"SpecApplyPattern_","","",null,null],[12,"visibility","","",112,null],[12,"name_pattern","","",112,null],[12,"type_parameters","","",112,null],[3,"Var","","",null,null],[12,"0","","",113,null],[4,"Definition","","",null,null],[13,"Module","","",114,null],[13,"Address","","",114,null],[13,"Script","","",114,null],[4,"Use","","",null,null],[13,"Module","","",115,null],[13,"Members","","",115,null],[4,"ModuleMember","","",null,null],[13,"Function","","",116,null],[13,"Struct","","",116,null],[13,"Spec","","",116,null],[13,"Use","","",116,null],[13,"Constant","","",116,null],[4,"StructFields","","",null,null],[13,"Defined","","",117,null],[13,"Native","","",117,null],[4,"FunctionVisibility","","",null,null],[13,"Public","","",118,null],[13,"Internal","","",118,null],[4,"FunctionBody_","","",null,null],[13,"Defined","","",119,null],[13,"Native","","",119,null],[4,"SpecBlockTarget_","","",null,null],[13,"Code","","",120,null],[13,"Module","","",120,null],[13,"Function","","",120,null],[13,"Structure","","",120,null],[13,"Schema","","",120,null],[4,"PragmaValue","","",null,null],[13,"Literal","","",121,null],[13,"Ident","","",121,null],[4,"SpecApplyFragment_","","",null,null],[13,"Wildcard","","",122,null],[13,"NamePart","","",122,null],[4,"SpecBlockMember_","","",null,null],[13,"Condition","","",123,null],[12,"kind","move_lang::parser::ast::SpecBlockMember_","",124,null],[12,"properties","","",124,null],[12,"exp","","",124,null],[12,"additional_exps","","",124,null],[13,"Function","move_lang::parser::ast","",123,null],[12,"uninterpreted","move_lang::parser::ast::SpecBlockMember_","",125,null],[12,"name","","",125,null],[12,"signature","","",125,null],[12,"body","","",125,null],[13,"Variable","move_lang::parser::ast","",123,null],[12,"is_global","move_lang::parser::ast::SpecBlockMember_","",126,null],[12,"name","","",126,null],[12,"type_parameters","","",126,null],[12,"type_","","",126,null],[13,"Let","move_lang::parser::ast","",123,null],[12,"name","move_lang::parser::ast::SpecBlockMember_","",127,null],[12,"def","","",127,null],[13,"Include","move_lang::parser::ast","",123,null],[12,"properties","move_lang::parser::ast::SpecBlockMember_","",128,null],[12,"exp","","",128,null],[13,"Apply","move_lang::parser::ast","",123,null],[12,"exp","move_lang::parser::ast::SpecBlockMember_","",129,null],[12,"patterns","","",129,null],[12,"exclusion_patterns","","",129,null],[13,"Pragma","move_lang::parser::ast","",123,null],[12,"properties","move_lang::parser::ast::SpecBlockMember_","",130,null],[4,"SpecConditionKind","move_lang::parser::ast","",null,null],[13,"Assert","","",131,null],[13,"Assume","","",131,null],[13,"Decreases","","",131,null],[13,"AbortsIf","","",131,null],[13,"AbortsWith","","",131,null],[13,"SucceedsIf","","",131,null],[13,"Modifies","","",131,null],[13,"Emits","","",131,null],[13,"Ensures","","",131,null],[13,"Requires","","",131,null],[13,"RequiresModule","","",131,null],[13,"Invariant","","",131,null],[13,"InvariantUpdate","","",131,null],[13,"InvariantPack","","",131,null],[13,"InvariantUnpack","","",131,null],[13,"InvariantModule","","",131,null],[4,"InvariantKind","","",null,null],[13,"Data","","",132,null],[13,"Update","","",132,null],[13,"Pack","","",132,null],[13,"Unpack","","",132,null],[13,"Module","","",132,null],[4,"ModuleAccess_","","",null,null],[13,"Name","","",133,null],[13,"ModuleAccess","","",133,null],[13,"QualifiedModuleAccess","","",133,null],[4,"Kind_","","",null,null],[13,"Unknown","","",134,null],[13,"Resource","","",134,null],[13,"Affine","","",134,null],[13,"Copyable","","",134,null],[4,"Type_","","",null,null],[13,"Apply","","",135,null],[13,"Ref","","",135,null],[13,"Fun","","",135,null],[13,"Unit","","",135,null],[13,"Multiple","","",135,null],[4,"Bind_","","",null,null],[13,"Var","","",136,null],[13,"Unpack","","",136,null],[4,"Value_","","",null,null],[13,"Address","","",137,null],[13,"U8","","",137,null],[13,"U64","","",137,null],[13,"U128","","",137,null],[13,"Bool","","",137,null],[13,"HexString","","",137,null],[13,"ByteString","","",137,null],[4,"UnaryOp_","","",null,null],[13,"Not","","",138,null],[4,"BinOp_","","",null,null],[13,"Add","","",139,null],[13,"Sub","","",139,null],[13,"Mul","","",139,null],[13,"Mod","","",139,null],[13,"Div","","",139,null],[13,"BitOr","","",139,null],[13,"BitAnd","","",139,null],[13,"Xor","","",139,null],[13,"Shl","","",139,null],[13,"Shr","","",139,null],[13,"Range","","",139,null],[13,"Implies","","",139,null],[13,"And","","",139,null],[13,"Or","","",139,null],[13,"Eq","","",139,null],[13,"Neq","","",139,null],[13,"Lt","","",139,null],[13,"Gt","","",139,null],[13,"Le","","",139,null],[13,"Ge","","",139,null],[4,"QuantKind_","","",null,null],[13,"Forall","","",140,null],[13,"Exists","","",140,null],[4,"Exp_","","",null,null],[13,"Value","","",141,null],[13,"InferredNum","","",141,null],[13,"Move","","",141,null],[13,"Copy","","",141,null],[13,"Name","","",141,null],[13,"Call","","",141,null],[13,"Pack","","",141,null],[13,"IfElse","","",141,null],[13,"While","","",141,null],[13,"Loop","","",141,null],[13,"Block","","",141,null],[13,"Lambda","","",141,null],[13,"Quant","","",141,null],[13,"ExpList","","",141,null],[13,"Unit","","",141,null],[13,"Assign","","",141,null],[13,"Return","","",141,null],[13,"Abort","","",141,null],[13,"Break","","",141,null],[13,"Continue","","",141,null],[13,"Dereference","","",141,null],[13,"UnaryExp","","",141,null],[13,"BinopExp","","",141,null],[13,"Borrow","","",141,null],[13,"Dot","","",141,null],[13,"Index","","",141,null],[13,"Cast","","",141,null],[13,"Annotate","","",141,null],[13,"Spec","","",141,null],[13,"UnresolvedError","","",141,null],[4,"SequenceItem_","","",null,null],[13,"Seq","","",142,null],[13,"Declare","","",142,null],[13,"Bind","","",142,null],[6,"ResourceLoc","","",null,null],[6,"FunctionBody","","",null,null],[6,"SpecBlock","","",null,null],[6,"SpecBlockTarget","","",null,null],[6,"PragmaProperty","","",null,null],[6,"SpecApplyPattern","","",null,null],[6,"SpecApplyFragment","","",null,null],[6,"SpecBlockMember","","",null,null],[6,"ModuleAccess","","",null,null],[6,"Kind","","",null,null],[6,"Type","","",null,null],[6,"Bind","","",null,null],[6,"BindList","","",null,null],[6,"BindWithRange","","",null,null],[6,"BindWithRangeList","","",null,null],[6,"Value","","",null,null],[6,"UnaryOp","","",null,null],[6,"BinOp","","",null,null],[6,"QuantKind","","",null,null],[6,"Exp","","",null,null],[6,"Sequence","","",null,null],[6,"SequenceItem","","",null,null],[11,"file","","",114,[[]]],[11,"loc","","",100,[[],["loc",3]]],[18,"SELF_NAME","","",98,null],[11,"is_underscore","","",113,[[]]],[11,"starts_with_underscore","","",113,[[]]],[18,"VALUE_CONSTRAINT","","",134,null],[18,"RESOURCE_CONSTRAINT","","",134,null],[11,"is_resourceful","","",134,[[]]],[11,"unit","","",135,[[["loc",3]],["type",6]]],[18,"NOT","","",138,null],[11,"symbol","","",138,[[]]],[11,"is_pure","","",138,[[]]],[18,"ADD","","",139,null],[18,"SUB","","",139,null],[18,"MUL","","",139,null],[18,"MOD","","",139,null],[18,"DIV","","",139,null],[18,"BIT_OR","","",139,null],[18,"BIT_AND","","",139,null],[18,"XOR","","",139,null],[18,"SHL","","",139,null],[18,"SHR","","",139,null],[18,"AND","","",139,null],[18,"OR","","",139,null],[18,"EQ","","",139,null],[18,"NEQ","","",139,null],[18,"LT","","",139,null],[18,"GT","","",139,null],[18,"LE","","",139,null],[18,"GE","","",139,null],[18,"IMPLIES","","",139,null],[18,"RANGE","","",139,null],[11,"symbol","","",139,[[]]],[11,"is_pure","","",139,[[]]],[11,"is_spec_only","","",139,[[]]],[0,"shared","move_lang","",null,null],[3,"Address","move_lang::shared","",null,null],[3,"Counter","","",null,null],[5,"shortest_cycle","","",null,[[["digraphmap",6]],["vec",3]]],[5,"format_delim","","",null,[[["intoiterator",8]],["string",3]]],[5,"format_comma","","",null,[[["intoiterator",8]],["string",3]]],[0,"ast_debug","","",null,null],[3,"AstWriter","move_lang::shared::ast_debug","",null,null],[5,"print","","",null,[[]]],[5,"print_verbose","","",null,[[]]],[8,"AstDebug","","Simple trait used for pretty printing the various AST",null,null],[10,"ast_debug","","",143,[[["astwriter",3]]]],[11,"new_line","","",144,[[]]],[11,"write","","",144,[[]]],[11,"writeln","","",144,[[]]],[11,"indent","","",144,[[["fnonce",8]]]],[11,"block","","",144,[[["fnonce",8]]]],[11,"annotate","","",144,[[["fnonce",8]]]],[11,"list","","",144,[[["fnmut",8]]]],[11,"comma","","",144,[[["fnmut",8]]]],[11,"semicolon","","",144,[[["fnmut",8]]]],[0,"remembering_unique_map","move_lang::shared","",null,null],[3,"RememberingUniqueMap","move_lang::shared::remembering_unique_map","wrapper around `UniqueMap` that remembers which values…",null,null],[3,"IntoIter","","",null,null],[3,"Iter","","",null,null],[3,"IterMut","","",null,null],[11,"new","","",145,[[]]],[11,"is_empty","","",145,[[]]],[11,"len","","",145,[[]]],[11,"add","","",145,[[],["result",4]]],[11,"key_gotten","","",145,[[]]],[11,"contains_key","","",145,[[]]],[11,"contains_key_","","",145,[[]]],[11,"get","","",145,[[],["option",4]]],[11,"get_mut","","",145,[[],["option",4]]],[11,"get_loc","","",145,[[],["option",4]]],[11,"remove","","",145,[[],["option",4]]],[11,"map","","",145,[[],["rememberinguniquemap",3]]],[11,"ref_map","","",145,[[],["rememberinguniquemap",3]]],[11,"union_with","","",145,[[]]],[11,"iter","","",145,[[],["iter",3]]],[11,"iter_mut","","",145,[[],["itermut",3]]],[11,"maybe_from_opt_iter","","",145,[[],[["option",4],["result",4]]]],[11,"maybe_from_iter","","",145,[[],[["rememberinguniquemap",3],["result",4]]]],[11,"into_inner","","",145,[[],["uniquemap",3]]],[11,"remember","","",145,[[],["btreeset",3]]],[0,"unique_map","move_lang::shared","",null,null],[3,"UniqueMap","move_lang::shared::unique_map","Unique wrapper around `BTreeMap` that throws on duplicate…",null,null],[3,"IntoIter","","",null,null],[3,"Iter","","",null,null],[3,"IterMut","","",null,null],[11,"new","","",146,[[]]],[11,"is_empty","","",146,[[]]],[11,"len","","",146,[[]]],[11,"add","","",146,[[],["result",4]]],[11,"contains_key","","",146,[[]]],[11,"contains_key_","","",146,[[]]],[11,"get","","",146,[[],["option",4]]],[11,"get_","","",146,[[],["option",4]]],[11,"get_mut","","",146,[[],["option",4]]],[11,"get_mut_","","",146,[[],["option",4]]],[11,"get_loc","","",146,[[],["option",4]]],[11,"get_loc_","","",146,[[],["option",4]]],[11,"remove","","",146,[[],["option",4]]],[11,"remove_","","",146,[[],["option",4]]],[11,"map","","",146,[[],["uniquemap",3]]],[11,"ref_map","","",146,[[],["uniquemap",3]]],[11,"union_with","","",146,[[]]],[11,"iter","","",146,[[],["iter",3]]],[11,"iter_mut","","",146,[[],["itermut",3]]],[11,"maybe_from_opt_iter","","",146,[[],[["result",4],["option",4]]]],[11,"maybe_from_iter","","",146,[[],[["result",4],["uniquemap",3]]]],[6,"Name","move_lang::shared","",null,null],[17,"ADDRESS_LENGTH","","",null,null],[8,"TName","","",null,null],[16,"Key","","",147,null],[16,"Loc","","",147,null],[10,"drop_loc","","",147,[[]]],[10,"clone_drop_loc","","",147,[[]]],[10,"add_loc","","",147,[[]]],[8,"Identifier","","",null,null],[10,"value","","",148,[[]]],[10,"loc","","",148,[[],["loc",3]]],[18,"DIEM_CORE","","",149,null],[11,"new","","",149,[[]]],[11,"to_u8","","",149,[[]]],[11,"parse_str","","",149,[[],[["address",3],["string",3],["result",4]]]],[11,"next","","",150,[[]]],[0,"typing","move_lang","",null,null],[0,"ast","move_lang::typing","",null,null],[3,"Program","move_lang::typing::ast","",null,null],[12,"modules","","",151,null],[12,"scripts","","",151,null],[3,"Script","","",null,null],[12,"loc","","",152,null],[12,"constants","","",152,null],[12,"function_name","","",152,null],[12,"function","","",152,null],[3,"ModuleDefinition","","",null,null],[12,"is_source_module","","",153,null],[12,"dependency_order","","`dependency_order` is the topological order/rank in the…",153,null],[12,"structs","","",153,null],[12,"constants","","",153,null],[12,"functions","","",153,null],[3,"Function","","",null,null],[12,"visibility","","",154,null],[12,"signature","","",154,null],[12,"acquires","","",154,null],[12,"body","","",154,null],[3,"Constant","","",null,null],[12,"loc","","",155,null],[12,"signature","","",155,null],[12,"value","","",155,null],[3,"ModuleCall","","",null,null],[12,"module","","",156,null],[12,"name","","",156,null],[12,"type_arguments","","",156,null],[12,"arguments","","",156,null],[12,"parameter_types","","",156,null],[12,"acquires","","",156,null],[3,"Exp","","",null,null],[12,"ty","","",157,null],[12,"exp","","",157,null],[4,"FunctionBody_","","",null,null],[13,"Defined","","",158,null],[13,"Native","","",158,null],[4,"LValue_","","",null,null],[13,"Ignore","","",159,null],[13,"Var","","",159,null],[13,"Unpack","","",159,null],[13,"BorrowUnpack","","",159,null],[4,"BuiltinFunction_","","",null,null],[13,"MoveTo","","",160,null],[13,"MoveFrom","","",160,null],[13,"BorrowGlobal","","",160,null],[13,"Exists","","",160,null],[13,"Freeze","","",160,null],[13,"Assert","","",160,null],[4,"UnannotatedExp_","","",null,null],[13,"Unit","","",161,null],[12,"trailing","move_lang::typing::ast::UnannotatedExp_","",162,null],[13,"Value","move_lang::typing::ast","",161,null],[13,"InferredNum","","",161,null],[13,"Move","","",161,null],[12,"from_user","move_lang::typing::ast::UnannotatedExp_","",163,null],[12,"var","","",163,null],[13,"Copy","move_lang::typing::ast","",161,null],[12,"from_user","move_lang::typing::ast::UnannotatedExp_","",164,null],[12,"var","","",164,null],[13,"Use","move_lang::typing::ast","",161,null],[13,"Constant","","",161,null],[13,"ModuleCall","","",161,null],[13,"Builtin","","",161,null],[13,"IfElse","","",161,null],[13,"While","","",161,null],[13,"Loop","","",161,null],[12,"has_break","move_lang::typing::ast::UnannotatedExp_","",165,null],[12,"body","","",165,null],[13,"Block","move_lang::typing::ast","",161,null],[13,"Assign","","",161,null],[13,"Mutate","","",161,null],[13,"Return","","",161,null],[13,"Abort","","",161,null],[13,"Break","","",161,null],[13,"Continue","","",161,null],[13,"Dereference","","",161,null],[13,"UnaryExp","","",161,null],[13,"BinopExp","","",161,null],[13,"Pack","","",161,null],[13,"ExpList","","",161,null],[13,"Borrow","","",161,null],[13,"TempBorrow","","",161,null],[13,"BorrowLocal","","",161,null],[13,"Cast","","",161,null],[13,"Annotate","","",161,null],[13,"Spec","","",161,null],[13,"UnresolvedError","","",161,null],[4,"SequenceItem_","","",null,null],[13,"Seq","","",166,null],[13,"Declare","","",166,null],[13,"Bind","","",166,null],[4,"ExpListItem","","",null,null],[13,"Single","","",167,null],[13,"Splat","","",167,null],[5,"exp","","",null,[[["type",6],["unannotatedexp",6]],["exp",3]]],[5,"single_item","","",null,[[["exp",3]],["explistitem",4]]],[5,"splat_item","","",null,[[["exp",3],["loc",3]],["explistitem",4]]],[6,"FunctionBody","","",null,null],[6,"LValue","","",null,null],[6,"LValueList_","","",null,null],[6,"LValueList","","",null,null],[6,"BuiltinFunction","","",null,null],[6,"UnannotatedExp","","",null,null],[6,"Sequence","","",null,null],[6,"SequenceItem","","",null,null],[11,"display_name","","",160,[[]]],[6,"CommentMap","move_lang","Types to represent comments.",null,null],[6,"MatchedFileCommentMap","","",null,null],[6,"FileCommentMap","","",null,null],[17,"MOVE_EXTENSION","","",null,null],[17,"MOVE_COMPILED_EXTENSION","","",null,null],[17,"MOVE_COMPILED_INTERFACES_DIR","","",null,null],[17,"SOURCE_MAP_EXTENSION","","",null,null],[11,"equivalent_pass","","",1,[[],["pass",4]]],[11,"check_for_errors","","",1,[[],[["result",4],["errors",6]]]],[14,"unwrap_or_report_errors","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","move_lang::cfgir::ast","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","move_lang::compiled_unit","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","move_lang::expansion::ast","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"equivalent","","",43,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","move_lang::hlir::ast","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"equivalent","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"equivalent","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"equivalent","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"init","","",74,[[]]],[11,"deref","","",74,[[]]],[11,"deref_mut","","",74,[[]]],[11,"drop","","",74,[[]]],[11,"from","move_lang::naming::ast","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"init","","",75,[[]]],[11,"deref","","",75,[[]]],[11,"deref_mut","","",75,[[]]],[11,"drop","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"init","","",77,[[]]],[11,"deref","","",77,[[]]],[11,"deref_mut","","",77,[[]]],[11,"drop","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"init","","",79,[[]]],[11,"deref","","",79,[[]]],[11,"deref_mut","","",79,[[]]],[11,"drop","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[]]],[11,"deref","","",80,[[]]],[11,"deref_mut","","",80,[[]]],[11,"drop","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"init","","",81,[[]]],[11,"deref","","",81,[[]]],[11,"deref_mut","","",81,[[]]],[11,"drop","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"init","","",82,[[]]],[11,"deref","","",82,[[]]],[11,"deref_mut","","",82,[[]]],[11,"drop","","",82,[[]]],[11,"equivalent","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"init","","",83,[[]]],[11,"deref","","",83,[[]]],[11,"deref_mut","","",83,[[]]],[11,"drop","","",83,[[]]],[11,"equivalent","","",83,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"init","","",95,[[]]],[11,"deref","","",95,[[]]],[11,"deref_mut","","",95,[[]]],[11,"drop","","",95,[[]]],[11,"equivalent","","",95,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"init","","",84,[[]]],[11,"deref","","",84,[[]]],[11,"deref_mut","","",84,[[]]],[11,"drop","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"init","","",85,[[]]],[11,"deref","","",85,[[]]],[11,"deref_mut","","",85,[[]]],[11,"drop","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"to_string","","",86,[[],["string",3]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"init","","",86,[[]]],[11,"deref","","",86,[[]]],[11,"deref_mut","","",86,[[]]],[11,"drop","","",86,[[]]],[11,"equivalent","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"init","","",87,[[]]],[11,"deref","","",87,[[]]],[11,"deref_mut","","",87,[[]]],[11,"drop","","",87,[[]]],[11,"equivalent","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"init","","",88,[[]]],[11,"deref","","",88,[[]]],[11,"deref_mut","","",88,[[]]],[11,"drop","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"init","","",89,[[]]],[11,"deref","","",89,[[]]],[11,"deref_mut","","",89,[[]]],[11,"drop","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"init","","",90,[[]]],[11,"deref","","",90,[[]]],[11,"deref_mut","","",90,[[]]],[11,"drop","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"init","","",91,[[]]],[11,"deref","","",91,[[]]],[11,"deref_mut","","",91,[[]]],[11,"drop","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"init","","",92,[[]]],[11,"deref","","",92,[[]]],[11,"deref_mut","","",92,[[]]],[11,"drop","","",92,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"init","","",94,[[]]],[11,"deref","","",94,[[]]],[11,"deref_mut","","",94,[[]]],[11,"drop","","",94,[[]]],[11,"from","move_lang::parser::ast","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"init","","",96,[[]]],[11,"deref","","",96,[[]]],[11,"deref_mut","","",96,[[]]],[11,"drop","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"init","","",97,[[]]],[11,"deref","","",97,[[]]],[11,"deref_mut","","",97,[[]]],[11,"drop","","",97,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"to_string","","",98,[[],["string",3]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"init","","",98,[[]]],[11,"deref","","",98,[[]]],[11,"deref_mut","","",98,[[]]],[11,"drop","","",98,[[]]],[11,"equivalent","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"init","","",99,[[]]],[11,"deref","","",99,[[]]],[11,"deref_mut","","",99,[[]]],[11,"drop","","",99,[[]]],[11,"equivalent","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"to_string","","",100,[[],["string",3]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"init","","",100,[[]]],[11,"deref","","",100,[[]]],[11,"deref_mut","","",100,[[]]],[11,"drop","","",100,[[]]],[11,"equivalent","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"init","","",101,[[]]],[11,"deref","","",101,[[]]],[11,"deref_mut","","",101,[[]]],[11,"drop","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"to_string","","",102,[[],["string",3]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"init","","",102,[[]]],[11,"deref","","",102,[[]]],[11,"deref_mut","","",102,[[]]],[11,"drop","","",102,[[]]],[11,"equivalent","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"to_string","","",103,[[],["string",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"init","","",103,[[]]],[11,"deref","","",103,[[]]],[11,"deref_mut","","",103,[[]]],[11,"drop","","",103,[[]]],[11,"equivalent","","",103,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"init","","",104,[[]]],[11,"deref","","",104,[[]]],[11,"deref_mut","","",104,[[]]],[11,"drop","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"to_string","","",105,[[],["string",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"init","","",105,[[]]],[11,"deref","","",105,[[]]],[11,"deref_mut","","",105,[[]]],[11,"drop","","",105,[[]]],[11,"equivalent","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"init","","",106,[[]]],[11,"deref","","",106,[[]]],[11,"deref_mut","","",106,[[]]],[11,"drop","","",106,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"init","","",107,[[]]],[11,"deref","","",107,[[]]],[11,"deref_mut","","",107,[[]]],[11,"drop","","",107,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"to_string","","",108,[[],["string",3]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"init","","",108,[[]]],[11,"deref","","",108,[[]]],[11,"deref_mut","","",108,[[]]],[11,"drop","","",108,[[]]],[11,"equivalent","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"init","","",109,[[]]],[11,"deref","","",109,[[]]],[11,"deref_mut","","",109,[[]]],[11,"drop","","",109,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"init","","",110,[[]]],[11,"deref","","",110,[[]]],[11,"deref_mut","","",110,[[]]],[11,"drop","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"init","","",111,[[]]],[11,"deref","","",111,[[]]],[11,"deref_mut","","",111,[[]]],[11,"drop","","",111,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"init","","",112,[[]]],[11,"deref","","",112,[[]]],[11,"deref_mut","","",112,[[]]],[11,"drop","","",112,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"init","","",113,[[]]],[11,"deref","","",113,[[]]],[11,"deref_mut","","",113,[[]]],[11,"drop","","",113,[[]]],[11,"equivalent","","",113,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"init","","",114,[[]]],[11,"deref","","",114,[[]]],[11,"deref_mut","","",114,[[]]],[11,"drop","","",114,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"init","","",115,[[]]],[11,"deref","","",115,[[]]],[11,"deref_mut","","",115,[[]]],[11,"drop","","",115,[[]]],[11,"equivalent","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"init","","",116,[[]]],[11,"deref","","",116,[[]]],[11,"deref_mut","","",116,[[]]],[11,"drop","","",116,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"init","","",117,[[]]],[11,"deref","","",117,[[]]],[11,"deref_mut","","",117,[[]]],[11,"drop","","",117,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"vzip","","",118,[[]]],[11,"init","","",118,[[]]],[11,"deref","","",118,[[]]],[11,"deref_mut","","",118,[[]]],[11,"drop","","",118,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"vzip","","",119,[[]]],[11,"init","","",119,[[]]],[11,"deref","","",119,[[]]],[11,"deref_mut","","",119,[[]]],[11,"drop","","",119,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"init","","",120,[[]]],[11,"deref","","",120,[[]]],[11,"deref_mut","","",120,[[]]],[11,"drop","","",120,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"vzip","","",121,[[]]],[11,"init","","",121,[[]]],[11,"deref","","",121,[[]]],[11,"deref_mut","","",121,[[]]],[11,"drop","","",121,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"init","","",122,[[]]],[11,"deref","","",122,[[]]],[11,"deref_mut","","",122,[[]]],[11,"drop","","",122,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"vzip","","",123,[[]]],[11,"init","","",123,[[]]],[11,"deref","","",123,[[]]],[11,"deref_mut","","",123,[[]]],[11,"drop","","",123,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"vzip","","",131,[[]]],[11,"init","","",131,[[]]],[11,"deref","","",131,[[]]],[11,"deref_mut","","",131,[[]]],[11,"drop","","",131,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"vzip","","",132,[[]]],[11,"init","","",132,[[]]],[11,"deref","","",132,[[]]],[11,"deref_mut","","",132,[[]]],[11,"drop","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"vzip","","",133,[[]]],[11,"init","","",133,[[]]],[11,"deref","","",133,[[]]],[11,"deref_mut","","",133,[[]]],[11,"drop","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"init","","",134,[[]]],[11,"deref","","",134,[[]]],[11,"deref_mut","","",134,[[]]],[11,"drop","","",134,[[]]],[11,"equivalent","","",134,[[]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"init","","",135,[[]]],[11,"deref","","",135,[[]]],[11,"deref_mut","","",135,[[]]],[11,"drop","","",135,[[]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"vzip","","",136,[[]]],[11,"init","","",136,[[]]],[11,"deref","","",136,[[]]],[11,"deref_mut","","",136,[[]]],[11,"drop","","",136,[[]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"vzip","","",137,[[]]],[11,"init","","",137,[[]]],[11,"deref","","",137,[[]]],[11,"deref_mut","","",137,[[]]],[11,"drop","","",137,[[]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"to_string","","",138,[[],["string",3]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"vzip","","",138,[[]]],[11,"init","","",138,[[]]],[11,"deref","","",138,[[]]],[11,"deref_mut","","",138,[[]]],[11,"drop","","",138,[[]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"to_string","","",139,[[],["string",3]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"vzip","","",139,[[]]],[11,"init","","",139,[[]]],[11,"deref","","",139,[[]]],[11,"deref_mut","","",139,[[]]],[11,"drop","","",139,[[]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"vzip","","",140,[[]]],[11,"init","","",140,[[]]],[11,"deref","","",140,[[]]],[11,"deref_mut","","",140,[[]]],[11,"drop","","",140,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"vzip","","",141,[[]]],[11,"init","","",141,[[]]],[11,"deref","","",141,[[]]],[11,"deref_mut","","",141,[[]]],[11,"drop","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"vzip","","",142,[[]]],[11,"init","","",142,[[]]],[11,"deref","","",142,[[]]],[11,"deref_mut","","",142,[[]]],[11,"drop","","",142,[[]]],[11,"from","move_lang::shared","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"to_string","","",149,[[],["string",3]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"vzip","","",149,[[]]],[11,"encode_hex","","",149,[[]]],[11,"encode_hex_upper","","",149,[[]]],[11,"init","","",149,[[]]],[11,"deref","","",149,[[]]],[11,"deref_mut","","",149,[[]]],[11,"drop","","",149,[[]]],[11,"equivalent","","",149,[[]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"vzip","","",150,[[]]],[11,"init","","",150,[[]]],[11,"deref","","",150,[[]]],[11,"deref_mut","","",150,[[]]],[11,"drop","","",150,[[]]],[11,"equivalent","","",150,[[]]],[11,"from","move_lang::shared::ast_debug","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_string","","",144,[[],["string",3]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"vzip","","",144,[[]]],[11,"init","","",144,[[]]],[11,"deref","","",144,[[]]],[11,"deref_mut","","",144,[[]]],[11,"drop","","",144,[[]]],[11,"from","move_lang::shared::remembering_unique_map","",145,[[]]],[11,"into","","",145,[[]]],[11,"into_iter","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"vzip","","",145,[[]]],[11,"init","","",145,[[]]],[11,"deref","","",145,[[]]],[11,"deref_mut","","",145,[[]]],[11,"drop","","",145,[[]]],[11,"equivalent","","",145,[[]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"into_iter","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"vzip","","",168,[[]]],[11,"init","","",168,[[]]],[11,"deref","","",168,[[]]],[11,"deref_mut","","",168,[[]]],[11,"drop","","",168,[[]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"into_iter","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"vzip","","",169,[[]]],[11,"init","","",169,[[]]],[11,"deref","","",169,[[]]],[11,"deref_mut","","",169,[[]]],[11,"drop","","",169,[[]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"into_iter","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"vzip","","",170,[[]]],[11,"init","","",170,[[]]],[11,"deref","","",170,[[]]],[11,"deref_mut","","",170,[[]]],[11,"drop","","",170,[[]]],[11,"from","move_lang::shared::unique_map","",146,[[]]],[11,"into","","",146,[[]]],[11,"into_iter","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"vzip","","",146,[[]]],[11,"init","","",146,[[]]],[11,"deref","","",146,[[]]],[11,"deref_mut","","",146,[[]]],[11,"drop","","",146,[[]]],[11,"equivalent","","",146,[[]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"into_iter","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"vzip","","",171,[[]]],[11,"init","","",171,[[]]],[11,"deref","","",171,[[]]],[11,"deref_mut","","",171,[[]]],[11,"drop","","",171,[[]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"into_iter","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"vzip","","",172,[[]]],[11,"init","","",172,[[]]],[11,"deref","","",172,[[]]],[11,"deref_mut","","",172,[[]]],[11,"drop","","",172,[[]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"into_iter","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"vzip","","",173,[[]]],[11,"init","","",173,[[]]],[11,"deref","","",173,[[]]],[11,"deref_mut","","",173,[[]]],[11,"drop","","",173,[[]]],[11,"from","move_lang::typing::ast","",151,[[]]],[11,"into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"vzip","","",151,[[]]],[11,"init","","",151,[[]]],[11,"deref","","",151,[[]]],[11,"deref_mut","","",151,[[]]],[11,"drop","","",151,[[]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"vzip","","",152,[[]]],[11,"init","","",152,[[]]],[11,"deref","","",152,[[]]],[11,"deref_mut","","",152,[[]]],[11,"drop","","",152,[[]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"vzip","","",153,[[]]],[11,"init","","",153,[[]]],[11,"deref","","",153,[[]]],[11,"deref_mut","","",153,[[]]],[11,"drop","","",153,[[]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"vzip","","",154,[[]]],[11,"init","","",154,[[]]],[11,"deref","","",154,[[]]],[11,"deref_mut","","",154,[[]]],[11,"drop","","",154,[[]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"vzip","","",155,[[]]],[11,"init","","",155,[[]]],[11,"deref","","",155,[[]]],[11,"deref_mut","","",155,[[]]],[11,"drop","","",155,[[]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"vzip","","",156,[[]]],[11,"init","","",156,[[]]],[11,"deref","","",156,[[]]],[11,"deref_mut","","",156,[[]]],[11,"drop","","",156,[[]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"vzip","","",157,[[]]],[11,"init","","",157,[[]]],[11,"deref","","",157,[[]]],[11,"deref_mut","","",157,[[]]],[11,"drop","","",157,[[]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"init","","",158,[[]]],[11,"deref","","",158,[[]]],[11,"deref_mut","","",158,[[]]],[11,"drop","","",158,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"init","","",159,[[]]],[11,"deref","","",159,[[]]],[11,"deref_mut","","",159,[[]]],[11,"drop","","",159,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_string","","",160,[[],["string",3]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"vzip","","",160,[[]]],[11,"init","","",160,[[]]],[11,"deref","","",160,[[]]],[11,"deref_mut","","",160,[[]]],[11,"drop","","",160,[[]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"vzip","","",161,[[]]],[11,"init","","",161,[[]]],[11,"deref","","",161,[[]]],[11,"deref_mut","","",161,[[]]],[11,"drop","","",161,[[]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"vzip","","",166,[[]]],[11,"init","","",166,[[]]],[11,"deref","","",166,[[]]],[11,"deref_mut","","",166,[[]]],[11,"drop","","",166,[[]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"vzip","","",167,[[]]],[11,"init","","",167,[[]]],[11,"deref","","",167,[[]]],[11,"deref_mut","","",167,[[]]],[11,"drop","","",167,[[]]],[11,"ast_debug","move_lang::cfgir::ast","",2,[[["astwriter",3]]]],[11,"ast_debug","","",3,[[["astwriter",3]]]],[11,"ast_debug","","",4,[[["astwriter",3]]]],[11,"ast_debug","move_lang","",174,[[["astwriter",3]]]],[11,"ast_debug","move_lang::expansion::ast","",15,[[["astwriter",3]]]],[11,"ast_debug","","",16,[[["astwriter",3]]]],[11,"ast_debug","","",17,[[["astwriter",3]]]],[11,"ast_debug","","",22,[[["astwriter",3]]]],[11,"ast_debug","","",26,[[["astwriter",3]]]],[11,"ast_debug","","",23,[[["astwriter",3]]]],[11,"ast_debug","","",19,[[["astwriter",3]]]],[11,"ast_debug","","",36,[[["astwriter",3]]]],[11,"ast_debug","","",35,[[["astwriter",3]]]],[11,"ast_debug","","",42,[[["astwriter",3]]]],[11,"ast_debug","","",39,[[["astwriter",3]]]],[11,"ast_debug","","",40,[[["astwriter",3]]]],[11,"ast_debug","","",38,[[["astwriter",3]]]],[11,"ast_debug","","",37,[[["astwriter",3]]]],[11,"ast_debug","move_lang::hlir::ast","",44,[[["astwriter",3]]]],[11,"ast_debug","","",45,[[["astwriter",3]]]],[11,"ast_debug","","",46,[[["astwriter",3]]]],[11,"ast_debug","","",49,[[["astwriter",3]]]],[11,"ast_debug","","",57,[[["astwriter",3]]]],[11,"ast_debug","","",58,[[["astwriter",3]]]],[11,"ast_debug","","",59,[[["astwriter",3]]]],[11,"ast_debug","","",60,[[["astwriter",3]]]],[11,"ast_debug","","",61,[[["astwriter",3]]]],[11,"ast_debug","","",65,[[["astwriter",3]]]],[11,"ast_debug","","",53,[[["astwriter",3]]]],[11,"ast_debug","","",70,[[["astwriter",3]]]],[11,"ast_debug","","",52,[[["astwriter",3]]]],[11,"ast_debug","","",69,[[["astwriter",3]]]],[11,"ast_debug","","",74,[[["astwriter",3]]]],[11,"ast_debug","","",68,[[["astwriter",3]]]],[11,"ast_debug","move_lang::naming::ast","",75,[[["astwriter",3]]]],[11,"ast_debug","","",76,[[["astwriter",3]]]],[11,"ast_debug","","",77,[[["astwriter",3]]]],[11,"ast_debug","","",79,[[["astwriter",3]]]],[11,"ast_debug","","",86,[[["astwriter",3]]]],[11,"ast_debug","","",87,[[["astwriter",3]]]],[11,"ast_debug","","",83,[[["astwriter",3]]]],[11,"ast_debug","","",88,[[["astwriter",3]]]],[11,"ast_debug","","",94,[[["astwriter",3]]]],[11,"ast_debug","","",92,[[["astwriter",3]]]],[11,"ast_debug","","",91,[[["astwriter",3]]]],[11,"ast_debug","","",90,[[["astwriter",3]]]],[11,"ast_debug","","",89,[[["astwriter",3]]]],[11,"ast_debug","move_lang::parser::ast","",96,[[["astwriter",3]]]],[11,"ast_debug","","",114,[[["astwriter",3]]]],[11,"ast_debug","","",97,[[["astwriter",3]]]],[11,"ast_debug","","",101,[[["astwriter",3]]]],[11,"ast_debug","","",116,[[["astwriter",3]]]],[11,"ast_debug","","",115,[[["astwriter",3]]]],[11,"ast_debug","","",104,[[["astwriter",3]]]],[11,"ast_debug","","",110,[[["astwriter",3]]]],[11,"ast_debug","","",120,[[["astwriter",3]]]],[11,"ast_debug","","",131,[[["astwriter",3]]]],[11,"ast_debug","","",123,[[["astwriter",3]]]],[11,"ast_debug","","",112,[[["astwriter",3]]]],[11,"ast_debug","","",122,[[["astwriter",3]]]],[11,"ast_debug","","",111,[[["astwriter",3]]]],[11,"ast_debug","","",107,[[["astwriter",3]]]],[11,"ast_debug","","",118,[[["astwriter",3]]]],[11,"ast_debug","","",106,[[["astwriter",3]]]],[11,"ast_debug","","",109,[[["astwriter",3]]]],[11,"ast_debug","","",134,[[["astwriter",3]]]],[11,"ast_debug","","",135,[[["astwriter",3]]]],[11,"ast_debug","","",133,[[["astwriter",3]]]],[11,"ast_debug","","",142,[[["astwriter",3]]]],[11,"ast_debug","","",141,[[["astwriter",3]]]],[11,"ast_debug","","",139,[[["astwriter",3]]]],[11,"ast_debug","","",138,[[["astwriter",3]]]],[11,"ast_debug","","",140,[[["astwriter",3]]]],[11,"ast_debug","","",137,[[["astwriter",3]]]],[11,"ast_debug","","",136,[[["astwriter",3]]]],[11,"ast_debug","move_lang::typing::ast","",151,[[["astwriter",3]]]],[11,"ast_debug","","",152,[[["astwriter",3]]]],[11,"ast_debug","","",153,[[["astwriter",3]]]],[11,"ast_debug","","",166,[[["astwriter",3]]]],[11,"ast_debug","","",161,[[["astwriter",3]]]],[11,"ast_debug","","",157,[[["astwriter",3]]]],[11,"ast_debug","","",156,[[["astwriter",3]]]],[11,"ast_debug","","",160,[[["astwriter",3]]]],[11,"ast_debug","","",167,[[["astwriter",3]]]],[11,"ast_debug","","",159,[[["astwriter",3]]]],[11,"drop_loc","move_lang::parser::ast","",98,[[]]],[11,"clone_drop_loc","","",98,[[]]],[11,"add_loc","","",98,[[["string",3],["loc",3]]]],[11,"drop_loc","","",102,[[]]],[11,"clone_drop_loc","","",102,[[]]],[11,"add_loc","","",102,[[["string",3],["loc",3]]]],[11,"drop_loc","","",103,[[]]],[11,"clone_drop_loc","","",103,[[]]],[11,"add_loc","","",103,[[["string",3],["loc",3]]]],[11,"drop_loc","","",105,[[]]],[11,"clone_drop_loc","","",105,[[]]],[11,"add_loc","","",105,[[["string",3],["loc",3]]]],[11,"drop_loc","","",108,[[]]],[11,"clone_drop_loc","","",108,[[]]],[11,"add_loc","","",108,[[["string",3],["loc",3]]]],[11,"drop_loc","","",113,[[]]],[11,"clone_drop_loc","","",113,[[]]],[11,"add_loc","","",113,[[["string",3],["loc",3]]]],[11,"drop_loc","","",100,[[]]],[11,"clone_drop_loc","","",100,[[]]],[11,"add_loc","","",100,[[],["moduleident",3]]],[11,"drop_loc","move_lang","",175,[[]]],[11,"clone_drop_loc","","",175,[[]]],[11,"add_loc","","",175,[[["string",3],["loc",3]]]],[11,"value","move_lang::parser::ast","",98,[[]]],[11,"loc","","",98,[[],["loc",3]]],[11,"value","","",102,[[]]],[11,"loc","","",102,[[],["loc",3]]],[11,"value","","",103,[[]]],[11,"loc","","",103,[[],["loc",3]]],[11,"value","","",105,[[]]],[11,"loc","","",105,[[],["loc",3]]],[11,"value","","",108,[[]]],[11,"loc","","",108,[[],["loc",3]]],[11,"value","","",113,[[]]],[11,"loc","","",113,[[],["loc",3]]],[11,"as_ref","move_lang::shared","",149,[[]]],[11,"into_iter","move_lang::shared::remembering_unique_map","",145,[[]]],[11,"into_iter","move_lang::shared::unique_map","",146,[[]]],[11,"next","move_lang::shared::remembering_unique_map","",168,[[],["option",4]]],[11,"next","","",169,[[],["option",4]]],[11,"next","","",170,[[],["option",4]]],[11,"next","move_lang::shared::unique_map","",171,[[],["option",4]]],[11,"next","","",172,[[],["option",4]]],[11,"next","","",173,[[],["option",4]]],[11,"clone","move_lang::expansion::ast","",15,[[],["program",3]]],[11,"clone","","",16,[[],["script",3]]],[11,"clone","","",17,[[],["moduledefinition",3]]],[11,"clone","","",18,[[],["structdefinition",3]]],[11,"clone","","",24,[[],["structfields",4]]],[11,"clone","","",19,[[],["functionsignature",3]]],[11,"clone","","",25,[[],["functionbody_",4]]],[11,"clone","","",43,[[],["specid",3]]],[11,"clone","","",20,[[],["function",3]]],[11,"clone","","",21,[[],["constant",3]]],[11,"clone","","",22,[[],["specblock_",3]]],[11,"clone","","",26,[[],["specblockmember_",4]]],[11,"clone","","",23,[[],["pragmaproperty_",3]]],[11,"clone","","",34,[[],["pragmavalue",4]]],[11,"clone","","",35,[[],["moduleaccess_",4]]],[11,"clone","","",36,[[],["type_",4]]],[11,"clone","","",37,[[],["lvalue_",4]]],[11,"clone","","",38,[[],["expdotted_",4]]],[11,"clone","","",39,[[],["value_",4]]],[11,"clone","","",40,[[],["exp_",4]]],[11,"clone","","",42,[[],["sequenceitem_",4]]],[11,"clone","move_lang::hlir::ast","",47,[[],["structdefinition",3]]],[11,"clone","","",54,[[],["structfields",4]]],[11,"clone","","",49,[[],["functionsignature",3]]],[11,"clone","","",57,[[],["typename_",4]]],[11,"clone","","",58,[[],["basetype_",4]]],[11,"clone","","",59,[[],["singletype_",4]]],[11,"clone","","",60,[[],["type_",4]]],[11,"clone","","",51,[[],["label",3]]],[11,"clone","move_lang::naming::ast","",78,[[],["structdefinition",3]]],[11,"clone","","",84,[[],["structfields",4]]],[11,"clone","","",79,[[],["functionsignature",3]]],[11,"clone","","",86,[[],["builtintypename_",4]]],[11,"clone","","",87,[[],["typename_",4]]],[11,"clone","","",82,[[],["tparamid",3]]],[11,"clone","","",83,[[],["tparam",3]]],[11,"clone","","",95,[[],["tvar",3]]],[11,"clone","","",88,[[],["type_",4]]],[11,"clone","move_lang::parser::ast","",115,[[],["use",4]]],[11,"clone","","",98,[[],["modulename",3]]],[11,"clone","","",99,[[],["moduleident_",3]]],[11,"clone","","",100,[[],["moduleident",3]]],[11,"clone","","",102,[[],["field",3]]],[11,"clone","","",103,[[],["structname",3]]],[11,"clone","","",105,[[],["functionname",3]]],[11,"clone","","",106,[[],["functionsignature",3]]],[11,"clone","","",118,[[],["functionvisibility",4]]],[11,"clone","","",119,[[],["functionbody_",4]]],[11,"clone","","",108,[[],["constantname",3]]],[11,"clone","","",110,[[],["specblock_",3]]],[11,"clone","","",120,[[],["specblocktarget_",4]]],[11,"clone","","",111,[[],["pragmaproperty_",3]]],[11,"clone","","",121,[[],["pragmavalue",4]]],[11,"clone","","",112,[[],["specapplypattern_",3]]],[11,"clone","","",122,[[],["specapplyfragment_",4]]],[11,"clone","","",123,[[],["specblockmember_",4]]],[11,"clone","","",131,[[],["specconditionkind",4]]],[11,"clone","","",133,[[],["moduleaccess_",4]]],[11,"clone","","",134,[[],["kind_",4]]],[11,"clone","","",135,[[],["type_",4]]],[11,"clone","","",113,[[],["var",3]]],[11,"clone","","",136,[[],["bind_",4]]],[11,"clone","","",137,[[],["value_",4]]],[11,"clone","","",138,[[],["unaryop_",4]]],[11,"clone","","",139,[[],["binop_",4]]],[11,"clone","","",140,[[],["quantkind_",4]]],[11,"clone","","",141,[[],["exp_",4]]],[11,"clone","","",142,[[],["sequenceitem_",4]]],[11,"clone","move_lang::shared::remembering_unique_map","",145,[[],["rememberinguniquemap",3]]],[11,"clone","move_lang::shared::unique_map","",146,[[],["uniquemap",3]]],[11,"clone","move_lang::shared","",149,[[],["address",3]]],[11,"clone","","",150,[[],["counter",3]]],[11,"clone","move_lang","",0,[[],["pass",4]]],[11,"default","move_lang::shared::unique_map","",146,[[],["uniquemap",3]]],[11,"default","move_lang::shared","",149,[[],["address",3]]],[11,"cmp","move_lang::expansion::ast","",43,[[["specid",3]],["ordering",4]]],[11,"cmp","move_lang::hlir::ast","",57,[[["typename_",4]],["ordering",4]]],[11,"cmp","","",58,[[["basetype_",4]],["ordering",4]]],[11,"cmp","","",51,[[["label",3]],["ordering",4]]],[11,"cmp","move_lang::naming::ast","",86,[[["builtintypename_",4]],["ordering",4]]],[11,"cmp","","",87,[[["typename_",4]],["ordering",4]]],[11,"cmp","","",82,[[["tparamid",3]],["ordering",4]]],[11,"cmp","","",83,[[["tparam",3]],["ordering",4]]],[11,"cmp","","",95,[[["tvar",3]],["ordering",4]]],[11,"cmp","move_lang::parser::ast","",98,[[["modulename",3]],["ordering",4]]],[11,"cmp","","",99,[[["moduleident_",3]],["ordering",4]]],[11,"cmp","","",100,[[["moduleident",3]],["ordering",4]]],[11,"cmp","","",102,[[["field",3]],["ordering",4]]],[11,"cmp","","",103,[[["structname",3]],["ordering",4]]],[11,"cmp","","",105,[[["functionname",3]],["ordering",4]]],[11,"cmp","","",108,[[["constantname",3]],["ordering",4]]],[11,"cmp","","",134,[[["kind_",4]],["ordering",4]]],[11,"cmp","","",113,[[["var",3]],["ordering",4]]],[11,"cmp","move_lang::shared","",149,[[["address",3]],["ordering",4]]],[11,"cmp","move_lang","",0,[[["pass",4]],["ordering",4]]],[11,"eq","move_lang::cfgir::ast","",5,[[["constant",3]]]],[11,"ne","","",5,[[["constant",3]]]],[11,"eq","","",7,[[["functionbody_",4]]]],[11,"ne","","",7,[[["functionbody_",4]]]],[11,"eq","","",6,[[["function",3]]]],[11,"ne","","",6,[[["function",3]]]],[11,"eq","move_lang::expansion::ast","",18,[[["structdefinition",3]]]],[11,"ne","","",18,[[["structdefinition",3]]]],[11,"eq","","",24,[[["structfields",4]]]],[11,"ne","","",24,[[["structfields",4]]]],[11,"eq","","",19,[[["functionsignature",3]]]],[11,"ne","","",19,[[["functionsignature",3]]]],[11,"eq","","",25,[[["functionbody_",4]]]],[11,"ne","","",25,[[["functionbody_",4]]]],[11,"eq","","",43,[[["specid",3]]]],[11,"ne","","",43,[[["specid",3]]]],[11,"eq","","",20,[[["function",3]]]],[11,"ne","","",20,[[["function",3]]]],[11,"eq","","",21,[[["constant",3]]]],[11,"ne","","",21,[[["constant",3]]]],[11,"eq","","",22,[[["specblock_",3]]]],[11,"ne","","",22,[[["specblock_",3]]]],[11,"eq","","",26,[[["specblockmember_",4]]]],[11,"ne","","",26,[[["specblockmember_",4]]]],[11,"eq","","",23,[[["pragmaproperty_",3]]]],[11,"ne","","",23,[[["pragmaproperty_",3]]]],[11,"eq","","",34,[[["pragmavalue",4]]]],[11,"ne","","",34,[[["pragmavalue",4]]]],[11,"eq","","",35,[[["moduleaccess_",4]]]],[11,"ne","","",35,[[["moduleaccess_",4]]]],[11,"eq","","",36,[[["type_",4]]]],[11,"ne","","",36,[[["type_",4]]]],[11,"eq","","",37,[[["lvalue_",4]]]],[11,"ne","","",37,[[["lvalue_",4]]]],[11,"eq","","",38,[[["expdotted_",4]]]],[11,"ne","","",38,[[["expdotted_",4]]]],[11,"eq","","",39,[[["value_",4]]]],[11,"ne","","",39,[[["value_",4]]]],[11,"eq","","",40,[[["exp_",4]]]],[11,"ne","","",40,[[["exp_",4]]]],[11,"eq","","",42,[[["sequenceitem_",4]]]],[11,"ne","","",42,[[["sequenceitem_",4]]]],[11,"eq","move_lang::hlir::ast","",47,[[["structdefinition",3]]]],[11,"ne","","",47,[[["structdefinition",3]]]],[11,"eq","","",54,[[["structfields",4]]]],[11,"ne","","",54,[[["structfields",4]]]],[11,"eq","","",48,[[["constant",3]]]],[11,"ne","","",48,[[["constant",3]]]],[11,"eq","","",49,[[["functionsignature",3]]]],[11,"ne","","",49,[[["functionsignature",3]]]],[11,"eq","","",55,[[["functionbody_",4]]]],[11,"ne","","",55,[[["functionbody_",4]]]],[11,"eq","","",50,[[["function",3]]]],[11,"ne","","",50,[[["function",3]]]],[11,"eq","","",57,[[["typename_",4]]]],[11,"ne","","",57,[[["typename_",4]]]],[11,"eq","","",58,[[["basetype_",4]]]],[11,"ne","","",58,[[["basetype_",4]]]],[11,"eq","","",59,[[["singletype_",4]]]],[11,"ne","","",59,[[["singletype_",4]]]],[11,"eq","","",60,[[["type_",4]]]],[11,"ne","","",60,[[["type_",4]]]],[11,"eq","","",61,[[["statement_",4]]]],[11,"ne","","",61,[[["statement_",4]]]],[11,"eq","","",51,[[["label",3]]]],[11,"ne","","",51,[[["label",3]]]],[11,"eq","","",65,[[["command_",4]]]],[11,"ne","","",65,[[["command_",4]]]],[11,"eq","","",68,[[["lvalue_",4]]]],[11,"ne","","",68,[[["lvalue_",4]]]],[11,"eq","","",52,[[["modulecall",3]]]],[11,"ne","","",52,[[["modulecall",3]]]],[11,"eq","","",69,[[["builtinfunction_",4]]]],[11,"ne","","",69,[[["builtinfunction_",4]]]],[11,"eq","","",70,[[["unannotatedexp_",4]]]],[11,"ne","","",70,[[["unannotatedexp_",4]]]],[11,"eq","","",53,[[["exp",3]]]],[11,"ne","","",53,[[["exp",3]]]],[11,"eq","","",74,[[["explistitem",4]]]],[11,"ne","","",74,[[["explistitem",4]]]],[11,"eq","move_lang::naming::ast","",78,[[["structdefinition",3]]]],[11,"ne","","",78,[[["structdefinition",3]]]],[11,"eq","","",84,[[["structfields",4]]]],[11,"ne","","",84,[[["structfields",4]]]],[11,"eq","","",79,[[["functionsignature",3]]]],[11,"ne","","",79,[[["functionsignature",3]]]],[11,"eq","","",85,[[["functionbody_",4]]]],[11,"ne","","",85,[[["functionbody_",4]]]],[11,"eq","","",80,[[["function",3]]]],[11,"ne","","",80,[[["function",3]]]],[11,"eq","","",81,[[["constant",3]]]],[11,"ne","","",81,[[["constant",3]]]],[11,"eq","","",86,[[["builtintypename_",4]]]],[11,"eq","","",87,[[["typename_",4]]]],[11,"ne","","",87,[[["typename_",4]]]],[11,"eq","","",82,[[["tparamid",3]]]],[11,"ne","","",82,[[["tparamid",3]]]],[11,"eq","","",83,[[["tparam",3]]]],[11,"ne","","",83,[[["tparam",3]]]],[11,"eq","","",95,[[["tvar",3]]]],[11,"ne","","",95,[[["tvar",3]]]],[11,"eq","","",88,[[["type_",4]]]],[11,"ne","","",88,[[["type_",4]]]],[11,"eq","","",89,[[["lvalue_",4]]]],[11,"ne","","",89,[[["lvalue_",4]]]],[11,"eq","","",90,[[["expdotted_",4]]]],[11,"ne","","",90,[[["expdotted_",4]]]],[11,"eq","","",91,[[["builtinfunction_",4]]]],[11,"ne","","",91,[[["builtinfunction_",4]]]],[11,"eq","","",92,[[["exp_",4]]]],[11,"ne","","",92,[[["exp_",4]]]],[11,"eq","","",94,[[["sequenceitem_",4]]]],[11,"ne","","",94,[[["sequenceitem_",4]]]],[11,"eq","move_lang::parser::ast","",115,[[["use",4]]]],[11,"ne","","",115,[[["use",4]]]],[11,"eq","","",98,[[["modulename",3]]]],[11,"ne","","",98,[[["modulename",3]]]],[11,"eq","","",99,[[["moduleident_",3]]]],[11,"ne","","",99,[[["moduleident_",3]]]],[11,"eq","","",100,[[["moduleident",3]]]],[11,"ne","","",100,[[["moduleident",3]]]],[11,"eq","","",102,[[["field",3]]]],[11,"ne","","",102,[[["field",3]]]],[11,"eq","","",103,[[["structname",3]]]],[11,"ne","","",103,[[["structname",3]]]],[11,"eq","","",104,[[["structdefinition",3]]]],[11,"ne","","",104,[[["structdefinition",3]]]],[11,"eq","","",117,[[["structfields",4]]]],[11,"ne","","",117,[[["structfields",4]]]],[11,"eq","","",105,[[["functionname",3]]]],[11,"ne","","",105,[[["functionname",3]]]],[11,"eq","","",106,[[["functionsignature",3]]]],[11,"ne","","",106,[[["functionsignature",3]]]],[11,"eq","","",118,[[["functionvisibility",4]]]],[11,"ne","","",118,[[["functionvisibility",4]]]],[11,"eq","","",119,[[["functionbody_",4]]]],[11,"ne","","",119,[[["functionbody_",4]]]],[11,"eq","","",107,[[["function",3]]]],[11,"ne","","",107,[[["function",3]]]],[11,"eq","","",108,[[["constantname",3]]]],[11,"ne","","",108,[[["constantname",3]]]],[11,"eq","","",109,[[["constant",3]]]],[11,"ne","","",109,[[["constant",3]]]],[11,"eq","","",110,[[["specblock_",3]]]],[11,"ne","","",110,[[["specblock_",3]]]],[11,"eq","","",120,[[["specblocktarget_",4]]]],[11,"ne","","",120,[[["specblocktarget_",4]]]],[11,"eq","","",111,[[["pragmaproperty_",3]]]],[11,"ne","","",111,[[["pragmaproperty_",3]]]],[11,"eq","","",121,[[["pragmavalue",4]]]],[11,"ne","","",121,[[["pragmavalue",4]]]],[11,"eq","","",112,[[["specapplypattern_",3]]]],[11,"ne","","",112,[[["specapplypattern_",3]]]],[11,"eq","","",122,[[["specapplyfragment_",4]]]],[11,"ne","","",122,[[["specapplyfragment_",4]]]],[11,"eq","","",123,[[["specblockmember_",4]]]],[11,"ne","","",123,[[["specblockmember_",4]]]],[11,"eq","","",131,[[["specconditionkind",4]]]],[11,"eq","","",132,[[["invariantkind",4]]]],[11,"eq","","",133,[[["moduleaccess_",4]]]],[11,"ne","","",133,[[["moduleaccess_",4]]]],[11,"eq","","",134,[[["kind_",4]]]],[11,"eq","","",135,[[["type_",4]]]],[11,"ne","","",135,[[["type_",4]]]],[11,"eq","","",113,[[["var",3]]]],[11,"ne","","",113,[[["var",3]]]],[11,"eq","","",136,[[["bind_",4]]]],[11,"ne","","",136,[[["bind_",4]]]],[11,"eq","","",137,[[["value_",4]]]],[11,"ne","","",137,[[["value_",4]]]],[11,"eq","","",138,[[["unaryop_",4]]]],[11,"eq","","",139,[[["binop_",4]]]],[11,"eq","","",140,[[["quantkind_",4]]]],[11,"eq","","",141,[[["exp_",4]]]],[11,"ne","","",141,[[["exp_",4]]]],[11,"eq","","",142,[[["sequenceitem_",4]]]],[11,"ne","","",142,[[["sequenceitem_",4]]]],[11,"eq","move_lang::shared::remembering_unique_map","",145,[[["rememberinguniquemap",3]]]],[11,"eq","move_lang::shared::unique_map","",146,[[["uniquemap",3]]]],[11,"eq","move_lang::shared","",149,[[["address",3]]]],[11,"ne","","",149,[[["address",3]]]],[11,"eq","","",150,[[["counter",3]]]],[11,"ne","","",150,[[["counter",3]]]],[11,"eq","move_lang::typing::ast","",158,[[["functionbody_",4]]]],[11,"ne","","",158,[[["functionbody_",4]]]],[11,"eq","","",154,[[["function",3]]]],[11,"ne","","",154,[[["function",3]]]],[11,"eq","","",155,[[["constant",3]]]],[11,"ne","","",155,[[["constant",3]]]],[11,"eq","","",159,[[["lvalue_",4]]]],[11,"ne","","",159,[[["lvalue_",4]]]],[11,"eq","","",156,[[["modulecall",3]]]],[11,"ne","","",156,[[["modulecall",3]]]],[11,"eq","","",160,[[["builtinfunction_",4]]]],[11,"ne","","",160,[[["builtinfunction_",4]]]],[11,"eq","","",161,[[["unannotatedexp_",4]]]],[11,"ne","","",161,[[["unannotatedexp_",4]]]],[11,"eq","","",157,[[["exp",3]]]],[11,"ne","","",157,[[["exp",3]]]],[11,"eq","","",166,[[["sequenceitem_",4]]]],[11,"ne","","",166,[[["sequenceitem_",4]]]],[11,"eq","","",167,[[["explistitem",4]]]],[11,"ne","","",167,[[["explistitem",4]]]],[11,"eq","move_lang","",0,[[["pass",4]]]],[11,"partial_cmp","move_lang::expansion::ast","",43,[[["specid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",43,[[["specid",3]]]],[11,"le","","",43,[[["specid",3]]]],[11,"gt","","",43,[[["specid",3]]]],[11,"ge","","",43,[[["specid",3]]]],[11,"partial_cmp","move_lang::hlir::ast","",57,[[["typename_",4]],[["ordering",4],["option",4]]]],[11,"lt","","",57,[[["typename_",4]]]],[11,"le","","",57,[[["typename_",4]]]],[11,"gt","","",57,[[["typename_",4]]]],[11,"ge","","",57,[[["typename_",4]]]],[11,"partial_cmp","","",58,[[["basetype_",4]],[["ordering",4],["option",4]]]],[11,"lt","","",58,[[["basetype_",4]]]],[11,"le","","",58,[[["basetype_",4]]]],[11,"gt","","",58,[[["basetype_",4]]]],[11,"ge","","",58,[[["basetype_",4]]]],[11,"partial_cmp","","",51,[[["label",3]],[["ordering",4],["option",4]]]],[11,"lt","","",51,[[["label",3]]]],[11,"le","","",51,[[["label",3]]]],[11,"gt","","",51,[[["label",3]]]],[11,"ge","","",51,[[["label",3]]]],[11,"partial_cmp","move_lang::naming::ast","",86,[[["builtintypename_",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",87,[[["typename_",4]],[["ordering",4],["option",4]]]],[11,"lt","","",87,[[["typename_",4]]]],[11,"le","","",87,[[["typename_",4]]]],[11,"gt","","",87,[[["typename_",4]]]],[11,"ge","","",87,[[["typename_",4]]]],[11,"partial_cmp","","",82,[[["tparamid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",82,[[["tparamid",3]]]],[11,"le","","",82,[[["tparamid",3]]]],[11,"gt","","",82,[[["tparamid",3]]]],[11,"ge","","",82,[[["tparamid",3]]]],[11,"partial_cmp","","",83,[[["tparam",3]],[["ordering",4],["option",4]]]],[11,"lt","","",83,[[["tparam",3]]]],[11,"le","","",83,[[["tparam",3]]]],[11,"gt","","",83,[[["tparam",3]]]],[11,"ge","","",83,[[["tparam",3]]]],[11,"partial_cmp","","",95,[[["tvar",3]],[["ordering",4],["option",4]]]],[11,"lt","","",95,[[["tvar",3]]]],[11,"le","","",95,[[["tvar",3]]]],[11,"gt","","",95,[[["tvar",3]]]],[11,"ge","","",95,[[["tvar",3]]]],[11,"partial_cmp","move_lang::parser::ast","",98,[[["modulename",3]],[["ordering",4],["option",4]]]],[11,"lt","","",98,[[["modulename",3]]]],[11,"le","","",98,[[["modulename",3]]]],[11,"gt","","",98,[[["modulename",3]]]],[11,"ge","","",98,[[["modulename",3]]]],[11,"partial_cmp","","",99,[[["moduleident_",3]],[["ordering",4],["option",4]]]],[11,"lt","","",99,[[["moduleident_",3]]]],[11,"le","","",99,[[["moduleident_",3]]]],[11,"gt","","",99,[[["moduleident_",3]]]],[11,"ge","","",99,[[["moduleident_",3]]]],[11,"partial_cmp","","",100,[[["moduleident",3]],[["ordering",4],["option",4]]]],[11,"lt","","",100,[[["moduleident",3]]]],[11,"le","","",100,[[["moduleident",3]]]],[11,"gt","","",100,[[["moduleident",3]]]],[11,"ge","","",100,[[["moduleident",3]]]],[11,"partial_cmp","","",102,[[["field",3]],[["ordering",4],["option",4]]]],[11,"lt","","",102,[[["field",3]]]],[11,"le","","",102,[[["field",3]]]],[11,"gt","","",102,[[["field",3]]]],[11,"ge","","",102,[[["field",3]]]],[11,"partial_cmp","","",103,[[["structname",3]],[["ordering",4],["option",4]]]],[11,"lt","","",103,[[["structname",3]]]],[11,"le","","",103,[[["structname",3]]]],[11,"gt","","",103,[[["structname",3]]]],[11,"ge","","",103,[[["structname",3]]]],[11,"partial_cmp","","",105,[[["functionname",3]],[["ordering",4],["option",4]]]],[11,"lt","","",105,[[["functionname",3]]]],[11,"le","","",105,[[["functionname",3]]]],[11,"gt","","",105,[[["functionname",3]]]],[11,"ge","","",105,[[["functionname",3]]]],[11,"partial_cmp","","",108,[[["constantname",3]],[["ordering",4],["option",4]]]],[11,"lt","","",108,[[["constantname",3]]]],[11,"le","","",108,[[["constantname",3]]]],[11,"gt","","",108,[[["constantname",3]]]],[11,"ge","","",108,[[["constantname",3]]]],[11,"partial_cmp","","",134,[[["kind_",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",113,[[["var",3]],[["ordering",4],["option",4]]]],[11,"lt","","",113,[[["var",3]]]],[11,"le","","",113,[[["var",3]]]],[11,"gt","","",113,[[["var",3]]]],[11,"ge","","",113,[[["var",3]]]],[11,"partial_cmp","move_lang::shared","",149,[[["address",3]],[["ordering",4],["option",4]]]],[11,"lt","","",149,[[["address",3]]]],[11,"le","","",149,[[["address",3]]]],[11,"gt","","",149,[[["address",3]]]],[11,"ge","","",149,[[["address",3]]]],[11,"partial_cmp","move_lang","",0,[[["pass",4]],[["ordering",4],["option",4]]]],[11,"fmt","move_lang::cfgir::ast","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::compiled_unit","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::expansion::ast","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::hlir::ast","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::naming::ast","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::parser::ast","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::shared::remembering_unique_map","",145,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::shared::unique_map","",146,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::shared","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::typing::ast","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::expansion::ast","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::hlir::ast","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::naming::ast","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::parser::ast","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::shared::ast_debug","",144,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::shared","",149,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::typing::ast","",160,[[["formatter",3]],["result",6]]],[11,"hash","move_lang::expansion::ast","",43,[[]]],[11,"hash","move_lang::hlir::ast","",51,[[]]],[11,"hash","move_lang::naming::ast","",82,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",95,[[]]],[11,"hash","move_lang::parser::ast","",98,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",102,[[]]],[11,"hash","","",103,[[]]],[11,"hash","","",105,[[]]],[11,"hash","","",108,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",113,[[]]],[11,"hash","move_lang::shared","",149,[[]]],[11,"hash","","",150,[[]]],[11,"try_from","","",149,[[],[["address",3],["string",3],["result",4]]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]]],"p":[[4,"Pass"],[4,"PassResult"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"Constant"],[3,"Function"],[4,"FunctionBody_"],[13,"Defined"],[3,"VarInfo"],[3,"SpecInfo"],[3,"FunctionInfo"],[4,"CompiledUnit"],[13,"Module"],[13,"Script"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"StructDefinition"],[3,"FunctionSignature"],[3,"Function"],[3,"Constant"],[3,"SpecBlock_"],[3,"PragmaProperty_"],[4,"StructFields"],[4,"FunctionBody_"],[4,"SpecBlockMember_"],[13,"Condition"],[13,"Function"],[13,"Variable"],[13,"Let"],[13,"Include"],[13,"Apply"],[13,"Pragma"],[4,"PragmaValue"],[4,"ModuleAccess_"],[4,"Type_"],[4,"LValue_"],[4,"ExpDotted_"],[4,"Value_"],[4,"Exp_"],[13,"Unit"],[4,"SequenceItem_"],[3,"SpecId"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"StructDefinition"],[3,"Constant"],[3,"FunctionSignature"],[3,"Function"],[3,"Label"],[3,"ModuleCall"],[3,"Exp"],[4,"StructFields"],[4,"FunctionBody_"],[13,"Defined"],[4,"TypeName_"],[4,"BaseType_"],[4,"SingleType_"],[4,"Type_"],[4,"Statement_"],[13,"IfElse"],[13,"While"],[13,"Loop"],[4,"Command_"],[13,"IgnoreAndPop"],[13,"JumpIf"],[4,"LValue_"],[4,"BuiltinFunction_"],[4,"UnannotatedExp_"],[13,"Unit"],[13,"Move"],[13,"Copy"],[4,"ExpListItem"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"StructDefinition"],[3,"FunctionSignature"],[3,"Function"],[3,"Constant"],[3,"TParamID"],[3,"TParam"],[4,"StructFields"],[4,"FunctionBody_"],[4,"BuiltinTypeName_"],[4,"TypeName_"],[4,"Type_"],[4,"LValue_"],[4,"ExpDotted_"],[4,"BuiltinFunction_"],[4,"Exp_"],[13,"Unit"],[4,"SequenceItem_"],[3,"TVar"],[3,"Program"],[3,"Script"],[3,"ModuleName"],[3,"ModuleIdent_"],[3,"ModuleIdent"],[3,"ModuleDefinition"],[3,"Field"],[3,"StructName"],[3,"StructDefinition"],[3,"FunctionName"],[3,"FunctionSignature"],[3,"Function"],[3,"ConstantName"],[3,"Constant"],[3,"SpecBlock_"],[3,"PragmaProperty_"],[3,"SpecApplyPattern_"],[3,"Var"],[4,"Definition"],[4,"Use"],[4,"ModuleMember"],[4,"StructFields"],[4,"FunctionVisibility"],[4,"FunctionBody_"],[4,"SpecBlockTarget_"],[4,"PragmaValue"],[4,"SpecApplyFragment_"],[4,"SpecBlockMember_"],[13,"Condition"],[13,"Function"],[13,"Variable"],[13,"Let"],[13,"Include"],[13,"Apply"],[13,"Pragma"],[4,"SpecConditionKind"],[4,"InvariantKind"],[4,"ModuleAccess_"],[4,"Kind_"],[4,"Type_"],[4,"Bind_"],[4,"Value_"],[4,"UnaryOp_"],[4,"BinOp_"],[4,"QuantKind_"],[4,"Exp_"],[4,"SequenceItem_"],[8,"AstDebug"],[3,"AstWriter"],[3,"RememberingUniqueMap"],[3,"UniqueMap"],[8,"TName"],[8,"Identifier"],[3,"Address"],[3,"Counter"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"Function"],[3,"Constant"],[3,"ModuleCall"],[3,"Exp"],[4,"FunctionBody_"],[4,"LValue_"],[4,"BuiltinFunction_"],[4,"UnannotatedExp_"],[13,"Unit"],[13,"Move"],[13,"Copy"],[13,"Loop"],[4,"SequenceItem_"],[4,"ExpListItem"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[6,"BasicBlocks"],[6,"Name"]]},\
"move_lang_functional_tests":{"doc":"","i":[],"p":[]},\
"move_lang_test_utils":{"doc":"","i":[[3,"StringError","move_lang_test_utils","",null,null],[5,"error","","",null,[[["string",3]],["result",6]]],[5,"ir_tests","","",null,[[]]],[5,"translated_ir_test_name","","",null,[[],[["option",4],["string",3]]]],[17,"SENDER","","",null,null],[17,"STD_LIB_DIR","","",null,null],[17,"STD_LIB_COMPILED_DIR","","",null,null],[17,"FUNCTIONAL_TEST_DIR","","",null,null],[17,"MOVE_CHECK_DIR","","",null,null],[17,"STD_LIB_TRANSACTION_SCRIPTS_DIR","","",null,null],[17,"PATH_TO_IR_TESTS","","",null,null],[17,"MIGRATION_SUB_DIR","","",null,null],[17,"TODO_EXTENSION","","",null,null],[17,"MOVE_EXTENSION","","",null,null],[17,"IR_EXTENSION","","",null,null],[17,"DEBUG_MODULE_FILE_NAME","","",null,null],[17,"COMPLETED_DIRECTORIES","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"description","","",0,[[]]]],"p":[[3,"StringError"]]},\
"move_model":{"doc":"","i":[[5,"run_model_builder","move_model","",null,[[["option",4],["vec",3],["string",3]],[["globalenv",3],["result",6]]]],[5,"run_bytecode_model_builder","","Build a `GlobalEnv` from a collection of…",null,[[["vec",3],["compiledmodule",3]],[["globalenv",3],["result",6]]]],[0,"ast","","Contains AST definitions for the specification language…",null,null],[3,"SpecVarDecl","move_model::ast","Declarations",null,null],[12,"loc","","",0,null],[12,"name","","",0,null],[12,"type_params","","",0,null],[12,"type_","","",0,null],[3,"SpecFunDecl","","",null,null],[12,"loc","","",1,null],[12,"name","","",1,null],[12,"type_params","","",1,null],[12,"params","","",1,null],[12,"context_params","","",1,null],[12,"result_type","","",1,null],[12,"used_spec_vars","","",1,null],[12,"used_memory","","",1,null],[12,"uninterpreted","","",1,null],[12,"is_move_fun","","",1,null],[12,"is_native","","",1,null],[12,"body","","",1,null],[3,"Condition","","",null,null],[12,"loc","","",2,null],[12,"kind","","",2,null],[12,"properties","","",2,null],[12,"exp","","",2,null],[12,"additional_exps","","",2,null],[3,"Spec","","Specification and properties associated with a language…",null,null],[12,"conditions","","",3,null],[12,"properties","","",3,null],[12,"on_impl","","",3,null],[3,"SpecBlockInfo","","Information about a specification block in the source.…",null,null],[12,"loc","","The location of the entire spec block.",4,null],[12,"target","","The target of the spec block.",4,null],[12,"member_locs","","The locations of all members of the spec block.",4,null],[3,"GlobalInvariant","","Describes a global invariant.",null,null],[12,"id","","",5,null],[12,"loc","","",5,null],[12,"kind","","",5,null],[12,"mem_usage","","",5,null],[12,"spec_var_usage","","",5,null],[12,"declaring_module","","",5,null],[12,"properties","","",5,null],[12,"cond","","",5,null],[3,"LocalVarDecl","","",null,null],[12,"id","","",6,null],[12,"name","","",6,null],[12,"binding","","",6,null],[3,"ModuleName","","NamesRepresents a module name, consisting of address and…",null,null],[3,"ModuleNameDisplay","","A helper to support module names in formatting.",null,null],[3,"QualifiedSymbol","","",null,null],[12,"module_name","","",7,null],[12,"symbol","","",7,null],[3,"QualifiedSymbolDisplay","","A helper to support qualified symbols in formatting.",null,null],[3,"ExpDisplay","","Helper type for expression display.",null,null],[3,"OperationDisplay","","Helper type for operation display.",null,null],[4,"ConditionKind","","Conditions",null,null],[13,"Assert","","",8,null],[13,"Assume","","",8,null],[13,"Decreases","","",8,null],[13,"AbortsIf","","",8,null],[13,"AbortsWith","","",8,null],[13,"SucceedsIf","","",8,null],[13,"Modifies","","",8,null],[13,"Emits","","",8,null],[13,"Ensures","","",8,null],[13,"Requires","","",8,null],[13,"RequiresModule","","",8,null],[13,"Invariant","","",8,null],[13,"InvariantModule","","",8,null],[13,"InvariantUpdate","","",8,null],[13,"VarUpdate","","",8,null],[13,"VarPack","","",8,null],[13,"VarUnpack","","",8,null],[4,"QuantKind","","",null,null],[13,"Forall","","",9,null],[13,"Exists","","",9,null],[4,"PropertyValue","","The value of a property.",null,null],[13,"Value","","",10,null],[13,"Symbol","","",10,null],[13,"QualifiedSymbol","","",10,null],[4,"SpecBlockTarget","","Describes the target of a spec block.",null,null],[13,"Module","","",11,null],[13,"Struct","","",11,null],[13,"Function","","",11,null],[13,"FunctionCode","","",11,null],[13,"Schema","","",11,null],[4,"Exp","","ExpressionsThe type of expressions.",null,null],[13,"Invalid","","Represents an invalid expression. This is used as a stub…",12,null],[13,"Value","","Represents a value.",12,null],[13,"LocalVar","","Represents a reference to a local variable.",12,null],[13,"SpecVar","","Represents a reference to a global specification (ghost)…",12,null],[13,"Call","","Represents a call to an operation. The `Operation` enum…",12,null],[13,"Invoke","","Represents an invocation of a function value, as a lambda.",12,null],[13,"Lambda","","Represents a lambda.",12,null],[13,"Quant","","Represents a quantified formula over multiple variables…",12,null],[13,"Block","","Represents a block which contains a set of variable…",12,null],[13,"IfElse","","Represents a conditional.",12,null],[4,"Operation","","",null,null],[13,"Function","","",13,null],[13,"Pack","","",13,null],[13,"Tuple","","",13,null],[13,"Select","","",13,null],[13,"UpdateField","","",13,null],[13,"Local","","",13,null],[13,"Result","","",13,null],[13,"Index","","",13,null],[13,"Slice","","",13,null],[13,"Range","","",13,null],[13,"Add","","",13,null],[13,"Sub","","",13,null],[13,"Mul","","",13,null],[13,"Mod","","",13,null],[13,"Div","","",13,null],[13,"BitOr","","",13,null],[13,"BitAnd","","",13,null],[13,"Xor","","",13,null],[13,"Shl","","",13,null],[13,"Shr","","",13,null],[13,"Implies","","",13,null],[13,"And","","",13,null],[13,"Or","","",13,null],[13,"Eq","","",13,null],[13,"Neq","","",13,null],[13,"Lt","","",13,null],[13,"Gt","","",13,null],[13,"Le","","",13,null],[13,"Ge","","",13,null],[13,"Not","","",13,null],[13,"Len","","",13,null],[13,"TypeValue","","",13,null],[13,"TypeDomain","","",13,null],[13,"Global","","",13,null],[13,"Exists","","",13,null],[13,"Old","","",13,null],[13,"Trace","","",13,null],[13,"Empty","","",13,null],[13,"Single","","",13,null],[13,"Update","","",13,null],[13,"Concat","","",13,null],[13,"MaxU8","","",13,null],[13,"MaxU64","","",13,null],[13,"MaxU128","","",13,null],[13,"AbortFlag","","",13,null],[13,"AbortCode","","",13,null],[13,"NoOp","","",13,null],[4,"Value","","",null,null],[13,"Address","","",14,null],[13,"Number","","",14,null],[13,"Bool","","",14,null],[13,"ByteArray","","",14,null],[6,"PropertyBag","","SpecificationsA set of properties stemming from pragmas.",null,null],[6,"MemoryLabel","","A label used for referring to a specific memory in Global,…",null,null],[11,"get_spec_var_target","","If this is an assignment to a spec var, return it.",8,[[],["option",4]]],[11,"allows_old","","Returns true of this condition allows the `old(..)`…",8,[[]]],[11,"allowed_on_public_fun_decl","","Returns true if this condition is allowed on a public…",8,[[]]],[11,"allowed_on_private_fun_decl","","Returns true if this condition is allowed on a private…",8,[[]]],[11,"allowed_on_fun_impl","","Returns true if this condition is allowed in a function…",8,[[]]],[11,"allowed_on_struct","","Returns true if this condition is allowed on a struct.",8,[[]]],[11,"allowed_on_module","","Returns true if this condition is allowed on a module.",8,[[]]],[11,"all_exps","","Return all expressions in the condition, the primary one…",2,[[]]],[11,"has_conditions","","",3,[[]]],[11,"filter","","",3,[[]]],[11,"filter_kind","","",3,[[["conditionkind",4]]]],[11,"any","","",3,[[]]],[11,"any_kind","","",3,[[["conditionkind",4]]]],[11,"node_id","","",12,[[],["nodeid",3]]],[11,"call_args","","",12,[[]]],[11,"node_ids","","",12,[[],[["nodeid",3],["vec",3]]]],[11,"locals","","Returns the locals used in this expression.",12,[[],[["btreeset",3],["symbol",3]]]],[11,"visit","","Visits expression, calling visitor on each sub-expression,…",12,[[]]],[11,"visit_pre_post","","Visits expression, calling visitor on each sub-expression.…",12,[[]]],[11,"module_usage","","Returns the set of module ids used by this expression.",12,[[["btreeset",3]]]],[11,"is_pure","","Determines whether this operation is pure (does not depend…",13,[[]]],[11,"is_pure","","Determines whether this expression is pure (does not…",12,[[]]],[11,"new","","",15,[[["symbol",3],["biguint",3]],["modulename",3]]],[11,"from_str","","",15,[[["symbol",3]],["modulename",3]]],[11,"addr","","",15,[[],["biguint",3]]],[11,"name","","",15,[[],["symbol",3]]],[11,"is_script","","Determine whether this is a script. The move-lang…",15,[[]]],[11,"display","","Creates a value implementing the Display trait which shows…",15,[[["symbolpool",3]],["modulenamedisplay",3]]],[11,"display_full","","Creates a value implementing the Display trait which shows…",15,[[["symbolpool",3]],["modulenamedisplay",3]]],[11,"display","","Creates a value implementing the Display trait which shows…",7,[[["symbolpool",3]],["qualifiedsymboldisplay",3]]],[11,"display_simple","","Creates a value implementing the Display trait which shows…",7,[[["symbolpool",3]],["qualifiedsymboldisplay",3]]],[11,"display_full","","Creates a value implementing the Display trait which shows…",7,[[["symbolpool",3]],["qualifiedsymboldisplay",3]]],[11,"display","","Creates a display of an expression which can be used in…",12,[[["globalenv",3]],["expdisplay",3]]],[11,"display","","Creates a display of an operation which can be used in…",13,[[["nodeid",3],["globalenv",3]],["operationdisplay",3]]],[0,"code_writer","move_model","A helper for generating structured code.",null,null],[3,"CodeWriter","move_model::code_writer","A helper to emit code. Supports indentation and maintains…",null,null],[3,"CodeWriterLabel","","A label which can be created at the code writers current…",null,null],[11,"new","","Creates new code writer, with the given default location.",16,[[["loc",3]],["codewriter",3]]],[11,"create_label","","Creates a label at which code can be inserted later.",16,[[],["codewriterlabel",3]]],[11,"insert_at_label","","Inserts code at the previously created label.",16,[[["codewriterlabel",3]]]],[11,"process_result","","Calls a function to process the code written so far. This…",16,[[["fnmut",8]]]],[11,"extract_result","","Extracts the output as a string. Leaves the writers data…",16,[[],["string",3]]],[11,"set_location","","Sets the current location. This location will be…",16,[[["loc",3]]]],[11,"get_source_location","","Given a byte index in the written output, return the best…",16,[[["byteindex",3]],[["option",4],["loc",3]]]],[11,"get_output_byte_index","","Given line/column location, determine ByteIndex of that…",16,[[["columnindex",3],["lineindex",3]],[["option",4],["byteindex",3]]]],[11,"indent","","Indents any subsequently written output. The current line…",16,[[]]],[11,"unindent","","Undo previously done indentation.",16,[[]]],[11,"emit","","Emit a string. The string will be broken down into lines…",16,[[]]],[11,"emit_line","","Emits a string and then terminates the line.",16,[[]]],[0,"exp_rewriter","move_model","",null,null],[3,"ExpRewriter","move_model::exp_rewriter","Rewriter for expressions, allowing to substitute locals by…",null,null],[11,"new","","Creates a new rewriter with the given replacer map.",17,[[["globalenv",3]]]],[11,"set_type_args","","Adds a type argument list to this rewriter. Generic type…",17,[[]]],[11,"rewrite","","Runs the rewriter.",17,[[["exp",4]],["exp",4]]],[11,"rewrite_vec","","",17,[[],[["exp",4],["vec",3]]]],[0,"model","move_model","Provides a model for a set of Move modules (and scripts,…",null,null],[3,"Loc","move_model::model","LocationsA location, consisting of a FileId and a span in…",null,null],[3,"ModuleId","","Identifier for a module.",null,null],[3,"NamedConstantId","","Identifier for a named constant, relative to module.",null,null],[3,"StructId","","Identifier for a structure/resource, relative to module.",null,null],[3,"FieldId","","Identifier for a field of a structure, relative to struct.",null,null],[3,"FunId","","Identifier for a Move function, relative to module.",null,null],[3,"SchemaId","","Identifier for a schema.",null,null],[3,"SpecFunId","","Identifier for a specification function, relative to module.",null,null],[3,"SpecVarId","","Identifier for a specification variable, relative to module.",null,null],[3,"NodeId","","Identifier for a node in the AST, relative to a module.…",null,null],[3,"GlobalId","","A global id. Instances of this type represent unique…",null,null],[3,"QualifiedId","","",null,null],[12,"module_id","","",18,null],[12,"id","","",18,null],[3,"GlobalEnv","","Global EnvironmentGlobal environment for a set of modules.",null,null],[12,"module_data","","List of loaded modules, in order they have been provided…",19,null],[12,"used_spec_funs","","A set containing spec functions which are called/used in…",19,null],[3,"ConditionInfo","","Information about a verification condition stored in the…",null,null],[12,"message","","The message to print when the condition fails.",20,null],[12,"omit_trace","","Whether execution traces shall be printed if this…",20,null],[12,"negative_cond","","Whether passing this condition is actually a failure.",20,null],[3,"ModuleData","","Module EnvironmentRepresents data for a module.",null,null],[12,"name","","Module name.",21,null],[12,"id","","Id of this module in the global env.",21,null],[12,"module","","Module byte code.",21,null],[12,"named_constants","","Named constant data",21,null],[12,"struct_data","","Struct data.",21,null],[12,"struct_idx_to_id","","Mapping from struct definition index to id in above map.",21,null],[12,"function_data","","Function data.",21,null],[12,"function_idx_to_id","","Mapping from function definition index to id in above map.",21,null],[12,"spec_vars","","Specification variables, in SpecVarId order.",21,null],[12,"spec_funs","","Specification functions, in SpecFunId order.",21,null],[12,"module_spec","","Module level specification.",21,null],[12,"source_map","","Module source location information.",21,null],[12,"loc","","The location of this module.",21,null],[12,"spec_block_infos","","A list of spec block infos, for documentation generation.",21,null],[3,"ModuleEnv","","Represents a module environment.",null,null],[12,"env","","Reference to the outer env.",22,null],[3,"StructData","","Struct Environment",null,null],[3,"StructEnv","","",null,null],[12,"module_env","","Reference to enclosing module.",23,null],[3,"FieldData","","Field Environment",null,null],[3,"FieldEnv","","",null,null],[12,"struct_env","","Reference to enclosing struct.",24,null],[3,"NamedConstantData","","Named Constant Environment",null,null],[3,"NamedConstantEnv","","",null,null],[12,"module_env","","Reference to enclosing module.",25,null],[3,"TypeParameter","","Function EnvironmentRepresents a type parameter.",null,null],[12,"0","","",26,null],[12,"1","","",26,null],[3,"Parameter","","Represents a parameter.",null,null],[12,"0","","",27,null],[12,"1","","",27,null],[3,"FunctionData","","",null,null],[3,"FunctionEnv","","",null,null],[12,"module_env","","Reference to enclosing module.",28,null],[3,"LocDisplay","","",null,null],[4,"VerificationScope","","Verification ScopeDefines what functions to verify.",null,null],[13,"Public","","Verify only public functions.",29,null],[13,"All","","Verify all functions.",29,null],[13,"None","","Verify no functions",29,null],[4,"ConditionTag","","A tag used to be associated with a condition info.…",null,null],[13,"Requires","","",30,null],[13,"Ensures","","",30,null],[13,"NegativeTest","","",30,null],[4,"TypeConstraint","","",null,null],[13,"None","","",31,null],[13,"Copyable","","",31,null],[13,"Resource","","",31,null],[6,"MoveIrLoc","","Alias for the Loc variant of MoveIR. This uses a `&static…",null,null],[17,"SCRIPT_MODULE_NAME","","ConstantsA name we use to represent a script as a module.",null,null],[17,"SCRIPT_BYTECODE_FUN_NAME","","Names used in the bytecode/AST to represent the main…",null,null],[11,"new","","",32,[[["fileid",3],["span",3]],["loc",3]]],[11,"span","","",32,[[],["span",3]]],[11,"file_id","","",32,[[],["fileid",3]]],[11,"at_end","","",32,[[],["loc",3]]],[11,"at_start","","",32,[[],["loc",3]]],[11,"enclosing","","Creates a location which encloses all the locations in the…",32,[[],["loc",3]]],[11,"new","","",33,[[["symbol",3]]]],[11,"symbol","","",33,[[],["symbol",3]]],[11,"new","","",34,[[["symbol",3]]]],[11,"symbol","","",34,[[],["symbol",3]]],[11,"new","","",35,[[["symbol",3]]]],[11,"symbol","","",35,[[],["symbol",3]]],[11,"new","","",36,[[["symbol",3]]]],[11,"symbol","","",36,[[],["symbol",3]]],[11,"new","","",37,[[["symbol",3]]]],[11,"symbol","","",37,[[],["symbol",3]]],[11,"new","","",38,[[]]],[11,"as_usize","","",38,[[]]],[11,"new","","",39,[[]]],[11,"as_usize","","",39,[[]]],[11,"new","","",40,[[]]],[11,"as_usize","","",40,[[]]],[11,"new","","",41,[[]]],[11,"to_usize","","",41,[[]]],[11,"new","","",42,[[]]],[11,"as_usize","","",42,[[]]],[11,"qualified","","",41,[[],["qualifiedid",3]]],[11,"for_message","","",20,[[["string",3],["into",8]]]],[11,"negative","","",20,[[]]],[11,"new","","Creates a new environment.",19,[[]]],[11,"set_extension","","Stores extension data in the environment. This can be…",19,[[["any",8]]]],[11,"get_extension","","Retrieves extension data from the environment. Use as in…",19,[[],["option",4]]],[11,"new_global_id","","Create a new global id unique to this environment.",19,[[],["globalid",3]]],[11,"symbol_pool","","Returns a reference to the symbol pool owned by this…",19,[[],["symbolpool",3]]],[11,"add_source","","Adds a source to this environment, returning a FileId for…",19,[[],["fileid",3]]],[11,"add_documentation","","Adds documentation for a file.",19,[[["btreemap",3],["string",3],["byteindex",3],["fileid",3]]]],[11,"add_diag","","Adds diagnostic to the environment.",19,[[["diagnostic",3]]]],[11,"error_with_notes","","Adds an error to this environment, with notes.",19,[[["string",3],["loc",3],["vec",3]]]],[11,"error","","Adds an error to this environment, without notes.",19,[[["loc",3]]]],[11,"warn","","Adds a warning to this environment.",19,[[["loc",3]]]],[11,"unknown_loc","","Returns the unknown location.",19,[[],["loc",3]]],[11,"unknown_move_ir_loc","","Returns a Move IR version of the unknown location which is…",19,[[],["moveirloc",6]]],[11,"internal_loc","","Returns the internal location.",19,[[],["loc",3]]],[11,"to_loc","","Converts a Loc as used by the move-lang compiler to the…",19,[[["moveirloc",6]],["loc",3]]],[11,"get_file_id","","Returns the file id for a file name, if defined.",19,[[],[["option",4],["fileid",3]]]],[11,"file_id_to_idx","","Maps a FileId to an index which can be mapped back to a…",19,[[["fileid",3]]]],[11,"file_idx_to_id","","Maps a an index which was obtained by `file_id_to_idx`…",19,[[],["fileid",3]]],[11,"get_position","","Returns file name and line/column position for a location,…",19,[[["loc",3]],["option",4]]],[11,"get_source","","Return the source text for the given location.",19,[[["loc",3]],[["result",4],["spanoutofboundserror",3]]]],[11,"get_source_file_names","","Return the source file names.",19,[[],[["vec",3],["string",3]]]],[11,"get_file_count","","",19,[[]]],[11,"has_errors","","Returns true if diagnostics have error severity or worse.",19,[[]]],[11,"has_warnings","","Returns true if diagnostics have warning severity or worse.",19,[[]]],[11,"report_errors","","Writes accumulated errors to writer.",19,[[]]],[11,"report_warnings","","Writes accumulated diagnostics with warning severity or…",19,[[]]],[11,"add_module_to_should_translate","","",19,[[["moduleid",3]]]],[11,"add_global_invariant","","Adds a global invariant to this environment.",19,[[["globalinvariant",3]]]],[11,"get_global_invariant","","Get global invariant by id.",19,[[["globalid",3]],[["option",4],["globalinvariant",3]]]],[11,"get_global_invariants_for_memory","","Return the global invariants which refer to the given…",19,[[["structid",3],["qualifiedid",3]],[["vec",3],["globalid",3]]]],[11,"get_global_invariants_by_module","","",19,[[["moduleid",3]],[["btreeset",3],["globalid",3]]]],[11,"is_spec_fun_used","","Returns true if a spec fun is used in specs.",19,[[["specfunid",3],["moduleid",3]]]],[11,"add","","Adds a new module to the environment. StructData and…",19,[[["spec",3],["namedconstantid",3],["vec",3],["structdata",3],["vec",3],["loc",3],["vec",3],["sourcemap",3],["specfundecl",3],["functiondata",3],["moveirloc",6],["structid",3],["btreemap",3],["btreemap",3],["funid",3],["specvardecl",3],["specblockinfo",3],["btreemap",3],["compiledmodule",3],["namedconstantdata",3]]]],[11,"create_named_constant_data","","Creates data for a named constant.",19,[[["loc",3],["value",4],["symbol",3],["type",4]],["namedconstantdata",3]]],[11,"create_function_data","","Creates data for a function, adding any information not…",19,[[["functiondefinitionindex",3],["loc",3],["vec",3],["compiledmodule",3],["spec",3],["symbol",3]],["functiondata",3]]],[11,"create_struct_data","","Creates data for a struct. Currently all information is…",19,[[["structdefinitionindex",3],["loc",3],["spec",3],["compiledmodule",3],["symbol",3]],["structdata",3]]],[11,"find_module","","Finds a module by name and returns an environment for it.",19,[[["modulename",3]],[["option",4],["moduleenv",3]]]],[11,"find_module_by_name","","Finds a module by simple name and returns an environment…",19,[[["symbol",3]],[["option",4],["moduleenv",3]]]],[11,"find_struct_by_tag","","Gets a StructEnv in this module by its `StructTag`",19,[[["structtag",3]],[["option",4],["qualifiedid",3]]]],[11,"get_enclosing_module","","Return the module enclosing this location.",19,[[["loc",3]],[["option",4],["moduleenv",3]]]],[11,"get_enclosing_function","","Returns the function enclosing this location.",19,[[["loc",3]],[["functionenv",3],["option",4]]]],[11,"get_enclosing_struct","","Returns the struct enclosing this location.",19,[[["loc",3]],[["option",4],["structenv",3]]]],[11,"get_function","","Return the `FunctionEnv` for `fun`",19,[[["funid",3],["qualifiedid",3]],["functionenv",3]]],[11,"get_module_count","","",19,[[]]],[11,"get_module","","Gets a module by id.",19,[[["moduleid",3]],["moduleenv",3]]],[11,"get_modules","","Returns an iterator for all modules in the environment.",19,[[]]],[11,"get_bytecode_modules","","Returns an iterator for all bytecode modules in the…",19,[[]]],[11,"get_all_structs_with_conditions","","Returns all structs in all modules which carry invariants.",19,[[],[["vec",3],["type",4]]]],[11,"get_doc","","Get documentation associated with an item at Loc.",19,[[["loc",3]]]],[11,"get_condition_info","","Get verification condition info associated with location…",19,[[["conditiontag",4],["loc",3]],[["option",4],["conditioninfo",3]]]],[11,"get_condition_infos","","Get all verification condition info associated with…",19,[[["loc",3]],["vec",3]]],[11,"set_condition_info","","Set verification condition info.",19,[[["loc",3],["conditiontag",4],["conditioninfo",3]]]],[11,"with_condition_infos","","Execute function on each condition info.",19,[[]]],[11,"is_property_true","","Returns true if the boolean property is true.",19,[[["propertybag",6]],["option",4]]],[11,"get_num_property","","Returns the value of a number property.",19,[[["propertybag",6]],["option",4]]],[11,"get_struct_tag","","Attempt to compute a struct tag for (`mid`, `sid`, `ts`).…",19,[[["structid",3],["moduleid",3]],[["option",4],["structtag",3]]]],[11,"get_node_loc","","Gets the location of the given node.",19,[[["nodeid",3]],["loc",3]]],[11,"get_node_type","","Gets the type of the given node.",19,[[["nodeid",3]],["type",4]]],[11,"get_node_type_opt","","Gets the type of the given node, if available.",19,[[["nodeid",3]],[["option",4],["type",4]]]],[11,"next_free_node_number","","Returns the next free node number.",19,[[]]],[11,"new_node_id","","Allocates a new node id.",19,[[],["nodeid",3]]],[11,"new_node","","Allocates a new node id and assigns location and type to it.",19,[[["loc",3],["type",4]],["nodeid",3]]],[11,"set_node_type","","Sets type for the given node id.",19,[[["nodeid",3],["type",4]]]],[11,"set_node_instantiation","","Sets instantiation for the given node id.",19,[[["nodeid",3],["vec",3],["type",4]]]],[11,"get_node_instantiation","","Gets the type parameter instantiation associated with the…",19,[[["nodeid",3]],[["vec",3],["type",4]]]],[11,"get_node_instantiation_opt","","Gets the type parameter instantiation associated with the…",19,[[["nodeid",3]],[["vec",3],["option",4]]]],[11,"stub","","",21,[[["modulename",3],["compiledmodule",3],["moduleid",3]]]],[11,"get_id","","Returns the id of this module in the global env.",22,[[],["moduleid",3]]],[11,"get_name","","Returns the name of this module.",22,[[],["modulename",3]]],[11,"get_identifier","","Returns the VM identifier for this module",22,[[],["identifier",3]]],[11,"is_script_module","","Returns true if this is a module representing a script.",22,[[]]],[11,"is_dependency","","Returns true of this module is from a dependency, i.e. not…",22,[[]]],[11,"should_translate","","",22,[[]]],[11,"add_fun_to_should_verify","","",22,[[["funid",3]]]],[11,"get_source_path","","Returns the path to source file of this module.",22,[[],["osstr",3]]],[11,"get_dependencies","","Return the set of language storage ModuleId\'s that this…",22,[[],[["vec",3],["moduleid",3]]]],[11,"get_using_modules","","Returns the set of modules that use this one (including…",22,[[],[["moduleid",3],["btreeset",3]]]],[11,"get_used_modules","","Returns the set of modules this one uses (including itself).",22,[[],[["moduleid",3],["btreeset",3]]]],[11,"get_doc","","Returns documentation associated with this module.",22,[[]]],[11,"get_spec_block_infos","","Returns spec block documentation infos.",22,[[]]],[11,"symbol_pool","","Shortcut for accessing the symbol pool.",22,[[],["symbolpool",3]]],[11,"get_verified_module","","Gets the underlying bytecode module.",22,[[],["compiledmodule",3]]],[11,"find_named_constant","","Gets a `NamedConstantEnv` in this module by name",22,[[["symbol",3]],[["option",4],["namedconstantenv",3]]]],[11,"get_named_constant","","Gets a `NamedConstantEnv` in this module by the constant\'s…",22,[[["namedconstantid",3]],["namedconstantenv",3]]],[11,"into_named_constant","","Gets a `NamedConstantEnv` by id",22,[[["namedconstantid",3]],["namedconstantenv",3]]],[11,"get_named_constant_count","","Gets the number of named constants in this module.",22,[[]]],[11,"get_named_constants","","Returns iterator over `NamedConstantEnv`s in this module.",22,[[]]],[11,"into_named_constants","","Returns an iterator over `NamedConstantEnv`s in this module.",22,[[]]],[11,"find_function","","Gets a FunctionEnv in this module by name.",22,[[["symbol",3]],[["option",4],["functionenv",3]]]],[11,"get_function","","Gets a FunctionEnv by id.",22,[[["funid",3]],["functionenv",3]]],[11,"into_function","","Gets a FunctionEnv by id.",22,[[["funid",3]],["functionenv",3]]],[11,"get_function_count","","Gets the number of functions in this module.",22,[[]]],[11,"get_functions","","Returns iterator over FunctionEnvs in this module.",22,[[]]],[11,"into_functions","","Returns iterator over FunctionEnvs in this module.",22,[[]]],[11,"get_used_function","","Gets FunctionEnv for a function used in this module, via…",22,[[["functionhandleindex",3]],["functionenv",3]]],[11,"find_struct","","Gets a StructEnv in this module by name.",22,[[["symbol",3]],[["option",4],["structenv",3]]]],[11,"find_struct_by_identifier","","Gets a StructEnv in this module by identifier",22,[[["identifier",3]],[["option",4],["structid",3]]]],[11,"get_struct_id","","Gets the struct id from a definition index which must be…",22,[[["structdefinitionindex",3]],["structid",3]]],[11,"get_struct","","Gets a StructEnv by id.",22,[[["structid",3]],["structenv",3]]],[11,"get_struct_by_def_idx","","",22,[[["structdefinitionindex",3]],["structenv",3]]],[11,"get_function_id","","Gets the function id from a definition index which must be…",22,[[["functiondefinitionindex",3]],["funid",3]]],[11,"into_struct","","Gets a StructEnv by id, consuming this module env.",22,[[["structid",3]],["structenv",3]]],[11,"get_struct_count","","Gets the number of structs in this module.",22,[[]]],[11,"get_structs","","Returns iterator over structs in this module.",22,[[]]],[11,"into_structs","","Returns iterator over structs in this module.",22,[[]]],[11,"globalize_signature","","Globalizes a signature local to this module.",22,[[["signaturetoken",4]],["type",4]]],[11,"globalize_signatures","","Globalizes a list of signatures.",22,[[],[["vec",3],["type",4]]]],[11,"get_type_actuals","","Gets a list of type actuals associated with the index in…",22,[[["signatureindex",3],["option",4]],[["vec",3],["type",4]]]],[11,"get_constant","","Retrieve a constant from the pool",22,[[["constantpoolindex",3]],["vmconstant",3]]],[11,"get_constant_value","","Converts a constant to the specified type. The type must…",22,[[["vmconstant",3]],["movevalue",4]]],[11,"self_address","","Return the `AccountAdress` of this module",22,[[],["accountaddress",3]]],[11,"get_address_identifier","","Retrieve an address identifier from the pool",22,[[["addressidentifierindex",3]],["biguint",3]]],[11,"addr_to_big_uint","","Converts an address identifier to a number representing…",22,[[["accountaddress",3]],["biguint",3]]],[11,"get_spec_vars","","Returns specification variables of this module.",22,[[]]],[11,"get_spec_var","","Gets spec var by id.",22,[[["specvarid",3]],["specvardecl",3]]],[11,"find_spec_var","","Find spec var by name.",22,[[["symbol",3]],[["specvardecl",3],["option",4]]]],[11,"get_spec_funs","","Returns specification functions of this module.",22,[[]]],[11,"get_spec_fun","","Gets spec fun by id.",22,[[["specfunid",3]],["specfundecl",3]]],[11,"get_spec","","Gets module specification.",22,[[],["spec",3]]],[11,"spec_fun_is_used","","Returns whether a spec fun is ever called or not.",22,[[["specfunid",3]]]],[11,"get_spec_funs_of_name","","Get all spec fun overloads with the given name.",22,[[["symbol",3]]]],[11,"get_name","","Returns the name of this struct.",23,[[],["symbol",3]]],[11,"get_identifier","","Returns the VM identifier for this struct",23,[[],["identifier",3]]],[11,"symbol_pool","","Shortcut for accessing the symbol pool.",23,[[],["symbolpool",3]]],[11,"get_loc","","Returns the location of this struct.",23,[[],["loc",3]]],[11,"get_doc","","Get documentation associated with this struct.",23,[[]]],[11,"get_properties","","Returns properties from pragmas.",23,[[],["propertybag",6]]],[11,"get_id","","Gets the id associated with this struct.",23,[[],["structid",3]]],[11,"get_qualified_id","","Gets the qualified id of this struct.",23,[[],[["structid",3],["qualifiedid",3]]]],[11,"is_native","","Determines whether this struct is native.",23,[[]]],[11,"is_vector","","Determines whether this struct is the well-known vector…",23,[[]]],[11,"is_resource","","Determines whether this struct is a resource type.",23,[[]]],[11,"get_fields","","Get an iterator for the fields, ordered by offset.",23,[[]]],[11,"get_field_count","","Return the number of fields in the struct.",23,[[]]],[11,"get_field","","Gets a field by its id.",23,[[["fieldid",3]],["fieldenv",3]]],[11,"find_field","","Find a field by its name.",23,[[["symbol",3]],[["option",4],["fieldenv",3]]]],[11,"get_field_by_offset","","Gets a field by its offset.",23,[[],["fieldenv",3]]],[11,"get_type_parameters","","Returns the type parameters associated with this struct.",23,[[],[["typeparameter",3],["vec",3]]]],[11,"get_named_type_parameters","","Returns the type parameters associated with this struct,…",23,[[],[["typeparameter",3],["vec",3]]]],[11,"has_conditions","","Returns true if this struct has specifcation conditions.",23,[[]]],[11,"get_spec","","Returns the data invariants associated with this struct.",23,[[],["spec",3]]],[11,"get_name","","Gets the name of this field.",24,[[],["symbol",3]]],[11,"get_id","","Gets the id of this field.",24,[[],["fieldid",3]]],[11,"get_doc","","Get documentation associated with this field.",24,[[]]],[11,"get_type","","Gets the type of this field.",24,[[],["type",4]]],[11,"get_offset","","Get field offset.",24,[[]]],[11,"get_name","","Returns the name of this constant",25,[[],["symbol",3]]],[11,"get_id","","Returns the id of this constant",25,[[],["namedconstantid",3]]],[11,"get_doc","","Returns documentation associated with this constant",25,[[]]],[11,"get_loc","","Returns the location of this constant",25,[[],["loc",3]]],[11,"get_type","","Returns the type of the constant",25,[[],["type",4]]],[11,"get_value","","Returns the value of this constant",25,[[],["value",4]]],[11,"stub","","",43,[[["functiondefinitionindex",3],["functionhandleindex",3],["symbol",3]]]],[11,"get_name","","Returns the name of this function.",28,[[],["symbol",3]]],[11,"get_identifier","","Returns the VM identifier for this function",28,[[],["identifier",3]]],[11,"get_id","","Gets the id of this function.",28,[[],["funid",3]]],[11,"get_qualified_id","","Gets the qualified id of this function.",28,[[],[["funid",3],["qualifiedid",3]]]],[11,"get_doc","","Get documentation associated with this function.",28,[[]]],[11,"get_def_idx","","Gets the definition index of this function.",28,[[],["functiondefinitionindex",3]]],[11,"symbol_pool","","Shortcut for accessing the symbol pool.",28,[[],["symbolpool",3]]],[11,"get_loc","","Returns the location of this function.",28,[[],["loc",3]]],[11,"get_bytecode_loc","","Returns the location of the bytecode at the given offset.",28,[[],["loc",3]]],[11,"get_bytecode","","Returns the bytecode associated with this function.",28,[[]]],[11,"is_pragma_true","","Returns the value of a boolean pragma for this function.…",28,[[]]],[11,"is_num_pragma_set","","Returns whether the value of a numeric pragma is…",28,[[]]],[11,"get_num_pragma","","Returns the value of a numeric pragma for this function.…",28,[[]]],[11,"get_ident_pragma","","Returns the value of a pragma representing an identifier…",28,[[],[["option",4],["rc",3]]]],[11,"get_func_env_from_pragma","","Returns the FunctionEnv of the function identified by the…",28,[[],[["option",4],["functionenv",3]]]],[11,"is_native","","Returns true if this function is native.",28,[[]]],[11,"is_intrinsic","","Returns true if this function has the pragma intrinsic set…",28,[[]]],[11,"is_opaque","","Returns true if this function is opaque.",28,[[]]],[11,"is_public","","Returns true if this function is public.",28,[[]]],[11,"is_mutating","","Returns true if this function mutates any references (i.e.…",28,[[]]],[11,"get_friend_name","","Returns the name of the friend(the only allowed caller) of…",28,[[],[["option",4],["rc",3]]]],[11,"has_friend","","Returns true if a friend is specified for this function.",28,[[]]],[11,"get_friend_env","","Returns the FunctionEnv of the friend function if the…",28,[[],[["option",4],["functionenv",3]]]],[11,"get_transitive_friend","","Returns the FunctionEnv of the transitive friend of the…",28,[[],["functionenv",3]]],[11,"get_type_parameters","","Returns the type parameters associated with this function.",28,[[],[["typeparameter",3],["vec",3]]]],[11,"get_named_type_parameters","","Returns the type parameters with the real names.",28,[[],[["typeparameter",3],["vec",3]]]],[11,"get_parameter_count","","",28,[[]]],[11,"is_parameter","","Return `true` if idx is a formal parameter index",28,[[]]],[11,"get_parameters","","Returns the regular parameters associated with this…",28,[[],[["parameter",3],["vec",3]]]],[11,"get_return_types","","Returns return types of this function.",28,[[],[["vec",3],["type",4]]]],[11,"get_return_type","","Returns return type at given index.",28,[[],["type",4]]],[11,"get_return_count","","Returns the number of return values of this function.",28,[[]]],[11,"get_local_name","","Get the name to be used for a local. If the local is an…",28,[[],["symbol",3]]],[11,"is_temporary","","Returns true if the index is for a temporary, not user…",28,[[]]],[11,"get_local_count","","Gets the number of proper locals of this function. Those…",28,[[]]],[11,"get_local_type","","Gets the type of the local at index. This must use an…",28,[[],["type",4]]],[11,"get_spec","","Returns associated specification.",28,[[],["spec",3]]],[11,"get_acquires_global_resources","","Returns the acquired global resource types.",28,[[],[["vec",3],["structid",3]]]],[11,"get_modify_targets","","Computes the modified targets of the spec clause, as a map…",28,[[],[["vec",3],["btreemap",3],["qualifiedid",3]]]],[11,"should_verify","","Determine whether the function is target of verification.",28,[[["verificationscope",4]]]],[11,"get_calling_functions","","Get the functions that call this one",28,[[],[["qualifiedid",3],["btreeset",3]]]],[11,"get_called_functions","","Get the functions that this one calls",28,[[],[["qualifiedid",3],["btreeset",3]]]],[11,"get_simple_name_string","","Returns the function name excluding the address and the…",28,[[],[["rc",3],["string",3]]]],[11,"get_name_string","","Returns the function name with the module name excluding…",28,[[],["rc",3]]],[11,"display","","",32,[[["globalenv",3]],["locdisplay",3]]],[0,"pragmas","move_model","Provides pragmas and properties of the specification…",null,null],[5,"is_pragma_valid_for_block","move_model::pragmas","Checks whether a pragma is valid in a specific spec block.",null,[[["specblockcontext",4]]]],[5,"is_property_valid_for_condition","","A function which determines whether a property is valid…",null,[[["conditionkind",4]]]],[17,"VERIFY_PRAGMA","","Pragma indicating whether verification should be performed…",null,null],[17,"TIMEOUT_PRAGMA","","Pragma defining a timeout.",null,null],[17,"SEED_PRAGMA","","Pragma defining a random seed.",null,null],[17,"VERIFY_DURATION_ESTIMATE_PRAGMA","","Pragma indicating an estimate how long verification takes.…",null,null],[17,"INTRINSIC_PRAGMA","","Pragma indicating whether implementation of function…",null,null],[17,"OPAQUE_PRAGMA","","Pragma indicating whether implementation of function…",null,null],[17,"ABORTS_IF_IS_PARTIAL_PRAGMA","","Pragma indicating whether aborts_if specification should…",null,null],[17,"ABORTS_IF_IS_STRICT_PRAGMA","","Pragma indicating whether no explicit aborts_if…",null,null],[17,"REQUIRES_IF_ABORTS_PRAGMA","","Pragma indicating that requires are also enforced if the…",null,null],[17,"ALWAYS_ABORTS_TEST_PRAGMA","","Pragma indicating that the function will run smoke tests",null,null],[17,"ADDITION_OVERFLOW_UNCHECKED_PRAGMA","","Pragma indicating that adding u64 or u128 values should…",null,null],[17,"ASSUME_NO_ABORT_FROM_HERE_PRAGMA","","Pragma indicating that aborts from this function shall be…",null,null],[17,"EXPORT_ENSURES_PRAGMA","","Pragma which indicates that the function\'s abort and…",null,null],[17,"FRIEND_PRAGMA","","Pragma indicating that the function can only be called…",null,null],[17,"CONDITION_INJECTED_PROP","","Internal property attached to conditions if they are…",null,null],[17,"CONDITION_EXPORT_PROP","","Property which can be attached to conditions to make them…",null,null],[17,"CONDITION_GLOBAL_PROP","","Property which can be attached to a module invariant to…",null,null],[17,"CONDITION_ISOLATED_PROP","","Property which can be attached to a global invariant to…",null,null],[17,"CONDITION_ABSTRACT_PROP","","Abstract property which can be used together with an…",null,null],[17,"CONDITION_CONCRETE_PROP","","Opposite to the abstract property.",null,null],[17,"CONDITION_ABORT_ASSUME_PROP","","Property which indicates that an aborts_if should be…",null,null],[17,"CONDITION_ABORT_ASSERT_PROP","","Property which indicates that an aborts_if should be…",null,null],[17,"CONDITION_DEACTIVATED_PROP","","A property which can be attached to any condition to…",null,null],[17,"CONDITION_CHECK_ABORT_CODES_PROP","","A property which can be attached to an aborts_with to…",null,null],[0,"symbol","move_model","Contains definitions of symbols -- internalized strings…",null,null],[3,"Symbol","move_model::symbol","Representation of a symbol.",null,null],[3,"SymbolDisplay","","A helper to support symbols in formatting.",null,null],[3,"SymbolPool","","A pool of symbols. Allows to lookup a symbol by a string…",null,null],[11,"display","","",44,[[["symbolpool",3]],["symboldisplay",3]]],[11,"new","","Creates a new SymbolPool.",45,[[],["symbolpool",3]]],[11,"make","","Looks up a symbol by its string representation. If a…",45,[[],["symbol",3]]],[11,"string","","Returns the string representation of this symbol, as an…",45,[[["symbol",3]],[["rc",3],["string",3]]]],[0,"ty","move_model","Contains types and related functions.",null,null],[3,"Substitution","move_model::ty","A type substitution.",null,null],[3,"TypeError","","Represents an type error resulting from unification.",null,null],[12,"message","","",46,null],[3,"TypeDisplay","","Helper for type displays.",null,null],[4,"Type","","Represents a type.",null,null],[13,"Primitive","","",47,null],[13,"Tuple","","",47,null],[13,"Vector","","",47,null],[13,"Struct","","",47,null],[13,"TypeParameter","","",47,null],[13,"Reference","","",47,null],[13,"Fun","","",47,null],[13,"TypeDomain","","",47,null],[13,"TypeLocal","","",47,null],[13,"Error","","",47,null],[13,"Var","","",47,null],[4,"PrimitiveType","","Represents a primitive (builtin) type.",null,null],[13,"Bool","","",48,null],[13,"U8","","",48,null],[13,"U64","","",48,null],[13,"U128","","",48,null],[13,"Address","","",48,null],[13,"Signer","","",48,null],[13,"Num","","",48,null],[13,"Range","","",48,null],[13,"TypeValue","","",48,null],[4,"TypeDisplayContext","","Data providing context for displaying types.",null,null],[13,"WithoutEnv","","",49,null],[12,"symbol_pool","move_model::ty::TypeDisplayContext","",50,null],[12,"reverse_struct_table","","",50,null],[13,"WithEnv","move_model::ty","",49,null],[12,"env","move_model::ty::TypeDisplayContext","",51,null],[12,"type_param_names","","",51,null],[17,"BOOL_TYPE","move_model::ty","",null,null],[17,"NUM_TYPE","","",null,null],[11,"is_spec","","Returns true if this type is a specification language only…",48,[[]]],[11,"into_type_tag","","Attempt to convert this type into a…",48,[[],[["option",4],["typetag",4]]]],[11,"new_prim","","",47,[[["primitivetype",4]],["type",4]]],[11,"is_reference","","Determines whether this is a reference.",47,[[]]],[11,"is_mutable_reference","","Determines whether this is a mutable reference.",47,[[]]],[11,"is_immutable_reference","","Determines whether this is an immutable reference.",47,[[]]],[11,"is_spec","","Returns true if this type is a specification language only…",47,[[]]],[11,"is_number","","Returns true if this is any number type.",47,[[]]],[11,"skip_reference","","Skip reference type.",47,[[],["type",4]]],[11,"replace_struct_instantiation","","If this is a struct type, replace the type instantiation.",47,[[],["type",4]]],[11,"get_struct","","If this is a struct type, return the associated struct env…",47,[[["globalenv",3]],["option",4]]],[11,"require_struct","","Require this to be a struct, if so extracts its content.",47,[[]]],[11,"instantiate","","Instantiates type parameters in this type.",47,[[],["type",4]]],[11,"contains","","Checks whether this type contains a type for which the…",47,[[]]],[11,"is_incomplete","","Returns true if this type is incomplete, i.e. contains any…",47,[[]]],[11,"is_open","","Return true if this type contains free type variables",47,[[]]],[11,"module_usage","","Compute used modules in this type, adding them to the…",47,[[["btreeset",3]]]],[11,"into_type_tag","","Attempt to convert this type into a…",47,[[["globalenv",3]],[["option",4],["typetag",4]]]],[11,"from_type_tag","","Create a `Type` from `t`",47,[[["globalenv",3],["typetag",4]]]],[11,"get_vars","","Get the unbound type variables in the type.",47,[[],["btreeset",3]]],[11,"new","","Creates a new substitution.",52,[[]]],[11,"bind","","Binds the type variables.",52,[[["type",4]]]],[11,"specialize","","Specializes the type, substituting all variables bound in…",52,[[["type",4]],["type",4]]],[11,"unify","","Unify two types, returning the unified type.",52,[[["type",4],["typedisplaycontext",4]],[["typeerror",3],["result",4],["type",4]]]],[11,"symbol_pool","","",49,[[],["symbolpool",3]]],[11,"display","","",47,[[["typedisplaycontext",4]],["typedisplay",3]]],[14,"emit","move_model","Macro to emit a simple or formatted string.",null,null],[14,"emitln","","Macro to emit a simple or formatted string followed by a…",null,null],[11,"from","move_model::ast","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"equivalent","","",6,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"equivalent","","",15,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"equivalent","","",7,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"equivalent","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"equivalent","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"equivalent","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"equivalent","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"equivalent","","",14,[[]]],[11,"from","move_model::code_writer","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"from","move_model::exp_rewriter","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","move_model::model","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"equivalent","","",32,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"equivalent","","",41,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"equivalent","","",33,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"equivalent","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"equivalent","","",37,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"equivalent","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"equivalent","","",35,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"equivalent","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"equivalent","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"equivalent","","",40,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"equivalent","","",42,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"equivalent","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"equivalent","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"equivalent","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"equivalent","","",31,[[]]],[11,"from","move_model::symbol","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"equivalent","","",44,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","move_model::ty","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"equivalent","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"equivalent","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"clone","move_model::ast","",1,[[],["specfundecl",3]]],[11,"clone","","",8,[[],["conditionkind",4]]],[11,"clone","","",9,[[],["quantkind",4]]],[11,"clone","","",2,[[],["condition",3]]],[11,"clone","","",10,[[],["propertyvalue",4]]],[11,"clone","","",3,[[],["spec",3]]],[11,"clone","","",4,[[],["specblockinfo",3]]],[11,"clone","","",11,[[],["specblocktarget",4]]],[11,"clone","","",5,[[],["globalinvariant",3]]],[11,"clone","","",12,[[],["exp",4]]],[11,"clone","","",13,[[],["operation",4]]],[11,"clone","","",6,[[],["localvardecl",3]]],[11,"clone","","",14,[[],["value",4]]],[11,"clone","","",15,[[],["modulename",3]]],[11,"clone","","",7,[[],["qualifiedsymbol",3]]],[11,"clone","move_model::code_writer","",57,[[],["codewriterlabel",3]]],[11,"clone","move_model::model","",32,[[],["loc",3]]],[11,"clone","","",41,[[],["moduleid",3]]],[11,"clone","","",33,[[],["namedconstantid",3]]],[11,"clone","","",36,[[],["structid",3]]],[11,"clone","","",37,[[],["fieldid",3]]],[11,"clone","","",34,[[],["funid",3]]],[11,"clone","","",35,[[],["schemaid",3]]],[11,"clone","","",38,[[],["specfunid",3]]],[11,"clone","","",39,[[],["specvarid",3]]],[11,"clone","","",40,[[],["nodeid",3]]],[11,"clone","","",42,[[],["globalid",3]]],[11,"clone","","",18,[[],["qualifiedid",3]]],[11,"clone","","",29,[[],["verificationscope",4]]],[11,"clone","","",20,[[],["conditioninfo",3]]],[11,"clone","","",30,[[],["conditiontag",4]]],[11,"clone","","",22,[[],["moduleenv",3]]],[11,"clone","","",23,[[],["structenv",3]]],[11,"clone","","",26,[[],["typeparameter",3]]],[11,"clone","","",31,[[],["typeconstraint",4]]],[11,"clone","","",27,[[],["parameter",3]]],[11,"clone","","",28,[[],["functionenv",3]]],[11,"clone","move_model::symbol","",44,[[],["symbol",3]]],[11,"clone","move_model::ty","",47,[[],["type",4]]],[11,"clone","","",48,[[],["primitivetype",4]]],[11,"clone","","",52,[[],["substitution",3]]],[11,"default","move_model::ast","",3,[[],["spec",3]]],[11,"default","move_model::model","",32,[[]]],[11,"default","","",29,[[]]],[11,"default","","",20,[[],["conditioninfo",3]]],[11,"default","","",19,[[]]],[11,"default","move_model::symbol","",45,[[]]],[11,"default","move_model::ty","",52,[[]]],[11,"cmp","move_model::ast","",11,[[["specblocktarget",4]],["ordering",4]]],[11,"cmp","","",15,[[["modulename",3]],["ordering",4]]],[11,"cmp","","",7,[[["qualifiedsymbol",3]],["ordering",4]]],[11,"cmp","move_model::model","",32,[[["loc",3]],["ordering",4]]],[11,"cmp","","",41,[[["moduleid",3]],["ordering",4]]],[11,"cmp","","",33,[[["namedconstantid",3]],["ordering",4]]],[11,"cmp","","",36,[[["structid",3]],["ordering",4]]],[11,"cmp","","",37,[[["fieldid",3]],["ordering",4]]],[11,"cmp","","",34,[[["funid",3]],["ordering",4]]],[11,"cmp","","",35,[[["schemaid",3]],["ordering",4]]],[11,"cmp","","",38,[[["specfunid",3]],["ordering",4]]],[11,"cmp","","",39,[[["specvarid",3]],["ordering",4]]],[11,"cmp","","",40,[[["nodeid",3]],["ordering",4]]],[11,"cmp","","",42,[[["globalid",3]],["ordering",4]]],[11,"cmp","","",18,[[["qualifiedid",3]],["ordering",4]]],[11,"cmp","","",30,[[["conditiontag",4]],["ordering",4]]],[11,"cmp","","",26,[[["typeparameter",3]],["ordering",4]]],[11,"cmp","","",31,[[["typeconstraint",4]],["ordering",4]]],[11,"cmp","move_model::symbol","",44,[[["symbol",3]],["ordering",4]]],[11,"cmp","move_model::ty","",47,[[["type",4]],["ordering",4]]],[11,"cmp","","",48,[[["primitivetype",4]],["ordering",4]]],[11,"eq","move_model::ast","",8,[[["conditionkind",4]]]],[11,"ne","","",8,[[["conditionkind",4]]]],[11,"eq","","",9,[[["quantkind",4]]]],[11,"eq","","",11,[[["specblocktarget",4]]]],[11,"ne","","",11,[[["specblocktarget",4]]]],[11,"eq","","",12,[[["exp",4]]]],[11,"ne","","",12,[[["exp",4]]]],[11,"eq","","",13,[[["operation",4]]]],[11,"ne","","",13,[[["operation",4]]]],[11,"eq","","",6,[[["localvardecl",3]]]],[11,"ne","","",6,[[["localvardecl",3]]]],[11,"eq","","",14,[[["value",4]]]],[11,"ne","","",14,[[["value",4]]]],[11,"eq","","",15,[[["modulename",3]]]],[11,"ne","","",15,[[["modulename",3]]]],[11,"eq","","",7,[[["qualifiedsymbol",3]]]],[11,"ne","","",7,[[["qualifiedsymbol",3]]]],[11,"eq","move_model::model","",32,[[["loc",3]]]],[11,"ne","","",32,[[["loc",3]]]],[11,"eq","","",41,[[["moduleid",3]]]],[11,"ne","","",41,[[["moduleid",3]]]],[11,"eq","","",33,[[["namedconstantid",3]]]],[11,"ne","","",33,[[["namedconstantid",3]]]],[11,"eq","","",36,[[["structid",3]]]],[11,"ne","","",36,[[["structid",3]]]],[11,"eq","","",37,[[["fieldid",3]]]],[11,"ne","","",37,[[["fieldid",3]]]],[11,"eq","","",34,[[["funid",3]]]],[11,"ne","","",34,[[["funid",3]]]],[11,"eq","","",35,[[["schemaid",3]]]],[11,"ne","","",35,[[["schemaid",3]]]],[11,"eq","","",38,[[["specfunid",3]]]],[11,"ne","","",38,[[["specfunid",3]]]],[11,"eq","","",39,[[["specvarid",3]]]],[11,"ne","","",39,[[["specvarid",3]]]],[11,"eq","","",40,[[["nodeid",3]]]],[11,"ne","","",40,[[["nodeid",3]]]],[11,"eq","","",42,[[["globalid",3]]]],[11,"ne","","",42,[[["globalid",3]]]],[11,"eq","","",18,[[["qualifiedid",3]]]],[11,"ne","","",18,[[["qualifiedid",3]]]],[11,"eq","","",29,[[["verificationscope",4]]]],[11,"eq","","",30,[[["conditiontag",4]]]],[11,"eq","","",26,[[["typeparameter",3]]]],[11,"ne","","",26,[[["typeparameter",3]]]],[11,"eq","","",31,[[["typeconstraint",4]]]],[11,"eq","move_model::symbol","",44,[[["symbol",3]]]],[11,"ne","","",44,[[["symbol",3]]]],[11,"eq","move_model::ty","",47,[[["type",4]]]],[11,"ne","","",47,[[["type",4]]]],[11,"eq","","",48,[[["primitivetype",4]]]],[11,"partial_cmp","move_model::ast","",11,[[["specblocktarget",4]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["specblocktarget",4]]]],[11,"le","","",11,[[["specblocktarget",4]]]],[11,"gt","","",11,[[["specblocktarget",4]]]],[11,"ge","","",11,[[["specblocktarget",4]]]],[11,"partial_cmp","","",15,[[["modulename",3]],[["ordering",4],["option",4]]]],[11,"lt","","",15,[[["modulename",3]]]],[11,"le","","",15,[[["modulename",3]]]],[11,"gt","","",15,[[["modulename",3]]]],[11,"ge","","",15,[[["modulename",3]]]],[11,"partial_cmp","","",7,[[["qualifiedsymbol",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["qualifiedsymbol",3]]]],[11,"le","","",7,[[["qualifiedsymbol",3]]]],[11,"gt","","",7,[[["qualifiedsymbol",3]]]],[11,"ge","","",7,[[["qualifiedsymbol",3]]]],[11,"partial_cmp","move_model::model","",32,[[["loc",3]],[["ordering",4],["option",4]]]],[11,"lt","","",32,[[["loc",3]]]],[11,"le","","",32,[[["loc",3]]]],[11,"gt","","",32,[[["loc",3]]]],[11,"ge","","",32,[[["loc",3]]]],[11,"partial_cmp","","",41,[[["moduleid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",41,[[["moduleid",3]]]],[11,"le","","",41,[[["moduleid",3]]]],[11,"gt","","",41,[[["moduleid",3]]]],[11,"ge","","",41,[[["moduleid",3]]]],[11,"partial_cmp","","",33,[[["namedconstantid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",33,[[["namedconstantid",3]]]],[11,"le","","",33,[[["namedconstantid",3]]]],[11,"gt","","",33,[[["namedconstantid",3]]]],[11,"ge","","",33,[[["namedconstantid",3]]]],[11,"partial_cmp","","",36,[[["structid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",36,[[["structid",3]]]],[11,"le","","",36,[[["structid",3]]]],[11,"gt","","",36,[[["structid",3]]]],[11,"ge","","",36,[[["structid",3]]]],[11,"partial_cmp","","",37,[[["fieldid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",37,[[["fieldid",3]]]],[11,"le","","",37,[[["fieldid",3]]]],[11,"gt","","",37,[[["fieldid",3]]]],[11,"ge","","",37,[[["fieldid",3]]]],[11,"partial_cmp","","",34,[[["funid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",34,[[["funid",3]]]],[11,"le","","",34,[[["funid",3]]]],[11,"gt","","",34,[[["funid",3]]]],[11,"ge","","",34,[[["funid",3]]]],[11,"partial_cmp","","",35,[[["schemaid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",35,[[["schemaid",3]]]],[11,"le","","",35,[[["schemaid",3]]]],[11,"gt","","",35,[[["schemaid",3]]]],[11,"ge","","",35,[[["schemaid",3]]]],[11,"partial_cmp","","",38,[[["specfunid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",38,[[["specfunid",3]]]],[11,"le","","",38,[[["specfunid",3]]]],[11,"gt","","",38,[[["specfunid",3]]]],[11,"ge","","",38,[[["specfunid",3]]]],[11,"partial_cmp","","",39,[[["specvarid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",39,[[["specvarid",3]]]],[11,"le","","",39,[[["specvarid",3]]]],[11,"gt","","",39,[[["specvarid",3]]]],[11,"ge","","",39,[[["specvarid",3]]]],[11,"partial_cmp","","",40,[[["nodeid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",40,[[["nodeid",3]]]],[11,"le","","",40,[[["nodeid",3]]]],[11,"gt","","",40,[[["nodeid",3]]]],[11,"ge","","",40,[[["nodeid",3]]]],[11,"partial_cmp","","",42,[[["globalid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",42,[[["globalid",3]]]],[11,"le","","",42,[[["globalid",3]]]],[11,"gt","","",42,[[["globalid",3]]]],[11,"ge","","",42,[[["globalid",3]]]],[11,"partial_cmp","","",18,[[["qualifiedid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",18,[[["qualifiedid",3]]]],[11,"le","","",18,[[["qualifiedid",3]]]],[11,"gt","","",18,[[["qualifiedid",3]]]],[11,"ge","","",18,[[["qualifiedid",3]]]],[11,"partial_cmp","","",30,[[["conditiontag",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",26,[[["typeparameter",3]],[["ordering",4],["option",4]]]],[11,"lt","","",26,[[["typeparameter",3]]]],[11,"le","","",26,[[["typeparameter",3]]]],[11,"gt","","",26,[[["typeparameter",3]]]],[11,"ge","","",26,[[["typeparameter",3]]]],[11,"partial_cmp","","",31,[[["typeconstraint",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","move_model::symbol","",44,[[["symbol",3]],[["ordering",4],["option",4]]]],[11,"lt","","",44,[[["symbol",3]]]],[11,"le","","",44,[[["symbol",3]]]],[11,"gt","","",44,[[["symbol",3]]]],[11,"ge","","",44,[[["symbol",3]]]],[11,"partial_cmp","move_model::ty","",47,[[["type",4]],[["ordering",4],["option",4]]]],[11,"lt","","",47,[[["type",4]]]],[11,"le","","",47,[[["type",4]]]],[11,"gt","","",47,[[["type",4]]]],[11,"ge","","",47,[[["type",4]]]],[11,"partial_cmp","","",48,[[["primitivetype",4]],[["ordering",4],["option",4]]]],[11,"fmt","move_model::ast","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","move_model::code_writer","",57,[[["formatter",3]],["result",6]]],[11,"fmt","move_model::model","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","move_model::symbol","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","move_model::ty","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","move_model::ast","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",53,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",54,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",55,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",56,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","move_model","",64,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","move_model::model","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","move_model::symbol","",62,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","move_model::ty","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"hash","move_model::ast","",15,[[]]],[11,"hash","","",7,[[]]],[11,"hash","move_model::model","",41,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",18,[[]]],[11,"hash","move_model::symbol","",44,[[]]],[11,"hash","move_model::ty","",47,[[]]],[11,"hash","","",48,[[]]],[11,"deserialize","move_model::model","",29,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]]],"p":[[3,"SpecVarDecl"],[3,"SpecFunDecl"],[3,"Condition"],[3,"Spec"],[3,"SpecBlockInfo"],[3,"GlobalInvariant"],[3,"LocalVarDecl"],[3,"QualifiedSymbol"],[4,"ConditionKind"],[4,"QuantKind"],[4,"PropertyValue"],[4,"SpecBlockTarget"],[4,"Exp"],[4,"Operation"],[4,"Value"],[3,"ModuleName"],[3,"CodeWriter"],[3,"ExpRewriter"],[3,"QualifiedId"],[3,"GlobalEnv"],[3,"ConditionInfo"],[3,"ModuleData"],[3,"ModuleEnv"],[3,"StructEnv"],[3,"FieldEnv"],[3,"NamedConstantEnv"],[3,"TypeParameter"],[3,"Parameter"],[3,"FunctionEnv"],[4,"VerificationScope"],[4,"ConditionTag"],[4,"TypeConstraint"],[3,"Loc"],[3,"NamedConstantId"],[3,"FunId"],[3,"SchemaId"],[3,"StructId"],[3,"FieldId"],[3,"SpecFunId"],[3,"SpecVarId"],[3,"NodeId"],[3,"ModuleId"],[3,"GlobalId"],[3,"FunctionData"],[3,"Symbol"],[3,"SymbolPool"],[3,"TypeError"],[4,"Type"],[4,"PrimitiveType"],[4,"TypeDisplayContext"],[13,"WithoutEnv"],[13,"WithEnv"],[3,"Substitution"],[3,"ModuleNameDisplay"],[3,"QualifiedSymbolDisplay"],[3,"ExpDisplay"],[3,"OperationDisplay"],[3,"CodeWriterLabel"],[3,"StructData"],[3,"FieldData"],[3,"NamedConstantData"],[3,"LocDisplay"],[3,"SymbolDisplay"],[3,"TypeDisplay"],[6,"MemoryLabel"]]},\
"move_prover":{"doc":"","i":[[5,"run_move_prover","move_prover","",null,[[["options",3]],["result",6]]],[5,"run_move_prover_errors_to_stderr","","",null,[[["options",3]],["result",6]]],[0,"cli","","Functionality related to the command line interface of the…",null,null],[3,"Options","move_prover::cli","Represents options provided to the tool. Most of those…",null,null],[12,"prelude_path","","Path to the boogie prelude. The special string…",0,null],[12,"output_path","","The path to the boogie output which represents the…",0,null],[12,"verbosity_level","","Verbosity level for logging.",0,null],[12,"run_docgen","","Whether to run the documentation generator instead of the…",0,null],[12,"run_abigen","","Whether to run the ABI generator instead of the prover.",0,null],[12,"run_errmapgen","","Whether to run the error map generator instead of the…",0,null],[12,"account_address","","An account address to use if none is specified in the…",0,null],[12,"move_sources","","The paths to the Move sources.",0,null],[12,"move_deps","","The paths to any dependencies for the Move sources. Those…",0,null],[12,"prover","","Options for the prover.",0,null],[12,"backend","","Options for the prover backend.",0,null],[12,"trans_v2","","Whether to use the v2 translation schema.",0,null],[12,"docgen","","Options for the documentation generator.",0,null],[12,"abigen","","Options for the ABI generator.",0,null],[12,"errmapgen","","Options for the error map generator. TODO: this currently…",0,null],[17,"INLINE_PRELUDE","","Represents the virtual path to the boogie prelude which is…",null,null],[11,"create_from_toml","","Creates options from toml configuration source.",0,[[],[["options",3],["result",6]]]],[11,"create_from_toml_file","","Creates options from toml configuration file.",0,[[],[["options",3],["result",6]]]],[11,"create_from_args","","",0,[[],[["options",3],["result",6]]]],[11,"setup_logging","","Sets up logging based on provided options. This should be…",0,[[]]],[11,"setup_logging_for_test","","",0,[[]]],[11,"get_boogie_command","","Returns command line to call boogie.",0,[[],[["vec",3],["string",3]]]],[11,"get_boogie_log_file","","Returns name of file where to log boogie output.",0,[[],["string",3]]],[11,"adjust_timeout","","Adjust a timeout value, given in seconds, for the runtime…",0,[[]]],[11,"enable_debug","","Convenience function to enable debugging (like high…",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"clone","","",0,[[],["options",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]]],"p":[[3,"Options"]]},\
"move_prover_test_utils":{"doc":"","i":[[5,"read_env_var","move_prover_test_utils","",null,[[],["string",3]]],[5,"read_bool_env_var","","",null,[[]]],[5,"extract_test_directives","","",null,[[["path",3]],[["result",6],["vec",3]]]],[0,"baseline_test","","A module supporting baseline (golden) tests.",null,null],[5,"verify_or_update_baseline","move_prover_test_utils::baseline_test","Verifies or updates baseline file for the given generated…",null,[[["path",3]],["result",6]]],[17,"DEFAULT_SENDER","move_prover_test_utils","",null,null]],"p":[]},\
"move_vm_integration_tests":{"doc":"","i":[],"p":[]},\
"move_vm_natives":{"doc":"","i":[[0,"account","move_vm_natives","",null,null],[5,"native_create_signer","move_vm_natives::account","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[5,"native_destroy_signer","","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[0,"bcs","move_vm_natives","",null,null],[5,"native_to_bytes","move_vm_natives::bcs","Rust implementation of Move\'s `native public fun…",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[0,"debug","move_vm_natives","",null,null],[5,"native_print","move_vm_natives::debug","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[5,"native_print_stack_trace","","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[0,"event","move_vm_natives","",null,null],[5,"native_emit_event","move_vm_natives::event","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[0,"hash","move_vm_natives","",null,null],[5,"native_sha2_256","move_vm_natives::hash","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[5,"native_sha3_256","","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[0,"signature","move_vm_natives","",null,null],[5,"native_ed25519_publickey_validation","move_vm_natives::signature","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[5,"native_ed25519_signature_verification","","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[0,"signer","move_vm_natives","",null,null],[5,"native_borrow_address","move_vm_natives::signer","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[0,"vector","move_vm_natives","",null,null],[5,"native_empty","move_vm_natives::vector","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[5,"native_length","","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[5,"native_push_back","","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[5,"native_borrow","","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[5,"native_pop","","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[5,"native_destroy_empty","","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]],[5,"native_swap","","",null,[[["type",4],["vecdeque",3],["value",3],["vec",3]],[["partialvmresult",6],["nativeresult",3]]]]],"p":[]},\
"move_vm_runtime":{"doc":"The core Move VM logic.","i":[[0,"data_cache","move_vm_runtime","",null,null],[3,"AccountDataCache","move_vm_runtime::data_cache","",null,null],[3,"TransactionEffects","","Collection of side effects produced by a Session.",null,null],[12,"resources","","",0,null],[12,"modules","","",0,null],[12,"events","","",0,null],[8,"RemoteCache","","Trait for the Move VM to abstract storage operations.",null,null],[10,"get_module","","",1,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[10,"get_resource","","",1,[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]]],[0,"logging","move_vm_runtime","",null,null],[3,"NoContextLog","move_vm_runtime::logging","",null,null],[8,"LogContext","","",null,null],[10,"alert","","",2,[[]]],[11,"name","","",3,[[["string",3]]]],[11,"new","","",3,[[]]],[0,"move_vm","move_vm_runtime","",null,null],[3,"MoveVM","move_vm_runtime::move_vm","",null,null],[11,"new","","",4,[[]]],[11,"new_session","","Create a new Session backed by the given storage.",4,[[],[["session",3],["remotecache",8]]]],[0,"session","move_vm_runtime","",null,null],[3,"Session","move_vm_runtime::session","",null,null],[11,"execute_function","","Execute a Move function with the given arguments. This is…",5,[[["vec",3],["typetag",4],["coststrategy",3],["accountaddress",3],["value",3],["vec",3],["moduleid",3],["identstr",3]],["vmresult",6]]],[11,"execute_script","","Execute a transaction script.",5,[[["vec",3],["coststrategy",3],["vec",3],["accountaddress",3],["value",3],["vec",3],["vec",3],["typetag",4]],["vmresult",6]]],[11,"publish_module","","Publish the given module.",5,[[["coststrategy",3],["accountaddress",3],["vec",3]],["vmresult",6]]],[11,"num_mutated_accounts","","",5,[[["accountaddress",3]]]],[11,"finish","","Finish up the session and produce the side effects.",5,[[],[["vmresult",6],["transactioneffects",3]]]],[14,"trace","move_vm_runtime","",null,null],[11,"from","move_vm_runtime::data_cache","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","move_vm_runtime::logging","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","move_vm_runtime::move_vm","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","move_vm_runtime::session","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"alert","move_vm_runtime::logging","",3,[[]]],[11,"clone","","",3,[[],["nocontextlog",3]]],[11,"visit","","",3,[[["visitor",8]]]]],"p":[[3,"TransactionEffects"],[8,"RemoteCache"],[8,"LogContext"],[3,"NoContextLog"],[3,"MoveVM"],[3,"Session"],[3,"AccountDataCache"]]},\
"move_vm_test_utils":{"doc":"","i":[[3,"AccountChangeSet","move_vm_test_utils","A collection of changes to modules and resources under a…",null,null],[12,"modules","","",0,null],[12,"resources","","",0,null],[3,"ChangeSet","","A collection of changes to a Move state.",null,null],[12,"accounts","","",1,null],[3,"BlankStorage","","A dummy storage containing no modules or resources.",null,null],[3,"DeltaStorage","","The new storage can be used for additional computations…",null,null],[3,"InMemoryStorage","","Simple in-memory storage that can be used as a Move VM…",null,null],[5,"convert_txn_effects_to_move_changeset_and_events","","",null,[[["transactioneffects",3]],["result",6]]],[11,"new","","",0,[[]]],[11,"squash","","",0,[[],["result",6]]],[11,"publish_or_overwrite_module","","",0,[[["identifier",3],["vec",3]]]],[11,"publish_or_overwrite_resource","","",0,[[["structtag",3],["vec",3]]]],[11,"publish_module","","",0,[[["identifier",3],["vec",3]],["result",6]]],[11,"unpublish_module","","",0,[[["identifier",3]],["result",6]]],[11,"publish_resource","","",0,[[["structtag",3],["vec",3]],["result",6]]],[11,"unpublish_resource","","",0,[[["structtag",3]],["result",6]]],[11,"new","","",1,[[]]],[11,"publish_or_overwrite_module","","",1,[[["moduleid",3],["vec",3]]]],[11,"publish_module","","",1,[[["moduleid",3],["vec",3]],["result",6]]],[11,"unpublish_module","","",1,[[["moduleid",3]],["result",6]]],[11,"publish_or_overwrite_resource","","",1,[[["accountaddress",3],["structtag",3],["vec",3]]]],[11,"publish_resource","","",1,[[["accountaddress",3],["structtag",3],["vec",3]],["result",6]]],[11,"unpublish_resource","","",1,[[["accountaddress",3],["structtag",3]],["result",6]]],[11,"squash","","",1,[[],["result",6]]],[11,"new","","",2,[[]]],[11,"new","","",3,[[["changeset",3]]]],[11,"apply","","",4,[[["changeset",3]],["result",6]]],[11,"new","","",4,[[]]],[11,"publish_or_overwrite_module","","",4,[[["moduleid",3],["vec",3]]]],[11,"publish_or_overwrite_resource","","",4,[[["accountaddress",3],["structtag",3],["vec",3]]]],[6,"Event","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"clone","","",0,[[],["accountchangeset",3]]],[11,"clone","","",1,[[],["changeset",3]]],[11,"clone","","",2,[[],["blankstorage",3]]],[11,"clone","","",3,[[],["deltastorage",3]]],[11,"clone","","",4,[[],["inmemorystorage",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"get_module","","",2,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[11,"get_resource","","",2,[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]]],[11,"get_module","","",3,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[11,"get_resource","","",3,[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]]],[11,"get_module","","",4,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[11,"get_resource","","",4,[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]]]],"p":[[3,"AccountChangeSet"],[3,"ChangeSet"],[3,"BlankStorage"],[3,"DeltaStorage"],[3,"InMemoryStorage"]]},\
"move_vm_types":{"doc":"","i":[[0,"data_store","move_vm_types","",null,null],[8,"DataStore","move_vm_types::data_store","Provide an implementation for bytecodes related to data…",null,null],[10,"load_resource","","Try to load a resource from remote storage and create a…",0,[[["accountaddress",3],["type",4]],[["partialvmresult",6],["globalvalue",3]]]],[10,"load_module","","Get the serialized format of a `CompiledModule` given a…",0,[[["moduleid",3]],[["vmresult",6],["vec",3]]]],[10,"publish_module","","Publish a module.",0,[[["moduleid",3],["vec",3]],["vmresult",6]]],[10,"exists_module","","Check if this module exists.",0,[[["moduleid",3]],["vmresult",6]]],[10,"emit_event","","Emit an event to the EventStore",0,[[["type",4],["vec",3],["value",3]],["partialvmresult",6]]],[0,"gas_schedule","move_vm_types","This module lays out the basic abstract costing schedule…",null,null],[3,"CostStrategy","move_vm_types::gas_schedule","The Move VM implementation for gas charging.",null,null],[4,"NativeCostIndex","","",null,null],[13,"SHA2_256","","",1,null],[13,"SHA3_256","","",1,null],[13,"ED25519_VERIFY","","",1,null],[13,"ED25519_THRESHOLD_VERIFY","","",1,null],[13,"BCS_TO_BYTES","","",1,null],[13,"LENGTH","","",1,null],[13,"EMPTY","","",1,null],[13,"BORROW","","",1,null],[13,"BORROW_MUT","","",1,null],[13,"PUSH_BACK","","",1,null],[13,"POP_BACK","","",1,null],[13,"DESTROY_EMPTY","","",1,null],[13,"SWAP","","",1,null],[13,"ED25519_VALIDATE_KEY","","",1,null],[13,"SIGNER_BORROW","","",1,null],[13,"CREATE_SIGNER","","",1,null],[13,"DESTROY_SIGNER","","",1,null],[13,"EMIT_EVENT","","",1,null],[5,"new_from_instructions","","",null,[[["vec",3],["gascost",3],["vec",3]],["costtable",3]]],[5,"zero_cost_schedule","","",null,[[],["costtable",3]]],[5,"calculate_intrinsic_gas","","Calculate the intrinsic gas for the transaction based upon…",null,[[["gascarrier",6],["gasconstants",3],["abstractmemorysize",3]],[["gascarrier",6],["gasunits",3]]]],[11,"transaction","","A transaction `CostStrategy`. Charge for every operation…",2,[[["gascarrier",6],["costtable",3],["gasunits",3]]]],[11,"system","","A system `CostStrategy` does not charge for operations.",2,[[["gascarrier",6],["costtable",3],["gasunits",3]]]],[11,"cost_table","","Return the `CostTable` behind this `CostStrategy`.",2,[[],["costtable",3]]],[11,"remaining_gas","","Return the gas left.",2,[[],[["gascarrier",6],["gasunits",3]]]],[11,"deduct_gas","","Charge a given amount of gas and fail if not enough gas…",2,[[["gascarrier",6],["gasunits",3]],["partialvmresult",6]]],[11,"charge_instr_with_size","","Charge an instruction over data with a given size and fail…",2,[[["gascarrier",6],["opcodes",4],["abstractmemorysize",3]],["partialvmresult",6]]],[11,"charge_instr","","Charge an instruction and fail if not enough gas units are…",2,[[["opcodes",4]],["partialvmresult",6]]],[11,"charge_intrinsic_gas","","Charge gas related to the overall size of a transaction…",2,[[["gascarrier",6],["abstractmemorysize",3]],["vmresult",6]]],[11,"disable_metering","","",2,[[]]],[11,"enable_metering","","",2,[[]]],[0,"loaded_data","move_vm_types","Loaded definition of code data used in runtime.",null,null],[0,"runtime_types","move_vm_types::loaded_data","",null,null],[3,"StructType","move_vm_types::loaded_data::runtime_types","",null,null],[12,"fields","","",3,null],[12,"is_resource","","",3,null],[12,"type_parameters","","",3,null],[12,"name","","",3,null],[12,"module","","",3,null],[12,"struct_def","","",3,null],[4,"Type","","",null,null],[13,"Bool","","",4,null],[13,"U8","","",4,null],[13,"U64","","",4,null],[13,"U128","","",4,null],[13,"Address","","",4,null],[13,"Signer","","",4,null],[13,"Vector","","",4,null],[13,"Struct","","",4,null],[13,"StructInstantiation","","",4,null],[13,"Reference","","",4,null],[13,"MutableReference","","",4,null],[13,"TyParam","","",4,null],[17,"TYPE_DEPTH_MAX","","",null,null],[11,"subst","","",4,[[],[["partialvmresult",6],["type",4]]]],[0,"natives","move_vm_types","",null,null],[0,"function","move_vm_types::natives","Native Function Support",null,null],[4,"StatusCode","move_vm_types::natives::function","We don\'t derive Arbitrary on this enum because it is too…",null,null],[13,"UNKNOWN_VALIDATION_STATUS","","",5,null],[13,"INVALID_SIGNATURE","","",5,null],[13,"INVALID_AUTH_KEY","","",5,null],[13,"SEQUENCE_NUMBER_TOO_OLD","","",5,null],[13,"SEQUENCE_NUMBER_TOO_NEW","","",5,null],[13,"INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","","",5,null],[13,"TRANSACTION_EXPIRED","","",5,null],[13,"SENDING_ACCOUNT_DOES_NOT_EXIST","","",5,null],[13,"REJECTED_WRITE_SET","","",5,null],[13,"INVALID_WRITE_SET","","",5,null],[13,"EXCEEDED_MAX_TRANSACTION_SIZE","","",5,null],[13,"UNKNOWN_SCRIPT","","",5,null],[13,"UNKNOWN_MODULE","","",5,null],[13,"MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","","",5,null],[13,"MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","","",5,null],[13,"GAS_UNIT_PRICE_BELOW_MIN_BOUND","","",5,null],[13,"GAS_UNIT_PRICE_ABOVE_MAX_BOUND","","",5,null],[13,"INVALID_GAS_SPECIFIER","","",5,null],[13,"SENDING_ACCOUNT_FROZEN","","",5,null],[13,"UNABLE_TO_DESERIALIZE_ACCOUNT","","",5,null],[13,"CURRENCY_INFO_DOES_NOT_EXIST","","",5,null],[13,"INVALID_MODULE_PUBLISHER","","",5,null],[13,"NO_ACCOUNT_ROLE","","",5,null],[13,"BAD_CHAIN_ID","","",5,null],[13,"SEQUENCE_NUMBER_TOO_BIG","","",5,null],[13,"BAD_TRANSACTION_FEE_CURRENCY","","",5,null],[13,"UNKNOWN_VERIFICATION_ERROR","","",5,null],[13,"INDEX_OUT_OF_BOUNDS","","",5,null],[13,"INVALID_SIGNATURE_TOKEN","","",5,null],[13,"RECURSIVE_STRUCT_DEFINITION","","",5,null],[13,"INVALID_RESOURCE_FIELD","","",5,null],[13,"INVALID_FALL_THROUGH","","",5,null],[13,"NEGATIVE_STACK_SIZE_WITHIN_BLOCK","","",5,null],[13,"INVALID_MAIN_FUNCTION_SIGNATURE","","",5,null],[13,"DUPLICATE_ELEMENT","","",5,null],[13,"INVALID_MODULE_HANDLE","","",5,null],[13,"UNIMPLEMENTED_HANDLE","","",5,null],[13,"LOOKUP_FAILED","","",5,null],[13,"TYPE_MISMATCH","","",5,null],[13,"MISSING_DEPENDENCY","","",5,null],[13,"POP_RESOURCE_ERROR","","",5,null],[13,"BR_TYPE_MISMATCH_ERROR","","",5,null],[13,"ABORT_TYPE_MISMATCH_ERROR","","",5,null],[13,"STLOC_TYPE_MISMATCH_ERROR","","",5,null],[13,"STLOC_UNSAFE_TO_DESTROY_ERROR","","",5,null],[13,"UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","","",5,null],[13,"RET_TYPE_MISMATCH_ERROR","","",5,null],[13,"RET_BORROWED_MUTABLE_REFERENCE_ERROR","","",5,null],[13,"FREEZEREF_TYPE_MISMATCH_ERROR","","",5,null],[13,"FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","","",5,null],[13,"BORROWFIELD_TYPE_MISMATCH_ERROR","","",5,null],[13,"BORROWFIELD_BAD_FIELD_ERROR","","",5,null],[13,"BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","","",5,null],[13,"COPYLOC_UNAVAILABLE_ERROR","","",5,null],[13,"COPYLOC_RESOURCE_ERROR","","",5,null],[13,"COPYLOC_EXISTS_BORROW_ERROR","","",5,null],[13,"MOVELOC_UNAVAILABLE_ERROR","","",5,null],[13,"MOVELOC_EXISTS_BORROW_ERROR","","",5,null],[13,"BORROWLOC_REFERENCE_ERROR","","",5,null],[13,"BORROWLOC_UNAVAILABLE_ERROR","","",5,null],[13,"BORROWLOC_EXISTS_BORROW_ERROR","","",5,null],[13,"CALL_TYPE_MISMATCH_ERROR","","",5,null],[13,"CALL_BORROWED_MUTABLE_REFERENCE_ERROR","","",5,null],[13,"PACK_TYPE_MISMATCH_ERROR","","",5,null],[13,"UNPACK_TYPE_MISMATCH_ERROR","","",5,null],[13,"READREF_TYPE_MISMATCH_ERROR","","",5,null],[13,"READREF_RESOURCE_ERROR","","",5,null],[13,"READREF_EXISTS_MUTABLE_BORROW_ERROR","","",5,null],[13,"WRITEREF_TYPE_MISMATCH_ERROR","","",5,null],[13,"WRITEREF_RESOURCE_ERROR","","",5,null],[13,"WRITEREF_EXISTS_BORROW_ERROR","","",5,null],[13,"WRITEREF_NO_MUTABLE_REFERENCE_ERROR","","",5,null],[13,"INTEGER_OP_TYPE_MISMATCH_ERROR","","",5,null],[13,"BOOLEAN_OP_TYPE_MISMATCH_ERROR","","",5,null],[13,"EQUALITY_OP_TYPE_MISMATCH_ERROR","","",5,null],[13,"EXISTS_RESOURCE_TYPE_MISMATCH_ERROR","","",5,null],[13,"BORROWGLOBAL_TYPE_MISMATCH_ERROR","","",5,null],[13,"BORROWGLOBAL_NO_RESOURCE_ERROR","","",5,null],[13,"MOVEFROM_TYPE_MISMATCH_ERROR","","",5,null],[13,"MOVEFROM_NO_RESOURCE_ERROR","","",5,null],[13,"MOVETO_TYPE_MISMATCH_ERROR","","",5,null],[13,"MOVETO_NO_RESOURCE_ERROR","","",5,null],[13,"MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","","",5,null],[13,"NO_MODULE_HANDLES","","",5,null],[13,"POSITIVE_STACK_SIZE_AT_BLOCK_END","","",5,null],[13,"MISSING_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",5,null],[13,"EXTRANEOUS_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",5,null],[13,"DUPLICATE_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",5,null],[13,"INVALID_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",5,null],[13,"GLOBAL_REFERENCE_ERROR","","",5,null],[13,"CONSTRAINT_KIND_MISMATCH","","",5,null],[13,"NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","","",5,null],[13,"LOOP_IN_INSTANTIATION_GRAPH","","",5,null],[13,"ZERO_SIZED_STRUCT","","",5,null],[13,"LINKER_ERROR","","",5,null],[13,"INVALID_CONSTANT_TYPE","","",5,null],[13,"MALFORMED_CONSTANT_DATA","","",5,null],[13,"EMPTY_CODE_UNIT","","",5,null],[13,"INVALID_LOOP_SPLIT","","",5,null],[13,"INVALID_LOOP_BREAK","","",5,null],[13,"INVALID_LOOP_CONTINUE","","",5,null],[13,"UNSAFE_RET_UNUSED_RESOURCES","","",5,null],[13,"TOO_MANY_LOCALS","","",5,null],[13,"GENERIC_MEMBER_OPCODE_MISMATCH","","",5,null],[13,"FUNCTION_RESOLUTION_FAILURE","","",5,null],[13,"INVALID_OPERATION_IN_SCRIPT","","",5,null],[13,"DUPLICATE_MODULE_NAME","","",5,null],[13,"BACKWARD_INCOMPATIBLE_MODULE_UPDATE","","",5,null],[13,"CYCLIC_MODULE_DEPENDENCY","","",5,null],[13,"UNKNOWN_INVARIANT_VIOLATION_ERROR","","",5,null],[13,"EMPTY_VALUE_STACK","","",5,null],[13,"PC_OVERFLOW","","",5,null],[13,"VERIFICATION_ERROR","","",5,null],[13,"STORAGE_ERROR","","",5,null],[13,"INTERNAL_TYPE_ERROR","","",5,null],[13,"EVENT_KEY_MISMATCH","","",5,null],[13,"UNREACHABLE","","",5,null],[13,"VM_STARTUP_FAILURE","","",5,null],[13,"UNEXPECTED_ERROR_FROM_KNOWN_MOVE_FUNCTION","","",5,null],[13,"VERIFIER_INVARIANT_VIOLATION","","",5,null],[13,"UNEXPECTED_VERIFIER_ERROR","","",5,null],[13,"UNEXPECTED_DESERIALIZATION_ERROR","","",5,null],[13,"FAILED_TO_SERIALIZE_WRITE_SET_CHANGES","","",5,null],[13,"FAILED_TO_DESERIALIZE_RESOURCE","","",5,null],[13,"TYPE_RESOLUTION_FAILURE","","",5,null],[13,"UNKNOWN_BINARY_ERROR","","",5,null],[13,"MALFORMED","","",5,null],[13,"BAD_MAGIC","","",5,null],[13,"UNKNOWN_VERSION","","",5,null],[13,"UNKNOWN_TABLE_TYPE","","",5,null],[13,"UNKNOWN_SIGNATURE_TYPE","","",5,null],[13,"UNKNOWN_SERIALIZED_TYPE","","",5,null],[13,"UNKNOWN_OPCODE","","",5,null],[13,"BAD_HEADER_TABLE","","",5,null],[13,"UNEXPECTED_SIGNATURE_TYPE","","",5,null],[13,"DUPLICATE_TABLE","","",5,null],[13,"UNKNOWN_NOMINAL_RESOURCE","","",5,null],[13,"UNKNOWN_KIND","","",5,null],[13,"UNKNOWN_NATIVE_STRUCT_FLAG","","",5,null],[13,"BAD_U64","","",5,null],[13,"BAD_U128","","",5,null],[13,"VALUE_SERIALIZATION_ERROR","","",5,null],[13,"VALUE_DESERIALIZATION_ERROR","","",5,null],[13,"CODE_DESERIALIZATION_ERROR","","",5,null],[13,"UNKNOWN_RUNTIME_STATUS","","",5,null],[13,"EXECUTED","","",5,null],[13,"OUT_OF_GAS","","",5,null],[13,"RESOURCE_DOES_NOT_EXIST","","",5,null],[13,"RESOURCE_ALREADY_EXISTS","","",5,null],[13,"MISSING_DATA","","",5,null],[13,"DATA_FORMAT_ERROR","","",5,null],[13,"ABORTED","","",5,null],[13,"ARITHMETIC_ERROR","","",5,null],[13,"EXECUTION_STACK_OVERFLOW","","",5,null],[13,"CALL_STACK_OVERFLOW","","",5,null],[13,"VM_MAX_TYPE_DEPTH_REACHED","","",5,null],[13,"VM_MAX_VALUE_DEPTH_REACHED","","",5,null],[13,"UNKNOWN_STATUS","","",5,null],[3,"PartialVMError","","",null,null],[3,"NativeResult","","Result of a native function execution requires charges for…",null,null],[12,"cost","","The cost for running that function, whether successfully…",6,null],[12,"result","","Result of execution. This is either the return values or…",6,null],[5,"native_gas","","Return the native gas entry in `CostTable` for the given…",null,[[["costtable",3],["nativecostindex",4]],[["gascarrier",6],["gasunits",3]]]],[8,"NativeContext","","`NativeContext` - Native function context.",null,null],[10,"print_stack_trace","","Prints stack trace.",7,[[],["partialvmresult",6]]],[10,"cost_table","","Gets cost table ref.",7,[[],["costtable",3]]],[10,"save_event","","Saves contract event. Returns true if successful",7,[[["type",4],["vec",3],["value",3]],["partialvmresult",6]]],[10,"type_to_type_layout","","Get the a data layout via the type.",7,[[["type",4]],[["partialvmresult",6],["option",4]]]],[10,"is_resource","","Whether a type is a resource or not.",7,[[["type",4]]]],[11,"ok","","Return values of a successful execution.",6,[[["gascarrier",6],["value",3],["gasunits",3],["vec",3]]]],[11,"err","","Failed execution. The failure is a runtime failure in the…",6,[[["gascarrier",6],["gasunits",3]]]],[0,"values","move_vm_types","",null,null],[0,"values_impl","move_vm_types::values","",null,null],[3,"SignerRef","move_vm_types::values::values_impl","",null,null],[3,"VectorRef","","",null,null],[3,"Vector","","",null,null],[3,"StructRef","","A reference to a Move struct that allows you to take a…",null,null],[3,"Reference","","A generic Move reference that offers two functinalities:…",null,null],[3,"Value","","A Move value -- a wrapper around `ValueImpl` which can be…",null,null],[3,"Locals","","The locals for a function frame. It allows values to be…",null,null],[3,"Struct","","A Move struct.",null,null],[3,"GlobalValue","","A wrapper around `GlobalValueImpl`, representing a \\\"slot\\\"…",null,null],[4,"IntegerValue","","An integer value in Move.",null,null],[13,"U8","","",8,null],[13,"U64","","",8,null],[13,"U128","","",8,null],[4,"GlobalValueEffect","","Simple enum for the change state of a GlobalValue, used by…",null,null],[13,"None","","There was no value, or the value was not changed",9,null],[13,"Deleted","","The value was removed",9,null],[13,"Changed","","Updated with a new value",9,null],[0,"debug","","",null,null],[5,"print_reference","move_vm_types::values::values_impl::debug","",null,[[["reference",3]],["partialvmresult",6]]],[5,"print_locals","","",null,[[["locals",3]],["partialvmresult",6]]],[5,"print_value","","",null,[[["value",3]],["partialvmresult",6]]],[0,"prop","move_vm_types::values::values_impl","",null,null],[5,"value_strategy_with_layout_and_kind_info","move_vm_types::values::values_impl::prop","",null,[[["movetypelayout",4],["movekindinfo",4]]]],[5,"layout_and_kinfo_strategy","","",null,[[]]],[5,"layout_kinfo_and_value_strategy","","",null,[[]]],[11,"as_move_value","move_vm_types::values::values_impl","",10,[[["movetypelayout",4]],["movevalue",4]]],[17,"INDEX_OUT_OF_BOUNDS","","",null,null],[17,"POP_EMPTY_VEC","","",null,null],[17,"DESTROY_NON_EMPTY_VEC","","",null,null],[8,"VMValueCast","","",null,null],[10,"cast","","",11,[[],["partialvmresult",6]]],[11,"is_valid_arg","","",10,[[["signaturetoken",4]]]],[11,"is_constant_or_signer_ref","","",10,[[]]],[11,"copy_value","","",10,[[],["partialvmresult",6]]],[11,"equals","","",10,[[],["partialvmresult",6]]],[11,"read_ref","","",12,[[],[["value",3],["partialvmresult",6]]]],[11,"read_ref","","",13,[[],[["value",3],["partialvmresult",6]]]],[11,"write_ref","","",13,[[["value",3]],["partialvmresult",6]]],[11,"borrow_field","","",12,[[],[["value",3],["partialvmresult",6]]]],[11,"borrow_loc","","",14,[[],[["value",3],["partialvmresult",6]]]],[11,"borrow_signer","","",15,[[],[["value",3],["partialvmresult",6]]]],[11,"new","","",14,[[]]],[11,"check_resources_for_return","","",14,[[],["partialvmresult",6]]],[11,"copy_loc","","",14,[[],[["value",3],["partialvmresult",6]]]],[11,"move_loc","","",14,[[],[["value",3],["partialvmresult",6]]]],[11,"store_loc","","",14,[[["value",3]],["partialvmresult",6]]],[11,"u8","","",10,[[]]],[11,"u64","","",10,[[]]],[11,"u128","","",10,[[]]],[11,"bool","","",10,[[]]],[11,"address","","",10,[[["accountaddress",3]]]],[11,"signer","","",10,[[["accountaddress",3]]]],[11,"transaction_argument_signer_reference","","Create a \\\"unowned\\\" reference to a signer value (&signer)…",10,[[["accountaddress",3]]]],[11,"struct_","","",10,[[["struct",3]]]],[11,"vector_u8","","",10,[[]]],[11,"vector_u64","","",10,[[]]],[11,"vector_u128","","",10,[[]]],[11,"vector_bool","","",10,[[]]],[11,"vector_address","","",10,[[]]],[11,"constant_vector_generic","","",10,[[["signaturetoken",4]],["partialvmresult",6]]],[11,"vector_resource_for_testing_only","","",10,[[]]],[11,"value_as","","",10,[[],["partialvmresult",6]]],[11,"value_as","","",8,[[],["partialvmresult",6]]],[11,"add_checked","","",8,[[],["partialvmresult",6]]],[11,"sub_checked","","",8,[[],["partialvmresult",6]]],[11,"mul_checked","","",8,[[],["partialvmresult",6]]],[11,"div_checked","","",8,[[],["partialvmresult",6]]],[11,"rem_checked","","",8,[[],["partialvmresult",6]]],[11,"bit_or","","",8,[[],["partialvmresult",6]]],[11,"bit_and","","",8,[[],["partialvmresult",6]]],[11,"bit_xor","","",8,[[],["partialvmresult",6]]],[11,"shl_checked","","",8,[[],["partialvmresult",6]]],[11,"shr_checked","","",8,[[],["partialvmresult",6]]],[11,"lt","","",8,[[],["partialvmresult",6]]],[11,"le","","",8,[[],["partialvmresult",6]]],[11,"gt","","",8,[[],["partialvmresult",6]]],[11,"ge","","",8,[[],["partialvmresult",6]]],[11,"into_value","","",8,[[],["value",3]]],[11,"cast_u8","","",8,[[],["partialvmresult",6]]],[11,"cast_u64","","",8,[[],["partialvmresult",6]]],[11,"cast_u128","","",8,[[],["partialvmresult",6]]],[11,"len","","",16,[[["type",4]],[["value",3],["partialvmresult",6]]]],[11,"push_back","","",16,[[["value",3],["type",4]],["partialvmresult",6]]],[11,"borrow_elem","","",16,[[["gascarrier",6],["gasunits",3],["type",4]],[["partialvmresult",6],["nativeresult",3]]]],[11,"pop","","",16,[[["gascarrier",6],["gasunits",3],["type",4]],[["partialvmresult",6],["nativeresult",3]]]],[11,"swap","","",16,[[["gascarrier",6],["gasunits",3],["type",4]],[["partialvmresult",6],["nativeresult",3]]]],[11,"empty","","",17,[[["gascarrier",6],["gasunits",3],["type",4]],[["partialvmresult",6],["nativeresult",3]]]],[11,"destroy_empty","","",17,[[["gascarrier",6],["gasunits",3],["type",4]],[["partialvmresult",6],["nativeresult",3]]]],[11,"size","","",18,[[],[["gascarrier",6],["abstractmemorysize",3]]]],[11,"size","","",10,[[],[["gascarrier",6],["abstractmemorysize",3]]]],[11,"size","","",13,[[],[["gascarrier",6],["abstractmemorysize",3]]]],[11,"size","","",19,[[],[["gascarrier",6],["abstractmemorysize",3]]]],[11,"pack","","",18,[[["intoiterator",8]]]],[11,"unpack","","",18,[[],["partialvmresult",6]]],[11,"none","","",19,[[]]],[11,"cached","","",19,[[["value",3]],["partialvmresult",6]]],[11,"move_from","","",19,[[],[["value",3],["partialvmresult",6]]]],[11,"move_to","","",19,[[["value",3]],["partialvmresult",6]]],[11,"borrow_global","","",19,[[],[["value",3],["partialvmresult",6]]]],[11,"exists","","",19,[[],["partialvmresult",6]]],[11,"into_effect","","",19,[[],[["partialvmresult",6],["globalvalueeffect",4]]]],[11,"is_mutated","","",19,[[]]],[11,"simple_deserialize","","",10,[[["movetypelayout",4],["movekindinfo",4]],[["value",3],["option",4]]]],[11,"simple_serialize","","",10,[[["movetypelayout",4]],[["vec",3],["option",4]]]],[11,"simple_deserialize","","",18,[[["movestructlayout",3]],[["option",4],["struct",3]]]],[11,"simple_serialize","","",18,[[["movestructlayout",3]],[["vec",3],["option",4]]]],[11,"deserialize_constant","","",10,[[["constant",3]],[["value",3],["option",4]]]],[14,"pop_arg","move_vm_types","Return the argument at the top of the stack.",null,null],[11,"from","move_vm_types::gas_schedule","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","move_vm_types::loaded_data::runtime_types","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","move_vm_types::natives::function","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","move_vm_types::values::values_impl","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"cmp","move_vm_types::natives::function","",5,[[["statuscode",4]],["ordering",4]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",5,[[],[["result",4],["statuscode",4]]]],[11,"eq","","",5,[[["statuscode",4]]]],[11,"try_from","","",5,[[],[["result",4],["statuscode",4]]]],[11,"clone","","",5,[[],["statuscode",4]]],[11,"hash","","",5,[[]]],[11,"serialize","","",5,[[],["result",4]]],[11,"arbitrary_with","","",5,[[]]],[11,"partial_cmp","","",5,[[["statuscode",4]],[["ordering",4],["option",4]]]],[11,"clone","","",20,[[],["partialvmerror",3]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"cast","move_vm_types::values::values_impl","",10,[[],["partialvmresult",6]]],[11,"cast","","",10,[[],["partialvmresult",6]]],[11,"cast","","",10,[[],["partialvmresult",6]]],[11,"cast","","",10,[[],["partialvmresult",6]]],[11,"cast","","",10,[[],[["partialvmresult",6],["accountaddress",3]]]],[11,"cast","","",10,[[],[["integervalue",4],["partialvmresult",6]]]],[11,"cast","","",10,[[],[["partialvmresult",6],["reference",3]]]],[11,"cast","","",10,[[],[["partialvmresult",6],["struct",3]]]],[11,"cast","","",10,[[],[["partialvmresult",6],["structref",3]]]],[11,"cast","","",10,[[],[["vec",3],["partialvmresult",6]]]],[11,"cast","","",10,[[],[["partialvmresult",6],["signerref",3]]]],[11,"cast","","",10,[[],[["vectorref",3],["partialvmresult",6]]]],[11,"cast","","",10,[[],[["vector",3],["partialvmresult",6]]]],[11,"cast","","",8,[[],["partialvmresult",6]]],[11,"cast","","",8,[[],["partialvmresult",6]]],[11,"cast","","",8,[[],["partialvmresult",6]]],[11,"clone","move_vm_types::gas_schedule","",1,[[],["nativecostindex",4]]],[11,"clone","move_vm_types::loaded_data::runtime_types","",3,[[],["structtype",3]]],[11,"clone","","",4,[[],["type",4]]],[11,"cmp","move_vm_types::gas_schedule","",1,[[["nativecostindex",4]],["ordering",4]]],[11,"cmp","move_vm_types::loaded_data::runtime_types","",3,[[["structtype",3]],["ordering",4]]],[11,"cmp","","",4,[[["type",4]],["ordering",4]]],[11,"eq","move_vm_types::gas_schedule","",1,[[["nativecostindex",4]]]],[11,"eq","move_vm_types::loaded_data::runtime_types","",3,[[["structtype",3]]]],[11,"ne","","",3,[[["structtype",3]]]],[11,"eq","","",4,[[["type",4]]]],[11,"ne","","",4,[[["type",4]]]],[11,"partial_cmp","move_vm_types::gas_schedule","",1,[[["nativecostindex",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","move_vm_types::loaded_data::runtime_types","",3,[[["structtype",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["structtype",3]]]],[11,"le","","",3,[[["structtype",3]]]],[11,"gt","","",3,[[["structtype",3]]]],[11,"ge","","",3,[[["structtype",3]]]],[11,"partial_cmp","","",4,[[["type",4]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["type",4]]]],[11,"le","","",4,[[["type",4]]]],[11,"gt","","",4,[[["type",4]]]],[11,"ge","","",4,[[["type",4]]]],[11,"fmt","move_vm_types::gas_schedule","",1,[[["formatter",3]],["result",6]]],[11,"fmt","move_vm_types::loaded_data::runtime_types","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","move_vm_types::values::values_impl","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"hash","move_vm_types::gas_schedule","",1,[[]]],[11,"hash","move_vm_types::loaded_data::runtime_types","",3,[[]]],[11,"hash","","",4,[[]]],[11,"status_type","move_vm_types::natives::function","Return the status type for this status code",5,[[],["statustype",4]]],[11,"all_data","","",20,[[]]],[11,"finish","","",20,[[["location",4]],["vmerror",3]]],[11,"new","","",20,[[["statuscode",4]],["partialvmerror",3]]],[11,"major_status","","",20,[[],["statuscode",4]]],[11,"with_sub_status","","",20,[[],["partialvmerror",3]]],[11,"with_message","","",20,[[["string",3]],["partialvmerror",3]]],[11,"at_index","","",20,[[["indexkind",4]],["partialvmerror",3]]],[11,"at_indices","","",20,[[["vec",3]],["partialvmerror",3]]],[11,"at_code_offset","","",20,[[["functiondefinitionindex",3]],["partialvmerror",3]]],[11,"at_code_offsets","","",20,[[["vec",3]],["partialvmerror",3]]],[11,"append_message_with_separator","","Append the message `message` to the message field of the…",20,[[["string",3]],["partialvmerror",3]]]],"p":[[8,"DataStore"],[4,"NativeCostIndex"],[3,"CostStrategy"],[3,"StructType"],[4,"Type"],[4,"StatusCode"],[3,"NativeResult"],[8,"NativeContext"],[4,"IntegerValue"],[4,"GlobalValueEffect"],[3,"Value"],[8,"VMValueCast"],[3,"StructRef"],[3,"Reference"],[3,"Locals"],[3,"SignerRef"],[3,"VectorRef"],[3,"Vector"],[3,"Struct"],[3,"GlobalValue"],[3,"PartialVMError"]]},\
"netcore":{"doc":"Core types and traits for building Peer to Peer networks.","i":[[0,"framing","netcore","",null,null],[5,"read_u16frame","netcore::framing","Read a u16 length prefixed frame from `Stream` into `buf`.",null,[[["bytesmut",3]]]],[5,"write_u16frame","","Write the contents of `buf` to `stream` prefixed with a…",null,[[]]],[0,"transport","netcore","Low-level module for establishing connections with peers",null,null],[4,"ConnectionOrigin","netcore::transport","Origin of how a Connection was established.",null,null],[13,"Inbound","","`Inbound` indicates that we are the listener for this…",0,null],[13,"Outbound","","`Outbound` indicates that we are the dialer for this…",0,null],[0,"and_then","","",null,null],[3,"AndThen","netcore::transport::and_then","An [`AndThen`] is a transport which applies a closure (F)…",null,null],[3,"AndThenStream","","Listener stream returned by listen_on on an AndThen…",null,null],[3,"AndThenFuture","","Future generated by the [`AndThen`] transport.",null,null],[0,"boxed","netcore::transport","",null,null],[3,"BoxedTransport","netcore::transport::boxed","See the boxed method for more information.",null,null],[6,"Listener","","",null,null],[6,"Inbound","","",null,null],[6,"Outbound","","",null,null],[0,"memory","netcore::transport","",null,null],[3,"MemoryTransport","netcore::transport::memory","Transport to build in-memory connections",null,null],[3,"Listener","","",null,null],[11,"new","","",1,[[["memorylistener",3]]]],[0,"proxy_protocol","netcore::transport","An implementation of ProxyProtocol for…",null,null],[5,"read_header","netcore::transport::proxy_protocol","Read a proxy protocol event and unwrap the address…",null,[[["networkaddress",3]]]],[0,"tcp","netcore::transport","TCP Transport",null,null],[3,"TcpTransport","netcore::transport::tcp","Transport to build TCP connections",null,null],[12,"ttl","","TTL to set for opened sockets, or `None` to keep default.",2,null],[12,"nodelay","","`TCP_NODELAY` to set for opened sockets, or `None` to keep…",2,null],[3,"TcpListenerStream","","",null,null],[3,"TcpOutbound","","",null,null],[3,"TcpSocket","","A wrapper around a tokio TcpStream",null,null],[8,"Transport","netcore::transport","A Transport is responsible for establishing connections…",null,null],[16,"Output","","The result of establishing a connection.",3,null],[16,"Error","","The Error type of errors which can happen while…",3,null],[16,"Listener","","A stream of `Inbound` connections and the address of the…",3,null],[16,"Inbound","","A pending `Output` for an inbound connection, obtained…",3,null],[16,"Outbound","","A pending `Output` for an outbound connection, obtained…",3,null],[10,"listen_on","","Listens on the given [`NetworkAddress`], returning a…",3,[[["networkaddress",3]],["result",4]]],[10,"dial","","Dials the given [`NetworkAddress`], returning a future for…",3,[[["networkaddress",3],["peerid",3]],["result",4]]],[8,"TransportExt","","An extension trait for [`Transport`]s that provides a…",null,null],[11,"boxed","","Turns a [`Transport`] into an abstract boxed transport.",4,[[],["boxedtransport",3]]],[11,"and_then","","Applies a function producing an asynchronous result to…",4,[[],["andthen",3]]],[11,"as_str","","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","netcore::transport::and_then","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"try_poll_next","","",6,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","netcore::transport::boxed","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","netcore::transport::memory","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"try_poll_next","","",1,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","netcore::transport::tcp","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"try_poll_next","","",10,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_future","","",11,[[]]],[11,"try_poll","","",11,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"listen_on","netcore::transport::and_then","",5,[[["networkaddress",3]],["result",4]]],[11,"dial","","",5,[[["networkaddress",3],["peerid",3]],["result",4]]],[11,"listen_on","netcore::transport::boxed","",8,[[["networkaddress",3]],["result",4]]],[11,"dial","","",8,[[["networkaddress",3],["peerid",3]],["result",4]]],[11,"listen_on","netcore::transport::memory","",9,[[["networkaddress",3]],["result",4]]],[11,"dial","","",9,[[["networkaddress",3],["peerid",3]],["result",4]]],[11,"listen_on","netcore::transport::tcp","",2,[[["networkaddress",3]],["result",4]]],[11,"dial","","",2,[[["networkaddress",3],["peerid",3]],["result",4]]],[11,"clone","netcore::transport::memory","",9,[[],["memorytransport",3]]],[11,"clone","netcore::transport::tcp","",2,[[],["tcptransport",3]]],[11,"clone","netcore::transport","",0,[[],["connectionorigin",4]]],[11,"default","netcore::transport::memory","",9,[[],["memorytransport",3]]],[11,"default","netcore::transport::tcp","",2,[[],["tcptransport",3]]],[11,"eq","netcore::transport","",0,[[["connectionorigin",4]]]],[11,"fmt","netcore::transport::and_then","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","netcore::transport::memory","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","netcore::transport::tcp","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","netcore::transport","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"poll","netcore::transport::and_then","",7,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","netcore::transport::tcp","",11,[[["context",3],["pin",3]],["poll",4]]],[11,"serialize","netcore::transport","",0,[[],["result",4]]],[11,"poll_next","netcore::transport::and_then","",6,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","netcore::transport::memory","",1,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","netcore::transport::tcp","",10,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_read","","",12,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",12,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",12,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",12,[[["context",3],["pin",3]],[["result",6],["poll",4]]]]],"p":[[4,"ConnectionOrigin"],[3,"Listener"],[3,"TcpTransport"],[8,"Transport"],[8,"TransportExt"],[3,"AndThen"],[3,"AndThenStream"],[3,"AndThenFuture"],[3,"BoxedTransport"],[3,"MemoryTransport"],[3,"TcpListenerStream"],[3,"TcpOutbound"],[3,"TcpSocket"]]},\
"network":{"doc":"","i":[[0,"connectivity_manager","network","The ConnectivityManager actor is responsible for ensuring…",null,null],[3,"ConnectivityManager","network::connectivity_manager","The ConnectivityManager actor.",null,null],[4,"DiscoverySource","","Different sources for peer addresses, ordered by priority…",null,null],[13,"OnChain","","",0,null],[13,"Config","","",0,null],[4,"ConnectivityRequest","","Requests received by the [`ConnectivityManager`] manager…",null,null],[13,"UpdateAddresses","","Request to update known addresses of peer with id `PeerId`…",1,null],[13,"UpdateEligibleNodes","","Update set of nodes eligible to join the network.",1,null],[13,"GetConnectedSize","","Gets current size of connected peers. This is useful in…",1,null],[13,"GetDialQueueSize","","Gets current size of dial queue. This is useful in tests.",1,null],[0,"builder","","",null,null],[3,"ConnectivityManagerBuilder","network::connectivity_manager::builder","",null,null],[6,"ConnectivityManagerService","","",null,null],[11,"create","","",2,[[["arc",3],["rwlock",3],["hashmap",3],["peerid",3],["arc",3],["hashset",3],["vec",3],["hashmap",3],["connectionrequestsender",3],["networkcontext",3],["receiver",6],["option",4]]]],[11,"conn_mgr_reqs_tx","","",2,[[],[["connectivityrequest",4],["sender",3]]]],[11,"build","","",2,[[["handle",3]]]],[11,"start","","",2,[[["handle",3]]]],[18,"NUM_VARIANTS","network::connectivity_manager","The number of variants in this enum.",0,null],[11,"new","","Creates a new instance of the [`ConnectivityManager`] actor.",3,[[["connectivityrequest",4],["option",4],["arc",3],["rwlock",3],["hashmap",3],["peerid",3],["arc",3],["hashset",3],["vec",3],["hashmap",3],["connectionrequestsender",3],["networkcontext",3],["receiver",6],["receiver",3]]]],[11,"start","","Starts the [`ConnectivityManager`] actor.",3,[[]]],[0,"constants","network","",null,null],[17,"INBOUND_RPC_TIMEOUT_MS","network::constants","A collection of constants and default values for…",null,null],[17,"MAX_CONCURRENT_OUTBOUND_RPCS","","Limit on concurrent Outbound RPC requests before…",null,null],[17,"MAX_CONCURRENT_INBOUND_RPCS","","Limit on concurrent Inbound RPC requests before…",null,null],[17,"NETWORK_CHANNEL_SIZE","","",null,null],[17,"MAX_FRAME_SIZE","","",null,null],[17,"MAX_CONCURRENT_NETWORK_REQS","","",null,null],[17,"MAX_CONCURRENT_NETWORK_NOTIFS","","",null,null],[0,"counters","network","",null,null],[5,"connections","network::counters","",null,[[["networkcontext",3],["connectionorigin",4]],["intgauge",6]]],[5,"peer_connected","","",null,[[["networkcontext",3],["peerid",3]]]],[5,"inc_by_with_context","","Increments the counter based on `NetworkContext`",null,[[["networkcontext",3],["intcountervec",6]]]],[5,"pending_connection_upgrades","","",null,[[["networkcontext",3],["connectionorigin",4]],["intgauge",6]]],[5,"connection_upgrade_time","","",null,[[["networkcontext",3],["connectionorigin",4]],["histogram",3]]],[5,"rpc_messages","","",null,[[["networkcontext",3]],["intcounter",6]]],[5,"rpc_bytes","","",null,[[["networkcontext",3]],["intcounter",6]]],[5,"outbound_rpc_request_latency","","",null,[[["networkcontext",3],["protocolid",4]],["histogram",3]]],[5,"inbound_rpc_handler_latency","","",null,[[["networkcontext",3],["protocolid",4]],["histogram",3]]],[5,"direct_send_messages","","",null,[[["networkcontext",3]],["intcounter",6]]],[5,"direct_send_bytes","","",null,[[["networkcontext",3]],["intcounter",6]]],[7,"DIEM_NETWORK_PEERS","","",null,null],[7,"DIEM_CONNECTIONS","","",null,null],[7,"DIEM_NETWORK_PEER_CONNECTED","","",null,null],[7,"DIEM_NETWORK_PENDING_CONNECTION_UPGRADES","","",null,null],[7,"DIEM_NETWORK_CONNECTION_UPGRADE_TIME","","",null,null],[7,"DIEM_NETWORK_DISCOVERY_NOTES","","",null,null],[7,"DIEM_NETWORK_RPC_MESSAGES","","",null,null],[7,"DIEM_NETWORK_RPC_BYTES","","",null,null],[7,"INVALID_NETWORK_MESSAGES","","",null,null],[7,"PEER_SEND_FAILURES","","",null,null],[7,"DIEM_NETWORK_OUTBOUND_RPC_REQUEST_LATENCY","","",null,null],[7,"DIEM_NETWORK_INBOUND_RPC_HANDLER_LATENCY","","",null,null],[7,"DIEM_NETWORK_DIRECT_SEND_MESSAGES","","",null,null],[7,"DIEM_NETWORK_DIRECT_SEND_BYTES","","",null,null],[7,"PENDING_NETWORK_NOTIFICATIONS","","Counters(queued,dequeued,dropped) related to inbound…",null,null],[7,"PENDING_NETWORK_REQUESTS","","Counter of pending requests in Network Provider",null,null],[7,"PENDING_HEALTH_CHECKER_NETWORK_EVENTS","","Counter of pending network events to Health Checker.",null,null],[7,"PENDING_DISCOVERY_NETWORK_EVENTS","","Counter of pending network events to Discovery.",null,null],[7,"PENDING_PEER_MANAGER_REQUESTS","","Counter of pending requests in Peer Manager",null,null],[7,"PENDING_CONNECTIVITY_MANAGER_REQUESTS","","Channel Counters",null,null],[7,"PENDING_CONNECTION_HANDLER_NOTIFICATIONS","","Counter of pending Connection Handler notifications to…",null,null],[7,"PENDING_PEER_MANAGER_DIAL_REQUESTS","","Counter of pending dial requests in Peer Manager",null,null],[7,"PENDING_WIRE_MESSAGES","","Counter of messages pending in queue to be sent out on the…",null,null],[7,"PENDING_DIRECT_SEND_REQUESTS","","Counter of pending requests in Direct Send",null,null],[7,"PENDING_DIRECT_SEND_NOTIFICATIONS","","Counter of pending Direct Send notifications to Network…",null,null],[7,"PENDING_RPC_REQUESTS","","Counter of pending requests in RPC",null,null],[7,"PENDING_RPC_NOTIFICATIONS","","Counter of pending RPC notifications to Network Provider",null,null],[7,"PENDING_PEER_REQUESTS","","Counter of pending requests for each remote peer",null,null],[7,"PENDING_PEER_RPC_NOTIFICATIONS","","Counter of pending RPC events from Peer to Rpc actor.",null,null],[7,"PENDING_PEER_DIRECT_SEND_NOTIFICATIONS","","Counter of pending DirectSend events from Peer to…",null,null],[7,"PENDING_PEER_NETWORK_NOTIFICATIONS","","Counter of pending connection notifications from Peer to…",null,null],[7,"NETWORK_RATE_LIMIT_METRICS","","",null,null],[17,"REQUEST_LABEL","","",null,null],[17,"RESPONSE_LABEL","","",null,null],[17,"CANCELED_LABEL","","",null,null],[17,"DECLINED_LABEL","","",null,null],[17,"RECEIVED_LABEL","","",null,null],[17,"SENT_LABEL","","",null,null],[17,"SUCCEEDED_LABEL","","",null,null],[17,"FAILED_LABEL","","",null,null],[0,"error","network","",null,null],[3,"NetworkError","network::error","Errors propagated from the network module.",null,null],[4,"NetworkErrorKind","","",null,null],[13,"IoError","","",4,null],[13,"BcsError","","",4,null],[13,"PeerManagerError","","",4,null],[13,"NotConnected","","",4,null],[0,"logging","network","This module is to contain all networking logging…",null,null],[3,"NetworkSchema","network::logging","",null,null],[11,"connection_id","","",5,[[["connectionid",3]]]],[11,"connection_origin","","",5,[[["connectionorigin",4]]]],[11,"discovery_source","","",5,[[["discoverysource",4]]]],[11,"network_address","","",5,[[["networkaddress",3]]]],[11,"network_context","","",5,[[["networkcontext",3]]]],[11,"remote_peer","","",5,[[["peerid",3]]]],[11,"new","","",5,[[["networkcontext",3]]]],[11,"connection_metadata","","",5,[[["connectionmetadata",3]]]],[11,"connection_metadata_with_address","","",5,[[["connectionmetadata",3]]]],[0,"noise","network","This crate implements wrappers around our Noise…",null,null],[0,"error","network::noise","",null,null],[4,"NoiseHandshakeError","network::noise::error","Different errors than can be raised when negotiating a…",null,null],[13,"MissingServerPublicKey","","",6,null],[13,"BuildClientHandshakeMessageFailed","","",6,null],[13,"ClientWriteFailed","","",6,null],[13,"ClientReadFailed","","",6,null],[13,"ClientFlushFailed","","",6,null],[13,"ClientFinalizeFailed","","",6,null],[13,"ServerReadFailed","","",6,null],[13,"InvalidClientPeerId","","",6,null],[13,"SelfDialDetected","","",6,null],[13,"ClientExpectingDifferentPubkey","","",6,null],[13,"ServerParseClient","","",6,null],[13,"UnauthenticatedClientPubkey","","",6,null],[13,"UnauthenticatedClient","","",6,null],[13,"ClientPeerIdMismatch","","",6,null],[13,"MissingAntiReplayTimestamp","","",6,null],[13,"ServerReplayDetected","","",6,null],[13,"BuildServerHandshakeMessageFailed","","",6,null],[13,"ServerWriteFailed","","",6,null],[11,"should_security_log","","Errors that are either clear bugs or indicate some…",6,[[]]],[0,"handshake","network::noise","The handshake module implements the handshake part of the…",null,null],[3,"AntiReplayTimestamps","network::noise::handshake","In a mutually authenticated network, a client message is…",null,null],[3,"NoiseUpgrader","","The Noise configuration to be used to perform a protocol…",null,null],[12,"network_context","","The validator\'s network context",7,null],[4,"HandshakeAuthMode","","Noise handshake authentication mode.",null,null],[13,"Mutual","","In `Mutual` mode, both sides will authenticate each other…",8,null],[12,"anti_replay_timestamps","network::noise::handshake::HandshakeAuthMode","",9,null],[12,"trusted_peers","","",9,null],[13,"MaybeMutual","network::noise::handshake","In `MaybeMutual` mode, the dialer authenticates the server…",8,null],[18,"TIMESTAMP_SIZE","","The timestamp is sent as a payload, so that it is…",10,null],[11,"now","","obtain the current timestamp",10,[[]]],[11,"is_replay","","Returns true if the timestamp has already been observed…",10,[[["publickey",3]]]],[11,"store_timestamp","","Stores the timestamp",10,[[["publickey",3]]]],[11,"mutual","","",8,[[["arc",3],["rwlock",3]]]],[11,"maybe_mutual","","",8,[[["arc",3],["rwlock",3]]]],[11,"server_only","","",8,[[]]],[11,"new","","Create a new NoiseConfig with the provided keypair and…",7,[[["handshakeauthmode",4],["networkcontext",3],["arc",3],["privatekey",3]]]],[11,"upgrade_with_noise","","Perform a protocol upgrade on an underlying connection. In…",7,[[["option",4],["connectionorigin",4],["publickey",3]]]],[11,"upgrade_outbound","","Perform an outbound protocol upgrade on this connection.",7,[[["publickey",3]]]],[11,"upgrade_inbound","","Perform an inbound protocol upgrade on this connection.",7,[[]]],[0,"stream","network::noise","The socket module implements the post-handshake part of…",null,null],[3,"NoiseStream","network::noise::stream","A Noise stream with a remote peer.",null,null],[11,"new","","Create a NoiseStream from a socket and a noise…",11,[[["noisesession",3]]]],[11,"get_remote_static","","Pull out the static public key of the remote",11,[[],["publickey",3]]],[0,"fuzzing","network::noise","",null,null],[5,"generate_corpus","network::noise::fuzzing","",null,[[["valuegenerator",3]],["vec",3]]],[5,"fuzz_initiator","","Fuzz a client during the handshake",null,[[]]],[5,"fuzz_responder","","Fuzz a server during the handshake",null,[[]]],[5,"fuzz_post_handshake","","Fuzz a peer post-handshake",null,[[]]],[7,"KEYPAIRS","","",null,null],[0,"peer","network","[`Peer`] manages a single connection to a remote peer…",null,null],[3,"Peer","network::peer","The `Peer` actor manages a single connection to another…",null,null],[4,"PeerRequest","","Requests [`Peer`] receives from the `PeerManager`.",null,null],[13,"SendRpc","","Send an RPC request to peer.",12,null],[13,"SendDirectSend","","Fire-and-forget style message send to peer.",12,null],[4,"PeerNotification","","Notifications that [`Peer`] sends to the `PeerManager`.",null,null],[13,"RecvRpc","","A new RPC request has been received from peer.",13,null],[13,"RecvMessage","","A new message has been received from peer.",13,null],[4,"DisconnectReason","","The reason for closing a connection.",null,null],[13,"Requested","","",14,null],[13,"ConnectionLost","","",14,null],[0,"fuzzing","","",null,null],[5,"generate_corpus","network::peer::fuzzing","Generate a sequence of `NetworkMessage`, bcs serialize…",null,[[["valuegenerator",3]],["vec",3]]],[5,"fuzz","","Fuzz the `Peer` actor\'s inbound message handling.",null,[[]]],[11,"new","network::peer","",15,[[["sender",3],["transportnotification",4],["sender",3],["duration",3],["arc",3],["receiver",3],["peerrequest",4],["sharedbucket",6],["handle",3],["connection",3],["protocolid",6],["option",4],["networkcontext",3],["peernotification",4]]]],[11,"start","","",15,[[]]],[0,"peer_manager","network","The PeerManager module is responsible for establishing…",null,null],[3,"PeerManagerRequestSender","network::peer_manager","Convenience wrapper which makes it easy to issue…",null,null],[3,"ConnectionRequestSender","","Convenience wrapper which makes it easy to issue…",null,null],[3,"PeerManager","","Responsible for handling and maintaining connections to…",null,null],[4,"PeerManagerError","","",null,null],[13,"Error","","",16,null],[13,"IoError","","",16,null],[13,"TransportError","","",16,null],[13,"ShuttingDownPeer","","",16,null],[13,"NotConnected","","",16,null],[13,"AlreadyConnected","","",16,null],[13,"OneshotSenderDropped","","",16,null],[13,"MpscSendError","","",16,null],[13,"BcsError","","",16,null],[13,"WireReadError","","",16,null],[13,"WireWriteError","","",16,null],[4,"PeerManagerRequest","","Request received by PeerManager from upstream actors.",null,null],[13,"SendRpc","","Send an RPC request to a remote peer.",17,null],[13,"SendDirectSend","","Fire-and-forget style message send to a remote peer.",17,null],[4,"PeerManagerNotification","","Notifications sent by PeerManager to upstream actors.",null,null],[13,"RecvRpc","","A new RPC request has been received from a remote peer.",18,null],[13,"RecvMessage","","A new message has been received from a remote peer.",18,null],[4,"ConnectionRequest","","",null,null],[13,"DialPeer","","",19,null],[13,"DisconnectPeer","","",19,null],[4,"ConnectionNotification","","",null,null],[13,"NewPeer","","Connection with a new peer has been established.",20,null],[13,"LostPeer","","Connection to a peer has been terminated. This could have…",20,null],[4,"TransportNotification","","",null,null],[13,"NewConnection","","",21,null],[13,"Disconnected","","",21,null],[0,"builder","","",null,null],[3,"PeerManagerBuilder","network::peer_manager::builder","",null,null],[4,"AuthenticationMode","","",null,null],[13,"ServerOnly","","Inbound and outbound connections are secured with NoiseIK;…",22,null],[13,"Mutual","","Inbound and outbound connections are secured with NoiseIK.…",22,null],[11,"create","","",23,[[["arc",3],["rwlock",3],["authenticationmode",4],["arc",3],["networkaddress",3],["option",4],["chainid",3],["networkcontext",3],["ratelimitconfig",3]]]],[11,"listen_address","","",23,[[],["networkaddress",3]]],[11,"connection_reqs_tx","","",23,[[],[["connectionrequest",4],["peerid",3],["sender",3]]]],[11,"add_connection_event_listener","","",23,[[],["receiver",6]]],[11,"build","","Create the configured transport and start PeerManager.…",23,[[["handle",3]]]],[11,"start","","",23,[[["handle",3]]]],[11,"add_protocol_handler","","Add a handler for given protocols using raw bytes.",23,[[["protocolid",6],["intcountervec",6],["vec",3],["queuestyle",4],["option",4]]]],[0,"conn_notifs_channel","network::peer_manager","`conn_notifs_channel` is a channel which delivers to the…",null,null],[5,"new","network::peer_manager::conn_notifs_channel","",null,[[]]],[6,"Sender","","",null,null],[6,"Receiver","","",null,null],[11,"from_transport_error","network::peer_manager","",16,[[["error",3],["into",8]]]],[6,"IpAddrTokenBucketLimiter","","",null,null],[11,"new","","Construct a new PeerManagerRequestSender with a raw…",24,[[["peermanagerrequest",4],["sender",3]]]],[11,"send_to","","Send a fire-and-forget direct-send message to remote peer.",24,[[["bytes",3],["peerid",3],["protocolid",6]],[["result",4],["peermanagererror",4]]]],[11,"send_to_many","","Send the same message to many recipients using the…",24,[[["protocolid",6],["bytes",3]],[["result",4],["peermanagererror",4]]]],[11,"send_rpc","","Sends a unary RPC to a remote peer and waits to either…",24,[[["protocolid",6],["duration",3],["peerid",3],["bytes",3]]]],[11,"new","","Construct a new ConnectionRequestSender with a raw…",25,[[["sender",3],["connectionrequest",4],["peerid",3]]]],[11,"dial_peer","","",25,[[["peerid",3],["networkaddress",3]]]],[11,"disconnect_peer","","",25,[[["peerid",3]]]],[11,"new","","Construct a new PeerManager actor",26,[[["arc",3],["networkaddress",3],["vec",3],["peermanagerrequest",4],["receiver",3],["hashmap",3],["sender",3],["sender",6],["receiver",3],["peerid",3],["handle",3],["connectionrequest",4],["protocolid",6],["ipaddrtokenbucketlimiter",6],["networkcontext",3]]]],[11,"update_connected_peers_metrics","","",26,[[]]],[11,"listen_addr","","Get the [`NetworkAddress`] we\'re listening for incoming…",26,[[],["networkaddress",3]]],[11,"start","","Start listening on the set address and return a future…",26,[[]]],[0,"protocols","network","Protocols used by network module for external APIs and…",null,null],[0,"direct_send","network::protocols","",null,null],[3,"Message","network::protocols::direct_send","",null,null],[12,"protocol_id","","Message type.",27,null],[12,"mdata","","Serialized message data.",27,null],[0,"network","network::protocols","Convenience Network API for Diem",null,null],[3,"NetworkEvents","network::protocols::network","A `Stream` of `Event<TMessage>` from the lower network…",null,null],[3,"NetworkSender","","`NetworkSender` is the generic interface from upper…",null,null],[4,"Event","","Events received by network clients in a validator",null,null],[13,"Message","","New inbound direct-send message from peer.",28,null],[13,"RpcRequest","","New inbound rpc request. The request is fulfilled by…",28,null],[13,"NewPeer","","Peer which we have a newly established connection with.",28,null],[13,"LostPeer","","Peer with which we\'ve lost our connection.",28,null],[8,"Message","","",null,null],[8,"NewNetworkEvents","","Trait specifying the signature for `new()` `NetworkEvents`",null,null],[10,"new","","",29,[[["receiver",3],["peermanagernotification",4],["connectionnotification",4],["receiver",3],["peerid",3]]]],[8,"NewNetworkSender","","Trait specifying the signature for `new()` `NetworkSender`s",null,null],[10,"new","","",30,[[["peermanagerrequestsender",3],["connectionrequestsender",3]]]],[11,"dial_peer","","Request that a given Peer be dialed at the provided…",31,[[["peerid",3],["networkaddress",3]]]],[11,"disconnect_peer","","Request that a given Peer be disconnected and…",31,[[["peerid",3]]]],[11,"send_to","","Send a protobuf message to a single recipient. Provides a…",31,[[["peerid",3],["protocolid",6]],[["networkerror",3],["result",4]]]],[11,"send_to_many","","Send a protobuf message to a many recipients. Provides a…",31,[[["protocolid",6]],[["networkerror",3],["result",4]]]],[11,"send_rpc","","Send a protobuf rpc request to a single recipient while…",31,[[["duration",3],["peerid",3],["protocolid",6]]]],[0,"rpc","network::protocols","Implementation of the unary RPC protocol as per DiemNet…",null,null],[3,"InboundRpcRequest","network::protocols::rpc","A wrapper struct for an inbound rpc request and its…",null,null],[12,"protocol_id","","The [`ProtocolId`] for which of our upstream application…",32,null],[12,"data","","The serialized request data received from the sender. At…",32,null],[12,"res_tx","","Channel over which the rpc response is sent from the upper…",32,null],[3,"OutboundRpcRequest","","A wrapper struct for an outbound rpc request and its…",null,null],[12,"protocol_id","","The remote peer\'s application module that should handle…",33,null],[12,"data","","The serialized request data to be sent to the receiver. At…",33,null],[12,"res_tx","","Channel over which the rpc response is sent from the rpc…",33,null],[12,"timeout","","The timeout duration for the entire rpc call. If the…",33,null],[3,"InboundRpcs","","`InboundRpcs` handles new inbound rpc requests off the…",null,null],[3,"OutboundRpcs","","`OutboundRpcs` handles new outbound rpc requests made from…",null,null],[0,"error","","Rpc protocol errors",null,null],[4,"RpcError","network::protocols::rpc::error","",null,null],[13,"Error","","",34,null],[13,"IoError","","",34,null],[13,"BcsError","","",34,null],[13,"NotConnected","","",34,null],[13,"InvalidRpcResponse","","",34,null],[13,"UnexpectedRpcResponse","","",34,null],[13,"UnexpectedRpcRequest","","",34,null],[13,"UnexpectedResponseChannelCancel","","",34,null],[13,"ApplicationError","","",34,null],[13,"MpscSendError","","",34,null],[13,"TooManyPending","","",34,null],[13,"TimedOut","","",34,null],[11,"new","network::protocols::rpc","",35,[[["duration",3],["networkcontext",3],["arc",3],["peerid",3]]]],[11,"handle_inbound_request","","Handle a new inbound `RpcRequest` message off the wire.",35,[[["rpcrequest",3],["sender",3]],[["rpcerror",4],["result",4]]]],[11,"next_completed_response","","Method for `Peer` actor to drive the pending inbound rpc…",35,[[]]],[11,"send_outbound_response","","Handle a completed response from the application handler.…",35,[[["sender",3],["rpcerror",4],["result",4],["rpcresponse",3]]]],[11,"new","","",36,[[["networkcontext",3],["arc",3],["peerid",3]]]],[11,"handle_outbound_request","","Handle a new outbound rpc request from the application…",36,[[["sender",3],["outboundrpcrequest",3]]]],[11,"next_completed_request","","Method for `Peer` actor to drive the pending outbound rpc…",36,[[]]],[11,"handle_completed_request","","Handle a newly completed task from the…",36,[[["result",4],["requestid",6],["rpcerror",4]]]],[11,"handle_inbound_response","","Handle a new inbound `RpcResponse` message. If we have a…",36,[[["rpcresponse",3]]]],[0,"health_checker","network::protocols","Protocol used to ensure peer liveness",null,null],[3,"HealthCheckerNetworkSender","network::protocols::health_checker","The interface from HealthChecker to Networking layer.",null,null],[3,"Ping","","",null,null],[3,"Pong","","",null,null],[3,"HealthChecker","","The actor performing health checks by running the Ping…",null,null],[4,"HealthCheckerMsg","","",null,null],[13,"Ping","","",37,null],[13,"Pong","","",37,null],[5,"network_endpoint_config","","Configuration for the network endpoints to support…",null,[[]]],[0,"builder","","",null,null],[3,"HealthCheckerBuilder","network::protocols::health_checker::builder","",null,null],[6,"HealthCheckerService","","",null,null],[11,"create","","",38,[[["healthcheckernetworksender",3],["networkcontext",3],["arc",3],["healthcheckernetworkevents",6]]]],[11,"build","","",38,[[["handle",3]]]],[11,"start","","",38,[[["handle",3]]]],[6,"HealthCheckerNetworkEvents","network::protocols::health_checker","The interface from Network to HealthChecker layer.",null,null],[11,"send_rpc","","Send a HealthChecker Ping RPC request to remote peer…",39,[[["duration",3],["peerid",3],["healthcheckermsg",4]]]],[11,"disconnect_peer","","",39,[[["peerid",3]]]],[11,"new","","Create new instance of the [`HealthChecker`] actor.",40,[[["healthcheckernetworksender",3],["duration",3],["networkcontext",3],["arc",3],["healthcheckernetworkevents",6]]]],[11,"start","","",40,[[]]],[0,"identity","network::protocols","Protocol used to exchange supported protocol information…",null,null],[5,"exchange_handshake","network::protocols::identity","The Handshake exchange protocol.",null,[[["handshakemsg",3]]]],[0,"wire","network::protocols","This module defines the structs transported during the…",null,null],[0,"handshake","network::protocols::wire","",null,null],[0,"v1","network::protocols::wire::handshake","This module defines the structs transported during the…",null,null],[3,"SupportedProtocols","network::protocols::wire::handshake::v1","A bit vector of supported [`ProtocolId`]s.",null,null],[3,"HandshakeMsg","","The HandshakeMsg contains a mapping from…",null,null],[12,"supported_protocols","","",41,null],[12,"chain_id","","",41,null],[12,"network_id","","",41,null],[4,"ProtocolId","","Unique identifier associated with each application protocol.",null,null],[13,"ConsensusRpc","","",42,null],[13,"ConsensusDirectSend","","",42,null],[13,"MempoolDirectSend","","",42,null],[13,"StateSyncDirectSend","","",42,null],[13,"DiscoveryDirectSend","","",42,null],[13,"HealthCheckerRpc","","",42,null],[4,"MessagingProtocolVersion","","Enum representing different versions of the Diem network…",null,null],[13,"V1","","",43,null],[4,"HandshakeError","","An enum to list the possible errors during the diem…",null,null],[13,"InvalidChainId","","",44,null],[13,"InvalidNetworkId","","",44,null],[13,"NoCommonProtocols","","",44,null],[11,"as_str","","",42,[[]]],[11,"perform_handshake","","This function:",41,[[["handshakemsg",3]],[["result",4],["handshakeerror",4]]]],[0,"messaging","network::protocols::wire","",null,null],[0,"v1","network::protocols::wire::messaging","This module defines the DiemNet v1 message types, how they…",null,null],[3,"ParsingErrorType","network::protocols::wire::messaging::v1","Flags an invalid network message with as much header…",null,null],[3,"RpcRequest","","",null,null],[12,"protocol_id","","`protocol_id` is a variant of the ProtocolId enum.",45,null],[12,"request_id","","RequestId for the RPC Request.",45,null],[12,"priority","","Request priority in the range 0..=255.",45,null],[12,"raw_request","","Request payload. This will be parsed by the…",45,null],[3,"RpcResponse","","",null,null],[12,"request_id","","RequestId for corresponding request. This is copied as is…",46,null],[12,"priority","","Response priority in the range 0..=255. This will likely…",46,null],[12,"raw_response","","Response payload.",46,null],[3,"DirectSendMsg","","",null,null],[12,"protocol_id","","`protocol_id` is a variant of the ProtocolId enum.",47,null],[12,"priority","","Message priority in the range 0..=255.",47,null],[12,"raw_msg","","Message payload.",47,null],[3,"NetworkMessageStream","","A `Stream` of inbound `NetworkMessage`s read and…",null,null],[3,"NetworkMessageSink","","A `Sink` of outbound `NetworkMessage`s that will be…",null,null],[4,"NetworkMessage","","Most primitive message type set on the network.",null,null],[13,"Error","","",48,null],[13,"RpcRequest","","",48,null],[13,"RpcResponse","","",48,null],[13,"DirectSendMsg","","",48,null],[4,"ErrorCode","","",null,null],[13,"ParsingError","","Failed to parse NetworkMessage when interpreting according…",49,null],[13,"NotSupported","","A message was received for a protocol that is not…",49,null],[4,"NotSupportedType","","Flags an unsupported network message. This is a message…",null,null],[13,"RpcRequest","","",50,null],[13,"DirectSendMsg","","",50,null],[4,"ReadError","","Errors from reading and deserializing network messages off…",null,null],[13,"DeserializeError","","",51,null],[13,"IoError","","",51,null],[4,"WriteError","","Errors from serializing and sending network messages on…",null,null],[13,"SerializeError","","",52,null],[13,"IoError","","",52,null],[5,"network_message_frame_codec","","Returns a fully configured length-delimited codec for…",null,[[],["lengthdelimitedcodec",3]]],[6,"RequestId","","Create alias RequestId for u32.",null,null],[6,"Priority","","Create alias Priority for u8.",null,null],[11,"parsing_error","","",49,[[]]],[11,"new","","",53,[[["option",4],["sharedbucket",6]]]],[11,"new","","",54,[[["option",4],["sharedbucket",6]]]],[0,"transport","network","",null,null],[3,"ConnectionId","network::transport","Unique local identifier for a connection.",null,null],[3,"ConnectionMetadata","","Metadata associated with an established and fully upgraded…",null,null],[12,"remote_peer_id","","",55,null],[12,"connection_id","","",55,null],[12,"addr","","",55,null],[12,"origin","","",55,null],[12,"messaging_protocol","","",55,null],[12,"application_protocols","","",55,null],[12,"trust_level","","",55,null],[3,"Connection","","The `Connection` struct consists of connection metadata…",null,null],[12,"socket","","",56,null],[12,"metadata","","",56,null],[3,"DiemNetTransport","","The common DiemNet Transport.",null,null],[4,"TrustLevel","","Used to indicate the trust level of a Connection",null,null],[13,"Trusted","","Either we dialed the peer or it was in our trusted peers set",57,null],[13,"Untrusted","","A peer that isn\'t in our trusted peers set",57,null],[17,"TRANSPORT_TIMEOUT","","A timeout for the connection to open and complete all of…",null,null],[17,"SUPPORTED_MESSAGING_PROTOCOL","","Currently supported messaging protocol version. TODO: Add…",null,null],[17,"DIEM_TCP_TRANSPORT","","tcp::Transport with Diem-specific configuration applied.",null,null],[8,"TSocket","","A trait alias for \\\"socket-like\\\" things.",null,null],[11,"new","","",55,[[["connectionid",3],["connectionorigin",4],["messagingprotocolversion",4],["supportedprotocols",3],["trustlevel",4],["peerid",3],["networkaddress",3]],["connectionmetadata",3]]],[11,"mock","","",55,[[["peerid",3]],["connectionmetadata",3]]],[11,"new","","",58,[[["handshakeauthmode",4],["supportedprotocols",3],["chainid",3],["networkcontext",3],["arc",3],["privatekey",3]]]],[11,"dial","","Dial a peer at `addr`. If the `addr` is not supported or…",58,[[["peerid",3],["networkaddress",3]],["result",6]]],[11,"listen_on","","Listen on address `addr`. If the `addr` is not supported…",58,[[["networkaddress",3]],["result",6]]],[0,"fuzzing","network","",null,null],[5,"fuzz_network_handshake_protocol_exchange","network::fuzzing","Fuzzing the handshake protocol, which negotiates protocols…",null,[[["handshakemsg",3],["vec",3]]]],[5,"fuzz_network_handshake_protocol_negotiation","","Same function as fuzz_network_handshake_protocol_exchange…",null,[[["handshakemsg",3]]]],[5,"exchange_handshake_input","","Builds two HandshakeMsg and serializes the second one. It…",null,[[]]],[5,"perform_handshake_input","","Builds two HandshakeMsg and serializes the second one. It…",null,[[]]],[0,"testutils","network","",null,null],[0,"fake_socket","network::testutils","This module exposes two types of sockets useful for tests:",null,null],[3,"ReadOnlyTestSocket","network::testutils::fake_socket","",null,null],[3,"ReadOnlyTestSocketVec","","",null,null],[3,"ReadWriteTestSocket","","",null,null],[11,"new","","",59,[[]]],[11,"set_fragmented_read","","reads will be done byte-by-byte",59,[[]]],[11,"set_trailing","","reads will never return pending, but 0s",59,[[]]],[11,"new","","",60,[[["vec",3]]]],[11,"set_fragmented_read","","reads will be done byte-by-byte",60,[[]]],[11,"set_trailing","","reads will never return pending, but 0s",60,[[]]],[11,"save_writing","","the vec passed as argument will expand to store any writes…",61,[[["vec",3]]]],[11,"set_fragmented_read","","reads will be done byte-by-byte",61,[[]]],[11,"set_fragmented_write","","writes will be done byte-by-byte",61,[[]]],[11,"new_pair","","Creates a new pair of sockets",61,[[]]],[6,"DisconnectReason","network","",null,null],[6,"ConnectivityRequest","","",null,null],[6,"ProtocolId","","",null,null],[11,"from","network::connectivity_manager","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","network::connectivity_manager::builder","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","network::error","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"from","network::logging","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","network::noise::error","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","network::noise::handshake","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","network::noise::stream","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","network::peer","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"equivalent","","",14,[[]]],[11,"erased_serialize","","",14,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","network::peer_manager","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"test_only_hash","","",17,[[],["hashvalue",3]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"erased_serialize","","",17,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"test_only_hash","","",19,[[],["hashvalue",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"erased_serialize","","",19,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"test_only_hash","","",20,[[],["hashvalue",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"erased_serialize","","",20,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"test_only_hash","","",21,[[],["hashvalue",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"erased_serialize","","",21,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","network::peer_manager::builder","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","network::protocols::direct_send","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"test_only_hash","","",27,[[],["hashvalue",3]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"equivalent","","",27,[[]]],[11,"erased_serialize","","",27,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","network::protocols::network","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","network::protocols::rpc","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"test_only_hash","","",33,[[],["hashvalue",3]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"erased_serialize","","",33,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","network::protocols::rpc::error","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","network::protocols::health_checker","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"test_only_hash","","",64,[[],["hashvalue",3]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"erased_serialize","","",64,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"test_only_hash","","",65,[[],["hashvalue",3]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"erased_serialize","","",65,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"test_only_hash","","",37,[[],["hashvalue",3]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"erased_serialize","","",37,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","network::protocols::health_checker::builder","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","network::protocols::wire::handshake::v1","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"test_only_hash","","",66,[[],["hashvalue",3]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"erased_serialize","","",66,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"test_only_hash","","",41,[[],["hashvalue",3]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"erased_serialize","","",41,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"test_only_hash","","",42,[[],["hashvalue",3]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"equivalent","","",42,[[]]],[11,"erased_serialize","","",42,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"test_only_hash","","",43,[[],["hashvalue",3]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"equivalent","","",43,[[]]],[11,"erased_serialize","","",43,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","network::protocols::wire::messaging::v1","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"test_only_hash","","",67,[[],["hashvalue",3]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"erased_serialize","","",67,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"test_only_hash","","",45,[[],["hashvalue",3]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"erased_serialize","","",45,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"test_only_hash","","",46,[[],["hashvalue",3]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"erased_serialize","","",46,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"test_only_hash","","",47,[[],["hashvalue",3]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"erased_serialize","","",47,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"try_poll_next","","",53,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"test_only_hash","","",48,[[],["hashvalue",3]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"erased_serialize","","",48,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"test_only_hash","","",49,[[],["hashvalue",3]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"erased_serialize","","",49,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"test_only_hash","","",50,[[],["hashvalue",3]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"erased_serialize","","",50,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","network::transport","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"test_only_hash","","",68,[[],["hashvalue",3]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"equivalent","","",68,[[]]],[11,"erased_serialize","","",68,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"test_only_hash","","",55,[[],["hashvalue",3]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"erased_serialize","","",55,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"test_only_hash","","",57,[[],["hashvalue",3]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"erased_serialize","","",57,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","network::testutils::fake_socket","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"new","network::protocols::network","",63,[[["receiver",3],["peermanagernotification",4],["connectionnotification",4],["receiver",3],["peerid",3]]]],[11,"new","","",31,[[["peermanagerrequestsender",3],["connectionrequestsender",3]]]],[11,"new","network::protocols::health_checker","",39,[[["peermanagerrequestsender",3],["connectionrequestsender",3]]]],[11,"from","network::error","",62,[[["networkerrorkind",4]],["networkerror",3]]],[11,"from","","",62,[[["error",3]],["networkerror",3]]],[11,"from","","",62,[[["error",3]],["networkerror",3]]],[11,"from","","",62,[[["error",4]],["networkerror",3]]],[11,"from","","",62,[[["peermanagererror",4]],["networkerror",3]]],[11,"from","network::peer_manager","",16,[[["error",3]]]],[11,"from","","",16,[[["error",3]]]],[11,"from","","",16,[[["readerror",4]]]],[11,"from","","",16,[[["writeerror",4]]]],[11,"from","","",16,[[["canceled",3]]]],[11,"from","","",16,[[["error",4]]]],[11,"from","","",16,[[["senderror",3]]]],[11,"from","network::protocols::rpc::error","",34,[[["error",3]]]],[11,"from","","",34,[[["error",3]]]],[11,"from","","",34,[[["error",4]]]],[11,"from","","",34,[[["senderror",3]]]],[11,"from","","",34,[[["peermanagererror",4]]]],[11,"from","","",34,[[["canceled",3]]]],[11,"from","","",34,[[["elapsed",3]],["rpcerror",4]]],[11,"from","network::protocols::wire::handshake::v1","",66,[[]]],[11,"from","network::protocols::wire::messaging::v1","",51,[[["error",3]]]],[11,"from","","",52,[[["error",3]]]],[11,"from","network::transport","",68,[[],["connectionid",3]]],[11,"clone","network::connectivity_manager","",0,[[],["discoverysource",4]]],[11,"clone","network::error","",4,[[],["networkerrorkind",4]]],[11,"clone","network::peer","",14,[[],["disconnectreason",4]]],[11,"clone","network::peer_manager","",20,[[],["connectionnotification",4]]],[11,"clone","","",24,[[],["peermanagerrequestsender",3]]],[11,"clone","","",25,[[],["connectionrequestsender",3]]],[11,"clone","network::protocols::direct_send","",27,[[],["message",3]]],[11,"clone","network::protocols::network","",31,[[],["networksender",3]]],[11,"clone","network::protocols::health_checker","",39,[[],["healthcheckernetworksender",3]]],[11,"clone","","",37,[[],["healthcheckermsg",4]]],[11,"clone","","",64,[[],["ping",3]]],[11,"clone","","",65,[[],["pong",3]]],[11,"clone","network::protocols::wire::handshake::v1","",42,[[],["protocolid",4]]],[11,"clone","","",66,[[],["supportedprotocols",3]]],[11,"clone","","",43,[[],["messagingprotocolversion",4]]],[11,"clone","","",41,[[],["handshakemsg",3]]],[11,"clone","network::protocols::wire::messaging::v1","",48,[[],["networkmessage",4]]],[11,"clone","","",49,[[],["errorcode",4]]],[11,"clone","","",67,[[],["parsingerrortype",3]]],[11,"clone","","",50,[[],["notsupportedtype",4]]],[11,"clone","","",45,[[],["rpcrequest",3]]],[11,"clone","","",46,[[],["rpcresponse",3]]],[11,"clone","","",47,[[],["directsendmsg",3]]],[11,"clone","network::transport","",68,[[],["connectionid",3]]],[11,"clone","","",57,[[],["trustlevel",4]]],[11,"clone","","",55,[[],["connectionmetadata",3]]],[11,"default","network::noise::handshake","",10,[[],["antireplaytimestamps",3]]],[11,"default","network::protocols::wire::handshake::v1","",66,[[],["supportedprotocols",3]]],[11,"default","","",41,[[],["handshakemsg",3]]],[11,"default","network::transport","",68,[[],["connectionid",3]]],[11,"cmp","network::connectivity_manager","",0,[[["discoverysource",4]],["ordering",4]]],[11,"cmp","network::protocols::wire::handshake::v1","",43,[[["messagingprotocolversion",4]],["ordering",4]]],[11,"eq","network::connectivity_manager","",0,[[["discoverysource",4]]]],[11,"eq","network::error","",4,[[["networkerrorkind",4]]]],[11,"eq","network::peer","",13,[[["peernotification",4]]]],[11,"ne","","",13,[[["peernotification",4]]]],[11,"eq","","",14,[[["disconnectreason",4]]]],[11,"eq","network::peer_manager","",20,[[["connectionnotification",4]]]],[11,"ne","","",20,[[["connectionnotification",4]]]],[11,"eq","network::protocols::direct_send","",27,[[["message",3]]]],[11,"ne","","",27,[[["message",3]]]],[11,"eq","network::protocols::network","",28,[[["event",4]]]],[11,"eq","network::protocols::rpc","",32,[[]]],[11,"eq","network::protocols::wire::handshake::v1","",42,[[["protocolid",4]]]],[11,"eq","","",66,[[["supportedprotocols",3]]]],[11,"ne","","",66,[[["supportedprotocols",3]]]],[11,"eq","","",43,[[["messagingprotocolversion",4]]]],[11,"eq","network::protocols::wire::messaging::v1","",48,[[["networkmessage",4]]]],[11,"ne","","",48,[[["networkmessage",4]]]],[11,"eq","","",49,[[["errorcode",4]]]],[11,"ne","","",49,[[["errorcode",4]]]],[11,"eq","","",67,[[["parsingerrortype",3]]]],[11,"ne","","",67,[[["parsingerrortype",3]]]],[11,"eq","","",50,[[["notsupportedtype",4]]]],[11,"ne","","",50,[[["notsupportedtype",4]]]],[11,"eq","","",45,[[["rpcrequest",3]]]],[11,"ne","","",45,[[["rpcrequest",3]]]],[11,"eq","","",46,[[["rpcresponse",3]]]],[11,"ne","","",46,[[["rpcresponse",3]]]],[11,"eq","","",47,[[["directsendmsg",3]]]],[11,"ne","","",47,[[["directsendmsg",3]]]],[11,"eq","network::transport","",68,[[["connectionid",3]]]],[11,"ne","","",68,[[["connectionid",3]]]],[11,"eq","","",57,[[["trustlevel",4]]]],[11,"eq","","",55,[[["connectionmetadata",3]]]],[11,"ne","","",55,[[["connectionmetadata",3]]]],[11,"partial_cmp","network::connectivity_manager","",0,[[["discoverysource",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","network::protocols::wire::handshake::v1","",43,[[["messagingprotocolversion",4]],[["ordering",4],["option",4]]]],[11,"fmt","network::connectivity_manager","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","network::error","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","network::noise::error","",6,[[["formatter",3]],["result",6]]],[11,"fmt","network::noise::stream","",11,[[["formatter",3]],["result",6]]],[11,"fmt","network::peer","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","network::peer_manager::builder","",22,[[["formatter",3]],["result",6]]],[11,"fmt","network::peer_manager","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::direct_send","",27,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::network","",28,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::rpc::error","",34,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::rpc","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::health_checker","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::wire::handshake::v1","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::wire::messaging::v1","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","network::transport","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","network::testutils::fake_socket","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","network::connectivity_manager","",0,[[["formatter",3]],["result",6]]],[11,"fmt","network::error","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","network::noise::error","",6,[[["formatter",3]],["result",6]]],[11,"fmt","network::peer","",14,[[["formatter",3]],["result",6]]],[11,"fmt","network::peer_manager","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::rpc::error","",34,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::wire::handshake::v1","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::wire::messaging::v1","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","network::transport","",55,[[["formatter",3]],["result",6]]],[11,"hash","network::protocols::wire::handshake::v1","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","network::transport","",68,[[]]],[11,"try_into","network::protocols::wire::handshake::v1","",66,[[],[["result",6],["vec",3]]]],[11,"source","network::error","",62,[[],[["option",4],["error",8]]]],[11,"source","network::peer_manager","",16,[[],[["option",4],["error",8]]]],[11,"source","network::protocols::rpc::error","",34,[[],[["option",4],["error",8]]]],[11,"source","network::protocols::wire::messaging::v1","",51,[[],[["option",4],["error",8]]]],[11,"source","","",52,[[],[["option",4],["error",8]]]],[11,"deserialize","network::protocols::health_checker","",37,[[],["result",4]]],[11,"deserialize","","",64,[[],["result",4]]],[11,"deserialize","","",65,[[],["result",4]]],[11,"deserialize","network::protocols::wire::handshake::v1","",42,[[],["result",4]]],[11,"deserialize","","",66,[[],["result",4]]],[11,"deserialize","","",43,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","network::protocols::wire::messaging::v1","",48,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","","",67,[[],["result",4]]],[11,"deserialize","","",50,[[],["result",4]]],[11,"deserialize","","",45,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]],[11,"deserialize","","",47,[[],["result",4]]],[11,"serialize","network::connectivity_manager","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","network::peer","",14,[[],["result",4]]],[11,"serialize","network::peer_manager","",17,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","network::protocols::direct_send","",27,[[],["result",4]]],[11,"serialize","network::protocols::rpc","",33,[[],["result",4]]],[11,"serialize","network::protocols::health_checker","",37,[[],["result",4]]],[11,"serialize","","",64,[[],["result",4]]],[11,"serialize","","",65,[[],["result",4]]],[11,"serialize","network::protocols::wire::handshake::v1","",42,[[],["result",4]]],[11,"serialize","","",66,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","network::protocols::wire::messaging::v1","",48,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",67,[[],["result",4]]],[11,"serialize","","",50,[[],["result",4]]],[11,"serialize","","",45,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","network::transport","",68,[[],["result",4]]],[11,"serialize","","",57,[[],["result",4]]],[11,"serialize","","",55,[[],["result",4]]],[11,"arbitrary_with","network::protocols::wire::handshake::v1","",42,[[]]],[11,"arbitrary_with","","",66,[[]]],[11,"arbitrary_with","","",43,[[]]],[11,"arbitrary_with","network::protocols::wire::messaging::v1","",48,[[]]],[11,"arbitrary_with","","",49,[[]]],[11,"arbitrary_with","","",67,[[]]],[11,"arbitrary_with","","",50,[[]]],[11,"arbitrary_with","","",45,[[]]],[11,"arbitrary_with","","",46,[[]]],[11,"arbitrary_with","","",47,[[]]],[11,"visit","network::logging","",5,[[["visitor",8]]]],[11,"poll_next","network::protocols::network","",63,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",63,[[]]],[11,"poll_next","network::protocols::wire::messaging::v1","",53,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"is_terminated","network::protocols::network","",63,[[]]],[11,"poll_ready","network::protocols::wire::messaging::v1","",54,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",54,[[["networkmessage",4],["pin",3]],["result",4]]],[11,"poll_flush","","",54,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",54,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_read","network::noise::stream","",11,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","network::testutils::fake_socket","",59,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","","",60,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","","",61,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","network::noise::stream","",11,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",11,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",11,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","network::testutils::fake_socket","",59,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",59,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","Attempt to close the channel. Cannot Fail.",59,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",60,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",60,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","Attempt to close the channel. Cannot Fail.",60,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",61,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",61,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","Attempt to close the channel. Cannot Fail.",61,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"dial","network::transport","",58,[[["peerid",3],["networkaddress",3]],["result",6]]],[11,"listen_on","","",58,[[["networkaddress",3]],["result",6]]]],"p":[[4,"DiscoverySource"],[4,"ConnectivityRequest"],[3,"ConnectivityManagerBuilder"],[3,"ConnectivityManager"],[4,"NetworkErrorKind"],[3,"NetworkSchema"],[4,"NoiseHandshakeError"],[3,"NoiseUpgrader"],[4,"HandshakeAuthMode"],[13,"Mutual"],[3,"AntiReplayTimestamps"],[3,"NoiseStream"],[4,"PeerRequest"],[4,"PeerNotification"],[4,"DisconnectReason"],[3,"Peer"],[4,"PeerManagerError"],[4,"PeerManagerRequest"],[4,"PeerManagerNotification"],[4,"ConnectionRequest"],[4,"ConnectionNotification"],[4,"TransportNotification"],[4,"AuthenticationMode"],[3,"PeerManagerBuilder"],[3,"PeerManagerRequestSender"],[3,"ConnectionRequestSender"],[3,"PeerManager"],[3,"Message"],[4,"Event"],[8,"NewNetworkEvents"],[8,"NewNetworkSender"],[3,"NetworkSender"],[3,"InboundRpcRequest"],[3,"OutboundRpcRequest"],[4,"RpcError"],[3,"InboundRpcs"],[3,"OutboundRpcs"],[4,"HealthCheckerMsg"],[3,"HealthCheckerBuilder"],[3,"HealthCheckerNetworkSender"],[3,"HealthChecker"],[3,"HandshakeMsg"],[4,"ProtocolId"],[4,"MessagingProtocolVersion"],[4,"HandshakeError"],[3,"RpcRequest"],[3,"RpcResponse"],[3,"DirectSendMsg"],[4,"NetworkMessage"],[4,"ErrorCode"],[4,"NotSupportedType"],[4,"ReadError"],[4,"WriteError"],[3,"NetworkMessageStream"],[3,"NetworkMessageSink"],[3,"ConnectionMetadata"],[3,"Connection"],[4,"TrustLevel"],[3,"DiemNetTransport"],[3,"ReadOnlyTestSocket"],[3,"ReadOnlyTestSocketVec"],[3,"ReadWriteTestSocket"],[3,"NetworkError"],[3,"NetworkEvents"],[3,"Ping"],[3,"Pong"],[3,"SupportedProtocols"],[3,"ParsingErrorType"],[3,"ConnectionId"]]},\
"network_builder":{"doc":"","i":[[4,"RpcError","network_builder","",null,null],[13,"Error","","",0,null],[13,"IoError","","",0,null],[13,"BcsError","","",0,null],[13,"NotConnected","","",0,null],[13,"InvalidRpcResponse","","",0,null],[13,"UnexpectedRpcResponse","","",0,null],[13,"UnexpectedRpcRequest","","",0,null],[13,"UnexpectedResponseChannelCancel","","",0,null],[13,"ApplicationError","","",0,null],[13,"MpscSendError","","",0,null],[13,"TooManyPending","","",0,null],[13,"TimedOut","","",0,null],[0,"builder","","Remotely authenticated vs. unauthenticated network…",null,null],[3,"NetworkBuilder","network_builder::builder","Build Network module with custom configuration values.…",null,null],[11,"new","","Return a new NetworkBuilder initialized with default…",1,[[["chainid",3],["arc",3],["authenticationmode",4],["option",4],["networkcontext",3],["ratelimitconfig",3],["networkaddress",3],["rwlock",3],["arc",3]]]],[11,"new_for_test","","",1,[[["chainid",3],["arc",3],["peerid",3],["vec",3],["networkcontext",3],["hashset",3],["hashmap",3],["authenticationmode",4],["hashmap",3],["networkaddress",3],["rwlock",3],["arc",3]],["networkbuilder",3]]],[11,"create","","Create a new NetworkBuilder based on the provided…",1,[[["roletype",4],["chainid",3],["networkconfig",3]],["networkbuilder",3]]],[11,"build","","Create the configured Networking components.",1,[[["handle",3]]]],[11,"start","","Start the built Networking components.",1,[[]]],[11,"reconfig_subscriptions","","",1,[[],["vec",3]]],[11,"network_context","","",1,[[],[["networkcontext",3],["arc",3]]]],[11,"conn_mgr_reqs_tx","","",1,[[],[["sender",3],["option",4]]]],[11,"listen_address","","",1,[[],["networkaddress",3]]],[11,"add_connectivity_manager","","Add a [`ConnectivityManager`] to the network.",1,[[["hashmap",3],["arc",3],["peerid",3],["vec",3],["rwlock",3],["hashset",3],["hashmap",3]]]],[11,"add_protocol_handler","","Adds a endpoints for the provided configuration. Returns…",1,[[]]],[0,"dummy","network_builder","Integration tests for validator_network.",null,null],[3,"DummyMsg","network_builder::dummy","",null,null],[12,"0","","",2,null],[3,"DummyNetworkSender","","",null,null],[3,"DummyNetwork","","",null,null],[12,"runtime","","",3,null],[12,"dialer_peer_id","","",3,null],[12,"dialer_events","","",3,null],[12,"dialer_sender","","",3,null],[12,"listener_peer_id","","",3,null],[12,"listener_events","","",3,null],[12,"listener_sender","","",3,null],[5,"network_endpoint_config","","",null,[[]]],[5,"setup_network","","The following sets up a 2 peer network and verifies…",null,[[],["dummynetwork",3]]],[6,"DummyNetworkEvents","","TODO(davidiw): In DummyNetwork, replace DummyMsg with a…",null,null],[11,"send_to","","",4,[[["dummymsg",3],["peerid",3]],[["networkerror",3],["result",4]]]],[11,"send_rpc","","",4,[[["dummymsg",3],["duration",3],["peerid",3]]]],[11,"from","network_builder","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","network_builder::builder","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","network_builder::dummy","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"fmt","network_builder","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"from","","",0,[[["elapsed",3]],["rpcerror",4]]],[11,"from","","",0,[[["peermanagererror",4]],["rpcerror",4]]],[11,"from","","",0,[[["senderror",3]],["rpcerror",4]]],[11,"from","","",0,[[["error",3]],["rpcerror",4]]],[11,"from","","",0,[[["canceled",3]],["rpcerror",4]]],[11,"from","","",0,[[["error",4]],["rpcerror",4]]],[11,"from","","",0,[[["error",3]],["rpcerror",4]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","network_builder::dummy","",2,[[],["dummymsg",3]]],[11,"clone","","",4,[[],["dummynetworksender",3]]],[11,"eq","","",2,[[["dummymsg",3]]]],[11,"ne","","",2,[[["dummymsg",3]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"serialize","","",2,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"new","","",4,[[["connectionrequestsender",3],["peermanagerrequestsender",3]]]]],"p":[[4,"RpcError"],[3,"NetworkBuilder"],[3,"DummyMsg"],[3,"DummyNetwork"],[3,"DummyNetworkSender"]]},\
"network_simple_onchain_discovery":{"doc":"","i":[[3,"ConfigurationChangeListener","network_simple_onchain_discovery","Listener which converts published updates from the…",null,null],[5,"gen_simple_discovery_reconfig_subscription","","",null,[[]]],[0,"builder","","",null,null],[3,"ConfigurationChangeListenerBuilder","network_simple_onchain_discovery::builder","",null,null],[11,"create","","",0,[[["encryptor",3],["publickey",3],["receiver",3],["sender",3],["arc",3],["networkcontext",3],["connectivityrequest",4],["onchainconfigpayload",3]],["configurationchangelistenerbuilder",3]]],[11,"build","","",0,[[]]],[11,"start","","",0,[[["handle",3]]]],[7,"EVENT_PROCESSING_LOOP_IDLE_DURATION_S","network_simple_onchain_discovery","Histogram of idle time of spent in event processing loop",null,null],[7,"EVENT_PROCESSING_LOOP_BUSY_DURATION_S","","Histogram of busy time of spent in event processing loop",null,null],[7,"DISCOVERY_COUNTS","","",null,null],[7,"NETWORK_KEY_MISMATCH","","",null,null],[11,"new","","Creates a new ConfigurationChangeListener",1,[[["encryptor",3],["publickey",3],["receiver",3],["sender",3],["arc",3],["networkcontext",3],["connectivityrequest",4],["onchainconfigpayload",3]]]],[11,"start","","Starts the listener to wait on reconfiguration events.",1,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","network_simple_onchain_discovery::builder","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]]],"p":[[3,"ConfigurationChangeListenerBuilder"],[3,"ConfigurationChangeListener"]]},\
"num_variants":{"doc":"Add an associated constant to an enum describing the…","i":[[24,"NumVariants","num_variants","Derives an associated constant with the number of variants…",null,null]],"p":[]},\
"proxy":{"doc":"","i":[[3,"Proxy","proxy","",null,null],[11,"new","","",0,[[]]],[11,"http","","",0,[[],["option",4]]],[11,"https","","",0,[[],["option",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"Proxy"]]},\
"resource_viewer":{"doc":"","i":[[3,"AnnotatedAccountStateBlob","resource_viewer","",null,null],[3,"AnnotatedMoveStruct","","",null,null],[12,"is_resource","","",0,null],[12,"type_","","",0,null],[12,"value","","",0,null],[3,"MoveValueAnnotator","","",null,null],[3,"NullStateView","","",null,null],[4,"AnnotatedMoveValue","","AnnotatedMoveValue is a fully expanded version of on chain…",null,null],[13,"U8","","",1,null],[13,"U64","","",1,null],[13,"U128","","",1,null],[13,"Bool","","",1,null],[13,"Address","","",1,null],[13,"Vector","","",1,null],[13,"Bytes","","",1,null],[13,"Struct","","",1,null],[11,"new","","",2,[[["remotecache",8]]]],[11,"new_no_stdlib","","",2,[[["remotecache",8]]]],[11,"view_access_path","","",2,[[["accesspath",3]],[["result",6],["annotatedmovestruct",3]]]],[11,"view_resource","","",2,[[["structtag",3]],[["result",6],["annotatedmovestruct",3]]]],[11,"view_contract_event","","",2,[[["contractevent",4]],[["annotatedmovevalue",4],["result",6]]]],[11,"view_account_state","","",2,[[["accountstate",3]],[["annotatedaccountstateblob",3],["result",6]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"default","","",4,[[],["nullstateview",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"get","","",4,[[["accesspath",3]],[["result",6],["option",4]]]],[11,"multi_get","","",4,[[],[["result",6],["vec",3]]]],[11,"is_genesis","","",4,[[]]],[11,"get_module","","",4,[[["moduleid",3]],[["vmresult",6],["option",4]]]],[11,"get_resource","","",4,[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]]]],"p":[[3,"AnnotatedMoveStruct"],[4,"AnnotatedMoveValue"],[3,"MoveValueAnnotator"],[3,"AnnotatedAccountStateBlob"],[3,"NullStateView"]]},\
"safety_rules":{"doc":"","i":[[3,"ConsensusState","safety_rules","Public representation of the internal state of SafetyRules…",null,null],[3,"PersistentSafetyStorage","","SafetyRules needs an abstract storage interface to act as…",null,null],[3,"Process","","",null,null],[3,"SafetyRules","","@TODO consider a cache of verified QCs to cut down on…",null,null],[3,"SafetyRulesManager","","",null,null],[4,"Error","","Different reasons for proposal rejection",null,null],[13,"IncorrectEpoch","","",0,null],[13,"IncorrectRound","","",0,null],[13,"IncorrectLastVotedRound","","",0,null],[13,"IncorrectPreferredRound","","",0,null],[13,"InvalidAccumulatorExtension","","",0,null],[13,"InvalidEpochChangeProof","","",0,null],[13,"InternalError","","",0,null],[13,"InvalidLedgerInfo","","",0,null],[13,"InvalidProposal","","",0,null],[13,"InvalidQuorumCertificate","","",0,null],[13,"NotInitialized","","",0,null],[13,"SecureStorageMissingDataError","","",0,null],[13,"SecureStorageUnexpectedError","","",0,null],[13,"SerializationError","","",0,null],[13,"ValidatorKeyNotFound","","",0,null],[13,"ValidatorNotInSet","","",0,null],[13,"VoteProposalSignatureNotFound","","",0,null],[11,"new","","",1,[[["safetydata",3],["waypoint",3]]]],[11,"epoch","","Returns the current epoch",1,[[]]],[11,"last_voted_round","","Returns the last round that was voted on",1,[[],["round",6]]],[11,"preferred_round","","A \\\"preferred block\\\" is the two-chain head with the highest…",1,[[],["round",6]]],[11,"waypoint","","Last known checkpoint this should map to a LedgerInfo that…",1,[[],["waypoint",3]]],[11,"in_validator_set","","Indicating whether the validator is validator set",1,[[]]],[11,"safety_data","","Return a copy of the safety data.",1,[[],["safetydata",3]]],[11,"initialize","","Use this to instantiate a PersistentStorage for a new data…",2,[[["author",6],["waypoint",3],["ed25519privatekey",3],["storage",4]]]],[11,"new","","Use this to instantiate a PersistentStorage with an…",2,[[["storage",4]]]],[11,"author","","",2,[[],[["result",4],["author",6],["error",4]]]],[11,"consensus_key_for_version","","",2,[[["ed25519publickey",3]],[["result",4],["ed25519privatekey",3],["error",4]]]],[11,"execution_public_key","","",2,[[],[["result",4],["error",4],["ed25519publickey",3]]]],[11,"sign","","",2,[[["ed25519publickey",3],["string",3]],[["result",4],["ed25519signature",3],["error",4]]]],[11,"safety_data","","",2,[[],[["result",4],["safetydata",3],["error",4]]]],[11,"set_safety_data","","",2,[[["safetydata",3]],[["error",4],["result",4]]]],[11,"waypoint","","",2,[[],[["result",4],["waypoint",3],["error",4]]]],[11,"set_waypoint","","",2,[[["waypoint",3]],[["error",4],["result",4]]]],[11,"internal_store","","",2,[[],["storage",4]]],[11,"new","","",3,[[["safetyrulesconfig",3]]]],[11,"start","","",3,[[]]],[11,"new","","Constructs a new instance of SafetyRules with the given…",4,[[["persistentsafetystorage",3]]]],[11,"construct_ledger_info","","Produces a LedgerInfo that either commits a block based…",4,[[["block",3]],[["ledgerinfo",3],["error",4],["result",4]]]],[11,"new","","",5,[[["safetyrulesconfig",3]]]],[11,"new_local","","",5,[[["persistentsafetystorage",3]]]],[11,"new_process","","",5,[[["socketaddr",4]]]],[11,"new_serializer","","",5,[[["persistentsafetystorage",3]]]],[11,"new_thread","","",5,[[["persistentsafetystorage",3]]]],[11,"client","","",5,[[],[["box",3],["tsafetyrules",8]]]],[0,"fuzzing_utils","","",null,null],[5,"arb_accumulator_extension_proof","safety_rules::fuzzing_utils","",null,[[]]],[5,"arb_block","","",null,[[]]],[5,"arb_block_data","","",null,[[]]],[5,"arb_block_type_proposal","","",null,[[]]],[5,"arb_maybe_signed_vote_proposal","","",null,[[]]],[5,"arb_epoch_change_proof","","",null,[[]]],[5,"arb_timeout","","",null,[[]]],[5,"arb_epoch_state","","",null,[[]]],[5,"arb_quorum_cert","","",null,[[]]],[5,"arb_validator_consensus_info","","",null,[[]]],[5,"arb_safety_rules_input","","",null,[[]]],[0,"fuzzing","","",null,null],[5,"fuzz_initialize","safety_rules::fuzzing_utils::fuzzing","",null,[[["epochchangeproof",3]],[["error",4],["result",4]]]],[5,"fuzz_construct_and_sign_vote","","",null,[[["maybesignedvoteproposal",3]],[["vote",3],["error",4],["result",4]]]],[5,"fuzz_handle_message","","",null,[[["safetyrulesinput",4]],[["error",4],["result",4],["vec",3]]]],[5,"fuzz_sign_proposal","","",null,[[["blockdata",3]],[["block",3],["result",4],["error",4]]]],[5,"fuzz_sign_timeout","","",null,[[["timeout",3]],[["result",4],["ed25519signature",3],["error",4]]]],[0,"test_utils","safety_rules","",null,null],[5,"empty_proof","safety_rules::test_utils","",null,[[],["proof",6]]],[5,"make_genesis","","",null,[[["validatorsigner",3]]]],[5,"make_proposal_with_qc_and_proof","","",null,[[["proof",6],["ed25519privatekey",3],["payload",6],["option",4],["round",6],["quorumcert",3],["validatorsigner",3]],["maybesignedvoteproposal",3]]],[5,"make_proposal_with_qc","","",null,[[["ed25519privatekey",3],["option",4],["round",6],["quorumcert",3],["validatorsigner",3]],["maybesignedvoteproposal",3]]],[5,"make_proposal_with_parent_and_overrides","","",null,[[["option",4],["payload",6],["option",4],["option",4],["round",6],["option",4],["maybesignedvoteproposal",3],["epochstate",3],["validatorsigner",3],["ed25519privatekey",3]],["maybesignedvoteproposal",3]]],[5,"make_proposal_with_parent","","",null,[[["maybesignedvoteproposal",3],["option",4],["payload",6],["option",4],["round",6],["validatorsigner",3],["ed25519privatekey",3]],["maybesignedvoteproposal",3]]],[5,"validator_signers_to_ledger_info","","",null,[[],["ledgerinfo",3]]],[5,"validator_signers_to_waypoint","","",null,[[],["waypoint",3]]],[5,"test_storage","","",null,[[["validatorsigner",3]],["persistentsafetystorage",3]]],[5,"test_safety_rules","","Returns a safety rules instance for testing purposes.",null,[[],["safetyrules",3]]],[5,"test_safety_rules_uninitialized","","Returns a safety rules instance that has not been…",null,[[],["safetyrules",3]]],[5,"test_serializer","","Returns a simple serializer for testing purposes.",null,[[],["serializerservice",3]]],[6,"Proof","","",null,null],[8,"TSafetyRules","safety_rules","Interface for SafetyRules",null,null],[10,"consensus_state","","Provides the internal state of SafetyRules for monitoring…",6,[[],[["result",4],["error",4],["consensusstate",3]]]],[10,"initialize","","Initialize SafetyRules using an Epoch ending LedgerInfo,…",6,[[["epochchangeproof",3]],[["error",4],["result",4]]]],[10,"construct_and_sign_vote","","Attempts to vote for a given proposal following the voting…",6,[[["maybesignedvoteproposal",3]],[["vote",3],["error",4],["result",4]]]],[10,"sign_proposal","","As the holder of the private key, SafetyRules also signs…",6,[[["blockdata",3]],[["block",3],["result",4],["error",4]]]],[10,"sign_timeout","","As the holder of the private key, SafetyRules also signs…",6,[[["timeout",3]],[["result",4],["ed25519signature",3],["error",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"consensus_state","","",4,[[],[["result",4],["error",4],["consensusstate",3]]]],[11,"initialize","","",4,[[["epochchangeproof",3]],[["error",4],["result",4]]]],[11,"construct_and_sign_vote","","",4,[[["maybesignedvoteproposal",3]],[["vote",3],["error",4],["result",4]]]],[11,"sign_proposal","","",4,[[["blockdata",3]],[["block",3],["result",4],["error",4]]]],[11,"sign_timeout","","",4,[[["timeout",3]],[["result",4],["ed25519signature",3],["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"clone","","",1,[[],["consensusstate",3]]],[11,"clone","","",0,[[],["error",4]]],[11,"default","","",1,[[],["consensusstate",3]]],[11,"eq","","",1,[[["consensusstate",3]]]],[11,"ne","","",1,[[["consensusstate",3]]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[4,"Error"],[3,"ConsensusState"],[3,"PersistentSafetyStorage"],[3,"Process"],[3,"SafetyRules"],[3,"SafetyRulesManager"],[8,"TSafetyRules"]]},\
"schemadb":{"doc":"This library implements a schematized DB on top of…","i":[[3,"SchemaBatch","schemadb","`SchemaBatch` holds a collection of updates that can be…",null,null],[3,"SchemaIterator","","DB Iterator parameterized on [`Schema`] that seeks with…",null,null],[3,"DB","","This DB is a schematized RocksDB wrapper where all data…",null,null],[4,"ScanDirection","","",null,null],[13,"Forward","","",0,null],[13,"Backward","","",0,null],[0,"schema","","This module provides traits that define the behavior of a…",null,null],[5,"assert_encode_decode","schemadb::schema","Helper used in tests to assert a (key, value) pair for a…",null,[[]]],[8,"KeyCodec","","This trait defines a type that can serve as a…",null,null],[10,"encode_key","","Converts `self` to bytes to be stored in DB.",1,[[],[["vec",3],["result",6]]]],[10,"decode_key","","Converts bytes fetched from DB to `Self`.",1,[[],["result",6]]],[8,"ValueCodec","","This trait defines a type that can serve as a…",null,null],[10,"encode_value","","Converts `self` to bytes to be stored in DB.",2,[[],[["vec",3],["result",6]]]],[10,"decode_value","","Converts bytes fetched from DB to `Self`.",2,[[],["result",6]]],[8,"SeekKeyCodec","","This defines a type that can be used to seek a…",null,null],[10,"encode_seek_key","","Converts `self` to bytes which is used to seek the…",3,[[],[["vec",3],["result",6]]]],[8,"Schema","","This trait defines a schema: an association of a column…",null,null],[18,"COLUMN_FAMILY_NAME","","The column family name associated with this struct. Note:…",4,null],[16,"Key","","Type of the key.",4,null],[16,"Value","","Type of the value.",4,null],[6,"ReadOptions","schemadb","Type alias to `rocksdb::ReadOptions`. See `rocksdb doc`",null,null],[6,"Options","","Type alias to `rocksdb::Options`.",null,null],[6,"ColumnFamilyName","","Type alias to improve readability.",null,null],[17,"DEFAULT_CF_NAME","","Name for the `default` column family that\'s always open by…",null,null],[11,"new","","Creates an empty batch.",5,[[]]],[11,"put","","Adds an insert/update operation to the batch.",5,[[],["result",6]]],[11,"delete","","Adds a delete operation to the batch.",5,[[],["result",6]]],[11,"seek_to_first","","Seeks to the first key.",6,[[]]],[11,"seek_to_last","","Seeks to the last key.",6,[[]]],[11,"seek","","Seeks to the first key whose binary representation is…",6,[[],["result",6]]],[11,"seek_for_prev","","Seeks to the last key whose binary representation is less…",6,[[],["result",6]]],[11,"open","","Create db with all the column families provided if it…",7,[[["vec",3],["options",3],["columnfamilyname",6]],["result",6]]],[11,"open_readonly","","Open db in readonly mode Note that this still assumes…",7,[[["vec",3],["options",3],["columnfamilyname",6]],["result",6]]],[11,"open_as_secondary","","Open db as secondary. This allows to read the DB in…",7,[[["asref",8],["columnfamilyname",6],["vec",3],["options",3],["path",3]],["result",6]]],[11,"get","","Reads single record by key.",7,[[],[["option",4],["result",6]]]],[11,"put","","Writes single record.",7,[[],["result",6]]],[11,"range_delete","","Delete all keys in range [begin, end).",7,[[],["result",6]]],[11,"iter","","Returns a forward [`SchemaIterator`] on a certain schema.",7,[[["readoptions",6]],[["schemaiterator",3],["result",6]]]],[11,"rev_iter","","Returns a backward [`SchemaIterator`] on a certain schema.",7,[[["readoptions",6]],[["schemaiterator",3],["result",6]]]],[11,"write_schemas","","Writes a group of records wrapped in a [`SchemaBatch`].",7,[[["schemabatch",3]],["result",6]]],[11,"flush_all","","Flushes all memtable data. This is only used for testing…",7,[[],["result",6]]],[11,"get_property","","",7,[[],["result",6]]],[14,"define_schema","","Macro for defining a SchemaDB schema.",null,null],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"default","","",5,[[],["schemabatch",3]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]]],"p":[[4,"ScanDirection"],[8,"KeyCodec"],[8,"ValueCodec"],[8,"SeekKeyCodec"],[8,"Schema"],[3,"SchemaBatch"],[3,"SchemaIterator"],[3,"DB"]]},\
"scratchpad":{"doc":"This crate provides in-memory representation of Diem core…","i":[[3,"SparseMerkleTree","scratchpad","The Sparse Merkle Tree implementation.",null,null],[4,"AccountStatus","","`AccountStatus` describes the result of querying an…",null,null],[13,"ExistsInScratchPad","","The account exists in the tree, therefore we can give its…",0,null],[13,"ExistsInDB","","The account does not exist in the tree, but exists in DB.…",0,null],[13,"DoesNotExist","","The account does not exist in either the tree or DB. This…",0,null],[13,"Unknown","","We do not know if this account exists or not and need to…",0,null],[11,"new","","Constructs a Sparse Merkle Tree with a root hash. This is…",1,[[["hashvalue",3]]]],[11,"update","","Constructs a new Sparse Merkle Tree as if we are updating…",1,[[["vec",3]],[["result",4],["updateerror",4]]]],[11,"get","","Queries a `key` in this `SparseMerkleTree`.",1,[[["hashvalue",3]],["accountstatus",4]]],[11,"root_hash","","Returns the root hash of this tree.",1,[[],["hashvalue",3]]],[11,"prune","","Prunes a tree by replacing every node reachable from root…",1,[[]]],[8,"ProofRead","","A type that implements `ProofRead` can provide proof for…",null,null],[10,"get_proof","","Gets verified proof for this key in persistent storage.",2,[[["hashvalue",3]],[["option",4],["sparsemerkleproof",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"default","","",1,[[]]],[11,"eq","","",0,[[["accountstatus",4]]]],[11,"ne","","",0,[[["accountstatus",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[4,"AccountStatus"],[3,"SparseMerkleTree"],[8,"ProofRead"]]},\
"seed_peer_generator":{"doc":"","i":[[0,"utils","seed_peer_generator","",null,null],[5,"gen_seed_peer_config","seed_peer_generator::utils","",null,[[["string",3]],["seedpeersconfig",6]]],[6,"SeedPeersConfig","","",null,null]],"p":[]},\
"serializer_tests":{"doc":"","i":[],"p":[]},\
"short_hex_str":{"doc":"","i":[[3,"ShortHexStr","short_hex_str","An efficient container for formatting a byte slice as a…",null,null],[3,"InputTooShortError","","",null,null],[18,"SOURCE_LENGTH","","",0,null],[18,"LENGTH","","",0,null],[11,"try_from_bytes","","Format a new `ShortHexStr` from a byte slice.",0,[[],[["result",4],["inputtooshorterror",3],["shorthexstr",3]]]],[11,"as_str","","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",0,[[],["shorthexstr",3]]],[11,"cmp","","",0,[[["shorthexstr",3]],["ordering",4]]],[11,"eq","","",0,[[["shorthexstr",3]]]],[11,"ne","","",0,[[["shorthexstr",3]]]],[11,"partial_cmp","","",0,[[["shorthexstr",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["shorthexstr",3]]]],[11,"le","","",0,[[["shorthexstr",3]]]],[11,"gt","","",0,[[["shorthexstr",3]]]],[11,"ge","","",0,[[["shorthexstr",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"serialize","","",0,[[],["result",4]]]],"p":[[3,"ShortHexStr"],[3,"InputTooShortError"]]},\
"smoke_test":{"doc":"","i":[],"p":[]},\
"socket_bench_server":{"doc":"","i":[[3,"Args","socket_bench_server","",null,null],[12,"tcp_addr","","",0,null],[12,"tcp_noise_addr","","",0,null],[12,"msg_lens","","",0,null],[5,"build_memsocket_noise_transport","","Build a MemorySocket + Noise transport",null,[[]]],[5,"build_tcp_noise_transport","","Build a Tcp + Noise transport",null,[[]]],[5,"server_stream_handler","","Server side handler for send throughput benchmark when the…",null,[[]]],[5,"start_stream_server","","",null,[[["handle",3],["networkaddress",3]],["networkaddress",3]]],[11,"from_env","","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Args"]]},\
"state_sync":{"doc":"Used to perform catching up between nodes for committed…","i":[[0,"bootstrapper","state_sync","",null,null],[3,"StateSyncBootstrapper","state_sync::bootstrapper","Creates and bootstraps new state syncs and creates clients…",null,null],[11,"bootstrap","","",0,[[["chunkexecutor",8],["vec",3],["vec",3],["dbreader",8],["waypoint",3],["sender",3],["commitnotification",3],["arc",3],["nodeconfig",3],["reconfigsubscription",6],["box",3]]]],[11,"bootstrap_with_executor_proxy","","",0,[[["vec",3],["upstreamconfig",3],["waypoint",3],["sender",3],["commitnotification",3],["roletype",4],["runtime",3],["statesyncconfig",3],["executorproxytrait",8]]]],[11,"create_client","","",0,[[],["statesyncclient",3]]],[0,"chunk_request","state_sync","",null,null],[3,"GetChunkRequest","state_sync::chunk_request","",null,null],[12,"known_version","","The response should start with `known_version + 1`.",1,null],[12,"current_epoch","","Epoch the chunk response is supposed to belong to (i.e.,…",1,null],[12,"limit","","Max size of a chunk response.",1,null],[12,"target","","The target of the given request.",1,null],[4,"TargetType","","We\'re currently considering several types of chunk…",null,null],[13,"TargetLedgerInfo","","The response is built relative to the target (or end of…",2,null],[13,"HighestAvailable","","The response is built relative to the highest available…",2,null],[12,"target_li","state_sync::chunk_request::TargetType","",3,null],[12,"timeout_ms","","",3,null],[13,"Waypoint","state_sync::chunk_request","The response is built relative to a LedgerInfo at a given…",2,null],[11,"version","","",2,[[],["option",4]]],[11,"new","","",1,[[["version",6],["targettype",4]]]],[0,"chunk_response","state_sync","",null,null],[3,"GetChunkResponse","state_sync::chunk_response","The returned chunk is bounded by the end of the…",null,null],[12,"response_li","","The proofs are built relative to the LedgerInfo in…",4,null],[12,"txn_list_with_proof","","Chunk of transactions with proof corresponding to the…",4,null],[4,"ResponseLedgerInfo","","The response can carry different LedgerInfo types…",null,null],[13,"VerifiableLedgerInfo","","A typical response carries a LedgerInfo with signatures…",5,null],[13,"ProgressiveLedgerInfo","","A response to `TargetType::HighestAvailable` chunk request…",5,null],[12,"target_li","state_sync::chunk_response::ResponseLedgerInfo","",6,null],[12,"highest_li","","",6,null],[13,"LedgerInfoForWaypoint","state_sync::chunk_response","During the initial catchup upon startup the chunks carry…",5,null],[12,"waypoint_li","state_sync::chunk_response::ResponseLedgerInfo","",7,null],[12,"end_of_epoch_li","","",7,null],[11,"version","state_sync::chunk_response","The version of the LedgerInfo relative to which the…",5,[[],["version",6]]],[11,"new","","",4,[[["responseledgerinfo",4],["transactionlistwithproof",3]]]],[0,"client","state_sync","",null,null],[3,"SyncRequest","state_sync::client","A sync request for a specified target ledger info.",null,null],[12,"callback","","",8,null],[12,"target","","",8,null],[12,"last_progress_tst","","",8,null],[3,"CommitNotification","","A commit notification to notify state sync of new commits.",null,null],[12,"callback","","",9,null],[12,"committed_transactions","","",9,null],[12,"reconfiguration_events","","",9,null],[3,"StateSyncClient","","A client used for communicating with a StateSyncCoordinator.",null,null],[4,"CoordinatorMessage","","Messages used by the StateSyncClient for communication…",null,null],[13,"SyncRequest","","",10,null],[13,"CommitNotification","","",10,null],[13,"GetSyncState","","",10,null],[13,"WaitForInitialization","","",10,null],[11,"new","","",11,[[["coordinatormessage",4],["unboundedsender",3]]]],[11,"sync_to","","Sync node\'s state to target ledger info (LI). In case of…",11,[[["ledgerinfowithsignatures",4]]]],[11,"commit","","Notifies state sync about newly committed transactions.",11,[[["vec",3],["vec",3],["contractevent",4],["transaction",4]]]],[11,"get_state","","Returns information about the state sync internal state.…",11,[[]]],[11,"wait_until_initialized","","Waits until state sync is caught up with the waypoint…",11,[[]]],[0,"coordinator","state_sync","",null,null],[3,"SyncState","state_sync::coordinator","SyncState contains the following fields:",null,null],[11,"new","","",12,[[["ledgerinfowithsignatures",4],["epochstate",3],["executedtrees",3]]]],[11,"committed_epoch","","",12,[[]]],[11,"committed_ledger_info","","",12,[[],["ledgerinfowithsignatures",4]]],[11,"committed_version","","",12,[[]]],[11,"synced_version","","Returns the highest available version in the local…",12,[[]]],[11,"trusted_epoch","","",12,[[]]],[11,"verify_ledger_info","","",12,[[["ledgerinfowithsignatures",4]],["result",6]]],[0,"executor_proxy","state_sync","",null,null],[8,"ExecutorProxyTrait","state_sync::executor_proxy","Proxies interactions with execution and storage for state…",null,null],[10,"get_local_storage_state","","Sync the local state with the latest in storage.",13,[[],[["result",6],["syncstate",3]]]],[10,"execute_chunk","","Execute and commit a batch of transactions",13,[[["ledgerinfowithsignatures",4],["option",4],["transactionlistwithproof",3]],["result",6]]],[10,"get_chunk","","Gets chunk of transactions given the known version, target…",13,[[],[["result",6],["transactionlistwithproof",3]]]],[10,"get_epoch_proof","","Get the epoch change ledger info for epoch so that we can…",13,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[10,"get_epoch_ending_ledger_info","","Get ledger info at an epoch boundary version.",13,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[10,"get_version_timestamp","","Returns the ledger\'s timestamp for the given version in…",13,[[],["result",6]]],[10,"publish_on_chain_config_updates","","publishes on-chain config updates to subscribed components",13,[[["contractevent",4],["vec",3]],["result",6]]],[0,"network","state_sync","Interface between State Sync and Network layers.",null,null],[3,"StateSyncSender","state_sync::network","The interface from StateSync to Networking layer.",null,null],[4,"StateSyncMessage","","State sync network messages",null,null],[13,"GetChunkRequest","","",14,null],[13,"GetChunkResponse","","",14,null],[5,"network_endpoint_config","","Configuration for the network endpoints to support state…",null,[[]]],[6,"StateSyncEvents","","The interface from Network to StateSync layer.",null,null],[11,"send_to","","",15,[[["peerid",3],["statesyncmessage",4]],[["networkerror",3],["result",4]]]],[0,"fuzzing","state_sync","",null,null],[5,"test_state_sync_msg_fuzzer_impl","state_sync::fuzzing","",null,[[["statesyncmessage",4]]]],[5,"arb_state_sync_msg","","",null,[[]]],[11,"from","state_sync::bootstrapper","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","state_sync::chunk_request","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","state_sync::chunk_response","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","state_sync::client","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","state_sync::coordinator","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","state_sync::network","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"erased_serialize","","",14,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"clone","state_sync::chunk_request","",2,[[],["targettype",4]]],[11,"clone","","",1,[[],["getchunkrequest",3]]],[11,"clone","state_sync::chunk_response","",5,[[],["responseledgerinfo",4]]],[11,"clone","","",4,[[],["getchunkresponse",3]]],[11,"clone","state_sync::coordinator","",12,[[],["syncstate",3]]],[11,"clone","state_sync::network","",14,[[],["statesyncmessage",4]]],[11,"clone","","",15,[[],["statesyncsender",3]]],[11,"eq","state_sync::chunk_request","",2,[[["targettype",4]]]],[11,"ne","","",2,[[["targettype",4]]]],[11,"eq","","",1,[[["getchunkrequest",3]]]],[11,"ne","","",1,[[["getchunkrequest",3]]]],[11,"eq","state_sync::chunk_response","",5,[[["responseledgerinfo",4]]]],[11,"ne","","",5,[[["responseledgerinfo",4]]]],[11,"eq","","",4,[[["getchunkresponse",3]]]],[11,"ne","","",4,[[["getchunkresponse",3]]]],[11,"fmt","state_sync::chunk_request","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","state_sync::chunk_response","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","state_sync::network","",14,[[["formatter",3]],["result",6]]],[11,"fmt","state_sync::chunk_request","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","state_sync::chunk_response","",4,[[["formatter",3]],["result",6]]],[11,"deserialize","state_sync::chunk_request","",2,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","state_sync::chunk_response","",5,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","state_sync::network","",14,[[],["result",4]]],[11,"serialize","state_sync::chunk_request","",2,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","state_sync::chunk_response","",5,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","state_sync::network","",14,[[],["result",4]]],[11,"arbitrary_with","state_sync::chunk_request","",1,[[]]],[11,"arbitrary_with","","",2,[[]]],[11,"arbitrary_with","state_sync::chunk_response","",4,[[]]],[11,"arbitrary_with","","",5,[[]]],[11,"new","state_sync::network","",15,[[["peermanagerrequestsender",3],["connectionrequestsender",3]]]]],"p":[[3,"StateSyncBootstrapper"],[3,"GetChunkRequest"],[4,"TargetType"],[13,"HighestAvailable"],[3,"GetChunkResponse"],[4,"ResponseLedgerInfo"],[13,"ProgressiveLedgerInfo"],[13,"LedgerInfoForWaypoint"],[3,"SyncRequest"],[3,"CommitNotification"],[4,"CoordinatorMessage"],[3,"StateSyncClient"],[3,"SyncState"],[8,"ExecutorProxyTrait"],[4,"StateSyncMessage"],[3,"StateSyncSender"]]},\
"stdlib":{"doc":"","i":[[5,"filter_move_files","stdlib","",null,[[]]],[5,"filter_move_bytecode_files","","",null,[[]]],[5,"path_in_crate","","",null,[[],["pathbuf",3]]],[5,"stdlib_files","","",null,[[],[["vec",3],["string",3]]]],[5,"stdlib_bytecode_files","","",null,[[],[["vec",3],["string",3]]]],[5,"script_files","","",null,[[],[["vec",3],["string",3]]]],[5,"build_stdlib","","",null,[[],[["compiledmodule",3],["btreemap",3],["string",3]]]],[5,"compile_script","","",null,[[["string",3]],["vec",3]]],[5,"save_binary","","",null,[[["path",3]]]],[5,"build_stdlib_doc","","",null,[[]]],[5,"build_transaction_script_doc","","",null,[[]]],[5,"build_transaction_script_abi","","",null,[[["string",3]]]],[5,"build_stdlib_error_code_map","","",null,[[]]],[5,"get_packed_types_path","","",null,[[],["pathbuf",3]]],[5,"generate_rust_transaction_builders","","",null,[[]]],[0,"utils","","",null,null],[5,"iterate_directory","stdlib::utils","Helper function to iterate through all the files in the…",null,[[["path",3]]]],[17,"STD_LIB_DIR","stdlib","",null,null],[17,"MOVE_EXTENSION","","",null,null],[17,"ERROR_DESC_EXTENSION","","",null,null],[17,"COMPILED_EXTENSION","","The extension for compiled files",null,null],[17,"TRANSACTION_SCRIPTS","","",null,null],[17,"COMPILED_OUTPUT_PATH","","The output path under which compiled files will be put",null,null],[17,"COMPILED_STDLIB_DIR","","The file name for the compiled stdlib",null,null],[17,"DEBUG_MODULE_FILE_NAME","","The file name of the debug module",null,null],[17,"STD_LIB_DOC_DIR","","The output path for stdlib documentation.",null,null],[17,"TRANSACTION_SCRIPTS_DOC_DIR","","The output path for transaction script documentation.",null,null],[17,"STD_LIB_DOC_TEMPLATE","","The documentation root template for stdlib.",null,null],[17,"TRANSACTION_SCRIPT_DOC_TEMPLATE","","The documentation root template for scripts.",null,null],[17,"SPEC_DOC_TEMPLATE","","The specification root template for scripts and stdlib.",null,null],[17,"REFERENCES_DOC_TEMPLATE","","Path to the references template.",null,null],[17,"ERROR_DESC_DIR","","",null,null],[17,"ERROR_DESC_FILENAME","","",null,null],[17,"PACKED_TYPES_DIR","","",null,null],[17,"PACKED_TYPES_FILENAME","","",null,null],[17,"PACKED_TYPES_EXTENSION","","",null,null],[17,"COMPILED_TRANSACTION_SCRIPTS_DIR","","The output path under which compiled script files can be…",null,null],[17,"COMPILED_TRANSACTION_SCRIPTS_ABI_DIR","","The output path for transaction script ABIs.",null,null],[17,"TRANSACTION_BUILDERS_GENERATED_SOURCE_PATH","","Where to write generated transaction builders.",null,null]],"p":[]},\
"storage_client":{"doc":"","i":[[3,"StorageClient","storage_client","",null,null],[11,"new","","",0,[[["socketaddr",4]]]],[11,"get_account_state_with_proof_by_version","","",0,[[["accountaddress",3],["version",6]],[["result",4],["error",4]]]],[11,"get_startup_info","","",0,[[],[["result",4],["option",4],["error",4]]]],[11,"save_transactions","","",0,[[["transactiontocommit",3],["ledgerinfowithsignatures",4],["vec",3],["version",6],["option",4]],[["result",4],["error",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"get_account_state_with_proof_by_version","","",0,[[["accountaddress",3]],["result",6]]],[11,"get_startup_info","","",0,[[],[["result",6],["option",4]]]],[11,"get_latest_account_state","","",0,[[["accountaddress",3]],[["option",4],["result",6]]]],[11,"get_latest_ledger_info","","",0,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[11,"get_txn_by_account","","",0,[[["accountaddress",3]],[["result",6],["option",4]]]],[11,"get_transactions","","",0,[[],[["result",6],["transactionlistwithproof",3]]]],[11,"get_events","","",0,[[["eventkey",3],["order",4]],[["result",6],["vec",3]]]],[11,"get_events_with_proofs","","",0,[[["option",4],["eventkey",3],["order",4]],[["vec",3],["result",6]]]],[11,"get_state_proof","","",0,[[],["result",6]]],[11,"get_state_proof_with_ledger_info","","",0,[[["ledgerinfowithsignatures",4]],["result",6]]],[11,"get_account_state_with_proof","","",0,[[["accountaddress",3],["version",6]],[["result",6],["accountstatewithproof",3]]]],[11,"get_latest_state_root","","",0,[[],["result",6]]],[11,"get_latest_tree_state","","",0,[[],[["result",6],["treestate",3]]]],[11,"get_epoch_ending_ledger_infos","","",0,[[],[["epochchangeproof",3],["result",6]]]],[11,"get_epoch_ending_ledger_info","","",0,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[11,"get_block_timestamp","","",0,[[],["result",6]]],[11,"save_transactions","","",0,[[["ledgerinfowithsignatures",4],["option",4],["version",6]],["result",6]]]],"p":[[3,"StorageClient"]]},\
"storage_interface":{"doc":"","i":[[3,"StartupInfo","storage_interface","",null,null],[12,"latest_ledger_info","","The latest ledger info.",0,null],[12,"latest_epoch_state","","If the above ledger info doesn\'t carry a validator set,…",0,null],[12,"committed_tree_state","","",0,null],[12,"synced_tree_state","","",0,null],[3,"TreeState","","",null,null],[12,"num_transactions","","",1,null],[12,"ledger_frozen_subtree_hashes","","",1,null],[12,"account_state_root_hash","","",1,null],[3,"DbReaderWriter","","",null,null],[12,"reader","","",2,null],[12,"writer","","",2,null],[3,"GetAccountStateWithProofByVersionRequest","","",null,null],[12,"address","","The access path to query with.",3,null],[12,"version","","The version the query is based on.",3,null],[3,"SaveTransactionsRequest","","",null,null],[12,"txns_to_commit","","",4,null],[12,"first_version","","",4,null],[12,"ledger_info_with_signatures","","",4,null],[4,"Error","","",null,null],[13,"ServiceError","","",5,null],[12,"error","storage_interface::Error","",6,null],[13,"SerializationError","storage_interface","",5,null],[4,"Order","","",null,null],[13,"Ascending","","",7,null],[13,"Descending","","",7,null],[4,"StorageRequest","","Network types for storage service",null,null],[13,"GetAccountStateWithProofByVersionRequest","","",8,null],[13,"GetStartupInfoRequest","","",8,null],[13,"SaveTransactionsRequest","","",8,null],[0,"mock","","This module provides mock dbreader for tests.",null,null],[3,"MockDbReader","storage_interface::mock","This is a mock of the dbreader in tests.",null,null],[0,"state_view","storage_interface","",null,null],[3,"VerifiedStateView","storage_interface::state_view","`VerifiedStateView` is like a snapshot of the global state…",null,null],[11,"new","","Constructs a [`VerifiedStateView`] with persistent state…",9,[[["sparsemerkletree",3],["version",6],["arc",3],["dbreader",8],["option",4],["hashvalue",3],["stateviewid",4]]]],[8,"DbReader","storage_interface","Trait that is implemented by a DB that supports certain…",null,null],[10,"get_epoch_ending_ledger_infos","","See `DiemDB::get_epoch_ending_ledger_infos`.",10,[[],[["epochchangeproof",3],["result",6]]]],[10,"get_transactions","","See `DiemDB::get_transactions`.",10,[[["version",6]],[["transactionlistwithproof",3],["result",6]]]],[10,"get_events","","Returns events by given event key",10,[[["order",4],["eventkey",3]],[["result",6],["vec",3]]]],[10,"get_events_with_proofs","","Returns events by given event key",10,[[["order",4],["option",4],["eventkey",3]],[["vec",3],["result",6]]]],[10,"get_block_timestamp","","See `DiemDB::get_block_timestamp`.",10,[[],["result",6]]],[10,"get_latest_account_state","","See `DiemDB::get_latest_account_state`.",10,[[["accountaddress",3]],[["option",4],["result",6]]]],[10,"get_latest_ledger_info","","Returns the latest ledger info.",10,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[11,"get_latest_version","","Returns the latest ledger info.",10,[[],[["result",6],["version",6]]]],[11,"get_latest_commit_metadata","","Returns the latest version and committed block timestamp",10,[[],["result",6]]],[10,"get_startup_info","","Gets information needed from storage during the main node…",10,[[],[["option",4],["result",6]]]],[10,"get_txn_by_account","","",10,[[["accountaddress",3],["version",6]],[["result",6],["option",4]]]],[10,"get_state_proof_with_ledger_info","","Returns proof of new state for a given ledger info with…",10,[[["ledgerinfowithsignatures",4]],["result",6]]],[10,"get_state_proof","","Returns proof of new state relative to version known to…",10,[[],["result",6]]],[10,"get_account_state_with_proof","","Returns the account state corresponding to the given…",10,[[["accountaddress",3],["version",6]],[["result",6],["accountstatewithproof",3]]]],[10,"get_account_state_with_proof_by_version","","",10,[[["accountaddress",3],["version",6]],["result",6]]],[10,"get_latest_state_root","","See `DiemDB::get_latest_state_root`.",10,[[],["result",6]]],[10,"get_latest_tree_state","","Gets the latest TreeState no matter if db has been…",10,[[],[["result",6],["treestate",3]]]],[10,"get_epoch_ending_ledger_info","","Get the ledger info of the epoch that `known_version`…",10,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[11,"get_latest_transaction_info_option","","Gets the latest transaction info. N.B. Unlike…",10,[[],[["option",4],["result",6]]]],[11,"get_accumulator_root_hash","","Gets the transaction accumulator root hash at specified…",10,[[["version",6]],[["hashvalue",3],["result",6]]]],[8,"DbWriter","","Trait that is implemented by a DB that supports certain…",null,null],[10,"save_transactions","","Persist transactions. Called by the executor module when…",11,[[["option",4],["ledgerinfowithsignatures",4],["version",6]],["result",6]]],[11,"new","","",0,[[["epochstate",3],["ledgerinfowithsignatures",4],["option",4],["treestate",3],["option",4]]]],[11,"new_for_testing","","",0,[[]]],[11,"get_epoch_state","","",0,[[],["epochstate",3]]],[11,"new","","",1,[[["vec",3],["leafcount",6],["hashvalue",3]]]],[11,"describe","","",1,[[]]],[11,"new","","",2,[[["dbreader",8],["dbwriter",8]]]],[11,"from_arc","","",2,[[["dbreader",8],["arc",3],["dbwriter",8]]]],[11,"wrap","","",2,[[["dbreader",8],["dbwriter",8]]]],[11,"new","","Constructor.",3,[[["accountaddress",3],["version",6]]]],[11,"new","","Constructor.",4,[[["version",6],["transactiontocommit",3],["vec",3],["option",4],["ledgerinfowithsignatures",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"equivalent","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"equivalent","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"test_only_hash","","",8,[[],["hashvalue",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"erased_serialize","","",8,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","storage_interface::mock","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","storage_interface::state_view","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"get_epoch_ending_ledger_infos","storage_interface::mock","",12,[[],[["epochchangeproof",3],["result",6]]]],[11,"get_transactions","","",12,[[["version",6]],[["transactionlistwithproof",3],["result",6]]]],[11,"get_events","","Returns events by given event key",12,[[["order",4],["eventkey",3]],[["result",6],["vec",3]]]],[11,"get_events_with_proofs","","Returns events by given event key",12,[[["order",4],["option",4],["eventkey",3]],[["vec",3],["result",6]]]],[11,"get_block_timestamp","","",12,[[],["result",6]]],[11,"get_latest_account_state","","",12,[[["accountaddress",3]],[["option",4],["result",6]]]],[11,"get_latest_ledger_info","","Returns the latest ledger info.",12,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[11,"get_startup_info","","",12,[[],[["option",4],["result",6]]]],[11,"get_txn_by_account","","",12,[[["accountaddress",3],["version",6]],[["result",6],["option",4]]]],[11,"get_state_proof_with_ledger_info","","",12,[[["ledgerinfowithsignatures",4]],["result",6]]],[11,"get_state_proof","","",12,[[],["result",6]]],[11,"get_account_state_with_proof","","",12,[[["accountaddress",3],["version",6]],[["result",6],["accountstatewithproof",3]]]],[11,"get_account_state_with_proof_by_version","","",12,[[["accountaddress",3],["version",6]],["result",6]]],[11,"get_latest_state_root","","",12,[[],["result",6]]],[11,"get_latest_tree_state","","",12,[[],[["result",6],["treestate",3]]]],[11,"get_epoch_ending_ledger_info","","",12,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[11,"from","storage_interface","",5,[[["error",3]]]],[11,"from","","",5,[[["error",4]]]],[11,"from","","",5,[[["error",4]]]],[11,"from","","",2,[[]]],[11,"into","storage_interface::state_view","",9,[[]]],[11,"clone","storage_interface","",0,[[],["startupinfo",3]]],[11,"clone","","",1,[[],["treestate",3]]],[11,"clone","","",7,[[],["order",4]]],[11,"clone","","",2,[[],["dbreaderwriter",3]]],[11,"clone","","",8,[[],["storagerequest",4]]],[11,"clone","","",3,[[],["getaccountstatewithproofbyversionrequest",3]]],[11,"clone","","",4,[[],["savetransactionsrequest",3]]],[11,"eq","","",0,[[["startupinfo",3]]]],[11,"ne","","",0,[[["startupinfo",3]]]],[11,"eq","","",1,[[["treestate",3]]]],[11,"ne","","",1,[[["treestate",3]]]],[11,"eq","","",5,[[["error",4]]]],[11,"ne","","",5,[[["error",4]]]],[11,"eq","","",7,[[["order",4]]]],[11,"eq","","",3,[[["getaccountstatewithproofbyversionrequest",3]]]],[11,"ne","","",3,[[["getaccountstatewithproofbyversionrequest",3]]]],[11,"eq","","",4,[[["savetransactionsrequest",3]]]],[11,"ne","","",4,[[["savetransactionsrequest",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"id","storage_interface::state_view","",9,[[],["stateviewid",4]]],[11,"get","","",9,[[["accesspath",3]],[["result",6],["option",4]]]],[11,"multi_get","","",9,[[],[["result",6],["vec",3]]]],[11,"is_genesis","","",9,[[]]]],"p":[[3,"StartupInfo"],[3,"TreeState"],[3,"DbReaderWriter"],[3,"GetAccountStateWithProofByVersionRequest"],[3,"SaveTransactionsRequest"],[4,"Error"],[13,"ServiceError"],[4,"Order"],[4,"StorageRequest"],[3,"VerifiedStateView"],[8,"DbReader"],[8,"DbWriter"],[3,"MockDbReader"]]},\
"storage_service":{"doc":"This crate implements the storage service.","i":[[3,"StorageService","storage_service","",null,null],[5,"start_storage_service_with_db","","Starts storage service with a given DiemDB",null,[[["nodeconfig",3],["diemdb",3],["arc",3]],["joinhandle",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"clone","","",0,[[],["storageservice",3]]]],"p":[[3,"StorageService"]]},\
"subscription_service":{"doc":"Generic pub/sub service framework","i":[[3,"SubscriptionService","subscription_service","",null,null],[12,"name","","",0,null],[3,"SubscriptionBundle","","",null,null],[12,"configs","","",1,null],[12,"events","","",1,null],[6,"ReconfigSubscription","","A subscription service for on-chain reconfiguration…",null,null],[11,"subscribe","","Constructs an subscription object for `items` Returns the…",0,[[]]],[11,"publish","","",0,[[],["result",6]]],[11,"subscribed_items","","",0,[[]]],[11,"new","","",1,[[["vec",3],["eventkey",3],["configid",3],["vec",3]]]],[11,"subscribe_all","","",0,[[["vec",3],["eventkey",3],["configid",3],["vec",3]]]],[11,"subscribe_all","","",2,[[["vec",3],["eventkey",3],["configid",3],["vec",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"clone","","",1,[[],["subscriptionbundle",3]]]],"p":[[3,"SubscriptionService"],[3,"SubscriptionBundle"],[6,"ReconfigSubscription"]]},\
"swiss_knife":{"doc":"","i":[[0,"helpers","swiss_knife","",null,null],[3,"Response","swiss_knife::helpers","",null,null],[12,"error_message","","",0,null],[12,"data","","",0,null],[5,"exit_success_with_data","","",null,[[["serialize",8]]]],[5,"exit_with_error","","",null,[[["display",8]]]],[5,"hex_decode","","",null,[[],["vec",3]]],[5,"read_stdin","","",null,[[],["string",3]]],[5,"coin_tag_parser","","",null,[[],["typetag",4]]],[5,"account_address_parser","","",null,[[],["accountaddress",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]]],"p":[[3,"Response"]]},\
"test_generation":{"doc":"","i":[[4,"Status","test_generation","",null,null],[13,"VerificationFailure","","",0,null],[13,"ExecutionFailure","","",0,null],[13,"Valid","","",0,null],[5,"module_frame_generation","","",null,[[["status",4],["receiver",3],["sender",3],["option",4],["compiledmodulemut",3]]]],[5,"bytecode_generation","","",null,[[["status",4],["stdrng",3],["string",3],["option",4],["sender",3],["receiver",3],["compiledmodulemut",3]]]],[5,"run_generation","","Run generate_bytecode for the range passed in and test…",null,[[["args",3]]]],[5,"kind","","",null,[[["signaturetoken",4]],["kind",4]]],[0,"abstract_state","","",null,null],[3,"AbstractValue","test_generation::abstract_state","This models a value on the stack or in the locals",null,null],[12,"token","","Represents the type of the value",1,null],[12,"kind","","Represents the kind of the value",1,null],[3,"CallGraph","","",null,null],[3,"InstantiableModule","","During the generation of a bytecode sequence, specific…",null,null],[12,"module","","",2,null],[3,"AbstractState","","An AbstractState represents an abstract view of the…",null,null],[12,"instantiation","","A vector of type kinds for any generic function type…",3,null],[12,"module","","The module state",3,null],[12,"acquires_global_resources","","The global resources acquired by the function…",3,null],[12,"call_graph","","",3,null],[4,"BorrowState","","The BorrowState denotes whether a local is `Available` or…",null,null],[13,"Available","","",4,null],[13,"Unavailable","","",4,null],[4,"Mutability","","This models the mutability of a reference",null,null],[13,"Mutable","","Represents a mutable reference",5,null],[13,"Immutable","","Represents an immutable reference",5,null],[13,"Either","","When we don\'t need to specify whether the reference is…",5,null],[11,"new_primitive","","Create a new primitive `AbstractValue` given its type; the…",1,[[["signaturetoken",4]],["abstractvalue",3]]],[11,"new_reference","","Create a new reference `AbstractValue` given its type and…",1,[[["kind",4],["signaturetoken",4]],["abstractvalue",3]]],[11,"new_struct","","Create a new struct `AbstractValue` given its type and kind",1,[[["kind",4],["signaturetoken",4]],["abstractvalue",3]]],[11,"new_value","","",1,[[["kind",4],["signaturetoken",4]],["abstractvalue",3]]],[11,"is_generic","","Predicate on whether the type of the abstract value is…",1,[[]]],[11,"new","","",6,[[]]],[11,"add_call","","",6,[[["functionhandleindex",3]]]],[11,"can_call","","",6,[[["functionhandleindex",3]],[["vec",3],["functionhandleindex",3]]]],[11,"max_calling_depth","","",6,[[["functionhandleindex",3]]]],[11,"call_depth","","None if recursive, Some(index) if non-recursive, and index…",6,[[["functionhandleindex",3]],["option",4]]],[11,"new","","",2,[[["compiledmodule",3]]]],[11,"add_instantiation","","If the `instantiant` is not in the `instantiations` table,…",2,[[["vec",3],["signaturetoken",4]],["signatureindex",3]]],[11,"add_struct_instantiation","","If the `instantiant` is not in the `struct_instantiations`…",2,[[["structdefinstantiation",3]],["structdefinstantiationindex",3]]],[11,"add_function_instantiation","","If the `instantiant` is not in the…",2,[[["functioninstantiation",3]],["functioninstantiationindex",3]]],[11,"add_field_instantiation","","If the `instantiant` is not in the `field_instantiations`…",2,[[["fieldinstantiation",3]],["fieldinstantiationindex",3]]],[11,"instantiantiation_at","","Returns the type instantiation at `index`. Errors if the…",2,[[["signatureindex",3]],["vec",3]]],[11,"struct_instantiantiation_at","","Returns the struct instantiation at `index`. Errors if the…",2,[[["structdefinstantiationindex",3]],["structdefinstantiation",3]]],[11,"function_instantiantiation_at","","Returns the struct instantiation at `index`. Errors if the…",2,[[["functioninstantiationindex",3]],["functioninstantiation",3]]],[11,"field_instantiantiation_at","","Returns the struct instantiation at `index`. Errors if the…",2,[[["fieldinstantiationindex",3]],["fieldinstantiation",3]]],[11,"instantiate","","Consumes self, and adds the instantiations that have been…",2,[[],["compiledmodulemut",3]]],[11,"new","","Create a new AbstractState with empty stack, locals, and…",3,[[],["abstractstate",3]]],[11,"from_locals","","Create a new AbstractState given a list of…",3,[[["structdefinitionindex",3],["hashmap",3],["vec",3],["vec",3],["kind",4],["compiledmodulemut",3],["callgraph",3]],["abstractstate",3]]],[11,"register_copy","","Get the register value",3,[[],[["option",4],["abstractvalue",3]]]],[11,"register_move","","Get the register value and set it to `None`",3,[[],[["option",4],["abstractvalue",3]]]],[11,"register_set","","Set the register value and set it to `None`",3,[[["abstractvalue",3]]]],[11,"stack_push","","Add a `AbstractValue` to the stack",3,[[["abstractvalue",3]]]],[11,"stack_push_register","","Add a `AbstractValue` to the stack from the register If…",3,[[],[["result",4],["vmerror",3]]]],[11,"stack_pop","","Remove an `AbstractValue` from the stack if it exists to…",3,[[],[["result",4],["vmerror",3]]]],[11,"stack_peek","","Get the `AbstractValue` at index `index` on the stack if…",3,[[],[["option",4],["abstractvalue",3]]]],[11,"stack_len","","Get the length of the stack.",3,[[]]],[11,"local_exists","","Check if the local at index `i` exists",3,[[]]],[11,"local_get","","Get the local at index `i` if it exists",3,[[],["option",4]]],[11,"local_take","","Place the local at index `i` if it exists into the…",3,[[],[["result",4],["vmerror",3]]]],[11,"local_take_borrow","","Place a reference to the local at index `i` if it exists…",3,[[["mutability",4]],[["result",4],["vmerror",3]]]],[11,"local_set","","Set the availability of the local at index `i` If it does…",3,[[["borrowstate",4]],[["result",4],["vmerror",3]]]],[11,"local_availability_is","","Check whether a local is in a particular `BorrowState` If…",3,[[["borrowstate",4]],[["vmerror",3],["result",4]]]],[11,"local_kind_is","","Check whether a local is in a particular `Kind` If the…",3,[[["kind",4]],[["vmerror",3],["result",4]]]],[11,"local_insert","","Insert a local at index `i` as `Available`",3,[[["borrowstate",4],["abstractvalue",3]]]],[11,"local_place","","Insert a local at index `i` as `Available` from the…",3,[[],[["result",4],["vmerror",3]]]],[11,"get_locals","","Get all of the locals",3,[[],["hashmap",3]]],[11,"abort","","Set the abstract state to be `aborted` when a precondition…",3,[[]]],[11,"has_aborted","","Whether the state is aborted",3,[[]]],[11,"allow_control_flow","","Set the abstract state to allow generation of control flow…",3,[[]]],[11,"is_control_flow_allowed","","Predicate determining if control flow instructions can be…",3,[[]]],[11,"is_final","","The final state is one where the stack is empty",3,[[]]],[0,"borrow_graph","test_generation","",null,null],[3,"BorrowGraph","test_generation::borrow_graph","The `BorrowGraph` stores information sufficient to…",null,null],[4,"EdgeType","","The `EdgeType` is either weak or strong. A weak edge…",null,null],[13,"Weak","","",7,null],[13,"Strong","","",7,null],[11,"new","","Construct a new `BorrowGraph` given the number of locals…",8,[[],["borrowgraph",3]]],[11,"fresh_partition","","Add a new partition to the graph containing nonce `n` This…",8,[[],[["result",4],["string",3]]]],[11,"partition_mutability","","Determine whether a partition is mutable, immutable, or…",8,[[],[["mutability",4],["result",4],["string",3]]]],[11,"partition_freezable","","Determine whether the given partition is freezable. This…",8,[[],[["result",4],["string",3]]]],[11,"edges_consistent","","Determine whether two edges are consistent; i.e. whether…",8,[[]]],[0,"bytecode_generator","test_generation","",null,null],[3,"FunctionGenerationContext","test_generation::bytecode_generator","Context containing information about a function",null,null],[12,"function_handle_index","","",9,null],[12,"starting_call_height","","",9,null],[12,"locals_len","","",9,null],[12,"bytecode_len","","",9,null],[3,"BytecodeGenerator","","Generates a sequence of bytecode instructions. This…",null,null],[11,"new","","",9,[[["functionhandleindex",3]]]],[11,"incr_instruction_count","","",9,[[],["option",4]]],[11,"new","","The `BytecodeGenerator` is instantiated with a seed to use…",10,[[["stdrng",3]]]],[11,"apply_instruction","","Transition an abstract state, `state` to the next state…",10,[[["functiongenerationcontext",3],["bytecode",4],["vec",3],["abstractstate",3]],[["abstractstate",3],["option",4]]]],[11,"generate_block","","Given a valid starting state `abstract_state_in`, generate…",10,[[["abstractstate",3],["functiongenerationcontext",3],["compiledmodulemut",3]],["option",4]]],[11,"generate","","Generate the body of a function definition given a set of…",10,[[["functionhandle",3],["functiongenerationcontext",3],["compiledmodulemut",3],["callgraph",3]],[["option",4],["vec",3]]]],[11,"generate_module","","",10,[[["compiledmodulemut",3]],[["option",4],["compiledmodulemut",3]]]],[11,"inhabit_with_bytecode_seq","","Generate a sequence of instructions whose overall effect…",10,[[["signaturetoken",4],["instantiablemodule",3]],[["vec",3],["bytecode",4]]]],[0,"config","test_generation","",null,null],[3,"Args","test_generation::config","Command line arguments for the tool",null,null],[12,"num_iterations","","The optional number of programs that will be generated. If…",11,null],[12,"output_path","","Path where a serialized module should be saved. If `None`,…",11,null],[12,"seed","","The optional seed used for test generation.",11,null],[12,"num_threads","","The optional number of threads to use for test generation.",11,null],[5,"module_generation_settings","","The module generation settings that are used for…",null,[[],["modulegeneratoroptions",3]]],[17,"MUTATION_TOLERANCE","","This defines how tolerant the generator will be about…",null,null],[17,"MAX_CFG_BLOCKS","","This defines the maximum number of blocks that will be…",null,null],[17,"NEGATE_PRECONDITIONS","","Whether preconditions will be negated to generate invalid…",null,null],[17,"NEGATION_PROBABILITY","","The probability that preconditions will be negated for a…",null,null],[17,"ALLOW_MEMORY_UNSAFE","","Whether generation of instructions that require borrow…",null,null],[17,"RUN_ON_VM","","Whether the generated programs should be run on the VM…",null,null],[17,"EXECUTE_UNVERIFIED_MODULE","","Whether generated modules will be executed even if they…",null,null],[17,"GAS_METERING","","Whether gas will be metered when running generated…",null,null],[17,"CALL_STACK_LIMIT","","Call stack height limit. This is defined in the VM, and is…",null,null],[17,"VALUE_STACK_LIMIT","","The value stack size limit. This is defined in the VM and…",null,null],[17,"INHABITATION_INSTRUCTION_LIMIT","","Certain randomly generated types can lead to extremely…",null,null],[0,"control_flow_graph","test_generation","",null,null],[3,"BasicBlock","test_generation::control_flow_graph","This represents a basic block in a control flow graph",null,null],[3,"CFG","","A control flow graph",null,null],[11,"new","","",12,[[],["basicblock",3]]],[11,"get_locals_in","","Get the locals coming into the block",12,[[],["hashmap",3]]],[11,"get_locals_out","","Get the locals going out of the block",12,[[],["hashmap",3]]],[11,"set_instructions","","Set the list of instructions that comprise the block",12,[[["vec",3],["bytecode",4]]]],[11,"new","","Construct a control flow graph that contains empty basic…",13,[[["signature",3],["stdrng",3]],["cfg",3]]],[11,"get_basic_blocks","","Get a reference to all of the basic blocks of the CFG",13,[[],["hashmap",3]]],[11,"get_basic_blocks_mut","","Get a mutable reference to all of the basic blocks of the…",13,[[],["hashmap",3]]],[11,"get_children_ids","","Retrieve the block IDs of all children of the given basic…",13,[[],["vec",3]]],[11,"num_children","","Retrieve the number of children the given basic block…",13,[[]]],[11,"get_parent_ids","","Retrieve the block IDs of all parents of the given basic…",13,[[],["vec",3]]],[11,"num_parents","","Retrieve the number of parents the given basic block…",13,[[]]],[11,"serialize_block_order","","Decide the serialization order of the blocks in the CFG",13,[[],["vec",3]]],[11,"serialize","","Serialize the control flow graph into a sequence of…",13,[[],[["vec",3],["bytecode",4]]]],[0,"error","test_generation","",null,null],[3,"VMError","test_generation::error","This struct represents an error that is returned during…",null,null],[11,"new","","",14,[[["string",3]],["vmerror",3]]],[0,"summaries","test_generation","",null,null],[3,"Summary","test_generation::summaries","The `Summary` of a bytecode instruction contains a list of…",null,null],[12,"preconditions","","",15,null],[12,"effects","","",15,null],[4,"Effects","","",null,null],[13,"NoTyParams","","",16,null],[13,"TyParams","","",16,null],[13,"TyParamsCall","","",16,null],[5,"instruction_summary","","Return the `Summary` for a bytecode instruction,…",null,[[["bytecode",4]],["summary",3]]],[6,"Precondition","","A `Precondition` is a boolean predicate on an…",null,null],[6,"NonInstantiableEffect","","A `Effect` is a function that transforms on…",null,null],[6,"InstantiableEffect","","",null,null],[6,"FunctionInstantiableEffect","","",null,null],[0,"transitions","test_generation","",null,null],[3,"Subst","test_generation::transitions","A substitution is a mapping from type formal index to the…",null,null],[12,"subst","","",17,null],[4,"StackBinOpResult","","",null,null],[13,"Left","","",18,null],[13,"Right","","",18,null],[13,"Other","","",18,null],[5,"kind_for_token","","Given a signature token, returns the kind of this token in…",null,[[["abstractstate",3],["signaturetoken",4]],["kind",4]]],[5,"kinds_for_instantiation","","Given a locals signature index, determine the kind for…",null,[[["abstractstate",3]],[["kind",4],["vec",3]]]],[5,"stack_has_integer","","Determine whether the stack contains an integer value at…",null,[[["abstractstate",3]]]],[5,"stack_top_is_castable_to","","",null,[[["abstractstate",3],["signaturetoken",4]]]],[5,"stack_kind_is","","Determine the abstract value at `index` is of the given…",null,[[["abstractstate",3],["kind",4]]]],[5,"stack_kind_is_subkind","","Determine if the abstract value at `index` has a kind that…",null,[[["abstractstate",3],["kind",4]]]],[5,"local_kind_is","","Check whether the local at `index` is of the given kind",null,[[["abstractstate",3],["kind",4]]]],[5,"stack_has","","Determine whether the stack is at least of size `index`.…",null,[[["abstractstate",3],["option",4],["abstractvalue",3]]]],[5,"stack_has_polymorphic_eq","","Determine whether two tokens on the stack have the same type",null,[[["abstractstate",3]]]],[5,"stack_local_polymorphic_eq","","Determine whether an abstract value on the stack and a…",null,[[["abstractstate",3]]]],[5,"local_exists","","Check whether the local at `index` exists",null,[[["abstractstate",3]]]],[5,"local_availability_is","","Check whether the local at `index` is of the given…",null,[[["abstractstate",3],["borrowstate",4]]]],[5,"stack_ref_polymorphic_eq","","Determine whether an abstract value on the stack that is a…",null,[[["abstractstate",3]]]],[5,"stack_pop","","Pop from the top of the stack.",null,[[["abstractstate",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"stack_bin_op","","Perform a binary operation using the top two values on the…",null,[[["abstractstate",3],["stackbinopresult",4]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"stack_push","","Push given abstract_value to the top of the stack.",null,[[["abstractstate",3],["abstractvalue",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"stack_push_register","","Push to the top of the stack from the register.",null,[[["abstractstate",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"local_set","","Set the availability of local at `index`",null,[[["abstractstate",3],["borrowstate",4]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"local_take","","Put copy of the local at `index` in register",null,[[["abstractstate",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"local_take_borrow","","Put reference to local at `index` in register",null,[[["abstractstate",3],["mutability",4]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"local_place","","Insert the register value into the locals at `index`",null,[[["abstractstate",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"stack_satisfies_struct_instantiation","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]]]],[5,"stack_satisfies_struct_signature","","Determine whether the struct at the given index can be…",null,[[["abstractstate",3],["structdefinitionindex",3],["signatureindex",3],["option",4]]]],[5,"get_struct_instantiation_for_state","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]]]],[5,"stack_has_struct","","Determine if a struct (of the given signature) is at the…",null,[[["abstractstate",3],["structdefinitionindex",3]]]],[5,"stack_has_struct_inst","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]]]],[5,"struct_is_resource","","Determine if a struct at the given index is a resource",null,[[["abstractstate",3],["structdefinitionindex",3]]]],[5,"struct_inst_is_resource","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]]]],[5,"stack_struct_has_field_inst","","",null,[[["abstractstate",3],["fieldinstantiationindex",3]]]],[5,"stack_struct_has_field","","",null,[[["abstractstate",3],["fieldhandleindex",3]]]],[5,"stack_has_reference","","Determine whether the stack has a reference at `index`…",null,[[["abstractstate",3],["mutability",4]]]],[5,"stack_struct_inst_popn","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"stack_struct_popn","","Pop the number of stack values required to construct the…",null,[[["abstractstate",3],["structdefinitionindex",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"create_struct_from_inst","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"create_struct","","Construct a struct from abstract values on the stack The…",null,[[["abstractstate",3],["structdefinitionindex",3],["signatureindex",3],["option",4]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"stack_unpack_struct_instantiation","","",null,[[["abstractstate",3]]]],[5,"stack_unpack_struct_inst","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"stack_unpack_struct","","Push the fields of a struct as `AbstractValue`s to the stack",null,[[["abstractstate",3],["structdefinitionindex",3],["signatureindex",3],["option",4]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"struct_ref_instantiation","","",null,[[["abstractstate",3]],[["result",4],["vec",3],["vmerror",3]]]],[5,"stack_struct_borrow_field","","Push the field at `field_index` of a struct as an…",null,[[["abstractstate",3],["fieldhandleindex",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"stack_struct_borrow_field_inst","","",null,[[["abstractstate",3],["fieldinstantiationindex",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"register_dereference","","Dereference the value stored in the register. If the value…",null,[[["abstractstate",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"stack_push_register_borrow","","Push a reference to a register value with the given…",null,[[["abstractstate",3],["mutability",4]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"stack_satisfies_function_signature","","Determine whether the function at the given index can be…",null,[[["abstractstate",3],["functionhandleindex",3]]]],[5,"stack_satisfies_function_inst_signature","","",null,[[["abstractstate",3],["functioninstantiationindex",3]]]],[5,"function_can_acquire_resource","","Whether the function acquires any global resources or not",null,[[["abstractstate",3]]]],[5,"stack_function_call","","Simulate calling the function at `function_index`",null,[[["abstractstate",3],["signatureindex",3],["functionhandleindex",3],["option",4]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"stack_function_inst_call","","",null,[[["abstractstate",3],["functioninstantiationindex",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"get_function_instantiation_for_state","","",null,[[["abstractstate",3],["functioninstantiationindex",3]]]],[5,"stack_function_popn","","Pop the number of stack values required to call the…",null,[[["abstractstate",3],["functionhandleindex",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"stack_function_inst_popn","","",null,[[["abstractstate",3],["functioninstantiationindex",3]],[["abstractstate",3],["vmerror",3],["result",4]]]],[5,"memory_safe","","TODO: This is a temporary function that represents memory…",null,[[["abstractstate",3],["option",4]]]],[11,"new","","",17,[[]]],[11,"check_and_add","","NB that the position of arguments here matters. We can…",17,[[["abstractstate",3],["signaturetoken",4]]]],[11,"instantiation","","Return the instantiation from the substitution that has…",17,[[],[["vec",3],["signaturetoken",4]]]],[14,"state_stack_has","test_generation","Wrapper for enclosing the arguments of `stack_has` so that…",null,null],[14,"state_stack_is_castable","","Determines if the type at the top of the abstract stack is…",null,null],[14,"state_stack_has_integer","","Wrapper for enclosing the arguments of `stack_has_integer`…",null,null],[14,"state_stack_kind_is","","Wrapper for enclosing the arguments of `stack_kind_is` so…",null,null],[14,"state_stack_has_polymorphic_eq","","Wrapper for for enclosing the arguments of…",null,null],[14,"state_stack_pop","","Wrapper for enclosing the arguments of `stack_pop` so that…",null,null],[14,"state_stack_push","","Wrapper for enclosing the arguments of `stack_push` so…",null,null],[14,"state_stack_push_register","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_local_polymorphic_eq","","Wrapper for enclosing the arguments of…",null,null],[14,"state_local_exists","","Wrapper for enclosing the arguments of `local_exists` so…",null,null],[14,"state_local_availability_is","","Wrapper for enclosing the arguments of…",null,null],[14,"state_local_kind_is","","Wrapper for enclosing the arguments of `local_kind_is` so…",null,null],[14,"state_local_set","","Wrapper for enclosing the arguments of `local_set` so that…",null,null],[14,"state_local_take","","Wrapper for enclosing the arguments of `local_take` so…",null,null],[14,"state_local_take_borrow","","Wrapper for enclosing the arguments of `local_take_borrow`…",null,null],[14,"state_local_place","","Wrapper for enclosing the arguments of `local_palce` so…",null,null],[14,"state_stack_ref_polymorphic_eq","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_satisfies_struct_signature","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_struct_inst_popn","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_struct_popn","","Wrapper for enclosing the arguments of `stack_struct_popn`…",null,null],[14,"state_create_struct","","Wrapper for enclosing the arguments of `stack_pack_struct`…",null,null],[14,"state_create_struct_from_inst","","",null,null],[14,"state_stack_has_struct","","Wrapper for enclosing the arguments of `stack_has_struct`…",null,null],[14,"state_stack_has_struct_inst","","",null,null],[14,"state_stack_unpack_struct","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_unpack_struct_inst","","",null,null],[14,"state_struct_is_resource","","Wrapper for enclosing the arguments of…",null,null],[14,"state_struct_inst_is_resource","","",null,null],[14,"state_stack_struct_has_field","","Wrapper for enclosing the arguments of `struct_has_field`…",null,null],[14,"state_stack_struct_has_field_inst","","",null,null],[14,"state_stack_struct_borrow_field","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_struct_borrow_field_inst","","",null,null],[14,"state_stack_has_reference","","Wrapper for enclosing the arguments of…",null,null],[14,"state_register_dereference","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_push_register_borrow","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_satisfies_function_signature","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_satisfies_function_inst_signature","","",null,null],[14,"state_stack_function_popn","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_function_inst_popn","","",null,null],[14,"state_stack_function_call","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_function_inst_call","","",null,null],[14,"function_instantiation_for_state","","Determine the proper type instantiation for function call…",null,null],[14,"state_function_can_acquire_resource","","Wrapper for enclosing the arguments of…",null,null],[14,"state_memory_safe","","Wrapper for enclosing the arguments of `memory_safe` so…",null,null],[14,"state_never","","Predicate that is false for every state.",null,null],[14,"state_stack_bin_op","","",null,null],[14,"state_control_flow","","Predicate that is false for every state, unless control…",null,null],[14,"struct_instantiation_for_state","","Determine the proper type instantiation for struct in the…",null,null],[14,"unpack_instantiation_for_state","","Determine the proper type instantiation for struct in the…",null,null],[14,"with_ty_param","","A wrapper around type instantiation, that allows…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","test_generation::abstract_state","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","test_generation::borrow_graph","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","test_generation::bytecode_generator","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","test_generation::config","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","test_generation::control_flow_graph","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","test_generation::error","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","test_generation::summaries","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","test_generation::transitions","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"clone","test_generation::abstract_state","",4,[[],["borrowstate",4]]],[11,"clone","","",1,[[],["abstractvalue",3]]],[11,"clone","","",5,[[],["mutability",4]]],[11,"clone","","",6,[[],["callgraph",3]]],[11,"clone","","",2,[[],["instantiablemodule",3]]],[11,"clone","","",3,[[],["abstractstate",3]]],[11,"clone","test_generation::borrow_graph","",7,[[],["edgetype",4]]],[11,"clone","","",8,[[],["borrowgraph",3]]],[11,"clone","test_generation::bytecode_generator","",9,[[],["functiongenerationcontext",3]]],[11,"clone","test_generation::control_flow_graph","",12,[[],["basicblock",3]]],[11,"clone","","",13,[[],["cfg",3]]],[11,"clone","test_generation","",0,[[],["status",4]]],[11,"default","test_generation::abstract_state","",3,[[]]],[11,"default","test_generation::control_flow_graph","",12,[[],["basicblock",3]]],[11,"default","test_generation::transitions","",17,[[],["subst",3]]],[11,"eq","test_generation::abstract_state","",4,[[["borrowstate",4]]]],[11,"eq","","",1,[[["abstractvalue",3]]]],[11,"ne","","",1,[[["abstractvalue",3]]]],[11,"eq","","",5,[[["mutability",4]]]],[11,"eq","","",6,[[["callgraph",3]]]],[11,"ne","","",6,[[["callgraph",3]]]],[11,"eq","test_generation::borrow_graph","",7,[[["edgetype",4]]]],[11,"eq","","",8,[[["borrowgraph",3]]]],[11,"ne","","",8,[[["borrowgraph",3]]]],[11,"eq","test_generation::bytecode_generator","",9,[[["functiongenerationcontext",3]]]],[11,"ne","","",9,[[["functiongenerationcontext",3]]]],[11,"eq","test_generation","",0,[[["status",4]]]],[11,"fmt","test_generation::abstract_state","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::borrow_graph","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::bytecode_generator","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::config","",11,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::control_flow_graph","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::error","",14,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation","",0,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::abstract_state","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::error","",14,[[["formatter",3]],["result",6]]],[11,"clap","test_generation::config","",11,[[],["app",3]]],[11,"from_clap","","",11,[[["argmatches",3]]]],[11,"augment_clap","","",11,[[["app",3]],["app",3]]],[11,"is_subcommand","","",11,[[]]]],"p":[[4,"Status"],[3,"AbstractValue"],[3,"InstantiableModule"],[3,"AbstractState"],[4,"BorrowState"],[4,"Mutability"],[3,"CallGraph"],[4,"EdgeType"],[3,"BorrowGraph"],[3,"FunctionGenerationContext"],[3,"BytecodeGenerator"],[3,"Args"],[3,"BasicBlock"],[3,"CFG"],[3,"VMError"],[3,"Summary"],[4,"Effects"],[3,"Subst"],[4,"StackBinOpResult"]]},\
"transaction_builder":{"doc":"","i":[[5,"encode_block_prologue_script","transaction_builder","",null,[[["blockmetadata",3]],["transaction",4]]],[5,"encode_stdlib_upgrade_transaction","","Update WriteSet",null,[[["stdliboptions",4]],["changeset",3]]],[5,"get_transaction_name","","Returns a user friendly mnemonic for the transaction type…",null,[[],["string",3]]],[4,"ScriptCall","","Structured representation of a call into a known Move…",null,null],[13,"AddCurrencyToAccount","","SummaryAdds a zero `Currency` balance to the sending…",0,null],[12,"currency","transaction_builder::ScriptCall","",1,null],[13,"AddRecoveryRotationCapability","transaction_builder","SummaryStores the sending accounts ability to rotate its…",0,null],[12,"recovery_address","transaction_builder::ScriptCall","",2,null],[13,"AddToScriptAllowList","transaction_builder","SummaryAdds a script hash to the transaction allowlist.…",0,null],[12,"hash","transaction_builder::ScriptCall","",3,null],[12,"sliding_nonce","","",3,null],[13,"AddValidatorAndReconfigure","transaction_builder","SummaryAdds a validator account to the validator set, and…",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",4,null],[12,"validator_name","","",4,null],[12,"validator_address","","",4,null],[13,"Burn","transaction_builder","SummaryBurns all coins held in the preburn resource at the…",0,null],[12,"token","transaction_builder::ScriptCall","",5,null],[12,"sliding_nonce","","",5,null],[12,"preburn_address","","",5,null],[13,"BurnTxnFees","transaction_builder","SummaryBurns the transaction fees collected in the…",0,null],[12,"coin_type","transaction_builder::ScriptCall","",6,null],[13,"CancelBurn","transaction_builder","SummaryCancels and returns all coins held in the preburn…",0,null],[12,"token","transaction_builder::ScriptCall","",7,null],[12,"preburn_address","","",7,null],[13,"CreateChildVaspAccount","transaction_builder","SummaryCreates a Child VASP account with its parent being…",0,null],[12,"coin_type","transaction_builder::ScriptCall","",8,null],[12,"child_address","","",8,null],[12,"auth_key_prefix","","",8,null],[12,"add_all_currencies","","",8,null],[12,"child_initial_balance","","",8,null],[13,"CreateDesignatedDealer","transaction_builder","SummaryCreates a Designated Dealer account with the…",0,null],[12,"currency","transaction_builder::ScriptCall","",9,null],[12,"sliding_nonce","","",9,null],[12,"addr","","",9,null],[12,"auth_key_prefix","","",9,null],[12,"human_name","","",9,null],[12,"add_all_currencies","","",9,null],[13,"CreateParentVaspAccount","transaction_builder","SummaryCreates a Parent VASP account with the specified…",0,null],[12,"coin_type","transaction_builder::ScriptCall","",10,null],[12,"sliding_nonce","","",10,null],[12,"new_account_address","","",10,null],[12,"auth_key_prefix","","",10,null],[12,"human_name","","",10,null],[12,"add_all_currencies","","",10,null],[13,"CreateRecoveryAddress","transaction_builder","SummaryInitializes the sending account as a recovery…",0,null],[13,"CreateValidatorAccount","","SummaryCreates a Validator account. This transaction can…",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",11,null],[12,"new_account_address","","",11,null],[12,"auth_key_prefix","","",11,null],[12,"human_name","","",11,null],[13,"CreateValidatorOperatorAccount","transaction_builder","SummaryCreates a Validator Operator account. This…",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",12,null],[12,"new_account_address","","",12,null],[12,"auth_key_prefix","","",12,null],[12,"human_name","","",12,null],[13,"FreezeAccount","transaction_builder","SummaryFreezes the account at `address`. The sending…",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",13,null],[12,"to_freeze_account","","",13,null],[13,"PeerToPeerWithMetadata","transaction_builder","SummaryTransfers a given number of coins in a specified…",0,null],[12,"currency","transaction_builder::ScriptCall","",14,null],[12,"payee","","",14,null],[12,"amount","","",14,null],[12,"metadata","","",14,null],[12,"metadata_signature","","",14,null],[13,"Preburn","transaction_builder","SummaryMoves a specified number of coins in a given…",0,null],[12,"token","transaction_builder::ScriptCall","",15,null],[12,"amount","","",15,null],[13,"PublishSharedEd25519PublicKey","transaction_builder","SummaryRotates the authentication key of the sending…",0,null],[12,"public_key","transaction_builder::ScriptCall","",16,null],[13,"RegisterValidatorConfig","transaction_builder","SummaryUpdates a validator\'s configuration. This does not…",0,null],[12,"validator_account","transaction_builder::ScriptCall","",17,null],[12,"consensus_pubkey","","",17,null],[12,"validator_network_addresses","","",17,null],[12,"fullnode_network_addresses","","",17,null],[13,"RemoveValidatorAndReconfigure","transaction_builder","SummaryThis script removes a validator account from the…",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",18,null],[12,"validator_name","","",18,null],[12,"validator_address","","",18,null],[13,"RotateAuthenticationKey","transaction_builder","SummaryRotates the transaction sender\'s authentication key…",0,null],[12,"new_key","transaction_builder::ScriptCall","",19,null],[13,"RotateAuthenticationKeyWithNonce","transaction_builder","SummaryRotates the sender\'s authentication key to the…",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",20,null],[12,"new_key","","",20,null],[13,"RotateAuthenticationKeyWithNonceAdmin","transaction_builder","SummaryRotates the specified account\'s authentication key…",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",21,null],[12,"new_key","","",21,null],[13,"RotateAuthenticationKeyWithRecoveryAddress","transaction_builder","SummaryRotates the authentication key of a specified…",0,null],[12,"recovery_address","transaction_builder::ScriptCall","",22,null],[12,"to_recover","","",22,null],[12,"new_key","","",22,null],[13,"RotateDualAttestationInfo","transaction_builder","SummaryUpdates the url used for off-chain communication,…",0,null],[12,"new_url","transaction_builder::ScriptCall","",23,null],[12,"new_key","","",23,null],[13,"RotateSharedEd25519PublicKey","transaction_builder","SummaryRotates the authentication key in a…",0,null],[12,"public_key","transaction_builder::ScriptCall","",24,null],[13,"SetValidatorConfigAndReconfigure","transaction_builder","SummaryUpdates a validator\'s configuration, and triggers a…",0,null],[12,"validator_account","transaction_builder::ScriptCall","",25,null],[12,"consensus_pubkey","","",25,null],[12,"validator_network_addresses","","",25,null],[12,"fullnode_network_addresses","","",25,null],[13,"SetValidatorOperator","transaction_builder","SummarySets the validator operator for a validator in the…",0,null],[12,"operator_name","transaction_builder::ScriptCall","",26,null],[12,"operator_account","","",26,null],[13,"SetValidatorOperatorWithNonceAdmin","transaction_builder","SummarySets the validator operator for a validator in the…",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",27,null],[12,"operator_name","","",27,null],[12,"operator_account","","",27,null],[13,"TieredMint","transaction_builder","SummaryMints a specified number of coins in a currency to…",0,null],[12,"coin_type","transaction_builder::ScriptCall","",28,null],[12,"sliding_nonce","","",28,null],[12,"designated_dealer_address","","",28,null],[12,"mint_amount","","",28,null],[12,"tier_index","","",28,null],[13,"UnfreezeAccount","transaction_builder","SummaryUnfreezes the account at `address`. The sending…",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",29,null],[12,"to_unfreeze_account","","",29,null],[13,"UpdateDiemVersion","transaction_builder","SummaryUpdates the Diem major version that is stored…",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",30,null],[12,"major","","",30,null],[13,"UpdateDualAttestationLimit","transaction_builder","SummaryUpdate the dual attestation limit on-chain. Defined…",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",31,null],[12,"new_micro_xdx_limit","","",31,null],[13,"UpdateExchangeRate","transaction_builder","SummaryUpdate the rough on-chain exchange rate between a…",0,null],[12,"currency","transaction_builder::ScriptCall","",32,null],[12,"sliding_nonce","","",32,null],[12,"new_exchange_rate_numerator","","",32,null],[12,"new_exchange_rate_denominator","","",32,null],[13,"UpdateMintingAbility","transaction_builder","SummaryScript to allow or disallow minting of new coins in…",0,null],[12,"currency","transaction_builder::ScriptCall","",33,null],[12,"allow_minting","","",33,null],[5,"encode_add_currency_to_account_script","transaction_builder","SummaryAdds a zero `Currency` balance to the sending…",null,[[["typetag",4]],["script",3]]],[5,"encode_add_recovery_rotation_capability_script","","SummaryStores the sending accounts ability to rotate its…",null,[[["accountaddress",3]],["script",3]]],[5,"encode_add_to_script_allow_list_script","","SummaryAdds a script hash to the transaction allowlist.…",null,[[["vec",3]],["script",3]]],[5,"encode_add_validator_and_reconfigure_script","","SummaryAdds a validator account to the validator set, and…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_burn_script","","SummaryBurns all coins held in the preburn resource at the…",null,[[["accountaddress",3],["typetag",4]],["script",3]]],[5,"encode_burn_txn_fees_script","","SummaryBurns the transaction fees collected in the…",null,[[["typetag",4]],["script",3]]],[5,"encode_cancel_burn_script","","SummaryCancels and returns all coins held in the preburn…",null,[[["accountaddress",3],["typetag",4]],["script",3]]],[5,"encode_create_child_vasp_account_script","","SummaryCreates a Child VASP account with its parent being…",null,[[["accountaddress",3],["typetag",4],["vec",3]],["script",3]]],[5,"encode_create_designated_dealer_script","","SummaryCreates a Designated Dealer account with the…",null,[[["accountaddress",3],["typetag",4],["vec",3]],["script",3]]],[5,"encode_create_parent_vasp_account_script","","SummaryCreates a Parent VASP account with the specified…",null,[[["accountaddress",3],["typetag",4],["vec",3]],["script",3]]],[5,"encode_create_recovery_address_script","","SummaryInitializes the sending account as a recovery…",null,[[],["script",3]]],[5,"encode_create_validator_account_script","","SummaryCreates a Validator account. This transaction can…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_create_validator_operator_account_script","","SummaryCreates a Validator Operator account. This…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_freeze_account_script","","SummaryFreezes the account at `address`. The sending…",null,[[["accountaddress",3]],["script",3]]],[5,"encode_peer_to_peer_with_metadata_script","","SummaryTransfers a given number of coins in a specified…",null,[[["accountaddress",3],["typetag",4],["vec",3]],["script",3]]],[5,"encode_preburn_script","","SummaryMoves a specified number of coins in a given…",null,[[["typetag",4]],["script",3]]],[5,"encode_publish_shared_ed25519_public_key_script","","SummaryRotates the authentication key of the sending…",null,[[["vec",3]],["script",3]]],[5,"encode_register_validator_config_script","","SummaryUpdates a validator\'s configuration. This does not…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_remove_validator_and_reconfigure_script","","SummaryThis script removes a validator account from the…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_script","","SummaryRotates the transaction sender\'s authentication key…",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_nonce_script","","SummaryRotates the sender\'s authentication key to the…",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_nonce_admin_script","","SummaryRotates the specified account\'s authentication key…",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_recovery_address_script","","SummaryRotates the authentication key of a specified…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_rotate_dual_attestation_info_script","","SummaryUpdates the url used for off-chain communication,…",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_shared_ed25519_public_key_script","","SummaryRotates the authentication key in a…",null,[[["vec",3]],["script",3]]],[5,"encode_set_validator_config_and_reconfigure_script","","SummaryUpdates a validator\'s configuration, and triggers a…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_set_validator_operator_script","","SummarySets the validator operator for a validator in the…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_set_validator_operator_with_nonce_admin_script","","SummarySets the validator operator for a validator in the…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_tiered_mint_script","","SummaryMints a specified number of coins in a currency to…",null,[[["accountaddress",3],["typetag",4]],["script",3]]],[5,"encode_unfreeze_account_script","","SummaryUnfreezes the account at `address`. The sending…",null,[[["accountaddress",3]],["script",3]]],[5,"encode_update_diem_version_script","","SummaryUpdates the Diem major version that is stored…",null,[[],["script",3]]],[5,"encode_update_dual_attestation_limit_script","","SummaryUpdate the dual attestation limit on-chain. Defined…",null,[[],["script",3]]],[5,"encode_update_exchange_rate_script","","SummaryUpdate the rough on-chain exchange rate between a…",null,[[["typetag",4]],["script",3]]],[5,"encode_update_minting_ability_script","","SummaryScript to allow or disallow minting of new coins in…",null,[[["typetag",4]],["script",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",0,[[["scriptcall",4]]]],[11,"ne","","",0,[[["scriptcall",4]]]],[11,"clone","","",0,[[],["scriptcall",4]]],[11,"arbitrary_with","","",0,[[]]],[11,"partial_cmp","","",0,[[["scriptcall",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["scriptcall",4]]]],[11,"le","","",0,[[["scriptcall",4]]]],[11,"gt","","",0,[[["scriptcall",4]]]],[11,"ge","","",0,[[["scriptcall",4]]]],[11,"encode","","Build a Diem `Script` from a structured object `ScriptCall`.",0,[[],["script",3]]],[11,"decode","","Try to recognize a Diem `Script` and convert it into a…",0,[[["script",3]],[["scriptcall",4],["option",4]]]]],"p":[[4,"ScriptCall"],[13,"AddCurrencyToAccount"],[13,"AddRecoveryRotationCapability"],[13,"AddToScriptAllowList"],[13,"AddValidatorAndReconfigure"],[13,"Burn"],[13,"BurnTxnFees"],[13,"CancelBurn"],[13,"CreateChildVaspAccount"],[13,"CreateDesignatedDealer"],[13,"CreateParentVaspAccount"],[13,"CreateValidatorAccount"],[13,"CreateValidatorOperatorAccount"],[13,"FreezeAccount"],[13,"PeerToPeerWithMetadata"],[13,"Preburn"],[13,"PublishSharedEd25519PublicKey"],[13,"RegisterValidatorConfig"],[13,"RemoveValidatorAndReconfigure"],[13,"RotateAuthenticationKey"],[13,"RotateAuthenticationKeyWithNonce"],[13,"RotateAuthenticationKeyWithNonceAdmin"],[13,"RotateAuthenticationKeyWithRecoveryAddress"],[13,"RotateDualAttestationInfo"],[13,"RotateSharedEd25519PublicKey"],[13,"SetValidatorConfigAndReconfigure"],[13,"SetValidatorOperator"],[13,"SetValidatorOperatorWithNonceAdmin"],[13,"TieredMint"],[13,"UnfreezeAccount"],[13,"UpdateDiemVersion"],[13,"UpdateDualAttestationLimit"],[13,"UpdateExchangeRate"],[13,"UpdateMintingAbility"]]},\
"transaction_builder_generated":{"doc":"","i":[[0,"misc","transaction_builder_generated","",null,null],[5,"encode_block_prologue_script","transaction_builder_generated::misc","",null,[[["blockmetadata",3]],["transaction",4]]],[5,"encode_stdlib_upgrade_transaction","","Update WriteSet",null,[[["stdliboptions",4]],["changeset",3]]],[5,"get_transaction_name","","Returns a user friendly mnemonic for the transaction type…",null,[[],["string",3]]],[0,"stdlib","transaction_builder_generated","Conversion library between a structured representation of…",null,null],[4,"ScriptCall","transaction_builder_generated::stdlib","Structured representation of a call into a known Move…",null,null],[13,"AddCurrencyToAccount","","SummaryAdds a zero `Currency` balance to the sending…",0,null],[12,"currency","transaction_builder_generated::stdlib::ScriptCall","",1,null],[13,"AddRecoveryRotationCapability","transaction_builder_generated::stdlib","SummaryStores the sending accounts ability to rotate its…",0,null],[12,"recovery_address","transaction_builder_generated::stdlib::ScriptCall","",2,null],[13,"AddToScriptAllowList","transaction_builder_generated::stdlib","SummaryAdds a script hash to the transaction allowlist.…",0,null],[12,"hash","transaction_builder_generated::stdlib::ScriptCall","",3,null],[12,"sliding_nonce","","",3,null],[13,"AddValidatorAndReconfigure","transaction_builder_generated::stdlib","SummaryAdds a validator account to the validator set, and…",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",4,null],[12,"validator_name","","",4,null],[12,"validator_address","","",4,null],[13,"Burn","transaction_builder_generated::stdlib","SummaryBurns all coins held in the preburn resource at the…",0,null],[12,"token","transaction_builder_generated::stdlib::ScriptCall","",5,null],[12,"sliding_nonce","","",5,null],[12,"preburn_address","","",5,null],[13,"BurnTxnFees","transaction_builder_generated::stdlib","SummaryBurns the transaction fees collected in the…",0,null],[12,"coin_type","transaction_builder_generated::stdlib::ScriptCall","",6,null],[13,"CancelBurn","transaction_builder_generated::stdlib","SummaryCancels and returns all coins held in the preburn…",0,null],[12,"token","transaction_builder_generated::stdlib::ScriptCall","",7,null],[12,"preburn_address","","",7,null],[13,"CreateChildVaspAccount","transaction_builder_generated::stdlib","SummaryCreates a Child VASP account with its parent being…",0,null],[12,"coin_type","transaction_builder_generated::stdlib::ScriptCall","",8,null],[12,"child_address","","",8,null],[12,"auth_key_prefix","","",8,null],[12,"add_all_currencies","","",8,null],[12,"child_initial_balance","","",8,null],[13,"CreateDesignatedDealer","transaction_builder_generated::stdlib","SummaryCreates a Designated Dealer account with the…",0,null],[12,"currency","transaction_builder_generated::stdlib::ScriptCall","",9,null],[12,"sliding_nonce","","",9,null],[12,"addr","","",9,null],[12,"auth_key_prefix","","",9,null],[12,"human_name","","",9,null],[12,"add_all_currencies","","",9,null],[13,"CreateParentVaspAccount","transaction_builder_generated::stdlib","SummaryCreates a Parent VASP account with the specified…",0,null],[12,"coin_type","transaction_builder_generated::stdlib::ScriptCall","",10,null],[12,"sliding_nonce","","",10,null],[12,"new_account_address","","",10,null],[12,"auth_key_prefix","","",10,null],[12,"human_name","","",10,null],[12,"add_all_currencies","","",10,null],[13,"CreateRecoveryAddress","transaction_builder_generated::stdlib","SummaryInitializes the sending account as a recovery…",0,null],[13,"CreateValidatorAccount","","SummaryCreates a Validator account. This transaction can…",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",11,null],[12,"new_account_address","","",11,null],[12,"auth_key_prefix","","",11,null],[12,"human_name","","",11,null],[13,"CreateValidatorOperatorAccount","transaction_builder_generated::stdlib","SummaryCreates a Validator Operator account. This…",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",12,null],[12,"new_account_address","","",12,null],[12,"auth_key_prefix","","",12,null],[12,"human_name","","",12,null],[13,"FreezeAccount","transaction_builder_generated::stdlib","SummaryFreezes the account at `address`. The sending…",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",13,null],[12,"to_freeze_account","","",13,null],[13,"PeerToPeerWithMetadata","transaction_builder_generated::stdlib","SummaryTransfers a given number of coins in a specified…",0,null],[12,"currency","transaction_builder_generated::stdlib::ScriptCall","",14,null],[12,"payee","","",14,null],[12,"amount","","",14,null],[12,"metadata","","",14,null],[12,"metadata_signature","","",14,null],[13,"Preburn","transaction_builder_generated::stdlib","SummaryMoves a specified number of coins in a given…",0,null],[12,"token","transaction_builder_generated::stdlib::ScriptCall","",15,null],[12,"amount","","",15,null],[13,"PublishSharedEd25519PublicKey","transaction_builder_generated::stdlib","SummaryRotates the authentication key of the sending…",0,null],[12,"public_key","transaction_builder_generated::stdlib::ScriptCall","",16,null],[13,"RegisterValidatorConfig","transaction_builder_generated::stdlib","SummaryUpdates a validator\'s configuration. This does not…",0,null],[12,"validator_account","transaction_builder_generated::stdlib::ScriptCall","",17,null],[12,"consensus_pubkey","","",17,null],[12,"validator_network_addresses","","",17,null],[12,"fullnode_network_addresses","","",17,null],[13,"RemoveValidatorAndReconfigure","transaction_builder_generated::stdlib","SummaryThis script removes a validator account from the…",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",18,null],[12,"validator_name","","",18,null],[12,"validator_address","","",18,null],[13,"RotateAuthenticationKey","transaction_builder_generated::stdlib","SummaryRotates the transaction sender\'s authentication key…",0,null],[12,"new_key","transaction_builder_generated::stdlib::ScriptCall","",19,null],[13,"RotateAuthenticationKeyWithNonce","transaction_builder_generated::stdlib","SummaryRotates the sender\'s authentication key to the…",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",20,null],[12,"new_key","","",20,null],[13,"RotateAuthenticationKeyWithNonceAdmin","transaction_builder_generated::stdlib","SummaryRotates the specified account\'s authentication key…",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",21,null],[12,"new_key","","",21,null],[13,"RotateAuthenticationKeyWithRecoveryAddress","transaction_builder_generated::stdlib","SummaryRotates the authentication key of a specified…",0,null],[12,"recovery_address","transaction_builder_generated::stdlib::ScriptCall","",22,null],[12,"to_recover","","",22,null],[12,"new_key","","",22,null],[13,"RotateDualAttestationInfo","transaction_builder_generated::stdlib","SummaryUpdates the url used for off-chain communication,…",0,null],[12,"new_url","transaction_builder_generated::stdlib::ScriptCall","",23,null],[12,"new_key","","",23,null],[13,"RotateSharedEd25519PublicKey","transaction_builder_generated::stdlib","SummaryRotates the authentication key in a…",0,null],[12,"public_key","transaction_builder_generated::stdlib::ScriptCall","",24,null],[13,"SetValidatorConfigAndReconfigure","transaction_builder_generated::stdlib","SummaryUpdates a validator\'s configuration, and triggers a…",0,null],[12,"validator_account","transaction_builder_generated::stdlib::ScriptCall","",25,null],[12,"consensus_pubkey","","",25,null],[12,"validator_network_addresses","","",25,null],[12,"fullnode_network_addresses","","",25,null],[13,"SetValidatorOperator","transaction_builder_generated::stdlib","SummarySets the validator operator for a validator in the…",0,null],[12,"operator_name","transaction_builder_generated::stdlib::ScriptCall","",26,null],[12,"operator_account","","",26,null],[13,"SetValidatorOperatorWithNonceAdmin","transaction_builder_generated::stdlib","SummarySets the validator operator for a validator in the…",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",27,null],[12,"operator_name","","",27,null],[12,"operator_account","","",27,null],[13,"TieredMint","transaction_builder_generated::stdlib","SummaryMints a specified number of coins in a currency to…",0,null],[12,"coin_type","transaction_builder_generated::stdlib::ScriptCall","",28,null],[12,"sliding_nonce","","",28,null],[12,"designated_dealer_address","","",28,null],[12,"mint_amount","","",28,null],[12,"tier_index","","",28,null],[13,"UnfreezeAccount","transaction_builder_generated::stdlib","SummaryUnfreezes the account at `address`. The sending…",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",29,null],[12,"to_unfreeze_account","","",29,null],[13,"UpdateDiemVersion","transaction_builder_generated::stdlib","SummaryUpdates the Diem major version that is stored…",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",30,null],[12,"major","","",30,null],[13,"UpdateDualAttestationLimit","transaction_builder_generated::stdlib","SummaryUpdate the dual attestation limit on-chain. Defined…",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",31,null],[12,"new_micro_xdx_limit","","",31,null],[13,"UpdateExchangeRate","transaction_builder_generated::stdlib","SummaryUpdate the rough on-chain exchange rate between a…",0,null],[12,"currency","transaction_builder_generated::stdlib::ScriptCall","",32,null],[12,"sliding_nonce","","",32,null],[12,"new_exchange_rate_numerator","","",32,null],[12,"new_exchange_rate_denominator","","",32,null],[13,"UpdateMintingAbility","transaction_builder_generated::stdlib","SummaryScript to allow or disallow minting of new coins in…",0,null],[12,"currency","transaction_builder_generated::stdlib::ScriptCall","",33,null],[12,"allow_minting","","",33,null],[5,"encode_add_currency_to_account_script","transaction_builder_generated::stdlib","SummaryAdds a zero `Currency` balance to the sending…",null,[[["typetag",4]],["script",3]]],[5,"encode_add_recovery_rotation_capability_script","","SummaryStores the sending accounts ability to rotate its…",null,[[["accountaddress",3]],["script",3]]],[5,"encode_add_to_script_allow_list_script","","SummaryAdds a script hash to the transaction allowlist.…",null,[[["vec",3]],["script",3]]],[5,"encode_add_validator_and_reconfigure_script","","SummaryAdds a validator account to the validator set, and…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_burn_script","","SummaryBurns all coins held in the preburn resource at the…",null,[[["accountaddress",3],["typetag",4]],["script",3]]],[5,"encode_burn_txn_fees_script","","SummaryBurns the transaction fees collected in the…",null,[[["typetag",4]],["script",3]]],[5,"encode_cancel_burn_script","","SummaryCancels and returns all coins held in the preburn…",null,[[["accountaddress",3],["typetag",4]],["script",3]]],[5,"encode_create_child_vasp_account_script","","SummaryCreates a Child VASP account with its parent being…",null,[[["accountaddress",3],["vec",3],["typetag",4]],["script",3]]],[5,"encode_create_designated_dealer_script","","SummaryCreates a Designated Dealer account with the…",null,[[["accountaddress",3],["vec",3],["typetag",4]],["script",3]]],[5,"encode_create_parent_vasp_account_script","","SummaryCreates a Parent VASP account with the specified…",null,[[["accountaddress",3],["vec",3],["typetag",4]],["script",3]]],[5,"encode_create_recovery_address_script","","SummaryInitializes the sending account as a recovery…",null,[[],["script",3]]],[5,"encode_create_validator_account_script","","SummaryCreates a Validator account. This transaction can…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_create_validator_operator_account_script","","SummaryCreates a Validator Operator account. This…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_freeze_account_script","","SummaryFreezes the account at `address`. The sending…",null,[[["accountaddress",3]],["script",3]]],[5,"encode_peer_to_peer_with_metadata_script","","SummaryTransfers a given number of coins in a specified…",null,[[["accountaddress",3],["vec",3],["typetag",4]],["script",3]]],[5,"encode_preburn_script","","SummaryMoves a specified number of coins in a given…",null,[[["typetag",4]],["script",3]]],[5,"encode_publish_shared_ed25519_public_key_script","","SummaryRotates the authentication key of the sending…",null,[[["vec",3]],["script",3]]],[5,"encode_register_validator_config_script","","SummaryUpdates a validator\'s configuration. This does not…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_remove_validator_and_reconfigure_script","","SummaryThis script removes a validator account from the…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_script","","SummaryRotates the transaction sender\'s authentication key…",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_nonce_script","","SummaryRotates the sender\'s authentication key to the…",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_nonce_admin_script","","SummaryRotates the specified account\'s authentication key…",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_recovery_address_script","","SummaryRotates the authentication key of a specified…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_rotate_dual_attestation_info_script","","SummaryUpdates the url used for off-chain communication,…",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_shared_ed25519_public_key_script","","SummaryRotates the authentication key in a…",null,[[["vec",3]],["script",3]]],[5,"encode_set_validator_config_and_reconfigure_script","","SummaryUpdates a validator\'s configuration, and triggers a…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_set_validator_operator_script","","SummarySets the validator operator for a validator in the…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_set_validator_operator_with_nonce_admin_script","","SummarySets the validator operator for a validator in the…",null,[[["accountaddress",3],["vec",3]],["script",3]]],[5,"encode_tiered_mint_script","","SummaryMints a specified number of coins in a currency to…",null,[[["accountaddress",3],["typetag",4]],["script",3]]],[5,"encode_unfreeze_account_script","","SummaryUnfreezes the account at `address`. The sending…",null,[[["accountaddress",3]],["script",3]]],[5,"encode_update_diem_version_script","","SummaryUpdates the Diem major version that is stored…",null,[[],["script",3]]],[5,"encode_update_dual_attestation_limit_script","","SummaryUpdate the dual attestation limit on-chain. Defined…",null,[[],["script",3]]],[5,"encode_update_exchange_rate_script","","SummaryUpdate the rough on-chain exchange rate between a…",null,[[["typetag",4]],["script",3]]],[5,"encode_update_minting_ability_script","","SummaryScript to allow or disallow minting of new coins in…",null,[[["typetag",4]],["script",3]]],[11,"encode","","Build a Diem `Script` from a structured object `ScriptCall`.",0,[[],["script",3]]],[11,"decode","","Try to recognize a Diem `Script` and convert it into a…",0,[[["script",3]],[["scriptcall",4],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"clone","","",0,[[],["scriptcall",4]]],[11,"eq","","",0,[[["scriptcall",4]]]],[11,"ne","","",0,[[["scriptcall",4]]]],[11,"partial_cmp","","",0,[[["scriptcall",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["scriptcall",4]]]],[11,"le","","",0,[[["scriptcall",4]]]],[11,"gt","","",0,[[["scriptcall",4]]]],[11,"ge","","",0,[[["scriptcall",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"arbitrary_with","","",0,[[]]]],"p":[[4,"ScriptCall"],[13,"AddCurrencyToAccount"],[13,"AddRecoveryRotationCapability"],[13,"AddToScriptAllowList"],[13,"AddValidatorAndReconfigure"],[13,"Burn"],[13,"BurnTxnFees"],[13,"CancelBurn"],[13,"CreateChildVaspAccount"],[13,"CreateDesignatedDealer"],[13,"CreateParentVaspAccount"],[13,"CreateValidatorAccount"],[13,"CreateValidatorOperatorAccount"],[13,"FreezeAccount"],[13,"PeerToPeerWithMetadata"],[13,"Preburn"],[13,"PublishSharedEd25519PublicKey"],[13,"RegisterValidatorConfig"],[13,"RemoveValidatorAndReconfigure"],[13,"RotateAuthenticationKey"],[13,"RotateAuthenticationKeyWithNonce"],[13,"RotateAuthenticationKeyWithNonceAdmin"],[13,"RotateAuthenticationKeyWithRecoveryAddress"],[13,"RotateDualAttestationInfo"],[13,"RotateSharedEd25519PublicKey"],[13,"SetValidatorConfigAndReconfigure"],[13,"SetValidatorOperator"],[13,"SetValidatorOperatorWithNonceAdmin"],[13,"TieredMint"],[13,"UnfreezeAccount"],[13,"UpdateDiemVersion"],[13,"UpdateDualAttestationLimit"],[13,"UpdateExchangeRate"],[13,"UpdateMintingAbility"]]},\
"transaction_builder_generator":{"doc":"","i":[[5,"read_abis","transaction_builder_generator","Read all ABI files in a directory.",null,[[["path",3],["asref",8]],[["vec",3],["result",6]]]],[5,"read_custom_code_from_paths","","How to read custom code to inject in Diem containers.",null,[[],["customcode",6]]],[0,"cpp","","Support for code-generation in C++17.",null,null],[3,"Installer","transaction_builder_generator::cpp","",null,null],[5,"output","","Output a header-only library providing C++ transaction…",null,[[["write",8],["option",4]],["result",6]]],[5,"output_library_header","","Output the headers of a library providing C++ transaction…",null,[[["write",8],["option",4]],["result",6]]],[5,"output_library_body","","Output the function definitions of a library providing C++…",null,[[["write",8],["option",4]],["result",6]]],[11,"new","","",0,[[["pathbuf",3]]]],[0,"golang","transaction_builder_generator","Support for code-generation in Go >= 1.13.",null,null],[3,"Installer","transaction_builder_generator::golang","",null,null],[5,"output","","Output transaction builders and decoders in Go for the…",null,[[["write",8],["string",3],["option",4]],["result",6]]],[11,"new","","",1,[[["pathbuf",3],["string",3],["option",4]]]],[0,"java","transaction_builder_generator","Support for code-generation in Java 8.",null,null],[3,"Installer","transaction_builder_generator::java","",null,null],[5,"write_source_files","","Output transaction builders and decoders in Java for the…",null,[[["pathbuf",3]],["result",6]]],[11,"new","","",2,[[["pathbuf",3]]]],[0,"python3","transaction_builder_generator","Support for code-generation in Python 3.",null,null],[3,"Installer","transaction_builder_generator::python3","",null,null],[5,"output","","Output transaction builders in Python for the given ABIs.",null,[[["write",8],["string",3],["option",4]],["result",6]]],[11,"new","","",3,[[["pathbuf",3],["string",3],["option",4]]]],[0,"rust","transaction_builder_generator","Support for code-generation in Rust.",null,null],[3,"Installer","transaction_builder_generator::rust","",null,null],[5,"output","","Output transaction builders in Rust for the given ABIs. If…",null,[[["write",8]],["result",6]]],[11,"new","","",4,[[["pathbuf",3],["string",3]]]],[8,"SourceInstaller","transaction_builder_generator","How to copy ABI-generated source code for a given language.",null,null],[16,"Error","","",5,null],[10,"install_transaction_builders","","Create a module exposing the transaction builders for the…",5,[[],["result",4]]],[11,"from","transaction_builder_generator::cpp","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","transaction_builder_generator::golang","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","transaction_builder_generator::java","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","transaction_builder_generator::python3","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","transaction_builder_generator::rust","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"install_transaction_builders","transaction_builder_generator::cpp","",0,[[],["result",4]]],[11,"install_transaction_builders","transaction_builder_generator::golang","",1,[[],["result",4]]],[11,"install_transaction_builders","transaction_builder_generator::java","",2,[[],["result",4]]],[11,"install_transaction_builders","transaction_builder_generator::python3","",3,[[],["result",4]]],[11,"install_transaction_builders","transaction_builder_generator::rust","",4,[[],["result",4]]]],"p":[[3,"Installer"],[3,"Installer"],[3,"Installer"],[3,"Installer"],[3,"Installer"],[8,"SourceInstaller"]]},\
"vm":{"doc":"","i":[[4,"IndexKind","vm","Represents a kind of index -- useful for error messages.",null,null],[13,"ModuleHandle","","",0,null],[13,"StructHandle","","",0,null],[13,"FunctionHandle","","",0,null],[13,"FieldHandle","","",0,null],[13,"FunctionInstantiation","","",0,null],[13,"FieldInstantiation","","",0,null],[13,"StructDefinition","","",0,null],[13,"StructDefInstantiation","","",0,null],[13,"FunctionDefinition","","",0,null],[13,"FieldDefinition","","",0,null],[13,"Signature","","",0,null],[13,"Identifier","","",0,null],[13,"AddressIdentifier","","",0,null],[13,"ConstantPool","","",0,null],[13,"LocalPool","","",0,null],[13,"CodeDefinition","","",0,null],[13,"TypeParameter","","",0,null],[13,"MemberCount","","",0,null],[4,"SignatureTokenKind","","Represents the kind of a signature token.",null,null],[13,"Value","","Any sort of owned value that isn\'t an array (Integer,…",1,null],[13,"Reference","","A reference.",1,null],[13,"MutableReference","","A mutable reference.",1,null],[0,"access","","Defines accessors for compiled modules.",null,null],[8,"ModuleAccess","vm::access","Represents accessors for a compiled module.",null,null],[10,"as_module","","Returns the `CompiledModule` that will be used for accesses.",2,[[],["compiledmodule",3]]],[11,"self_handle_idx","","",2,[[],["modulehandleindex",3]]],[11,"self_handle","","Returns the `ModuleHandle` for `self`.",2,[[],["modulehandle",3]]],[11,"name","","Returns the name of the module.",2,[[],["identstr",3]]],[11,"address","","Returns the address of the module.",2,[[],["accountaddress",3]]],[11,"module_handle_at","","",2,[[["modulehandleindex",3]],["modulehandle",3]]],[11,"struct_handle_at","","",2,[[["structhandleindex",3]],["structhandle",3]]],[11,"function_handle_at","","",2,[[["functionhandleindex",3]],["functionhandle",3]]],[11,"field_handle_at","","",2,[[["fieldhandleindex",3]],["fieldhandle",3]]],[11,"struct_instantiation_at","","",2,[[["structdefinstantiationindex",3]],["structdefinstantiation",3]]],[11,"function_instantiation_at","","",2,[[["functioninstantiationindex",3]],["functioninstantiation",3]]],[11,"field_instantiation_at","","",2,[[["fieldinstantiationindex",3]],["fieldinstantiation",3]]],[11,"signature_at","","",2,[[["signatureindex",3]],["signature",3]]],[11,"identifier_at","","",2,[[["identifierindex",3]],["identstr",3]]],[11,"address_identifier_at","","",2,[[["addressidentifierindex",3]],["accountaddress",3]]],[11,"constant_at","","",2,[[["constantpoolindex",3]],["constant",3]]],[11,"struct_def_at","","",2,[[["structdefinitionindex",3]],["structdefinition",3]]],[11,"function_def_at","","",2,[[["functiondefinitionindex",3]],["functiondefinition",3]]],[11,"module_handles","","",2,[[]]],[11,"struct_handles","","",2,[[]]],[11,"function_handles","","",2,[[]]],[11,"field_handles","","",2,[[]]],[11,"struct_instantiations","","",2,[[]]],[11,"function_instantiations","","",2,[[]]],[11,"field_instantiations","","",2,[[]]],[11,"signatures","","",2,[[]]],[11,"constant_pool","","",2,[[]]],[11,"identifiers","","",2,[[]]],[11,"address_identifiers","","",2,[[]]],[11,"struct_defs","","",2,[[]]],[11,"function_defs","","",2,[[]]],[11,"module_id_for_handle","","",2,[[["modulehandle",3]],["moduleid",3]]],[11,"self_id","","",2,[[],["moduleid",3]]],[11,"immediate_module_dependencies","","",2,[[],[["vec",3],["moduleid",3]]]],[8,"ScriptAccess","","Represents accessors for a compiled script.",null,null],[10,"as_script","","Returns the `CompiledScript` that will be used for accesses.",3,[[],["compiledscript",3]]],[11,"module_handle_at","","",3,[[["modulehandleindex",3]],["modulehandle",3]]],[11,"struct_handle_at","","",3,[[["structhandleindex",3]],["structhandle",3]]],[11,"function_handle_at","","",3,[[["functionhandleindex",3]],["functionhandle",3]]],[11,"signature_at","","",3,[[["signatureindex",3]],["signature",3]]],[11,"identifier_at","","",3,[[["identifierindex",3]],["identstr",3]]],[11,"address_identifier_at","","",3,[[["addressidentifierindex",3]],["accountaddress",3]]],[11,"constant_at","","",3,[[["constantpoolindex",3]],["constant",3]]],[11,"function_instantiation_at","","",3,[[["functioninstantiationindex",3]],["functioninstantiation",3]]],[11,"module_handles","","",3,[[]]],[11,"struct_handles","","",3,[[]]],[11,"function_handles","","",3,[[]]],[11,"function_instantiations","","",3,[[]]],[11,"signatures","","",3,[[]]],[11,"constant_pool","","",3,[[]]],[11,"identifiers","","",3,[[]]],[11,"address_identifiers","","",3,[[]]],[11,"code","","",3,[[],["codeunit",3]]],[11,"immediate_module_dependencies","","",3,[[],[["vec",3],["moduleid",3]]]],[0,"check_bounds","vm","",null,null],[3,"BoundsChecker","vm::check_bounds","",null,null],[11,"verify","","",4,[[["compiledmodulemut",3]],["partialvmresult",6]]],[0,"compatibility","vm","",null,null],[3,"Compatibility","vm::compatibility","The result of a linking and layoutcompatibility check.…",null,null],[12,"struct_and_function_linking","","If false, dependent modules that reference functions or…",5,null],[12,"struct_layout","","If false, attempting to read structs previously published…",5,null],[11,"is_fully_compatible","","Return true if the two module s compared in the…",5,[[]]],[11,"check","","Return compatibility assessment for `new_module` relative…",5,[[["module",3]],["compatibility",3]]],[0,"errors","vm","",null,null],[3,"VMError","vm::errors","",null,null],[3,"PartialVMError","","",null,null],[4,"Location","","",null,null],[13,"Undefined","","",6,null],[13,"Script","","",6,null],[13,"Module","","",6,null],[5,"vm_status_of_result","","",null,[[["vmresult",6]],["vmstatus",4]]],[5,"offset_out_of_bounds","","",null,[[["statuscode",4],["codeoffset",6],["indexkind",4],["functiondefinitionindex",3]],["partialvmerror",3]]],[5,"bounds_error","","",null,[[["tableindex",6],["indexkind",4],["statuscode",4]],["partialvmerror",3]]],[5,"verification_error","","",null,[[["tableindex",6],["indexkind",4],["statuscode",4]],["partialvmerror",3]]],[6,"VMResult","","",null,null],[6,"BinaryLoaderResult","","",null,null],[6,"PartialVMResult","","",null,null],[11,"into_vm_status","","",7,[[],["vmstatus",4]]],[11,"major_status","","",7,[[],["statuscode",4]]],[11,"sub_status","","",7,[[],["option",4]]],[11,"message","","",7,[[],[["string",3],["option",4]]]],[11,"location","","",7,[[],["location",4]]],[11,"indices","","",7,[[],["vec",3]]],[11,"offsets","","",7,[[],["vec",3]]],[11,"status_type","","",7,[[],["statustype",4]]],[11,"all_data","","",7,[[]]],[11,"all_data","","",8,[[]]],[11,"finish","","",8,[[["location",4]],["vmerror",3]]],[11,"new","","",8,[[["statuscode",4]]]],[11,"major_status","","",8,[[],["statuscode",4]]],[11,"with_sub_status","","",8,[[]]],[11,"with_message","","",8,[[["string",3]]]],[11,"at_index","","",8,[[["tableindex",6],["indexkind",4]]]],[11,"at_indices","","",8,[[["vec",3]]]],[11,"at_code_offset","","",8,[[["codeoffset",6],["functiondefinitionindex",3]]]],[11,"at_code_offsets","","",8,[[["vec",3]]]],[11,"append_message_with_separator","","Append the message `message` to the message field of the…",8,[[["string",3]]]],[0,"constant","vm","",null,null],[0,"deserializer","","",null,null],[0,"file_format","","Binary format for transactions and modules.",null,null],[3,"ModuleHandleIndex","vm::file_format","Index into the `ModuleHandle` table.",null,null],[12,"0","","",9,null],[3,"StructHandleIndex","","Index into the `StructHandle` table.",null,null],[12,"0","","",10,null],[3,"FunctionHandleIndex","","Index into the `FunctionHandle` table.",null,null],[12,"0","","",11,null],[3,"FieldHandleIndex","","Index into the `FieldHandle` table.",null,null],[12,"0","","",12,null],[3,"StructDefInstantiationIndex","","Index into the `StructInstantiation` table.",null,null],[12,"0","","",13,null],[3,"FunctionInstantiationIndex","","Index into the `FunctionInstantiation` table.",null,null],[12,"0","","",14,null],[3,"FieldInstantiationIndex","","Index into the `FieldInstantiation` table.",null,null],[12,"0","","",15,null],[3,"IdentifierIndex","","Index into the `Identifier` table.",null,null],[12,"0","","",16,null],[3,"AddressIdentifierIndex","","Index into the `AddressIdentifier` table.",null,null],[12,"0","","",17,null],[3,"ConstantPoolIndex","","Index into the `ConstantPool` table.",null,null],[12,"0","","",18,null],[3,"SignatureIndex","","Index into the `Signature` table.",null,null],[12,"0","","",19,null],[3,"StructDefinitionIndex","","Index into the `StructDefinition` table.",null,null],[12,"0","","",20,null],[3,"FunctionDefinitionIndex","","Index into the `FunctionDefinition` table.",null,null],[12,"0","","",21,null],[3,"ModuleHandle","","A `ModuleHandle` is a reference to a MOVE module. It is…",null,null],[12,"address","","Index into the `AddressIdentifierIndex`. Identifies…",22,null],[12,"name","","The name of the module published in the code section for…",22,null],[3,"StructHandle","","A `StructHandle` is a reference to a user defined type. It…",null,null],[12,"module","","The module that defines the type.",23,null],[12,"name","","The name of the type.",23,null],[12,"is_nominal_resource","","There are two ways for a type to have the Kind resource",23,null],[12,"type_parameters","","The type formals (identified by their index into the vec)…",23,null],[3,"FunctionHandle","","A `FunctionHandle` is a reference to a function. It is…",null,null],[12,"module","","The module that defines the function.",24,null],[12,"name","","The name of the function.",24,null],[12,"parameters","","The list of arguments to the function.",24,null],[12,"return_","","The list of return types.",24,null],[12,"type_parameters","","The type formals (identified by their index into the vec)…",24,null],[3,"FieldHandle","","A field access info (owner type and offset)",null,null],[12,"owner","","",25,null],[12,"field","","",25,null],[3,"StructDefInstantiation","","A complete or partial instantiation of a generic struct",null,null],[12,"def","","",26,null],[12,"type_parameters","","",26,null],[3,"FunctionInstantiation","","A complete or partial instantiation of a function",null,null],[12,"handle","","",27,null],[12,"type_parameters","","",27,null],[3,"FieldInstantiation","","A complete or partial instantiation of a field (or the…",null,null],[12,"handle","","",28,null],[12,"type_parameters","","",28,null],[3,"StructDefinition","","A `StructDefinition` is a type definition. It either…",null,null],[12,"struct_handle","","The `StructHandle` for this `StructDefinition`. This has…",29,null],[12,"field_information","","Contains either",29,null],[3,"FieldDefinition","","A `FieldDefinition` is the definition of a field: its name…",null,null],[12,"name","","The name of the field.",30,null],[12,"signature","","The type of the field.",30,null],[3,"FunctionDefinition","","A `FunctionDefinition` is the implementation of a…",null,null],[12,"function","","The prototype of the function (module, name, signature).",31,null],[12,"is_public","","Flag to indicate if this function is public.",31,null],[12,"acquires_global_resources","","List of nominal resources (declared in this module) that…",31,null],[12,"code","","Code for this function.",31,null],[3,"TypeSignature","","A type definition. `SignatureToken` allows the definition…",null,null],[12,"0","","",32,null],[3,"FunctionSignature","","A `FunctionSignature` in internally used to create a…",null,null],[12,"return_","","The list of return types.",33,null],[12,"parameters","","The list of arguments to the function.",33,null],[12,"type_parameters","","The type formals (identified by their index into the vec)…",33,null],[3,"Signature","","A `Signature` is the list of locals used by a function.",null,null],[12,"0","","",34,null],[3,"SignatureTokenPreorderTraversalIter","","An iterator to help traverse the `SignatureToken` in a…",null,null],[3,"SignatureTokenPreorderTraversalIterWithDepth","","Alternative preorder traversal iterator for SignatureToken…",null,null],[3,"Constant","","A `Constant` is a serialized value along with it\'s type.…",null,null],[12,"type_","","",35,null],[12,"data","","",35,null],[3,"CodeUnit","","A `CodeUnit` is the body of a function. It has the…",null,null],[12,"locals","","List of locals type. All locals are typed.",36,null],[12,"code","","Code stream, function body.",36,null],[3,"CompiledScript","","Contains the main function to execute and its dependencies.",null,null],[3,"CompiledScriptMut","","A mutable version of `CompiledScript`. Converting to a…",null,null],[12,"module_handles","","Handles to all modules referenced.",37,null],[12,"struct_handles","","Handles to external/imported types.",37,null],[12,"function_handles","","Handles to external/imported functions.",37,null],[12,"function_instantiations","","Function instantiations.",37,null],[12,"signatures","","",37,null],[12,"identifiers","","All identifiers used in this transaction.",37,null],[12,"address_identifiers","","All address identifiers used in this transaction.",37,null],[12,"constant_pool","","Constant pool. The constant values used in the transaction.",37,null],[12,"type_parameters","","",37,null],[12,"parameters","","",37,null],[12,"code","","",37,null],[3,"ScriptConversionInfo","","",null,null],[3,"CompiledModule","","A `CompiledModule` defines the structure of a module which…",null,null],[3,"CompiledModuleMut","","A mutable version of `CompiledModule`. Converting to a…",null,null],[12,"self_module_handle_idx","","Handle to self.",38,null],[12,"module_handles","","Handles to external modules and self.",38,null],[12,"struct_handles","","Handles to external and internal types.",38,null],[12,"function_handles","","Handles to external and internal functions.",38,null],[12,"field_handles","","Handles to fields.",38,null],[12,"struct_def_instantiations","","Struct instantiations.",38,null],[12,"function_instantiations","","Function instantiations.",38,null],[12,"field_instantiations","","Field instantiations.",38,null],[12,"signatures","","Locals signature pool. The signature for all locals of the…",38,null],[12,"identifiers","","All identifiers used in this module.",38,null],[12,"address_identifiers","","All address identifiers used in this module.",38,null],[12,"constant_pool","","Constant pool. The constant values used in the module.",38,null],[12,"struct_defs","","Types defined in this module.",38,null],[12,"function_defs","","Function defined in this module.",38,null],[4,"StructFieldInformation","","`StructFieldInformation` indicates whether a struct is…",null,null],[13,"Native","","",39,null],[13,"Declared","","",39,null],[4,"Kind","","A `Kind` classifies types into sets with rules each set…",null,null],[13,"All","","Represents the super set of all types. The type might…",40,null],[13,"Resource","","`Resource` types must follow move semantics and various…",40,null],[13,"Copyable","","`Copyable` types do not need to follow the `Resource` rules.",40,null],[4,"SignatureToken","","A `SignatureToken` is a type declaration for a location.",null,null],[13,"Bool","","Boolean, `true` or `false`.",41,null],[13,"U8","","Unsigned integers, 8 bits length.",41,null],[13,"U64","","Unsigned integers, 64 bits length.",41,null],[13,"U128","","Unsigned integers, 128 bits length.",41,null],[13,"Address","","Address, a 16 bytes immutable type.",41,null],[13,"Signer","","Signer, a 16 bytes immutable type representing the…",41,null],[13,"Vector","","Vector",41,null],[13,"Struct","","MOVE user type, resource or copyable",41,null],[13,"StructInstantiation","","",41,null],[13,"Reference","","Reference to a type.",41,null],[13,"MutableReference","","Mutable reference to a type.",41,null],[13,"TypeParameter","","Type parameter.",41,null],[4,"Bytecode","","`Bytecode` is a VM instruction of variable size. The type…",null,null],[13,"Pop","","Pop and discard the value at the top of the stack. The…",42,null],[13,"Ret","","Return from function, possibly with values according to…",42,null],[13,"BrTrue","","Branch to the instruction at position `CodeOffset` if the…",42,null],[13,"BrFalse","","Branch to the instruction at position `CodeOffset` if the…",42,null],[13,"Branch","","Branch unconditionally to the instruction at position…",42,null],[13,"LdU8","","Push a U8 constant onto the stack.",42,null],[13,"LdU64","","Push a U64 constant onto the stack.",42,null],[13,"LdU128","","Push a U128 constant onto the stack.",42,null],[13,"CastU8","","Convert the value at the top of the stack into u8.",42,null],[13,"CastU64","","Convert the value at the top of the stack into u64.",42,null],[13,"CastU128","","Convert the value at the top of the stack into u128.",42,null],[13,"LdConst","","Push a `Constant` onto the stack. The value is loaded and…",42,null],[13,"LdTrue","","Push `true` onto the stack.",42,null],[13,"LdFalse","","Push `false` onto the stack.",42,null],[13,"CopyLoc","","Push the local identified by `LocalIndex` onto the stack.…",42,null],[13,"MoveLoc","","Push the local identified by `LocalIndex` onto the stack.…",42,null],[13,"StLoc","","Pop value from the top of the stack and store it into the…",42,null],[13,"Call","","Call a function. The stack has the arguments pushed first…",42,null],[13,"CallGeneric","","",42,null],[13,"Pack","","Create an instance of the type specified via…",42,null],[13,"PackGeneric","","",42,null],[13,"Unpack","","Destroy an instance of a type and push the values bound to…",42,null],[13,"UnpackGeneric","","",42,null],[13,"ReadRef","","Read a reference. The reference is on the stack, it is…",42,null],[13,"WriteRef","","Write to a reference. The reference and the value are on…",42,null],[13,"FreezeRef","","Convert a mutable reference to an immutable reference.",42,null],[13,"MutBorrowLoc","","Load a mutable reference to a local identified by…",42,null],[13,"ImmBorrowLoc","","Load an immutable reference to a local identified by…",42,null],[13,"MutBorrowField","","Load a mutable reference to a field identified by…",42,null],[13,"MutBorrowFieldGeneric","","Load a mutable reference to a field identified by…",42,null],[13,"ImmBorrowField","","Load an immutable reference to a field identified by…",42,null],[13,"ImmBorrowFieldGeneric","","Load an immutable reference to a field identified by…",42,null],[13,"MutBorrowGlobal","","Return a mutable reference to an instance of type…",42,null],[13,"MutBorrowGlobalGeneric","","",42,null],[13,"ImmBorrowGlobal","","Return an immutable reference to an instance of type…",42,null],[13,"ImmBorrowGlobalGeneric","","",42,null],[13,"Add","","Add the 2 u64 at the top of the stack and pushes the…",42,null],[13,"Sub","","Subtract the 2 u64 at the top of the stack and pushes the…",42,null],[13,"Mul","","Multiply the 2 u64 at the top of the stack and pushes the…",42,null],[13,"Mod","","Perform a modulo operation on the 2 u64 at the top of the…",42,null],[13,"Div","","Divide the 2 u64 at the top of the stack and pushes the…",42,null],[13,"BitOr","","Bitwise OR the 2 u64 at the top of the stack and pushes…",42,null],[13,"BitAnd","","Bitwise AND the 2 u64 at the top of the stack and pushes…",42,null],[13,"Xor","","Bitwise XOR the 2 u64 at the top of the stack and pushes…",42,null],[13,"Or","","Logical OR the 2 bool at the top of the stack and pushes…",42,null],[13,"And","","Logical AND the 2 bool at the top of the stack and pushes…",42,null],[13,"Not","","Logical NOT the bool at the top of the stack and pushes…",42,null],[13,"Eq","","Compare for equality the 2 value at the top of the stack…",42,null],[13,"Neq","","Compare for inequality the 2 value at the top of the stack…",42,null],[13,"Lt","","Perform a \\\"less than\\\" operation of the 2 u64 at the top of…",42,null],[13,"Gt","","Perform a \\\"greater than\\\" operation of the 2 u64 at the top…",42,null],[13,"Le","","Perform a \\\"less than or equal\\\" operation of the 2 u64 at…",42,null],[13,"Ge","","Perform a \\\"greater than or equal\\\" than operation of the 2…",42,null],[13,"Abort","","Abort execution with errorcode",42,null],[13,"Nop","","No operation.",42,null],[13,"Exists","","Returns whether or not a given address has an object of…",42,null],[13,"ExistsGeneric","","",42,null],[13,"MoveFrom","","Move the instance of type StructDefinitionIndex, at the…",42,null],[13,"MoveFromGeneric","","",42,null],[13,"MoveTo","","Move the instance at the top of the stack to the address…",42,null],[13,"MoveToGeneric","","",42,null],[13,"Shl","","Shift the (second top value) left (top value) bits and…",42,null],[13,"Shr","","Shift the (second top value) right (top value) bits and…",42,null],[5,"self_module_name","","",null,[[],["identstr",3]]],[5,"empty_module","","Return the simplest module that will pass the bounds checker",null,[[],["compiledmodulemut",3]]],[5,"basic_test_module","","Create the following module which is convenient in tests:…",null,[[],["compiledmodulemut",3]]],[5,"dummy_procedure_module","","Create a dummy module to wrap the bytecode program in…",null,[[["vec",3],["bytecode",4]],["compiledmodule",3]]],[5,"empty_script","","Return a simple script that contains only a return in the…",null,[[],["compiledscriptmut",3]]],[6,"TableIndex","","Generic index into one of the tables in the binary format.",null,null],[6,"LocalIndex","","Index of a local variable in a function.",null,null],[6,"MemberCount","","Max number of fields in a `StructDefinition`.",null,null],[6,"CodeOffset","","Index into the code stream for a jump. The offset is…",null,null],[6,"IdentifierPool","","The pool of identifiers.",null,null],[6,"AddressIdentifierPool","","The pool of address identifiers (addresses used in…",null,null],[6,"ConstantPool","","The pool of `Constant` values",null,null],[6,"TypeSignaturePool","","The pool of `TypeSignature` instances. Those are system…",null,null],[6,"SignaturePool","","The pool of `Signature` instances. Every function…",null,null],[6,"TypeParameterIndex","","Type parameters are encoded as indices. This index can…",null,null],[17,"NO_TYPE_ARGUMENTS","","Index 0 into the LocalsSignaturePool, which is guaranteed…",null,null],[17,"NUMBER_OF_NATIVE_FUNCTIONS","","",null,null],[11,"new","","",9,[[["tableindex",6]]]],[11,"new","","",10,[[["tableindex",6]]]],[11,"new","","",11,[[["tableindex",6]]]],[11,"new","","",12,[[["tableindex",6]]]],[11,"new","","",13,[[["tableindex",6]]]],[11,"new","","",14,[[["tableindex",6]]]],[11,"new","","",15,[[["tableindex",6]]]],[11,"new","","",16,[[["tableindex",6]]]],[11,"new","","",17,[[["tableindex",6]]]],[11,"new","","",18,[[["tableindex",6]]]],[11,"new","","",19,[[["tableindex",6]]]],[11,"new","","",20,[[["tableindex",6]]]],[11,"new","","",21,[[["tableindex",6]]]],[11,"declared_field_count","","",29,[[],[["membercount",6],["partialvmresult",6]]]],[11,"is_public","","Returns whether the FunctionDefinition is public.",31,[[]]],[11,"is_native","","Returns whether the FunctionDefinition is native.",31,[[]]],[18,"PUBLIC","","Function can be invoked outside of its declaring module.",31,null],[18,"NATIVE","","A native function implemented in Rust.",31,null],[11,"len","","Length of the `Signature`.",34,[[]]],[11,"is_empty","","Whether the function has no locals (both arguments or…",34,[[]]],[11,"is_sub_kind_of","","Checks if the given kind is a sub-kind of another.",40,[[["kind",4]]]],[11,"join","","Helper function to determine the kind of a struct instance…",40,[[["kind",4]],["kind",4]]],[11,"signature_token_kind","","Returns the \\\"value kind\\\" for the `SignatureToken`",41,[[],["signaturetokenkind",4]]],[11,"is_integer","","",41,[[]]],[11,"is_reference","","Returns true if the `SignatureToken` is any kind of…",41,[[]]],[11,"is_mutable_reference","","Returns true if the `SignatureToken` is a mutable reference.",41,[[]]],[11,"is_signer","","Returns true if the `SignatureToken` is a signer",41,[[]]],[11,"is_valid_for_constant","","Returns true if the `SignatureToken` can represent a…",41,[[]]],[11,"debug_set_sh_idx","","Set the index to this one. Useful for random testing.",41,[[["structhandleindex",3]]]],[11,"preorder_traversal","","",41,[[],["signaturetokenpreordertraversaliter",3]]],[11,"preorder_traversal_with_depth","","",41,[[],["signaturetokenpreordertraversaliterwithdepth",3]]],[18,"NUM_INSTRUCTIONS","","The number of variants in this enum.",42,null],[11,"is_unconditional_branch","","Return true if this bytecode instruction always branches",42,[[]]],[11,"is_conditional_branch","","Return true if the branching behavior of this bytecode…",42,[[]]],[11,"is_branch","","Returns true if this bytecode instruction is either a…",42,[[]]],[11,"offset","","Returns the offset that this bytecode instruction branches…",42,[[],[["option",4],["codeoffset",6]]]],[11,"get_successors","","Return the successor offsets of this bytecode instruction.",42,[[["codeoffset",6]],[["codeoffset",6],["vec",3]]]],[18,"MAIN_INDEX","","Returns the index of `main` in case a script is converted…",43,null],[11,"as_inner","","Returns a reference to the inner `CompiledScriptMut`.",43,[[],["compiledscriptmut",3]]],[11,"into_inner","","Converts this instance into the inner `CompiledScriptMut`.…",43,[[],["compiledscriptmut",3]]],[11,"into_module","","Converts a `CompiledScript` into a `CompiledModule` for…",43,[[]]],[11,"freeze","","Converts this instance into `CompiledScript` after…",37,[[],[["compiledscript",3],["partialvmresult",6]]]],[11,"into_module","","Converts a `CompiledScriptMut` to a `CompiledModule` for…",37,[[]]],[11,"kind_count","","Returns the count of a specific `IndexKind`",38,[[["indexkind",4]]]],[11,"freeze","","Converts this instance into `CompiledModule` after…",38,[[],[["compiledmodule",3],["partialvmresult",6]]]],[11,"as_inner","","Returns a reference to the inner `CompiledModuleMut`.",44,[[],["compiledmodulemut",3]]],[11,"into_inner","","Converts this instance into the inner `CompiledModuleMut`.…",44,[[],["compiledmodulemut",3]]],[11,"kind_count","","Returns the number of items of a specific `IndexKind`.",44,[[["indexkind",4]]]],[11,"module_id_for_handle","","Returns the code key of `module_handle`",44,[[["modulehandle",3]],["moduleid",3]]],[11,"self_id","","Returns the code key of `self`",44,[[],["moduleid",3]]],[11,"into_script","","This function should only be called on an instance of…",44,[[["scriptconversioninfo",3]],["compiledscript",3]]],[0,"file_format_common","vm","Constants for the binary format.",null,null],[4,"BinaryConstants","vm::file_format_common","Constant values for the binary format header.",null,null],[4,"TableType","","Constants for table types in the binary.",null,null],[13,"MODULE_HANDLES","","",45,null],[13,"STRUCT_HANDLES","","",45,null],[13,"FUNCTION_HANDLES","","",45,null],[13,"FUNCTION_INST","","",45,null],[13,"SIGNATURES","","",45,null],[13,"CONSTANT_POOL","","",45,null],[13,"IDENTIFIERS","","",45,null],[13,"ADDRESS_IDENTIFIERS","","",45,null],[13,"STRUCT_DEFS","","",45,null],[13,"STRUCT_DEF_INST","","",45,null],[13,"FUNCTION_DEFS","","",45,null],[13,"FIELD_HANDLE","","",45,null],[13,"FIELD_INST","","",45,null],[4,"SerializedType","","Constants for signature blob values.",null,null],[13,"BOOL","","",46,null],[13,"U8","","",46,null],[13,"U64","","",46,null],[13,"U128","","",46,null],[13,"ADDRESS","","",46,null],[13,"REFERENCE","","",46,null],[13,"MUTABLE_REFERENCE","","",46,null],[13,"STRUCT","","",46,null],[13,"TYPE_PARAMETER","","",46,null],[13,"VECTOR","","",46,null],[13,"STRUCT_INST","","",46,null],[13,"SIGNER","","",46,null],[4,"SerializedNominalResourceFlag","","",null,null],[13,"NOMINAL_RESOURCE","","",47,null],[13,"NORMAL_STRUCT","","",47,null],[4,"SerializedKind","","",null,null],[13,"ALL","","",48,null],[13,"COPYABLE","","",48,null],[13,"RESOURCE","","",48,null],[4,"SerializedNativeStructFlag","","",null,null],[13,"NATIVE","","",49,null],[13,"DECLARED","","",49,null],[4,"Opcodes","","List of opcodes constants.",null,null],[13,"POP","","",50,null],[13,"RET","","",50,null],[13,"BR_TRUE","","",50,null],[13,"BR_FALSE","","",50,null],[13,"BRANCH","","",50,null],[13,"LD_U64","","",50,null],[13,"LD_CONST","","",50,null],[13,"LD_TRUE","","",50,null],[13,"LD_FALSE","","",50,null],[13,"COPY_LOC","","",50,null],[13,"MOVE_LOC","","",50,null],[13,"ST_LOC","","",50,null],[13,"MUT_BORROW_LOC","","",50,null],[13,"IMM_BORROW_LOC","","",50,null],[13,"MUT_BORROW_FIELD","","",50,null],[13,"IMM_BORROW_FIELD","","",50,null],[13,"CALL","","",50,null],[13,"PACK","","",50,null],[13,"UNPACK","","",50,null],[13,"READ_REF","","",50,null],[13,"WRITE_REF","","",50,null],[13,"ADD","","",50,null],[13,"SUB","","",50,null],[13,"MUL","","",50,null],[13,"MOD","","",50,null],[13,"DIV","","",50,null],[13,"BIT_OR","","",50,null],[13,"BIT_AND","","",50,null],[13,"XOR","","",50,null],[13,"OR","","",50,null],[13,"AND","","",50,null],[13,"NOT","","",50,null],[13,"EQ","","",50,null],[13,"NEQ","","",50,null],[13,"LT","","",50,null],[13,"GT","","",50,null],[13,"LE","","",50,null],[13,"GE","","",50,null],[13,"ABORT","","",50,null],[13,"NOP","","",50,null],[13,"EXISTS","","",50,null],[13,"MUT_BORROW_GLOBAL","","",50,null],[13,"IMM_BORROW_GLOBAL","","",50,null],[13,"MOVE_FROM","","",50,null],[13,"MOVE_TO","","",50,null],[13,"FREEZE_REF","","",50,null],[13,"SHL","","",50,null],[13,"SHR","","",50,null],[13,"LD_U8","","",50,null],[13,"LD_U128","","",50,null],[13,"CAST_U8","","",50,null],[13,"CAST_U64","","",50,null],[13,"CAST_U128","","",50,null],[13,"MUT_BORROW_FIELD_GENERIC","","",50,null],[13,"IMM_BORROW_FIELD_GENERIC","","",50,null],[13,"CALL_GENERIC","","",50,null],[13,"PACK_GENERIC","","",50,null],[13,"UNPACK_GENERIC","","",50,null],[13,"EXISTS_GENERIC","","",50,null],[13,"MUT_BORROW_GLOBAL_GENERIC","","",50,null],[13,"IMM_BORROW_GLOBAL_GENERIC","","",50,null],[13,"MOVE_FROM_GENERIC","","",50,null],[13,"MOVE_TO_GENERIC","","",50,null],[5,"read_u8","","",null,[[["cursor",3]],["result",6]]],[5,"read_u32","","",null,[[["cursor",3]],["result",6]]],[5,"read_uleb128_as_u64","","",null,[[["cursor",3]],["result",6]]],[5,"instruction_key","","The encoding of the instruction is the serialized form of…",null,[[["bytecode",4]]]],[17,"TABLE_COUNT_MAX","","",null,null],[17,"TABLE_OFFSET_MAX","","",null,null],[17,"TABLE_SIZE_MAX","","",null,null],[17,"TABLE_CONTENT_SIZE_MAX","","",null,null],[17,"TABLE_INDEX_MAX","","",null,null],[17,"SIGNATURE_INDEX_MAX","","",null,null],[17,"ADDRESS_INDEX_MAX","","",null,null],[17,"IDENTIFIER_INDEX_MAX","","",null,null],[17,"MODULE_HANDLE_INDEX_MAX","","",null,null],[17,"STRUCT_HANDLE_INDEX_MAX","","",null,null],[17,"STRUCT_DEF_INDEX_MAX","","",null,null],[17,"FUNCTION_HANDLE_INDEX_MAX","","",null,null],[17,"FUNCTION_INST_INDEX_MAX","","",null,null],[17,"FIELD_HANDLE_INDEX_MAX","","",null,null],[17,"FIELD_INST_INDEX_MAX","","",null,null],[17,"STRUCT_DEF_INST_INDEX_MAX","","",null,null],[17,"CONSTANT_INDEX_MAX","","",null,null],[17,"BYTECODE_COUNT_MAX","","",null,null],[17,"BYTECODE_INDEX_MAX","","",null,null],[17,"LOCAL_INDEX_MAX","","",null,null],[17,"IDENTIFIER_SIZE_MAX","","",null,null],[17,"CONSTANT_SIZE_MAX","","",null,null],[17,"SIGNATURE_SIZE_MAX","","",null,null],[17,"ACQUIRES_COUNT_MAX","","",null,null],[17,"FIELD_COUNT_MAX","","",null,null],[17,"FIELD_OFFSET_MAX","","",null,null],[17,"TYPE_PARAMETER_COUNT_MAX","","",null,null],[17,"TYPE_PARAMETER_INDEX_MAX","","",null,null],[17,"SIGNATURE_TOKEN_DEPTH_MAX","","",null,null],[17,"BINARY_SIZE_LIMIT","","Upper limit on the binary size",null,null],[18,"DIEM_MAGIC_SIZE","","The blob that must start a binary.",51,null],[18,"DIEM_MAGIC","","",51,null],[18,"HEADER_SIZE","","The `DIEM_MAGIC` size, 4 byte for major version and 1 byte…",51,null],[18,"TABLE_HEADER_SIZE","","A (Table Type, Start Offset, Byte Count) size, which is 1…",51,null],[0,"internals","vm","Types meant for use by other parts of this crate, and by…",null,null],[8,"ModuleIndex","vm::internals","Represents a module index.",null,null],[18,"KIND","","",52,null],[10,"into_index","","",52,[[]]],[0,"normalized","vm","",null,null],[3,"Field","vm::normalized","Normalized version of a `FieldDefinition`. The `name` is…",null,null],[12,"name","","",53,null],[12,"type_","","",53,null],[3,"Struct","","Normalized version of a `StructDefinition`. Not safe to…",null,null],[12,"name","","",54,null],[12,"kind","","",54,null],[12,"type_parameters","","",54,null],[12,"fields","","",54,null],[3,"FunctionSignature","","Normalized version of a `FunctionDefinition`. Not safe to…",null,null],[12,"name","","",55,null],[12,"type_parameters","","",55,null],[12,"formals","","",55,null],[12,"ret","","",55,null],[3,"Module","","Normalized version of a `CompiledModule`: its address,…",null,null],[12,"address","","",56,null],[12,"name","","",56,null],[12,"structs","","",56,null],[12,"public_functions","","",56,null],[4,"Type","","Defines normalized representations of Move types, fields,…",null,null],[13,"Bool","","",57,null],[13,"U8","","",57,null],[13,"U64","","",57,null],[13,"U128","","",57,null],[13,"Address","","",57,null],[13,"Signer","","",57,null],[13,"Struct","","",57,null],[12,"address","vm::normalized::Type","",58,null],[12,"module","","",58,null],[12,"name","","",58,null],[12,"type_arguments","","",58,null],[13,"Vector","vm::normalized","",57,null],[13,"TypeParameter","","",57,null],[13,"Reference","","",57,null],[13,"MutableReference","","",57,null],[11,"new","","Extract a normalized module from a `CompiledModule`. The…",56,[[["compiledmodule",3]]]],[11,"new","","Create a normalized `Type` for `SignatureToken` `s` in…",57,[[["signaturetoken",4],["compiledmodule",3]]]],[11,"is_closed","","Return true if `self` is a closed type with no free type…",57,[[]]],[11,"into_type_tag","","",57,[[],[["option",4],["typetag",4]]]],[11,"new","","Create a `Field` for `FieldDefinition` `f` in module `m`.",53,[[["compiledmodule",3],["fielddefinition",3]]]],[11,"new","","Create a `Struct` for `StructDefinition` `def` in module…",54,[[["compiledmodule",3],["structdefinition",3]]]],[11,"new","","Create a `FunctionSignature` for `FunctionHandle` `f` in…",55,[[["compiledmodule",3],["functionhandle",3]]]],[0,"proptest_types","vm","Utilities for property-based testing.",null,null],[3,"CompiledModuleStrategyGen","vm::proptest_types","Contains configuration to generate [`CompiledModule`]…",null,null],[6,"TableSize","","Represents how large [`CompiledModule`] tables can be.",null,null],[11,"valid_strategy","vm::file_format","Convenience wrapper around…",44,[[]]],[11,"new","vm::proptest_types","Create a new configuration for randomly generating…",59,[[["tablesize",6]]]],[11,"zeros_all","","Zero out all fields, type parameters, arguments and return…",59,[[]]],[11,"generate","","Create a `proptest` strategy for `CompiledModule`…",59,[[]]],[0,"serializer","vm","Serialization of transactions and modules.",null,null],[11,"serialize","vm::file_format","Serializes a `CompiledScript` into a binary. The mutable…",43,[[["vec",3]],["result",6]]],[11,"serialize","","Serializes this into a binary format.",37,[[["vec",3]],["result",6]]],[11,"serialize","","Serializes a `CompiledModule` into a binary. The mutable…",44,[[["vec",3]],["result",6]]],[11,"serialize","","Serializes this into a binary format.",38,[[["vec",3]],["result",6]]],[0,"views","vm","An alternate representation of the file format built on…",null,null],[3,"ModuleView","vm::views","Represents a lazily evaluated abstraction over a module.",null,null],[3,"ModuleHandleView","","",null,null],[3,"StructHandleView","","",null,null],[3,"FunctionHandleView","","",null,null],[3,"StructDefinitionView","","",null,null],[3,"FieldDefinitionView","","",null,null],[3,"LocalsSignatureView","","",null,null],[3,"FunctionDefinitionView","","",null,null],[3,"StructInstantiationView","","",null,null],[3,"FieldHandleView","","",null,null],[3,"FunctionInstantiationView","","",null,null],[3,"FieldInstantiationView","","",null,null],[3,"TypeSignatureView","","",null,null],[3,"SignatureView","","",null,null],[3,"SignatureTokenView","","",null,null],[8,"ViewInternals","","This is used to expose some view internals to checks and…",null,null],[16,"ModuleType","","",60,null],[16,"Inner","","",60,null],[10,"module","","",60,[[]]],[10,"as_inner","","",60,[[]]],[11,"new","","",61,[[]]],[11,"self_handle_idx","","",61,[[],["modulehandleindex",3]]],[11,"module_handles","","",61,[[]]],[11,"struct_handles","","",61,[[]]],[11,"function_handles","","",61,[[]]],[11,"field_handles","","",61,[[]]],[11,"struct_instantiations","","",61,[[]]],[11,"function_instantiations","","",61,[[]]],[11,"field_instantiations","","",61,[[]]],[11,"signatures","","",61,[[]]],[11,"structs","","",61,[[]]],[11,"functions","","",61,[[]]],[11,"function_definition","","",61,[[["identstr",3]],[["option",4],["functiondefinitionview",3]]]],[11,"struct_definition","","",61,[[["identstr",3]],[["structdefinitionview",3],["option",4]]]],[11,"function_acquired_resources","","",61,[[["functionhandle",3]],[["btreeset",3],["structdefinitionindex",3]]]],[11,"id","","",61,[[],["moduleid",3]]],[11,"new","","",62,[[["modulehandle",3]]]],[11,"module_id","","",62,[[],["moduleid",3]]],[11,"new","","",63,[[["structhandle",3]]]],[11,"handle","","",63,[[],["structhandle",3]]],[11,"is_nominal_resource","","",63,[[]]],[11,"type_parameters","","",63,[[],["vec",3]]],[11,"module_handle","","",63,[[],["modulehandle",3]]],[11,"name","","",63,[[],["identstr",3]]],[11,"module_id","","",63,[[],["moduleid",3]]],[11,"handle_idx","","Return the StructHandleIndex of this handle in the…",63,[[],["structhandleindex",3]]],[11,"new","","",64,[[["functionhandle",3]]]],[11,"module_handle","","",64,[[],["modulehandle",3]]],[11,"name","","",64,[[],["identstr",3]]],[11,"parameters","","",64,[[],["signature",3]]],[11,"return_","","",64,[[],["signature",3]]],[11,"return_tokens","","",64,[[]]],[11,"arg_tokens","","",64,[[]]],[11,"type_parameters","","",64,[[],["vec",3]]],[11,"return_count","","",64,[[]]],[11,"arg_count","","",64,[[]]],[11,"module_id","","",64,[[],["moduleid",3]]],[11,"new","","",65,[[["structdefinition",3]]]],[11,"is_nominal_resource","","",65,[[]]],[11,"is_native","","",65,[[]]],[11,"type_parameters","","",65,[[],["vec",3]]],[11,"fields","","",65,[[],["option",4]]],[11,"name","","",65,[[],["identstr",3]]],[11,"new","","",66,[[["fielddefinition",3]]]],[11,"name","","",66,[[],["identstr",3]]],[11,"type_signature","","",66,[[],["typesignatureview",3]]],[11,"signature_token","","",66,[[],["signaturetoken",4]]],[11,"signature_token_view","","",66,[[],["signaturetokenview",3]]],[11,"is_empty","","",67,[[]]],[11,"len","","",67,[[]]],[11,"token_at","","",67,[[["localindex",6]],["signaturetokenview",3]]],[11,"new","","",68,[[["functiondefinition",3]]]],[11,"is_public","","",68,[[]]],[11,"is_native","","",68,[[]]],[11,"locals_signature","","",68,[[],[["localssignatureview",3],["option",4]]]],[11,"name","","",68,[[],["identstr",3]]],[11,"parameters","","",68,[[],["signature",3]]],[11,"return_","","",68,[[],["signature",3]]],[11,"type_parameters","","",68,[[],["vec",3]]],[11,"return_tokens","","",68,[[]]],[11,"arg_tokens","","",68,[[]]],[11,"return_count","","",68,[[]]],[11,"arg_count","","",68,[[]]],[11,"code","","",68,[[],[["option",4],["codeunit",3]]]],[11,"new","","",69,[[["structdefinstantiation",3]]]],[11,"new","","",70,[[["fieldhandle",3]]]],[11,"new","","",71,[[["functioninstantiation",3]]]],[11,"new","","",72,[[["fieldinstantiation",3]]]],[11,"new","","",73,[[["typesignature",3]]]],[11,"token","","",73,[[],["signaturetokenview",3]]],[11,"new","","",74,[[["signature",3]]]],[11,"len","","",74,[[]]],[11,"is_empty","","",74,[[]]],[11,"tokens","","",74,[[]]],[11,"token_at","","",74,[[["localindex",6]],["signaturetokenview",3]]],[11,"new","","",75,[[["signaturetoken",4]]]],[11,"signature_token","","",75,[[],["signaturetoken",4]]],[11,"signature_token_kind","","",75,[[],["signaturetokenkind",4]]],[11,"is_reference","","",75,[[]]],[11,"is_mutable_reference","","",75,[[]]],[11,"variants","vm","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","vm::check_bounds","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","vm::compatibility","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","vm::errors","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","vm::file_format","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"into_iter","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"into_iter","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"init","","",77,[[]]],[11,"deref","","",77,[[]]],[11,"deref_mut","","",77,[[]]],[11,"drop","","",77,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","vm::file_format_common","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","vm::normalized","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"from","vm::proptest_types","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","vm::views","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"init","","",74,[[]]],[11,"deref","","",74,[[]]],[11,"deref_mut","","",74,[[]]],[11,"drop","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"init","","",75,[[]]],[11,"deref","","",75,[[]]],[11,"deref_mut","","",75,[[]]],[11,"drop","","",75,[[]]],[11,"as_module","vm::file_format","",44,[[],["compiledmodule",3]]],[11,"as_script","","",43,[[],["compiledscript",3]]],[11,"into_index","","",9,[[]]],[11,"into_index","","",10,[[]]],[11,"into_index","","",11,[[]]],[11,"into_index","","",12,[[]]],[11,"into_index","","",13,[[]]],[11,"into_index","","",14,[[]]],[11,"into_index","","",15,[[]]],[11,"into_index","","",16,[[]]],[11,"into_index","","",17,[[]]],[11,"into_index","","",18,[[]]],[11,"into_index","","",19,[[]]],[11,"into_index","","",20,[[]]],[11,"into_index","","",21,[[]]],[11,"module","vm::views","",61,[[]]],[11,"as_inner","","",61,[[]]],[11,"module","","",62,[[]]],[11,"as_inner","","",62,[[]]],[11,"module","","",63,[[]]],[11,"as_inner","","",63,[[]]],[11,"module","","",64,[[]]],[11,"as_inner","","",64,[[]]],[11,"module","","",65,[[]]],[11,"as_inner","","",65,[[]]],[11,"module","","",68,[[]]],[11,"as_inner","","",68,[[]]],[11,"module","","",66,[[]]],[11,"as_inner","","",66,[[]]],[11,"module","","",73,[[]]],[11,"as_inner","","",73,[[]]],[11,"module","","",74,[[]]],[11,"as_inner","","",74,[[]]],[11,"module","","",75,[[]]],[11,"as_inner","","",75,[[]]],[11,"into","vm::errors","",7,[[],["vmstatus",4]]],[11,"next","vm::file_format","",76,[[],["option",4]]],[11,"next","","",77,[[],["option",4]]],[11,"clone","vm::errors","",6,[[],["location",4]]],[11,"clone","","",7,[[],["vmerror",3]]],[11,"clone","","",8,[[],["partialvmerror",3]]],[11,"clone","vm::file_format","",9,[[],["modulehandleindex",3]]],[11,"clone","","",10,[[],["structhandleindex",3]]],[11,"clone","","",11,[[],["functionhandleindex",3]]],[11,"clone","","",12,[[],["fieldhandleindex",3]]],[11,"clone","","",13,[[],["structdefinstantiationindex",3]]],[11,"clone","","",14,[[],["functioninstantiationindex",3]]],[11,"clone","","",15,[[],["fieldinstantiationindex",3]]],[11,"clone","","",16,[[],["identifierindex",3]]],[11,"clone","","",17,[[],["addressidentifierindex",3]]],[11,"clone","","",18,[[],["constantpoolindex",3]]],[11,"clone","","",19,[[],["signatureindex",3]]],[11,"clone","","",20,[[],["structdefinitionindex",3]]],[11,"clone","","",21,[[],["functiondefinitionindex",3]]],[11,"clone","","",22,[[],["modulehandle",3]]],[11,"clone","","",23,[[],["structhandle",3]]],[11,"clone","","",24,[[],["functionhandle",3]]],[11,"clone","","",25,[[],["fieldhandle",3]]],[11,"clone","","",39,[[],["structfieldinformation",4]]],[11,"clone","","",26,[[],["structdefinstantiation",3]]],[11,"clone","","",27,[[],["functioninstantiation",3]]],[11,"clone","","",28,[[],["fieldinstantiation",3]]],[11,"clone","","",29,[[],["structdefinition",3]]],[11,"clone","","",30,[[],["fielddefinition",3]]],[11,"clone","","",31,[[],["functiondefinition",3]]],[11,"clone","","",32,[[],["typesignature",3]]],[11,"clone","","",33,[[],["functionsignature",3]]],[11,"clone","","",34,[[],["signature",3]]],[11,"clone","","",40,[[],["kind",4]]],[11,"clone","","",41,[[],["signaturetoken",4]]],[11,"clone","","",35,[[],["constant",3]]],[11,"clone","","",36,[[],["codeunit",3]]],[11,"clone","","",42,[[],["bytecode",4]]],[11,"clone","","",43,[[],["compiledscript",3]]],[11,"clone","","",37,[[],["compiledscriptmut",3]]],[11,"clone","","",44,[[],["compiledmodule",3]]],[11,"clone","","",38,[[],["compiledmodulemut",3]]],[11,"clone","vm::file_format_common","",45,[[],["tabletype",4]]],[11,"clone","","",46,[[],["serializedtype",4]]],[11,"clone","","",47,[[],["serializednominalresourceflag",4]]],[11,"clone","","",48,[[],["serializedkind",4]]],[11,"clone","","",49,[[],["serializednativestructflag",4]]],[11,"clone","","",50,[[],["opcodes",4]]],[11,"clone","vm::normalized","",57,[[],["type",4]]],[11,"clone","","",53,[[],["field",3]]],[11,"clone","","",54,[[],["struct",3]]],[11,"clone","","",55,[[],["functionsignature",3]]],[11,"clone","","",56,[[],["module",3]]],[11,"clone","vm::proptest_types","",59,[[],["compiledmodulestrategygen",3]]],[11,"clone","vm::views","",64,[[]]],[11,"clone","","",68,[[]]],[11,"clone","vm","",0,[[],["indexkind",4]]],[11,"clone","","",1,[[],["signaturetokenkind",4]]],[11,"default","vm::file_format","",9,[[],["modulehandleindex",3]]],[11,"default","","",10,[[],["structhandleindex",3]]],[11,"default","","",11,[[],["functionhandleindex",3]]],[11,"default","","",12,[[],["fieldhandleindex",3]]],[11,"default","","",13,[[],["structdefinstantiationindex",3]]],[11,"default","","",14,[[],["functioninstantiationindex",3]]],[11,"default","","",15,[[],["fieldinstantiationindex",3]]],[11,"default","","",16,[[],["identifierindex",3]]],[11,"default","","",17,[[],["addressidentifierindex",3]]],[11,"default","","",18,[[],["constantpoolindex",3]]],[11,"default","","",19,[[],["signatureindex",3]]],[11,"default","","",20,[[],["structdefinitionindex",3]]],[11,"default","","",21,[[],["functiondefinitionindex",3]]],[11,"default","","",31,[[],["functiondefinition",3]]],[11,"default","","",34,[[],["signature",3]]],[11,"default","","",36,[[],["codeunit",3]]],[11,"default","","",37,[[],["compiledscriptmut",3]]],[11,"default","","",38,[[],["compiledmodulemut",3]]],[11,"cmp","vm::errors","",6,[[["location",4]],["ordering",4]]],[11,"cmp","","",7,[[["vmerror",3]],["ordering",4]]],[11,"cmp","vm::file_format","",9,[[["modulehandleindex",3]],["ordering",4]]],[11,"cmp","","",10,[[["structhandleindex",3]],["ordering",4]]],[11,"cmp","","",11,[[["functionhandleindex",3]],["ordering",4]]],[11,"cmp","","",12,[[["fieldhandleindex",3]],["ordering",4]]],[11,"cmp","","",13,[[["structdefinstantiationindex",3]],["ordering",4]]],[11,"cmp","","",14,[[["functioninstantiationindex",3]],["ordering",4]]],[11,"cmp","","",15,[[["fieldinstantiationindex",3]],["ordering",4]]],[11,"cmp","","",16,[[["identifierindex",3]],["ordering",4]]],[11,"cmp","","",17,[[["addressidentifierindex",3]],["ordering",4]]],[11,"cmp","","",18,[[["constantpoolindex",3]],["ordering",4]]],[11,"cmp","","",19,[[["signatureindex",3]],["ordering",4]]],[11,"cmp","","",20,[[["structdefinitionindex",3]],["ordering",4]]],[11,"cmp","","",21,[[["functiondefinitionindex",3]],["ordering",4]]],[11,"cmp","","",22,[[["modulehandle",3]],["ordering",4]]],[11,"cmp","","",23,[[["structhandle",3]],["ordering",4]]],[11,"cmp","","",40,[[["kind",4]],["ordering",4]]],[11,"cmp","","",41,[[["signaturetoken",4]],["ordering",4]]],[11,"cmp","vm","",0,[[["indexkind",4]],["ordering",4]]],[11,"cmp","","",1,[[["signaturetokenkind",4]],["ordering",4]]],[11,"eq","vm::errors","",6,[[["location",4]]]],[11,"ne","","",6,[[["location",4]]]],[11,"eq","","",7,[[["vmerror",3]]]],[11,"ne","","",7,[[["vmerror",3]]]],[11,"eq","vm::file_format","",9,[[["modulehandleindex",3]]]],[11,"ne","","",9,[[["modulehandleindex",3]]]],[11,"eq","","",10,[[["structhandleindex",3]]]],[11,"ne","","",10,[[["structhandleindex",3]]]],[11,"eq","","",11,[[["functionhandleindex",3]]]],[11,"ne","","",11,[[["functionhandleindex",3]]]],[11,"eq","","",12,[[["fieldhandleindex",3]]]],[11,"ne","","",12,[[["fieldhandleindex",3]]]],[11,"eq","","",13,[[["structdefinstantiationindex",3]]]],[11,"ne","","",13,[[["structdefinstantiationindex",3]]]],[11,"eq","","",14,[[["functioninstantiationindex",3]]]],[11,"ne","","",14,[[["functioninstantiationindex",3]]]],[11,"eq","","",15,[[["fieldinstantiationindex",3]]]],[11,"ne","","",15,[[["fieldinstantiationindex",3]]]],[11,"eq","","",16,[[["identifierindex",3]]]],[11,"ne","","",16,[[["identifierindex",3]]]],[11,"eq","","",17,[[["addressidentifierindex",3]]]],[11,"ne","","",17,[[["addressidentifierindex",3]]]],[11,"eq","","",18,[[["constantpoolindex",3]]]],[11,"ne","","",18,[[["constantpoolindex",3]]]],[11,"eq","","",19,[[["signatureindex",3]]]],[11,"ne","","",19,[[["signatureindex",3]]]],[11,"eq","","",20,[[["structdefinitionindex",3]]]],[11,"ne","","",20,[[["structdefinitionindex",3]]]],[11,"eq","","",21,[[["functiondefinitionindex",3]]]],[11,"ne","","",21,[[["functiondefinitionindex",3]]]],[11,"eq","","",22,[[["modulehandle",3]]]],[11,"ne","","",22,[[["modulehandle",3]]]],[11,"eq","","",23,[[["structhandle",3]]]],[11,"ne","","",23,[[["structhandle",3]]]],[11,"eq","","",24,[[["functionhandle",3]]]],[11,"ne","","",24,[[["functionhandle",3]]]],[11,"eq","","",25,[[["fieldhandle",3]]]],[11,"ne","","",25,[[["fieldhandle",3]]]],[11,"eq","","",39,[[["structfieldinformation",4]]]],[11,"ne","","",39,[[["structfieldinformation",4]]]],[11,"eq","","",26,[[["structdefinstantiation",3]]]],[11,"ne","","",26,[[["structdefinstantiation",3]]]],[11,"eq","","",27,[[["functioninstantiation",3]]]],[11,"ne","","",27,[[["functioninstantiation",3]]]],[11,"eq","","",28,[[["fieldinstantiation",3]]]],[11,"ne","","",28,[[["fieldinstantiation",3]]]],[11,"eq","","",29,[[["structdefinition",3]]]],[11,"ne","","",29,[[["structdefinition",3]]]],[11,"eq","","",30,[[["fielddefinition",3]]]],[11,"ne","","",30,[[["fielddefinition",3]]]],[11,"eq","","",31,[[["functiondefinition",3]]]],[11,"ne","","",31,[[["functiondefinition",3]]]],[11,"eq","","",32,[[["typesignature",3]]]],[11,"ne","","",32,[[["typesignature",3]]]],[11,"eq","","",33,[[["functionsignature",3]]]],[11,"ne","","",33,[[["functionsignature",3]]]],[11,"eq","","",34,[[["signature",3]]]],[11,"ne","","",34,[[["signature",3]]]],[11,"eq","","",40,[[["kind",4]]]],[11,"eq","","",41,[[["signaturetoken",4]]]],[11,"ne","","",41,[[["signaturetoken",4]]]],[11,"eq","","",35,[[["constant",3]]]],[11,"ne","","",35,[[["constant",3]]]],[11,"eq","","",36,[[["codeunit",3]]]],[11,"ne","","",36,[[["codeunit",3]]]],[11,"eq","","",42,[[["bytecode",4]]]],[11,"ne","","",42,[[["bytecode",4]]]],[11,"eq","","",43,[[["compiledscript",3]]]],[11,"ne","","",43,[[["compiledscript",3]]]],[11,"eq","","",37,[[["compiledscriptmut",3]]]],[11,"ne","","",37,[[["compiledscriptmut",3]]]],[11,"eq","","",44,[[["compiledmodule",3]]]],[11,"ne","","",44,[[["compiledmodule",3]]]],[11,"eq","","",38,[[["compiledmodulemut",3]]]],[11,"ne","","",38,[[["compiledmodulemut",3]]]],[11,"eq","vm::file_format_common","",45,[[["tabletype",4]]]],[11,"eq","vm::normalized","",57,[[["type",4]]]],[11,"ne","","",57,[[["type",4]]]],[11,"eq","","",53,[[["field",3]]]],[11,"ne","","",53,[[["field",3]]]],[11,"eq","","",54,[[["struct",3]]]],[11,"ne","","",54,[[["struct",3]]]],[11,"eq","","",55,[[["functionsignature",3]]]],[11,"ne","","",55,[[["functionsignature",3]]]],[11,"eq","","",56,[[["module",3]]]],[11,"ne","","",56,[[["module",3]]]],[11,"eq","vm","",0,[[["indexkind",4]]]],[11,"eq","","",1,[[["signaturetokenkind",4]]]],[11,"partial_cmp","vm::errors","",6,[[["location",4]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["location",4]]]],[11,"le","","",6,[[["location",4]]]],[11,"gt","","",6,[[["location",4]]]],[11,"ge","","",6,[[["location",4]]]],[11,"partial_cmp","","",7,[[["vmerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["vmerror",3]]]],[11,"le","","",7,[[["vmerror",3]]]],[11,"gt","","",7,[[["vmerror",3]]]],[11,"ge","","",7,[[["vmerror",3]]]],[11,"partial_cmp","vm::file_format","",9,[[["modulehandleindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["modulehandleindex",3]]]],[11,"le","","",9,[[["modulehandleindex",3]]]],[11,"gt","","",9,[[["modulehandleindex",3]]]],[11,"ge","","",9,[[["modulehandleindex",3]]]],[11,"partial_cmp","","",10,[[["structhandleindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["structhandleindex",3]]]],[11,"le","","",10,[[["structhandleindex",3]]]],[11,"gt","","",10,[[["structhandleindex",3]]]],[11,"ge","","",10,[[["structhandleindex",3]]]],[11,"partial_cmp","","",11,[[["functionhandleindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["functionhandleindex",3]]]],[11,"le","","",11,[[["functionhandleindex",3]]]],[11,"gt","","",11,[[["functionhandleindex",3]]]],[11,"ge","","",11,[[["functionhandleindex",3]]]],[11,"partial_cmp","","",12,[[["fieldhandleindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",12,[[["fieldhandleindex",3]]]],[11,"le","","",12,[[["fieldhandleindex",3]]]],[11,"gt","","",12,[[["fieldhandleindex",3]]]],[11,"ge","","",12,[[["fieldhandleindex",3]]]],[11,"partial_cmp","","",13,[[["structdefinstantiationindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",13,[[["structdefinstantiationindex",3]]]],[11,"le","","",13,[[["structdefinstantiationindex",3]]]],[11,"gt","","",13,[[["structdefinstantiationindex",3]]]],[11,"ge","","",13,[[["structdefinstantiationindex",3]]]],[11,"partial_cmp","","",14,[[["functioninstantiationindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",14,[[["functioninstantiationindex",3]]]],[11,"le","","",14,[[["functioninstantiationindex",3]]]],[11,"gt","","",14,[[["functioninstantiationindex",3]]]],[11,"ge","","",14,[[["functioninstantiationindex",3]]]],[11,"partial_cmp","","",15,[[["fieldinstantiationindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",15,[[["fieldinstantiationindex",3]]]],[11,"le","","",15,[[["fieldinstantiationindex",3]]]],[11,"gt","","",15,[[["fieldinstantiationindex",3]]]],[11,"ge","","",15,[[["fieldinstantiationindex",3]]]],[11,"partial_cmp","","",16,[[["identifierindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",16,[[["identifierindex",3]]]],[11,"le","","",16,[[["identifierindex",3]]]],[11,"gt","","",16,[[["identifierindex",3]]]],[11,"ge","","",16,[[["identifierindex",3]]]],[11,"partial_cmp","","",17,[[["addressidentifierindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["addressidentifierindex",3]]]],[11,"le","","",17,[[["addressidentifierindex",3]]]],[11,"gt","","",17,[[["addressidentifierindex",3]]]],[11,"ge","","",17,[[["addressidentifierindex",3]]]],[11,"partial_cmp","","",18,[[["constantpoolindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",18,[[["constantpoolindex",3]]]],[11,"le","","",18,[[["constantpoolindex",3]]]],[11,"gt","","",18,[[["constantpoolindex",3]]]],[11,"ge","","",18,[[["constantpoolindex",3]]]],[11,"partial_cmp","","",19,[[["signatureindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",19,[[["signatureindex",3]]]],[11,"le","","",19,[[["signatureindex",3]]]],[11,"gt","","",19,[[["signatureindex",3]]]],[11,"ge","","",19,[[["signatureindex",3]]]],[11,"partial_cmp","","",20,[[["structdefinitionindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",20,[[["structdefinitionindex",3]]]],[11,"le","","",20,[[["structdefinitionindex",3]]]],[11,"gt","","",20,[[["structdefinitionindex",3]]]],[11,"ge","","",20,[[["structdefinitionindex",3]]]],[11,"partial_cmp","","",21,[[["functiondefinitionindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",21,[[["functiondefinitionindex",3]]]],[11,"le","","",21,[[["functiondefinitionindex",3]]]],[11,"gt","","",21,[[["functiondefinitionindex",3]]]],[11,"ge","","",21,[[["functiondefinitionindex",3]]]],[11,"partial_cmp","","",22,[[["modulehandle",3]],[["ordering",4],["option",4]]]],[11,"lt","","",22,[[["modulehandle",3]]]],[11,"le","","",22,[[["modulehandle",3]]]],[11,"gt","","",22,[[["modulehandle",3]]]],[11,"ge","","",22,[[["modulehandle",3]]]],[11,"partial_cmp","","",23,[[["structhandle",3]],[["ordering",4],["option",4]]]],[11,"lt","","",23,[[["structhandle",3]]]],[11,"le","","",23,[[["structhandle",3]]]],[11,"gt","","",23,[[["structhandle",3]]]],[11,"ge","","",23,[[["structhandle",3]]]],[11,"partial_cmp","","",40,[[["kind",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",41,[[["signaturetoken",4]],[["ordering",4],["option",4]]]],[11,"lt","","",41,[[["signaturetoken",4]]]],[11,"le","","",41,[[["signaturetoken",4]]]],[11,"gt","","",41,[[["signaturetoken",4]]]],[11,"ge","","",41,[[["signaturetoken",4]]]],[11,"partial_cmp","vm","",0,[[["indexkind",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",1,[[["signaturetokenkind",4]],[["ordering",4],["option",4]]]],[11,"fmt","vm::errors","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","vm::file_format","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","vm::file_format_common","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","vm::normalized","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","vm::proptest_types","",59,[[["formatter",3]],["result",6]]],[11,"fmt","vm","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","vm::errors","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","vm::file_format","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","vm","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","vm::file_format","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",42,[[]]],[11,"hash","vm::file_format_common","",45,[[]]],[11,"hash","vm","",0,[[]]],[11,"arbitrary_with","vm::file_format","",9,[[]]],[11,"arbitrary_with","","",10,[[]]],[11,"arbitrary_with","","",11,[[]]],[11,"arbitrary_with","","",12,[[]]],[11,"arbitrary_with","","",13,[[]]],[11,"arbitrary_with","","",14,[[]]],[11,"arbitrary_with","","",15,[[]]],[11,"arbitrary_with","","",16,[[]]],[11,"arbitrary_with","","",17,[[]]],[11,"arbitrary_with","","",18,[[]]],[11,"arbitrary_with","","",19,[[]]],[11,"arbitrary_with","","",20,[[]]],[11,"arbitrary_with","","",21,[[]]],[11,"arbitrary_with","","",22,[[]]],[11,"arbitrary_with","","",23,[[]]],[11,"arbitrary_with","","",24,[[]]],[11,"arbitrary_with","","",25,[[]]],[11,"arbitrary_with","","",39,[[]]],[11,"arbitrary_with","","",26,[[]]],[11,"arbitrary_with","","",27,[[]]],[11,"arbitrary_with","","",28,[[]]],[11,"arbitrary_with","","",29,[[]]],[11,"arbitrary_with","","",30,[[]]],[11,"arbitrary_with","","",31,[[]]],[11,"arbitrary_with","","",32,[[]]],[11,"arbitrary_with","","",33,[[]]],[11,"arbitrary_with","","",34,[[]]],[11,"arbitrary_with","","",40,[[]]],[11,"arbitrary_with","","",41,[[]]],[11,"arbitrary_with","","",36,[[]]],[11,"arbitrary_with","","",42,[[]]],[11,"arbitrary_with","","",37,[[]]],[11,"arbitrary_with","","",38,[[]]],[11,"serialize_constant","","",35,[[["movevalue",4],["movetypelayout",4]],["option",4]]],[11,"deserialize_constant","","",35,[[],[["option",4],["movevalue",4]]]],[11,"deserialize","","Deserializes a &[u8] slice into a `CompiledScript` instance.",43,[[],["binaryloaderresult",6]]],[11,"deserialize","","Deserialize a &[u8] slice into a `CompiledModule` instance.",44,[[],["binaryloaderresult",6]]],[11,"deserialize_no_check_bounds","","",38,[[],["binaryloaderresult",6]]]],"p":[[4,"IndexKind"],[4,"SignatureTokenKind"],[8,"ModuleAccess"],[8,"ScriptAccess"],[3,"BoundsChecker"],[3,"Compatibility"],[4,"Location"],[3,"VMError"],[3,"PartialVMError"],[3,"ModuleHandleIndex"],[3,"StructHandleIndex"],[3,"FunctionHandleIndex"],[3,"FieldHandleIndex"],[3,"StructDefInstantiationIndex"],[3,"FunctionInstantiationIndex"],[3,"FieldInstantiationIndex"],[3,"IdentifierIndex"],[3,"AddressIdentifierIndex"],[3,"ConstantPoolIndex"],[3,"SignatureIndex"],[3,"StructDefinitionIndex"],[3,"FunctionDefinitionIndex"],[3,"ModuleHandle"],[3,"StructHandle"],[3,"FunctionHandle"],[3,"FieldHandle"],[3,"StructDefInstantiation"],[3,"FunctionInstantiation"],[3,"FieldInstantiation"],[3,"StructDefinition"],[3,"FieldDefinition"],[3,"FunctionDefinition"],[3,"TypeSignature"],[3,"FunctionSignature"],[3,"Signature"],[3,"Constant"],[3,"CodeUnit"],[3,"CompiledScriptMut"],[3,"CompiledModuleMut"],[4,"StructFieldInformation"],[4,"Kind"],[4,"SignatureToken"],[4,"Bytecode"],[3,"CompiledScript"],[3,"CompiledModule"],[4,"TableType"],[4,"SerializedType"],[4,"SerializedNominalResourceFlag"],[4,"SerializedKind"],[4,"SerializedNativeStructFlag"],[4,"Opcodes"],[4,"BinaryConstants"],[8,"ModuleIndex"],[3,"Field"],[3,"Struct"],[3,"FunctionSignature"],[3,"Module"],[4,"Type"],[13,"Struct"],[3,"CompiledModuleStrategyGen"],[8,"ViewInternals"],[3,"ModuleView"],[3,"ModuleHandleView"],[3,"StructHandleView"],[3,"FunctionHandleView"],[3,"StructDefinitionView"],[3,"FieldDefinitionView"],[3,"LocalsSignatureView"],[3,"FunctionDefinitionView"],[3,"StructInstantiationView"],[3,"FieldHandleView"],[3,"FunctionInstantiationView"],[3,"FieldInstantiationView"],[3,"TypeSignatureView"],[3,"SignatureView"],[3,"SignatureTokenView"],[3,"SignatureTokenPreorderTraversalIter"],[3,"SignatureTokenPreorderTraversalIterWithDepth"],[3,"ScriptConversionInfo"]]},\
"vm_genesis":{"doc":"","i":[[3,"Validator","vm_genesis","",null,null],[12,"index","","",0,null],[12,"key","","",0,null],[12,"name","","",0,null],[12,"operator_address","","",0,null],[12,"owner_address","","",0,null],[5,"encode_genesis_transaction","","",null,[[["chainid",3],["vmpublishingoption",3],["option",4],["ed25519publickey",3]],["transaction",4]]],[5,"encode_genesis_change_set","","",null,[[["vmpublishingoption",3],["ed25519publickey",3],["chainid",3]],["changeset",3]]],[5,"generate_genesis_change_set_for_testing","","Generate an artificial genesis `ChangeSet` for testing",null,[[["stdliboptions",4]],["changeset",3]]],[5,"test_genesis_transaction","","",null,[[],["transaction",4]]],[5,"test_genesis_change_set_and_validators","","",null,[[["option",4]]]],[5,"generate_test_genesis","","",null,[[["vmpublishingoption",3],["option",4]]]],[0,"genesis_gas_schedule","","This file contains the starting gas schedule published at…",null,null],[7,"INITIAL_GAS_SCHEDULE","vm_genesis::genesis_gas_schedule","",null,null],[6,"Name","vm_genesis","",null,null],[6,"OperatorAssignment","","",null,null],[6,"OperatorRegistration","","",null,null],[7,"GENESIS_KEYPAIR","","",null,null],[7,"ZERO_COST_SCHEDULE","","",null,null],[11,"new_set","","",0,[[["option",4]],[["validator",3],["vec",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]]],"p":[[3,"Validator"]]},\
"vm_validator":{"doc":"","i":[[0,"mocks","vm_validator","",null,null],[0,"mock_vm_validator","vm_validator::mocks","",null,null],[3,"MockVMValidator","vm_validator::mocks::mock_vm_validator","",null,null],[0,"vm_validator","vm_validator","",null,null],[3,"VMValidator","vm_validator::vm_validator","",null,null],[5,"get_account_sequence_number","","returns account\'s sequence number from storage",null,[[["accountaddress",3],["dbreader",8]],["result",6]]],[8,"TransactionValidation","","",null,null],[16,"ValidationInstance","","",0,null],[10,"validate_transaction","","Validate a txn from client",0,[[["signedtransaction",3]],[["vmvalidatorresult",3],["result",6]]]],[10,"restart","","Restart the transaction validation instance",0,[[["onchainconfigpayload",3]],["result",6]]],[11,"new","","",1,[[["arc",3],["dbreader",8]]]],[11,"from","vm_validator::mocks::mock_vm_validator","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","vm_validator::vm_validator","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"validate_transaction","vm_validator::mocks::mock_vm_validator","",2,[[["signedtransaction",3]],[["vmvalidatorresult",3],["result",6]]]],[11,"restart","","",2,[[["onchainconfigpayload",3]],["result",6]]],[11,"validate_transaction","vm_validator::vm_validator","",1,[[["signedtransaction",3]],[["vmvalidatorresult",3],["result",6]]]],[11,"restart","","",1,[[["onchainconfigpayload",3]],["result",6]]],[11,"clone","vm_validator::mocks::mock_vm_validator","",2,[[],["mockvmvalidator",3]]],[11,"clone","vm_validator::vm_validator","",1,[[],["vmvalidator",3]]],[11,"validate_transaction","vm_validator::mocks::mock_vm_validator","",2,[[["signedtransaction",3],["stateview",8]],["vmvalidatorresult",3]]]],"p":[[8,"TransactionValidation"],[3,"VMValidator"],[3,"MockVMValidator"]]},\
"x_core":{"doc":"","i":[[3,"DebugIgnore","x_core","A newtype wrapper that causes this field to be ignored…",null,null],[12,"0","","",0,null],[3,"WorkspaceSubsets","","Contains information about all the subsets specified in…",null,null],[3,"WorkspaceSubset","","Information collected about a subset of members of a…",null,null],[3,"XCoreContext","","Core context shared across all of x.",null,null],[4,"SystemError","","A system error that happened while running a lint.",null,null],[13,"CwdNotInProjectRoot","","",1,null],[12,"current_dir","x_core::SystemError","",2,null],[12,"project_root","","",2,null],[13,"Exec","x_core","",1,null],[12,"cmd","x_core::SystemError","",3,null],[12,"status","","",3,null],[13,"GitRoot","x_core","",1,null],[13,"FromHex","","",1,null],[12,"context","x_core::SystemError","",4,null],[12,"err","","",4,null],[13,"Guppy","x_core","",1,null],[12,"context","x_core::SystemError","",5,null],[12,"err","","",5,null],[13,"Io","x_core","",1,null],[12,"context","x_core::SystemError","",6,null],[12,"err","","",6,null],[13,"Serde","x_core","",1,null],[12,"context","x_core::SystemError","",7,null],[12,"err","","",7,null],[4,"WorkspaceStatus","x_core","The status of a particular package ID in a…",null,null],[13,"RootMember","","This package ID is a root member of the workspace subset.",8,null],[13,"Dependency","","This package ID is a dependency of the workspace subset,…",8,null],[13,"Absent","","This package ID is not a dependency of the workspace subset.",8,null],[0,"core_config","","",null,null],[3,"XCoreConfig","x_core::core_config","Core configuration for x.",null,null],[12,"subsets","","Subsets of this workspace",9,null],[3,"SubsetConfig","","",null,null],[12,"root_members","","The root members in this subset",10,null],[11,"io","x_core","",1,[[["error",3]]]],[11,"guppy","","",1,[[["error",4]]]],[11,"git_root","","",1,[[]]],[11,"from_hex","","",1,[[["fromhexerror",4]]]],[11,"de","","",1,[[]]],[11,"ser","","",1,[[]]],[11,"new","","Constructs a new store for workspace subsets.",11,[[["btreemap",3],["packagegraph",3],["path",3]],["result",6]]],[11,"default_members","","Returns information about default members.",11,[[],["workspacesubset",3]]],[11,"get","","Returns information about the subset by name.",11,[[],[["option",4],["workspacesubset",3]]]],[11,"iter","","Iterate over all named subsets.",11,[[]]],[11,"new","","Creates a new subset by simulating a Cargo build on the…",12,[[["packagequery",3],["cargooptions",3]]]],[11,"query","","Returns the original query that this subset was…",12,[[],["featurequery",3]]],[11,"status_of","","Returns the status of the given package ID in the subset.",12,[[["packageid",3]],["workspacestatus",4]]],[11,"root_members","","Returns a list of root packages in this subset, ignoring…",12,[[]]],[11,"build_set","","Returns the set of packages and features that would be…",12,[[],["cargoset",3]]],[6,"Result","","Type alias for the return type for `run` methods.",null,null],[11,"new","","Creates a new XCoreContext.",13,[[["xcoreconfig",3],["path",3],["pathbuf",3]],["result",6]]],[11,"project_root","","Returns the project root for this workspace.",13,[[],["path",3]]],[11,"config","","Returns the core config.",13,[[],["xcoreconfig",3]]],[11,"current_dir","","Returns the current working directory for this process.",13,[[],["path",3]]],[11,"current_rel_dir","","Returns the current working directory for this process,…",13,[[],["path",3]]],[11,"current_dir_is_root","","Returns true if x has been run from the project root.",13,[[]]],[11,"git_cli","","Returns the Git CLI for this workspace.",13,[[],["gitcli",3]]],[11,"package_graph","","Returns the package graph for this workspace.",13,[[],[["result",6],["packagegraph",3]]]],[11,"subsets","","Returns information about the subsets for this workspace.",13,[[],[["workspacesubsets",3],["result",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"borrow_replacement","","",0,[[]]],[11,"clone_boxed","","",0,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",0,[[]]],[11,"clone_boxed","","",0,[[],[["nonsyncfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow_replacement","","",11,[[]]],[11,"clone_boxed","","",11,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",11,[[]]],[11,"clone_boxed","","",11,[[],[["nonsyncfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow_replacement","","",12,[[]]],[11,"clone_boxed","","",12,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",12,[[]]],[11,"clone_boxed","","",12,[[],[["nonsyncfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow_replacement","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow_replacement","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[]]],[11,"borrow_replacement","","",8,[[]]],[11,"clone_boxed","","",8,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",8,[[]]],[11,"clone_boxed","","",8,[[],[["nonsyncfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","x_core::core_config","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[]]],[11,"borrow_replacement","","",9,[[]]],[11,"clone_boxed","","",9,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",9,[[]]],[11,"clone_boxed","","",9,[[],[["nonsyncfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"borrow_replacement","","",10,[[]]],[11,"clone_boxed","","",10,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",10,[[]]],[11,"clone_boxed","","",10,[[],[["nonsyncfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"clone","","",9,[[],["xcoreconfig",3]]],[11,"clone","","",10,[[],["subsetconfig",3]]],[11,"clone","x_core","",0,[[],["debugignore",3]]],[11,"clone","","",11,[[],["workspacesubsets",3]]],[11,"clone","","",12,[[],["workspacesubset",3]]],[11,"clone","","",8,[[],["workspacestatus",4]]],[11,"cmp","","",0,[[["debugignore",3]],["ordering",4]]],[11,"eq","x_core::core_config","",9,[[["xcoreconfig",3]]]],[11,"ne","","",9,[[["xcoreconfig",3]]]],[11,"eq","","",10,[[["subsetconfig",3]]]],[11,"ne","","",10,[[["subsetconfig",3]]]],[11,"eq","x_core","",0,[[["debugignore",3]]]],[11,"ne","","",0,[[["debugignore",3]]]],[11,"eq","","",8,[[["workspacestatus",4]]]],[11,"partial_cmp","","",0,[[["debugignore",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["debugignore",3]]]],[11,"le","","",0,[[["debugignore",3]]]],[11,"gt","","",0,[[["debugignore",3]]]],[11,"ge","","",0,[[["debugignore",3]]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"fmt","x_core::core_config","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","x_core","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",8,[[]]],[11,"source","","",1,[[],[["option",4],["error",8]]]],[11,"deserialize","x_core::core_config","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]]],"p":[[3,"DebugIgnore"],[4,"SystemError"],[13,"CwdNotInProjectRoot"],[13,"Exec"],[13,"FromHex"],[13,"Guppy"],[13,"Io"],[13,"Serde"],[4,"WorkspaceStatus"],[3,"XCoreConfig"],[3,"SubsetConfig"],[3,"WorkspaceSubsets"],[3,"WorkspaceSubset"],[3,"XCoreContext"]]},\
"x_lint":{"doc":"Lint engine.","i":[[3,"LintFormatter","x_lint","A lint formatter.",null,null],[3,"LintMessage","","A message raised by a lint.",null,null],[3,"LintSource","","Message source for lints.",null,null],[4,"RunStatus","","The run status of a lint.",null,null],[13,"Executed","","This lint run was successful, with messages possibly…",0,null],[13,"Skipped","","This lint was skipped.",0,null],[4,"SkipReason","","The reason for why this lint was skipped.",null,null],[13,"NonUtf8","","This file was not valid UTF-8.",1,null],[13,"UnsupportedExtension","","This extension was unsupported.",1,null],[13,"UnsupportedFile","","The given file was unsupported by this linter.",1,null],[13,"UnsupportedPackage","","The given package was unsupported by this linter.",1,null],[13,"GlobExemption","","The given file was excepted by a glob rule",1,null],[4,"LintLevel","","",null,null],[13,"Error","","",2,null],[13,"Warning","","",2,null],[4,"LintKind","","",null,null],[13,"Project","","",3,null],[13,"Package","","",3,null],[12,"name","x_lint::LintKind","",4,null],[12,"workspace_path","","",4,null],[13,"FilePath","x_lint","",3,null],[13,"Content","","",3,null],[0,"content","","",null,null],[3,"ContentContext","x_lint::content","",null,null],[8,"ContentLinter","","Represents a linter that checks file contents.",null,null],[11,"pre_run","","Pre-run step -- avoids loading the contents if possible.",5,[[["filepathcontext",3]],[["runstatus",4],["result",6]]]],[10,"run","","Executes the lint against the given content context.",5,[[["contentcontext",3],["lintformatter",3]],[["runstatus",4],["result",6]]]],[18,"BINARY_FILE_CUTOFF","","The number of bytes that will be searched for null bytes…",6,null],[11,"file_ctx","","Returns the file context.",6,[[],["filepathcontext",3]]],[11,"content","","Returns the content, or `None` if this is a non-UTF-8 file.",6,[[],["option",4]]],[11,"content_bytes","","Returns the raw bytes for the content.",6,[[]]],[11,"is_binary","","Returns true if this is a binary file.",6,[[]]],[0,"file_path","x_lint","",null,null],[3,"FilePathContext","x_lint::file_path","Contains information for a single file path.",null,null],[8,"FilePathLinter","","Represents a linter that runs once per file path.",null,null],[10,"run","","Executes this linter against the given file path context.",7,[[["filepathcontext",3],["lintformatter",3]],[["runstatus",4],["result",6]]]],[11,"new","","Constructs a new context.",8,[[["path",3],["projectcontext",3]]]],[11,"project_ctx","","Returns the project context.",8,[[],["projectcontext",3]]],[11,"file_path","","Returns the path of this file, relative to the root of the…",8,[[],["path",3]]],[11,"extension","","Returns the extension of the file. Returns `None` if…",8,[[],["option",4]]],[0,"package","x_lint","",null,null],[3,"PackageContext","x_lint::package","Lint context for an individual package.",null,null],[8,"PackageLinter","","Represents a linter that runs once per package.",null,null],[10,"run","","",9,[[["packagecontext",3],["lintformatter",3]],[["runstatus",4],["result",6]]]],[11,"new","","",10,[[["packagegraph",3],["packagemetadata",3],["path",3],["projectcontext",3]],["result",6]]],[11,"project_ctx","","Returns the project context.",10,[[],["projectcontext",3]]],[11,"package_graph","","Returns the package graph.",10,[[],["packagegraph",3]]],[11,"workspace_path","","Returns the relative path for this package in the workspace.",10,[[],["path",3]]],[11,"metadata","","Returns the metadata for this package.",10,[[],["packagemetadata",3]]],[11,"is_default_member","","Returns true if this is a default member of this workspace.",10,[[]]],[0,"project","x_lint","",null,null],[3,"ProjectContext","x_lint::project","Overall linter context for a project.",null,null],[8,"ProjectLinter","","Represents a linter that checks some property for the…",null,null],[10,"run","","Executes the lint against the given project context.",11,[[["lintformatter",3],["projectcontext",3]],[["runstatus",4],["result",6]]]],[11,"new","","",12,[[["xcorecontext",3]]]],[11,"project_root","","Returns the project root.",12,[[],["path",3]]],[11,"package_graph","","Returns the package graph, computing it for the first time…",12,[[],[["result",6],["packagegraph",3]]]],[11,"full_path","","Returns the absolute path from the project root.",12,[[],["pathbuf",3]]],[11,"default_members","","Returns information about the default workspace members.",12,[[],[["result",6],["workspacesubset",3]]]],[0,"runner","x_lint","",null,null],[3,"LintEngineConfig","x_lint::runner","Configuration for the lint engine.",null,null],[3,"LintEngine","","Executor for linters.",null,null],[3,"LintResults","","",null,null],[12,"skipped","","",13,null],[12,"messages","","",13,null],[11,"new","","",14,[[["xcorecontext",3]]]],[11,"with_project_linters","","",14,[[]]],[11,"with_package_linters","","",14,[[]]],[11,"with_file_path_linters","","",14,[[]]],[11,"with_content_linters","","",14,[[]]],[11,"fail_fast","","",14,[[]]],[11,"build","","",14,[[],["lintengine",3]]],[11,"new","","",15,[[["lintengineconfig",3]]]],[11,"run","","",15,[[],[["lintresults",3],["result",6]]]],[0,"prelude","x_lint","",null,null],[6,"Result","x_lint::prelude","Type alias for the return type for `run` methods.",null,null],[4,"SystemError","","A system error that happened while running a lint.",null,null],[13,"CwdNotInProjectRoot","","",16,null],[12,"current_dir","x_lint::prelude::SystemError","",17,null],[12,"project_root","","",17,null],[13,"Exec","x_lint::prelude","",16,null],[12,"cmd","x_lint::prelude::SystemError","",18,null],[12,"status","","",18,null],[13,"GitRoot","x_lint::prelude","",16,null],[13,"FromHex","","",16,null],[12,"context","x_lint::prelude::SystemError","",19,null],[12,"err","","",19,null],[13,"Guppy","x_lint::prelude","",16,null],[12,"context","x_lint::prelude::SystemError","",20,null],[12,"err","","",20,null],[13,"Io","x_lint::prelude","",16,null],[12,"context","x_lint::prelude::SystemError","",21,null],[12,"err","","",21,null],[13,"Serde","x_lint::prelude","",16,null],[12,"context","x_lint::prelude::SystemError","",22,null],[12,"err","","",22,null],[8,"Linter","x_lint","Represents a linter.",null,null],[10,"name","","Returns the name of the linter.",23,[[]]],[11,"new","","",24,[[["lintsource",3],["vec",3]]]],[11,"write","","Writes a new lint message to this formatter.",24,[[["lintlevel",4]]]],[11,"write_kind","","Writes a new lint message to this formatter with a custom…",24,[[["lintkind",4],["lintlevel",4]]]],[11,"new","","",25,[[["lintlevel",4]]]],[11,"level","","",25,[[],["lintlevel",4]]],[11,"message","","",25,[[]]],[11,"name","","",26,[[]]],[11,"kind","","",26,[[],["lintkind",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"borrow_replacement","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"borrow_replacement","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"borrow_replacement","","",26,[[]]],[11,"clone_boxed","","",26,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",26,[[]]],[11,"clone_boxed","","",26,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"borrow_replacement","","",0,[[]]],[11,"clone_boxed","","",0,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",0,[[]]],[11,"clone_boxed","","",0,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"borrow_replacement","","",1,[[]]],[11,"clone_boxed","","",1,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",1,[[]]],[11,"clone_boxed","","",1,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"borrow_replacement","","",2,[[]]],[11,"clone_boxed","","",2,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",2,[[]]],[11,"clone_boxed","","",2,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[]]],[11,"borrow_replacement","","",3,[[]]],[11,"clone_boxed","","",3,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",3,[[]]],[11,"clone_boxed","","",3,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","x_lint::content","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow_replacement","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","x_lint::file_path","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow_replacement","","",8,[[]]],[11,"clone_boxed","","",8,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",8,[[]]],[11,"clone_boxed","","",8,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","x_lint::package","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow_replacement","","",10,[[]]],[11,"clone_boxed","","",10,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",10,[[]]],[11,"clone_boxed","","",10,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","x_lint::project","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow_replacement","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","x_lint::runner","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"borrow_replacement","","",14,[[]]],[11,"clone_boxed","","",14,[[],[["box",3],["global",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",14,[[]]],[11,"clone_boxed","","",14,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow_replacement","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow_replacement","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","x_lint::prelude","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"borrow_replacement","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"source","","",16,[[],[["option",4],["error",8]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","x_lint::file_path","",8,[[],["filepathcontext",3]]],[11,"clone","x_lint::package","",10,[[],["packagecontext",3]]],[11,"clone","x_lint::runner","",14,[[],["lintengineconfig",3]]],[11,"clone","x_lint","",0,[[],["runstatus",4]]],[11,"clone","","",1,[[],["skipreason",4]]],[11,"clone","","",2,[[],["lintlevel",4]]],[11,"clone","","",26,[[],["lintsource",3]]],[11,"clone","","",3,[[],["lintkind",4]]],[11,"eq","","",0,[[["runstatus",4]]]],[11,"ne","","",0,[[["runstatus",4]]]],[11,"eq","","",1,[[["skipreason",4]]]],[11,"ne","","",1,[[["skipreason",4]]]],[11,"eq","","",2,[[["lintlevel",4]]]],[11,"eq","","",3,[[["lintkind",4]]]],[11,"ne","","",3,[[["lintkind",4]]]],[11,"fmt","x_lint::content","",6,[[["formatter",3]],["result",6]]],[11,"fmt","x_lint::file_path","",8,[[["formatter",3]],["result",6]]],[11,"fmt","x_lint::package","",10,[[["formatter",3]],["result",6]]],[11,"fmt","x_lint::project","",12,[[["formatter",3]],["result",6]]],[11,"fmt","x_lint::runner","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","x_lint","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"io","x_lint::prelude","",16,[[["error",3]],["systemerror",4]]],[11,"guppy","","",16,[[["error",4]],["systemerror",4]]],[11,"git_root","","",16,[[],["systemerror",4]]],[11,"from_hex","","",16,[[["fromhexerror",4]],["systemerror",4]]],[11,"de","","",16,[[],["systemerror",4]]],[11,"ser","","",16,[[],["systemerror",4]]]],"p":[[4,"RunStatus"],[4,"SkipReason"],[4,"LintLevel"],[4,"LintKind"],[13,"Package"],[8,"ContentLinter"],[3,"ContentContext"],[8,"FilePathLinter"],[3,"FilePathContext"],[8,"PackageLinter"],[3,"PackageContext"],[8,"ProjectLinter"],[3,"ProjectContext"],[3,"LintResults"],[3,"LintEngineConfig"],[3,"LintEngine"],[4,"SystemError"],[13,"CwdNotInProjectRoot"],[13,"Exec"],[13,"FromHex"],[13,"Guppy"],[13,"Io"],[13,"Serde"],[8,"Linter"],[3,"LintFormatter"],[3,"LintMessage"],[3,"LintSource"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);